' Gambas module file

Public Function ShowDocwiseConsultReport(sDate As Date, sBillMode As String, sUser As String) As String
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res1 As Result
  
  $BillingReport = New CReportHTML([("Time"), ("Mode"), ("Department"), ("EncID"), ("Name"), ("Age/Sex"), ("Contact")], "", "")
  $BillingReport.UserData.Add("CONSULATNAT: " & modGeneral.GetUserFullName(sUser) & "[" & sUser & "]", "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(sDate, gb.MediumDate) & "  Mode: " & sBillMode, "PARAM2")
  
  res1 = modDatabase.$syConn.Exec("select fldid,fldconsulttime,fldconsultname,fldencounterval,flduserid,fldbillingmode from tblconsult where flduserid=&1 and fldbillingmode like &2 and fldstatus<>&3 and fldconsulttime>=&4 and fldconsulttime<=&5", sUser, sBillMode, "Cancelled", modDate.StartSqlDate(sDate), modDate.EndSqlDate(sDate))                                                                            ''
  For Each res1
    With asx
      .Add(modReportVar.GetDateTimeReport(res1["fldconsulttime"], gb.MediumTime))
      .Add(res1["fldbillingmode"])
      .Add(res1["fldconsultname"])
      .Add(res1["fldencounterval"])
      .Add(modPatient.GetPatientNameByEnc(res1["fldencounterval"], modDatabase.$syConn))
      .Add(modPatient.GetPatientSex(res1["fldencounterval"], modDatabase.$syConn))
      .Add(modPatient.GetPatientContactByEnc(res1["fldencounterval"]))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  
  Return $BillingReport.NewHTMLPath()
  
End

Public Function ShowConsultQuota(sDate As Date, sDept As String, sBillMode As String, sComp As String, Optional sUserid As String) As String
  
  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim asx As New String[0]
  Dim res1 As Result
  Dim res2 As Result
  
  $BillingReport = New CReportHTML([("Method"), ("Mode"), ("Department"), ("User Name"), ("Timimg"), ("Date"), ("Limit"), ("Booking"), ("Registered"), ("Comment")], "", "")
  $BillingReport.UserData.Add("CONSULTANT TIMINGS", "PARAM1")
  $BillingReport.UserData.Add("DATE: " & modReportVar.GetDateTimeReport(sDate, gb.MediumDate) & Space(2) & modDate.GetWeekDay(sDate), "PARAM2")
  
  If sUserid Then
    res2 = modDatabase.$syConn.Exec("select fldid,fldmethod,fldbillingmode,flddept,flduserid,fldselect,flddate,fldquota,fldreason from tbldepconsult where flddate>=&1 and flddate<=&2 and flddept like &3 and fldselect=&4 and fldbillingmode like &5 and flduserid=&6 and fldcomp like &7", modDate.StartSqlDate(sDate), modDate.EndSqlDate(sDate), sDept, "Specific", sBillMode, sUserid, sComp)             ''
  Else
    res2 = modDatabase.$syConn.Exec("select fldid,fldmethod,fldbillingmode,flddept,flduserid,fldselect,flddate,fldquota,fldreason from tbldepconsult where flddate>=&1 and flddate<=&2 and flddept like &3 and fldselect=&4 and fldbillingmode like &5 and fldcomp like &6", modDate.StartSqlDate(sDate), modDate.EndSqlDate(sDate), sDept, "Specific", sBillMode, sComp)
  Endif
  If res2.Available Then
    For Each res2
      With asx
        .Add(res2["fldmethod"])
        .Add(res2["fldbillingmode"])
        .Add(res2["flddept"])
        .Add(modGeneral.GetUserFullName(res2["flduserid"]))
        .Add(res2["fldselect"])
        .Add(modReportVar.GetDateTimeReport(res2["flddate"], gb.MediumDate))
        .Add(res2["fldquota"])
        If res2["flduserid"] Then
          .Add(modConsult.GetPatientBooked("Planned", res2["flddept"], sDate, res2["fldbillingmode"], res2["flduserid"]))
          .Add(modConsult.GetPatientRegisteredValid(res2["flddept"], sDate, res2["fldbillingmode"], res2["flduserid"]))
        Else
          .Add(modConsult.GetPatientBooked("Planned", res2["flddept"], sDate, res2["fldbillingmode"], ""))
          .Add(modConsult.GetPatientRegisteredValid(res2["flddept"], sDate, res2["fldbillingmode"], ""))
        Endif
        .Add(res2["fldreason"])
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
  Endif
  
  If sUserid Then
    res1 = modDatabase.$syConn.Exec("select fldid,fldmethod,fldbillingmode,flddept,flduserid,fldselect,flddate,fldquota,fldreason from tbldepconsult where flddept like &1 and fldselect=&2 and fldbillingmode like &3 and flduserid=&4 and fldcomp like &5", sDept, modDate.GetWeekDay(sDate), sBillMode, sUserid, sComp)
  Else
    res1 = modDatabase.$syConn.Exec("select fldid,fldmethod,fldbillingmode,flddept,flduserid,fldselect,flddate,fldquota,fldreason from tbldepconsult where flddept like &1 and fldselect=&2 and fldbillingmode like &3 and fldcomp like &4", sDept, modDate.GetWeekDay(sDate), sBillMode, sComp)
  Endif
  If res1.Available Then
    For Each res1
      With asx
        .Add(res1["fldmethod"])
        .Add(res1["fldbillingmode"])
        .Add(res1["flddept"])
        .Add(modGeneral.GetUserFullName(res1["flduserid"]))
        .Add(res1["fldselect"])
        .Add("")
        .Add(res1["fldquota"])
        If res1["flduserid"] Then
          .Add(modConsult.GetPatientBooked("Planned", res1["flddept"], sDate, res1["fldbillingmode"], res1["flduserid"]))
          .Add(modConsult.GetPatientRegisteredValid(res1["flddept"], sDate, res1["fldbillingmode"], res1["flduserid"]))
        Else
          .Add(modConsult.GetPatientBooked("Planned", res1["flddept"], sDate, res1["fldbillingmode"], ""))
          .Add(modConsult.GetPatientRegisteredValid(res1["flddept"], sDate, res1["fldbillingmode"], ""))
        Endif
        .Add(res1["fldreason"])
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
  Endif
  
  If sUserid Then
    res = modDatabase.$syConn.Exec("select fldid,fldmethod,fldbillingmode,flddept,flduserid,fldselect,flddate,fldquota,fldreason from tbldepconsult where flddept like &1 and fldselect=&2 and fldbillingmode like &3 and flduserid=&4 and fldcomp like &5", sDept, "AllDays", sBillMode, sUserid, sComp)
  Else
    res = modDatabase.$syConn.Exec("select fldid,fldmethod,fldbillingmode,flddept,flduserid,fldselect,flddate,fldquota,fldreason from tbldepconsult where flddept like &1 and fldselect=&2 and fldbillingmode like &3 and fldcomp like &4", sDept, "AllDays", sBillMode, sComp)
  Endif
  If res.Available Then
    For Each res
      With asx
        .Add(res["fldmethod"])
        .Add(res["fldbillingmode"])
        .Add(res["flddept"])
        .Add(modGeneral.GetUserFullName(res["flduserid"]))
        .Add(res["fldselect"])
        .Add("")
        .Add(res["fldquota"])
        If res["flduserid"] Then
          .Add(modConsult.GetPatientBooked("Planned", res["flddept"], sDate, res["fldbillingmode"], res["flduserid"]))
          .Add(modConsult.GetPatientRegisteredValid(res["flddept"], sDate, res["fldbillingmode"], res["flduserid"]))
        Else
          .Add(modConsult.GetPatientBooked("Planned", res["flddept"], sDate, res["fldbillingmode"], ""))
          .Add(modConsult.GetPatientRegisteredValid(res["flddept"], sDate, res["fldbillingmode"], ""))
        Endif
        .Add(res["fldreason"])
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
  Endif
  
  Return $BillingReport.NewHTMLPath()
  
End

Public Function ShowUserListHTML(sCategory As String) As String
  
  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim asx As New String[0]
  Dim complist As String[]
  
  Dim accessCateg As String[]
  Dim xaccess As String
  Dim frmList As String[]
  Dim asxLst As String
  Dim ximage As String
  
  accessCateg = ["Medical", "Record", "Account", "Cashier", "Technologist", "Technician", "Consultant", "Clinician", "Research", "Purchase", "Store", "Pharmacist", "Dispensar"]
  $BillingReport = New CReportHTML([("User Profile"), ("Validity"), ("Photo"), ("Location"), ("Forms")], "", "")
  $BillingReport.UserData.Add("USER LIST", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  If sCategory = "%" Then
    res = modDatabase.$syConn.Exec("select flduserid,fldusername,fldfromdate,fldtodate,fldcategory,fldcode,fldstatus from tbluser")
  Else
    res = modDatabase.$syConn.Exec("select flduserid,fldusername,fldfromdate,fldtodate,fldcategory,fldcode,fldstatus from tbluser where fldcategory like &1", sCategory)                                                                                        ''
  Endif
  If res.Available Then
    For Each res
      ximage = ""
      asxLst = ""
      ximage = modImage.DisplayPersonImageData("Staff", CStr(res["fldcode"]))
      complist = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldcomp as col from tblcompaccess where flduserid=&1", res["flduserid"]))
      If complist Then
        complist.Sort()
      Endif
      With asx
        .Add("<b>" & "UserID : " & "</b>" & res["flduserid"] & "<br>" & "<b>" & "Name : " & "</b>" & res["fldusername"] & "<br>" & "<b>" & "Role : " & "</b>" & res["fldcategory"])
        .Add("<b>" & "FROM: " & "</b>" & modReportVar.GetDateTimeReport(res["fldfromdate"], gb.MediumDate) & "<br>" & "<b>" & "TO: " & "</b>" & modReportVar.GetDateTimeReport(res["fldtodate"], gb.MediumDate) & "<br>" & "<b>" & "Status : " & "</b>" & res["fldstatus"])
        If ximage Then
          .Add(modString.GetImageForHTML(ximage))
        Else
          .Add("")
        Endif
        .Add(complist.Join("; "))
        For Each xaccess In accessCateg
          frmList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldformname from tbluserformaccess where flduserid=&1 and fldcategory=&2", res["flduserid"], xaccess))
          If frmList And If frmList.Count Then
            asxLst = asxLst & "<p><b>" & xaccess & ":</b><br>" & gb.NewLine
            asxLst = asxLst & frmList.Join("; ") & gb.NewLine
            asxLst = asxLst & "</p>"
          Endif
        Next
        .Add(asxLst)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
  Endif
  
  Return $BillingReport.NewHTMLPath()
  
End

Public Function ShowDBSettingsList(sMode As String) As String
  
  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim asx As New String[0]
  Dim res1 As Result
  Dim xfld As String
  Dim xcateg As String
  
  ''
  $BillingReport = New CReportHTML([("Category"), ("Value"), ("DateTime"), ("User")], "", "")
  $BillingReport.UserData.Add("DB SETTINGS LIST", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  If sMode = "Location" Then
    xfld = "fldcomp"
    xcateg = "fldcategory"
  Else If sMode = "Setting" Then
    xfld = "fldcategory"
    xcateg = "fldcomp"
  Endif
  
  res1 = modDatabase.$syConn.Exec(Subst("select distinct(&1) as comp from tblsettings", xfld))
  If res1.Available Then
    For Each res1
      $BillingReport.AddSection(res1["comp"], True)
      res = modDatabase.$syConn.Exec(Subst("select &1 as categ,fldvalue,fldtime,flduserid from tblsettings where &2", xcateg, xfld) & "=&1 ORDER BY fldcategory ASC", res1["comp"])
      
      If res.Available Then
        For Each res
          With asx
            .Add(res["categ"])
            .Add(res["fldvalue"])
            .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
            .Add(res["flduserid"])
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Next
      Endif
      
    Next
  Endif
  
  Return $BillingReport.NewHTMLPath()
  
End

Public Function ShowSelectSetting(sSettings As String[]) As String
  
  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim asx As New String[0]
  Dim xval As String
  
  $BillingReport = New CReportHTML([("Category"), ("Value"), ("DateTime"), ("User")], "", "")
  $BillingReport.UserData.Add("DB SETTINGS LIST", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  For Each xval In sSettings
    $BillingReport.AddSection(xval, True)
    res = modDatabase.$syConn.Exec("select fldcomp,fldvalue,fldtime,flduserid from tblsettings where fldcategory=&1 ORDER BY fldcomp", xval)
    
    If res.Available Then
      For Each res
        With asx
          .Add(res["fldcomp"])
          .Add(res["fldvalue"])
          .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
          .Add(res["flduserid"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
    Endif
    
  Next
  
  Return $BillingReport.NewHTMLPath()
  
End

Public Function ShowDepartmentsReport() As String
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res As Result
  Dim res1 As Result
  Dim bedlist As String[]
  Dim categList As String[] = ["Consultation", "OPD Visit", "Patient Ward"]
  Dim xcateg As String
  
  $BillingReport = New CReportHTML([("Department"), ("Scheme"), ("Caption"), ("Room"), ("BedNo")], "", "")
  $BillingReport.UserData.Add("DEPARTMENTS", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  For Each xcateg In categList
    $BillingReport.AddChapter(xcateg)
    
    res = modDatabase.$syConn.Exec("select fldid,flddept,fldcateg,fldroom,flddisctype,fldactive from tbldepartment where fldcateg=&1", xcateg)
    If res.Available Then
      For Each res
        
        With asx
          .Add(res["flddept"])
          .Add(res["flddisctype"])
          .Add(res["fldactive"])
          .Add(res["fldroom"])
          If xcateg = "Patient Ward" Then
            res1 = modDatabase.$syConn.Exec("select fldbed as col from tbldepartmentbed where flddept=&1", res["flddept"])
            bedlist = modControlSub.GetDirectFillresult(res1)
            If bedlist And If bedlist.Count Then
              .Add(bedlist.Join("; "))
            Else
              .Add("")
            Endif
          Else
            .Add("")
          Endif
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        
      Next
    Endif
    
  Next
  
  Return $BillingReport.NewHTMLPath()
  
End

''-------------------- Inpatient Returns --------------------------
Public Function PatientMedicationForReturnDisc(dt1 As Date, dt2 As Date) As String
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res As Result
  Dim res1 As Result
  Dim rsx As Result
  
  Dim regimen As String
  Dim xdose As Float
  Dim xpck As Float
  Dim xretqty As Float
  Dim i As Integer
  
  $BillingReport = New CReportHTML([("SNo"), ("Particulars"), ("Regimen"), ("Status"), ("DispQTY"), ("AdminQTY"), ("UnusedQTY")], "", "")
  $BillingReport.UserData.Add("UNUSED MEDICATION", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
  
  rsx = modDatabase.$syConn.Exec("select fldencounterval,fldcurrlocat from tblencounter where flddod>=&1 and flddod<=&2", modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2))
  If rsx.Available Then
    For Each rsx
      
      res = modDatabase.$syConn.Exec("select fldid,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,fldqtyret,fldcurval from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 ORDER BY flditem", rsx["fldencounterval"], True, "Medicines")
      If res.Available Then
        $BillingReport.AddChapter(modPatient.GetPatientNameByEnc(rsx["fldencounterval"], modDatabase.$syConn) & " EncID: " & rsx["fldencounterval"] & " [" & rsx["fldcurrlocat"] & "]")
        i = 1
        For Each res
          If res["fldroute"] = "fluid" Then
            regimen = res["fldroute"] & Space(2) & res["flddose"] & " mL X " & res["fldfreq"] & " X " & res["flddays"]
          Else
            regimen = res["fldroute"] & Space(2) & res["flddose"] & " mg X " & res["fldfreq"] & " X " & res["flddays"]
          Endif
          res1 = modDatabase.$syConn.Exec("select SUM(fldvalue) as col from tblnurdosing where fldencounterval=&1 and flddoseno=&2", rsx["fldencounterval"], res["fldid"])
          xdose = 0
          If res1.Available Then
            xpck = modPharmLabel.GetPackVolValue(res["flditem"])
            If res1["col"] And If xpck Then
              xdose = Round(res1["col"] / xpck, -2)
            Endif
          Endif
          xretqty = res["fldqtydisp"] - res["fldqtyret"] - xdose
          If xretqty Then
            With asx
              .Add(CStr(i))
              .Add(res["flditem"])
              .Add(regimen)
              .Add(res["fldcurval"])
              .Add(res["fldqtydisp"] - res["fldqtyret"])
              .Add(xdose)
              .Add(xretqty)
            End With
            $BillingReport.Add(asx)
            asx.Clear()
            i = i + 1
          Endif
        Next
      Endif
      
    Next
  Endif
  
  Return $BillingReport.NewHTMLPath()
  
End

''-------------- claim Upload -----------------
Public Function ShowHIUploadSummaryReport(dt1 As Date, dt2 As Date) As String
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res As Result
  Dim i As Integer
  Dim catgLst As String[] = ["Consultation", "Emergency", "Patient Ward"]
  Dim xcateg As String
  Dim res1 As Result
  Dim atot As Float
  Dim xtot As Float
  Dim xclam As Integer
  
  $BillingReport = New CReportHTML([("SNo"), ("User"), ("Category"), ("Claims"), ("Amount")], "", "")
  $BillingReport.UserData.Add("INVOICE UPLOAD SUMMARY", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dt1, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dt2, gb.MediumDate), "PARAM2")
  
  i = 1
  atot = 0
  res = modDatabase.$syConn.Exec("select distinct(flduserid) As flduserid from tblbillupload where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2))
  If res.Available Then
    For Each res
      
      For Each xcateg In catgLst
        xtot = 0
        xclam = 0
        res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldchequeno)) as xcnt,SUM(fldchargedamt) as xtot from tblpatbilldetail where fldchequeno in(select fldclaimid from tblclaimcode where fldstatus=&1) and fldbillno in(select fldbillno from tblbillupload where fldtime>=&2 and fldtime<=&3 and flduserid=&4)", xcateg, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), res["flduserid"])
        If res1.Available Then
          For Each res1
            If res1["xcnt"] Then
              xclam = xclam + res1["xcnt"]
            Endif
            If res1["xtot"] Then
              xtot = xtot + res1["xtot"]
            Endif
          Next
        Endif
        
        atot = atot + xtot
        With asx
          .Add(CStr(i))
          .Add(res["flduserid"])
          .Add(xcateg)
          .Add(xclam)
          .Add(Format(xtot, gb.Fixed))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
      
    Next
  Endif
  
  With asx
    .Add("")
    .Add("TOTAL")
    .Add("")
    .Add("")
    .Add(Format(atot, gb.Fixed))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  
  Return $BillingReport.NewHTMLPath()
  
End

Public Function HIFacultySummaryReport($con As Connection, dt1 As Date, dt2 As Date, xFormat As String, $tblpatbilling As String, $tblpatbilldetail As String) As String
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim lst As String[]
  
  Dim acnt As Float
  Dim acash As Float
  Dim acrdt As Float
  Dim xx As String
  Dim res4 As Result
  
  Dim xcnt As Float
  Dim xcash As Float
  Dim xcrdt As Float
  
  $BillingReport = New CReportHTML([("PARTICULARS"), ("COUNT"), ("CASH"), ("CREDIT")], "", "")
  If xFormat = "API" Then
    $BillingReport.UserData.Add("SUMMARY REPORT : API Uploaded", "PARAM1")
  Else If xFormat = "COPAY" Then
    $BillingReport.UserData.Add("SUMMARY REPORT : Copayment", "PARAM1")
  Else  ''ALL
    $BillingReport.UserData.Add("SUMMARY REPORT", "PARAM1")
  Endif
  $BillingReport.UserData.Add("DATE: " & modReportVar.GetDateTimeReport(dt1, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dt2, gb.MediumDate), "PARAM2")
  
  acnt = 0
  acash = 0
  acrdt = 0
  
  ''faulties
  lst = modNonMedical.GetMasterDepartAccount()
  For Each xx In lst
    If xFormat = "API" Then
      res4 = $con.Exec("select COUNT(DISTINCT(fldencounterval)) as itemcnt," & modNonMedical.CashCreditSQL() & " from " & $tblpatbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup in(select fldgroup from tblmasterdept where fldmaster=&1)) and fldbillno in(select fldbillno from " & $tblpatbilldetail & " where fldtime>=&2 and fldtime<=&3 and fldbankname in(select fldacledger from tbldiscount where fldreference=&4)) and fldsave=&5 and fldbilltype like &6 and fldclaimid IS NOT NULL", xx, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Claim Code", True, "Credit")
    Else If xFormat = "COPAY" Then
      res4 = $con.Exec("select COUNT(DISTINCT(fldencounterval)) as itemcnt," & modNonMedical.CashCreditSQL() & " from " & $tblpatbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup in(select fldgroup from tblmasterdept where fldmaster=&1)) and fldbillno in(select fldbillno from " & $tblpatbilldetail & " where fldtime>=&2 and fldtime<=&3 and fldbankname in(select fldacledger from tbldiscount where fldreference=&4)) and fldsave=&5 and fldbilltype like &6 and fldcashincredit>&7", xx, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Claim Code", True, "Credit", 0)
    Else
      res4 = $con.Exec("select COUNT(DISTINCT(fldencounterval)) as itemcnt," & modNonMedical.CashCreditSQL() & " from " & $tblpatbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup in(select fldgroup from tblmasterdept where fldmaster=&1)) and fldbillno in(select fldbillno from " & $tblpatbilldetail & " where fldtime>=&2 and fldtime<=&3 and fldbankname in(select fldacledger from tbldiscount where fldreference=&4)) and fldsave=&5 and fldbilltype like &6", xx, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Claim Code", True, "Credit")
    Endif
    xcnt = 0
    xcash = 0
    xcrdt = 0
    If res4.Available = True Then
      If res4["itemcnt"] Then
        xcnt = res4["itemcnt"]
      Endif
      If res4["xcredit"] Then
        xcrdt = res4["xcredit"]
      Endif
      If res4["xcash"] Then
        xcash = res4["xcash"]
      Endif
    Endif
    
    acnt = acnt + xcnt
    acash = acash + xcash
    acrdt = acrdt + xcrdt
    With asx
      .Add(xx)
      .Add(modReportVar.GetLocaleNumberFormat(xcnt, -2))
      .Add(modReportVar.GetLocaleNumberFormat(xcash, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xcrdt, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  
  With asx
    .Add("<b>TOTAL</b>")
    .Add(modReportVar.GetLocaleNumberFormat(acnt, -2))
    .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  
  Return $BillingReport.NewHTMLPath()
  
End
