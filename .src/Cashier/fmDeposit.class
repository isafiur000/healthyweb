' Gambas class file

Private $rData1 As Result
Private $aMyFields1 As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]
Private $rData3 As Result
Private $aMyFields3 As String[]

Private $DisplayMiniCalc As String
Private $InvoicePrintTime As String
Private $PatientNum As String
Private $Status As String
Private $xFinClear As Boolean
Private $ClaimStr As String
Private $PatientCode As String
Private $AdvPayment As String
Private $F12Lock As Boolean
Private $DiscPackage As String

Public Sub _new()

  If ShowBilling() = True Then
    Panel2.Enabled = True
  Endif
  $DisplayMiniCalc = modBasic.$BillAfterPrintDisplay
  $InvoicePrintTime = modBasic.$BillPrintTime
  If modBasic.$AppCachePatientDemographics = "Yes" Then
  Else
    modGeneralMain.RemovePatientCacheSelected("PatientData")
  Endif

  If modBasic.$DiaryAutoInc = "Yes" Then
    btndiary.Enabled = False
    txtfileno.ReadOnly = True
  Endif
  cmbreason.Text = "IP Deposit"
  cmbsource.List = ["Emergency", "Out Patient", "Referred in"]
  ' modGeneralMain.SetEncIDPrefix(txtencid)
  $F12Lock = False
  txtencid.SetFocus

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub mnusearch_Click()

  If Not txtencid.Text Then
    txtencid.Text = PatSearch("Encounter")
  Endif

End

Public Sub mnuscanimage_Click()

  Dim hForm As FmScanForm

  If txtencid.Text Then
    hForm = New FmScanForm(Trim(txtencid.Text), "Scanned Images", "")
    hForm.ShowModal
  Endif

End

Public Sub mnucamera_Click()

  Dim sPath As String
  Dim sLongID As String

  If txtencid.Text Then
    sPath = modImage.GetWebCamValue()
    If sPath Then
      sLongID = modImage.SavePatientFileGeneral(Trim(txtencid.Text), "Scanned Images", "Scanned Images:" & modString.GetDateString(Now()), sPath)
      If sLongID Then
        Me.Exec("Toastify({text: 'File saved', duration: 3000}).showToast()")
      Endif
    Endif
  Endif

End

' Public Sub Form_KeyRelease()
'
'   If Key.Code = Key["O"] And If Key.Control Then
'     btnwebcam_Click()
'   Else If Key.Code = Key.F1 Then
'     Frame1.Index = 0
'   Else If Key.Code = Key.F2 Then
'     Frame1.Index = 1
'   Else If Key.Code = Key["F"] And If Key.Control Then
'   Else
'     modGeneralmain.GoToNextControlTab()
'   Endif
'
' End

Public Sub mnulastencid_Click()

  txtencid.Text = modSettings.ShowLogValues("LastValue/Encounter")

End

Private Function ShowBilling() As Boolean

  Dim xx As Boolean

  If modBasic.$BillDepositOption = "No" Then
    xx = False
  Else
    xx = True
  Endif
  Return xx

End

Private Sub SetAdmissionDepositLock()

  Select $Status
    Case "Admitted", "Discharged", "LAMA", "Death", "Refer", "Absconder"
      txtrecvamt.ReadOnly = False
    Case Else
      If modBasic.$BillLockAdmitDeposit = "Enable" Then
        txtrecvamt.ReadOnly = True
      Else
        txtrecvamt.ReadOnly = False
      Endif
  End Select

End

Public Sub txtencid_Activate()

  btnshow_Click()

End

Public Sub btnshow_Click()

  Dim res As Result

  If Not txtencid.Text Then Return
  If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
    txtencid.SetFocus
    Return
  Endif

  ' If modPatientSub.LockEncounterDesk(Trim(txtencid.Text)) = False Then
  '   txtencid.Text = ""
  '   Message.Warning(("Encounter Locked"), ("OK"))
  '   ' Balloon.Delay = modBasic.$BalloonDelay
  '   txtencid.SetFocus
  ' Endif

  If txtencid.Text Then
    If txtencid.Text = modBasic.$EncIdPrefix Then
    Else
      modSettings.SaveValuesToLog("LastValue/Encounter", Trim(txtencid.Text))
    Endif
    res = modDatabase.$myConn.Exec("select fldpatientval from tblencounter where fldencounterval=&1", Trim(txtencid.Text))
    If res.Available = False Then
      modLinkDB.CheckEncDataRemote(Trim(txtencid.Text))
      txtencid.SetFocus
    Else
      txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
      If txtpatientname.Text Then
        $PatientNum = modPatient.GetPatientNoByEnc(Trim(txtencid.Text))
        txtgender.Text = modPatient.GetPatientAgeString(Trim(txtencid.Text), Now()) & "/" & Left(modPatient.GetPatientSex(Trim(txtencid.Text)), 1)
        txtfileno.Text = modPatient.GetPatientFileByEnc(Trim(txtencid.Text))
        $PatientCode = modPatient.GetPatientExtCOdebyEnc(Trim(txtencid.Text))
        txtadmitcode.Text = modPatient.GetHMISAdmissionNo(Trim(txtencid.Text))

        $DiscPackage = modPatient.ShowDiscountCategEnc(Trim(txtencid.Text))
        $Status = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
        SetAdmissionDepositLock()
        txtpatlocation.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), $Status)
        $xFinClear = modNonMedical.GetFinanceClearance(Trim(txtencid.Text))
        $ClaimStr = modNonMedical.GetFixedReference(Trim(txtencid.Text))
        Select $ClaimStr
          Case "Claim Code"
            txtclaim.Text = modClaim.GetCurrentClaimCodePrint(Trim(txtencid.Text))
            chkclaim.Value = True
          Case "Accident SSF", "Critical SSF", "Medical SSF", "MedExtra SSF"
            txtclaim.Text = modSSF.GetSSFClaimVIewMedical(Trim(txtencid.Text), $ClaimStr)
            chkclaim.Value = True
          Case Else
            chkclaim.Value = False
        End Select

        txtcreditamt.Value = modNonMedical.GetTotalCreditInvoice(modDatabase.$myConn, Trim(txtencid.Text))
        txtdeposit.Value = modNonMedical.GetPatientDeposit(modDatabase.$myConn, Trim(txtencid.Text))
        txtexpense.Value = Round(modNonMedical.TotalExpenseAmountbyPatient(modDatabase.$myConn, Trim(txtencid.Text)), -2)
        txtpayment.Value = Round(modNonMedical.TotalPaidAmountbyPatient(modDatabase.$myConn, Trim(txtencid.Text)), -2)

        cmbsource.Text = modPatient.GetDemographAccountValue(Trim(txtencid.Text), "Admission Source")
        txtcredlimit.Value = modNonMedical.ShowCreditLimitEnc(Trim(txtencid.Text))
        txtdisclimit.Value = modNonMedical.GetPatCharityLimit(Trim(txtencid.Text))

        Frame1.Enabled = True
        If $xFinClear = True Then
          Panel2.Enabled = False
          Panel6.Enabled = False
        Else
          Panel2.Enabled = True
          Panel6.Enabled = True
        Endif
        modImage.ShowPhotoSplash("Patient", $PatientNum)
        If $xFinClear = False Then
          DepoPopUpPatientForm(Trim(txtencid.Text), Me.Tag)
        Endif
        txtencid.ReadOnly = False
        ShowAllEncounters()
        If $xFinClear = True Then
          Me.Exec("Toastify({text: 'Account Locked', duration: 3000}).showToast()")
        Endif

      Else
        Message.Warning(("Encounter ID not found"), ("OK"))
        ' Balloon.Delay = modBasic.$BalloonDelay
        txtencid.SetFocus
      Endif
    Endif
  Endif

End

Public Sub btnwebcam_Click()

  If Not txtencid.Text Then
    txtencid.Text = GetEncid()
  Endif

End

Public Sub btnipnum_Click()

  Dim res As Result
  Dim xx As String

  xx = InputBox("Provide Inpatient (IP) Number of Patient", "Encounter", "")
  If xx Then
    res = modDatabase.$myConn.Exec("select fldencounterval from tblencounter where fldadmitid=&1 ORDER BY fldregdate", xx)
    If res.Available Then
      res.MoveLast
      txtencid.Text = res["fldencounterval"]
      txtencid.SetFocus
    Else
      Message.Info("IP Number Not Registered", "OK")
    Endif
  Endif

End

Public Sub mnublnk_Click()

  ' Me.Close
  ' Wait
  ' modAppSupport.AddNewFormToWorkspace(fmDeposit)

End

Public Sub mnubed_Click()

  If txtencid.Text Then
    If $Status = "Admitted" Then
      txtpatlocation.Text = GetBedNumber(Trim(txtencid.Text))
    Endif
  Endif

End

Public Sub tlbtnpayment_Click()

  If txtencid.Text Then
    modNonMedical.CurrentPayStatusMsg(Trim(txtencid.Text))
  Endif

End

''------------------------------------------ Deposit transection -----------------------------------------
Public Sub btnblank_Click()

  Me.Parent.DeleteChildren()
  modGeneralMain.LoadDepositEntryForm()

End

Public Sub txtrecvamt_Activate()

  btnsave_Click()

End

Private Function GetPatStatusCode() As Integer

  Dim xcode As Integer

  Select $Status
    Case "Discharged", "LAMA", "Death", "Refer", "Absconder"
      xcode = 3
    Case "Admitted"
      xcode = 2
    Case Else
      xcode = 1
  End Select

  Return xcode

End

Public Sub chkqrscan_Click()

  If chkqrscan.Value = True Then
    ' If Message.Optional("<h1>Terms of Use of QR Scan Payment</h1><br>" & modLongVar.$AppLegalWarning, ("Accept"), ("Always Accept Terms of Use of QR Scan Payment")) = 1 Then
    $AdvPayment = "Advance"
  Else
    $AdvPayment = ""
  Endif

End

Public Sub btnsave_Click()

  Dim xxx As Boolean
  Dim xdoa As Date
  Dim CPayForm As GetQRDeposit
  Dim xtraceid As String

  If txtencid.Text Then
    If cmbreason.Text Then
      If txtrecvamt.Value <> 0 Then
        txtrecvamt.Value = modNonMedical.GetRoundupAccToSetting(txtrecvamt.Value)

        If txtrecvamt.Value > 0 Then
          xxx = True
        Else
          If txtdeposit.Value + txtrecvamt.Value >= 0 Then
            If $Status = "Admitted" Then
              If modBasic.$BillLockIPDepositReturn = "Yes" Then
                xxx = False
              Else If modBasic.$BillLockIPDepositReturn = "Immediate" Then
                xxx = False
              Else If modBasic.$BillLockIPDepositReturn = "NextDay" Then
                xdoa = modPatient.GetAdmissionDate(Trim(txtencid.Text))
                If DateDiff(xdoa, Now(), gb.Hour) > 24 Then
                  xxx = False
                Else
                  xxx = True
                Endif
              Else
                xxx = True
              Endif
            Else
              xxx = True
            Endif
          Else
            xxx = False
          Endif
        Endif

        If xxx = True Then
          xtraceid = ""
          If $AdvPayment = "Advance" Then
            If $F12Lock = False Then
              $F12Lock = True
              CPayForm = New GetQRDeposit(Trim(txtencid.Text), txtrecvamt.Value, $sTatus)
              xtraceid = CPayForm.GetTransactionDone()
              If xtraceid Then
                GetF12KeyPress(xtraceid)
                $F12Lock = False
              Endif
            Endif
          Else
            GetF12KeyPress()
          Endif
          btnsave.Enabled = False
        Endif

      Endif
    Endif
  Endif

End

Private Sub GetF12KeyPress(Optional xtraceid As String)

  Dim txttitle As String
  Dim $billno As String
  Dim rex As Result
  Dim xline As String
  Dim idLock As Boolean
  Dim xcopystr As String

  txttitle = "DEPOSIT RECEIPT"
  idLock = modBillLock.LockTableForID("Invoice")
  If idLock = True Then
    modDatabase.$myConn.Begin

    $billno = modBillLock.ReceiptSaleValue("Cash Deposit")
    If $billno Then
      modBillings.InsertDepositDetail(modDatabase.$myConn, Trim(txtencid.Text), $billno, "Cash", txtrecvamt.Value, cmbreason.Text, "Cash Deposit", GetPatStatusCode())
      ' modBillings.InsertDepositDetail(modDatabase.$myConn, Trim(txtencid.Text), $billno, "Cash", txtrecvamt.Value, "", $LedgerAC, GetPatStatusCode())
      ' modBillings.UpdatePatientDeposit(Trim(txtencid.Text), txtrecvamt.Value)

      If xtraceid Then
        rex = modDatabase.$myConn.Edit("tbladvreceiptdetail", "fldencounterval=&1 and fldreference=&2", Trim(txtencid.Text), xtraceid)
        If rex.Available Then
          rex["fldinvoice"] = $billno
          rex.Update
        Endif
      Endif

    Endif

    modDatabase.$myConn.Commit
    modBillLock.ReleaseLockTable("Invoice")
  Endif

  If $billno Then
    If $InvoicePrintTime = "Later" Then
    Else
      modBILLFormat.BillingReceipt(Trim(txtencid.Text), $billno, txttitle)
      xcopystr = modBasic.$BillInvoiceCopy
      If Not xcopystr Then
        xcopystr = modSettings.ShowSettingFromFIle("Invoice/ExtraCopy")
      Endif
      If xcopystr = "Print" Then
        modBILLFormat.BillingReceipt(Trim(txtencid.Text), $billno, txttitle)
      Else If xcopystr = "Print+Print" Then
        modBILLFormat.BillingReceipt(Trim(txtencid.Text), $billno, txttitle)
        modBILLFormat.BillingReceipt(Trim(txtencid.Text), $billno, txttitle)
      Else If xcopystr = "Save" Then
        modImage.SaveReportLog("Invoice", modBILLFormat.GetReceiptCopyPDFPath($billno), Trim(txtencid.Text))
      Else If xcopystr = "Print+Save" Then
        modBILLFormat.BillingReceipt(Trim(txtencid.Text), $billno, txttitle)
        modImage.SaveReportLog("Invoice", modBILLFormat.GetReceiptCopyPDFPath($billno), Trim(txtencid.Text))
      Endif
    Endif
    If modBasic.$BillWithInvoicePrint = "Prescription" Then
      modPatientSub.PrintRegistExtraReport(Trim(txtencid.Text))
    Endif
  Endif

  If $DisplayMiniCalc = "Calculator" Then
    btncalc_Click()
  Else If $DisplayMiniCalc = "InvoiceInfo" Then
    If txtencid.Text Then
      xline = "<b>EncID:</b> " & Trim(txtencid.Text) & "<br>"
      xline = xline & "<b>Name:</b> " & modPatient.GetPatientNameByEnc(Trim(txtencid.Text)) & "<br>"
      xline = xline & "<b>Invoice:</b> " & $billno & "<br>"
      xline = xline & "<b>RecvAMT:</b> " & modReportVar.GetLocaleNumberFormat(txtrecvamt.Value, gb.Currency)
      Message.Info(xline, ("OK"))
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  If idLock = True Then
    modBillLock.ReleaseLockTable("Invoice")
  Endif
  modHelpVariable.CreateErrorReport()

End

Public Sub btncalc_Click()

  ' Dim hForm As FmMiniCalc
  ' Dim hForm1 As FmCalcSource
  '
  ' If modBasic.$BillCashSource = "Enable" Then
  '
  ' Else
  '   hForm = New FmMiniCalc(txtrecvamt.Value)
  '   hForm.ShowModal
  ' Endif

End

''---------------------------Expense/Invoice grid -------------------------------------
Private Sub FillExpenseGrid()

  Dim sql As String

  sql = "select fldid,fldtime,flditemtype,flditemname,flditemrate,fldtaxper,flddiscper,flditemqty,fldditemamt as tot,fldbillno from tblpatbilling where fldencounterval=&1 and fldsave=&2"
  $rData1 = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), True)
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView1, $rData1, $aMyFields1)
  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
    .Columns[3].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(120 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "DateTime"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "Rate"
    .Columns[5].Text = "Tax(%)"
    .Columns[6].Text = "Disc(%)"
    .Columns[7].Text = "QTY"
    .Columns[8].Text = "Amount"
    .Columns[9].Text = "Invoice"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else If Column = 4 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData1[$aMyFields1[Column]], gb.Currency)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData1[$aMyFields1[Column]], -2)
  Else If Column = 6 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData1[$aMyFields1[Column]], -2)
  Else If Column = 7 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData1[$aMyFields1[Column]], -2)
  Else If Column = 8 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData1[$aMyFields1[Column]], gb.Currency)
  Else
    Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

Public Sub btnrefreshA_Click()

  FillExpenseGrid()

End

Public Sub btnexpoA_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "EXPENSE REPORT: " & txtencid.Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))

End

Private Sub InvoiceGrid()

  Dim sql1 As String
  Dim sql2 As String

  sql1 = "select fldid,fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldreceivedamt,fldcurdeposit,fldbilltype from tblpatbilldetail where fldencounterval=&1"
  sql2 = "select fldid,fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldreceivedamt,fldcurdeposit,fldbilltype from tbltempbilldetail where fldencounterval=&1"
  $rData2 = modDatabase.$myConn.Exec(sql1 & " UNION ALL " & sql2, Trim(txtencid.Text))
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(GridView2, $rData2, $aMyFields2)
  With GridView2
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Invoice"
    .Columns[3].Text = "ItemAMT"
    .Columns[4].Text = "TaxAMT"
    .Columns[5].Text = "DiscAMT"
    .Columns[6].Text = "Received"
    .Columns[7].Text = "Deposit"
    .Columns[8].Text = "Type"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else If Column = 3 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData2[$aMyFields2[Column]], gb.Currency)
  Else If Column = 4 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData2[$aMyFields2[Column]], gb.Currency)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData2[$aMyFields2[Column]], gb.Currency)
  Else If Column = 6 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData2[$aMyFields2[Column]], gb.Currency)
  Else If Column = 7 Then
    Data.Text = modReportVar.GetLocaleNumberFormat($rData2[$aMyFields2[Column]], gb.Currency)
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub btnferfeshB_Click()

  InvoiceGrid()

End

Public Sub btnexpoB_Click()

  modCHTMLReport.ExportGridToHTML(GridView2, "INVOICE REPORT: " & txtencid.Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))

End

''--------------------------------------- Admission procedures ------------------------------------------
Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$IPConsultUserList)
  If xMedUser And If xMedUser.Count Then
    btnconsult.Tag = xMedUser[0]
    btnconsult.Text = xMedUser[1]
  Else
    btnconsult.Tag = ""
    btnconsult.Text = ""
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub btnsms_Click()

  Dim xval As String

  If btnconsult.Tag Then
    xval = modDevice.SendSMSToInpatDoc(Trim(txtencid.Text), modGeneral.GetUserContact(btnconsult.Tag))
    If xval Then
      Message.Info(xval, ("OK"))
    Endif
  Endif

End

Private Function GetAllowClaim(encid As String) As Boolean

  Dim xval As Boolean
  Dim xpend As Float

  If modNonMedical.GetFixedReference(encid) = "Claim Code" Then
    If modBasic.$AutoClaimtoIPD = "Enable" And If modBasic.$RegistNewClaimEnc = "Disable" Then
      xval = True
    Else
      xpend = modNonMedical.TotalUnpaidClaimAmountPatient(modDatabase.$myConn, encid)
      If xpend = 0 Then
        xval = True
      Else
        xval = False
        Message.Warning("Pending Claims", ("OK"))
      Endif
    Endif
  Else
    xval = True
  Endif
  Return xval

End

Private Sub SetHealthCopayment()

  Dim res1 As Result

  res1 = modDatabase.$myConn.Edit("tblencounter", "fldencounterval=&1", Trim(txtencid.Text))
  res1["flddisctype"] = modBasic.$HIPackage
  res1.Update

End

Public Sub btnokadmit_Click()

  Dim hForm As FmIndexForm
  Dim hCElig As CssfAPIEligible
  Dim hiElig As CimisAPIEligible
  Dim xmedopd As Float
  Dim xmedipd As Float
  Dim res As Result
  Dim xcashper As Float
  Dim xgoto As Boolean
  Dim xfileno As String
  Dim xadmitId As String
  Dim xgo As Boolean

  Dim hCls As CReportCustom
  Dim xPath As String
  Dim xPatLst As String[]
  Dim xpayval As Float
  Dim xPolicy As String
  Dim xstate As String

  If Not txtfileno.Text Then
    If modBasic.$DiaryAutoInc = "Yes" Then
      txtfileno.Text = CStr(modBillLock.CurrentAdmitFile())
    Endif
    If txtfileno.Text Then
      modPatientSub.UpdatePatFile($PatientNum, Trim(txtfileno.Text))
    Endif

  Else
    If modBasic.$DiaryCharLen Then
      If Len(txtfileno.Text) = modBasic.$DiaryCharLen Then
      Else
        txtfileno.Text = ""
      Endif
    Endif

    If txtfileno.Text Then
      xPatLst = modPatient.GetPatientListFileNo(Trim(txtfileno.Text))
      If xPatLst And If xPatLst.Count Then
        If modBasic.$DiaryUnique = "Enable" Then
          xgo = False
          Message.Warning("Diary Number must be Unique", ("OK"))
        Else
          If Message.Warning(("This Diary No already registered to " & xPatLst.Join(", ") & ". Are you sure ?"), ("No"), ("Yes")) = 2 Then
            xgo = True
          Else
            xgo = False
          Endif
        Endif
      Else
        xgo = True
      Endif

      If xgo = True Then
        modPatientSub.UpdatePatFile($PatientNum, Trim(txtfileno.Text))
      Endif
    Endif

  Endif

  If modBasic.$AdmitEssDiary = "Yes" Then
    xfileno = modPatient.GetPatientFileByEnc(Trim(txtencid.Text))
    If xfileno Then
      xgoto = True
    Else
      xgoto = False
      Message.Warning("Diary Number is empty", ("OK"))
    Endif
  Else
    xgoto = True
  Endif

  If txtencid.Text Then
    If chkadmison.Value = True Then
      If xgoto = True Then

        If Trim(txtencid.Text) = txtlastencid.Text Then
          If AllowDataSave(Trim(txtencid.Text)) = True Then
            If GetAllowClaim(Trim(txtencid.Text)) = True Then
              modDatabase.$myConn.Begin

              xadmitId = modPatientSub.GetPatientAdmission(Trim(txtencid.Text))
              If cmbsource.Text Then
                modPatientSub.AddAccGeneralQualiData(Trim(txtencid.Text), "Demographics", "Admission Source", Trim(cmbsource.Text), "", Now(), True)
              Endif
              If btnconsult.Tag Then
                modPatientSub.UpdateAttendingConsultant(Trim(txtencid.Text), btnconsult.Tag)
              Endif
              If chkclaim.Value = True Then
                If $ClaimStr = "Claim Code" Then
                  If modBasic.$HIPackage And If modBasic.$HIPackageER Then
                    hiElig = New CimisAPIEligible($PatientCode)
                    xPolicy = hiElig.GetPolicyNo()
                    If xPolicy Then
                      xpayval = hiElig.GetCopayValue()
                      If xpayval = 0.1 Then
                        If $DiscPackage = modBasic.$HIPackageER Then
                          SetHealthCopayment()
                        Endif
                      Endif
                    Else
                      If $DiscPackage = modBasic.$HIPackageER Then
                        SetHealthCopayment()
                      Endif
                    Endif
                  Endif

                  If modBasic.$AutoClaimtoIPD = "Enable" And If modBasic.$RegistNewClaimEnc = "Disable" Then
                    modClaim.UpdateCLaimToIPD($PatientCode, txtclaim.Text)
                  Else
                    txtclaim.Text = modClaim.GetCurrentClaimCodePrint(Trim(txtencid.Text))
                    If Not txtclaim.Text Then
                      txtclaim.Text = modClaim.GetClaimCidePatient(Trim(txtencid.Text))
                    Endif
                  Endif

                Else If $ClaimStr = "Accident SSF" Then
                  txtclaim.Text = modSSF.GetSSFClaimCodePatient(Trim(txtencid.Text), "Accident SSF")

                Else If $ClaimStr = "Critical SSF" Then
                  If modBasic.$SSFCritical Then
                    xstate = modSSF.GetCtiticalSSFStatus(Trim(txtencid.Text))
                    txtclaim.Text = modSSF.GetSSFClaimCodePatient(Trim(txtencid.Text), "Critical SSF", xstate)
                    If xstate = "Post Diagnosis" Then
                      hCElig = New CssfAPIEligible($PatientCode)
                      xmedipd = hCElig.GetPostDiagnoAmt()
                      If xmedipd > 0 Then
                        xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFCritical)
                        res = modDatabase.$myConn.Edit("tblencounter", "fldencounterval=&1", Trim(txtencid.Text))
                        res["fldcashcredit"] = xmedipd * (100 - xcashper) / 100
                        res.Update
                      Endif
                    Endif
                  Endif

                Else If $ClaimStr = "MedExtra SSF" Then
                  If modBasic.$SSFMedExtra Then
                    xstate = modSSF.GetSSFClaimStatus(Trim(txtencid.Text))
                    txtclaim.Text = modSSF.GetSSFClaimCodePatient(Trim(txtencid.Text), "MedExtra SSF", xstate)
                    hCElig = New CssfAPIEligible($PatientCode)
                    xmedipd = hCElig.GetMedExtraAmt()
                    If xmedipd > 0 Then
                      xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFMedExtra)
                      res = modDatabase.$myConn.Edit("tblencounter", "fldencounterval=&1", Trim(txtencid.Text))
                      res["fldcashcredit"] = xmedipd * (100 - xcashper) / 100
                      res.Update
                    Endif
                  Endif

                Else If $ClaimStr = "Medical SSF" Then
                  If modBasic.$SSFMedical Then
                    xstate = modSSF.GetSSFClaimStatus(Trim(txtencid.Text))
                    txtclaim.Text = modSSF.GetSSFClaimCodePatient(Trim(txtencid.Text), "Medical SSF", xstate)
                    hCElig = New CssfAPIEligible($PatientCode)
                    xmedopd = hCElig.GetMedicalOPDAmt()
                    xmedipd = hCElig.GetMedicalIPDAmt()
                    If xmedopd + xmedipd > 0 Then
                      xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFMedical)
                      res = modDatabase.$myConn.Edit("tblencounter", "fldencounterval=&1", Trim(txtencid.Text))
                      res["fldcashcredit"] = (xmedopd + xmedipd) * (100 - xcashper) / 100
                      res.Update
                    Endif
                  Endif

                Endif
              Endif
              modDatabase.$myConn.Commit
              txtadmitcode.Text = xadmitId

              $Status = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
              SetAdmissionDepositLock()
              txtpatlocation.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), $Status)
              ShowAllEncounters()
              Me.Exec("Toastify({text: 'Patient Admitted', duration: 3000}).showToast()")
              ' Balloon.Delay = modBasic.$BalloonDelay

              If modSettings.ShowSettingFromFIle("Admission Report/Name") Then
                hCls = New CReportCustom(Trim(txtencid.Text), "Admission Report", "ReportSize", MMain.$defUnit)
                hCls.Preview()
              Else
                xPath = modPatReports.ShowAdmissionSheet(Trim(txtencid.Text))
                modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
              Endif

            Endif
          Else
            hForm = New FmIndexForm(Trim(txtencid.Text), False, True)
            hForm.Show()
            ' Me.Exec("Toastify({text: 'Incomplete data', duration: 3000}).showToast()")
            ' Balloon.Delay = modBasic.$BalloonDelay
          Endif
        Else
          Message.Warning(("Use Last Encounter ID"), ("OK"))
        Endif

      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub btnreport_Click()

  Dim hCls As CReportCustom
  Dim xPath As String

  If txtencid.Text Then
    If $Status = "Admitted" Then
      If modSettings.ShowSettingFromFIle("Admission Report/Name") Then
        hCls = New CReportCustom(Trim(txtencid.Text), "Admission Report", "ReportSize", MMain.$defUnit)
        hCls.Preview()
      Else
        xPath = modPatReports.ShowAdmissionSheet(Trim(txtencid.Text))
        modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
      Endif
    Endif
  Endif

End

''--------------------------------Indexing ---------------------------------------
Public Sub btncomment_Click()

  If txtencid.Text And If cmbsource.Text Then

    Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btndiary_Click()

  Dim xPatLst As String[]
  Dim xgo As Boolean

  If modBasic.$DiaryCharLen Then
    If Len(txtfileno.Text) = modBasic.$DiaryCharLen Then
    Else
      txtfileno.Text = ""
    Endif
  Endif

  If $PatientNum And If txtfileno.Text Then
    xPatLst = modPatient.GetPatientListFileNo(Trim(txtfileno.Text))
    If xPatLst And If xPatLst.Count Then
      If modBasic.$DiaryUnique = "Enable" Then
        xgo = False
        Message.Warning("Diary Number must be Unique", ("OK"))
      Else
        If Message.Warning(("This Diary No already registered to " & xPatLst.Join(", ") & ". Are you sure ?"), ("No"), ("Yes")) = 2 Then
          xgo = True
        Else
          xgo = False
        Endif
      Endif
    Else
      xgo = True
    Endif

    If xgo = True Then
      modPatientSub.UpdatePatFile($PatientNum, Trim(txtfileno.Text))
      Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
    Endif
  Endif

End

Private Sub ShowAllEncounters()

  Dim sql As String

  sql = "select fldencounterval,fldregdate,fldadmission,fldbillingmode,flddisctype,flddoa,fldadmitlocat,flddod,fldcurrlocat,flduserid,fldfollowdate from tblencounter where fldpatientval=&1 ORDER BY fldregdate DESC"
  $rData3 = modDatabase.$myConn.Exec(sql, $PatientNum)
  $aMyFields3 = New String[]
  modGridView.ReadSmallData(GridView3, $rData3, $aMyFields3)
  With GridView3
    .Columns[0].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "EncID"
    .Columns[1].Text = "RegDate"
    .Columns[2].Text = "Status"
    .Columns[3].Text = "RatePlan"
    .Columns[4].Text = "Discount"
    .Columns[5].Text = "DOA"
    .Columns[6].Text = "RegdDept"
    .Columns[7].Text = "DiscDate"
    .Columns[8].Text = "CurDept"
    .Columns[9].Text = "Consultant"
    .Columns[10].Text = "FollowUp"
  End With

  $rData3.MoveFirst
  txtlastencid.Text = $rData3["fldencounterval"]
  For Each $rData3
    If $rData3["fldadmission"] = "Admitted" Then
      btnokadmit.Enabled = False
    Endif
  Next

End

Public Sub GridView3_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData3.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.GeneralDate)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.MediumDate)
  Else If Column = 7 Then
    Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.MediumDate)
  Else If Column = 9 Then
    Data.Text = modGeneral.GetUserFullName($rData3[$aMyFields3[Column]])
  Else If Column = 10 Then
    Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.MediumDate)
  Else
    Data.Text = $rData3[$aMyFields3[Column]]
  Endif

End

''---------------------------- Encounter Specific Information -------------------------------
Public Sub mnubill_Click()

  Dim xPath As String

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowTotalInvoicebyPatient($rData3["fldencounterval"], "Complete")
    modControlSub.OpenHTMLPreview($rData3["fldencounterval"], xPath, "ReportSize")
  Endif

End

Public Sub mnuexpense_Click()

  Dim xPath As String

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, $rData3["fldencounterval"], "Complete")
    modControlSub.OpenHTMLPreview($rData3["fldencounterval"], xPath, "ReportSize")
  Endif

End

Public Sub mnuadminform_Click()

  Dim hCls As CReportCustom
  Dim xPath As String

  If txtencid.Text Then
    If $Status = "Admitted" Then
      If modSettings.ShowSettingFromFIle("Admission Report/Name") Then
        hCls = New CReportCustom(Trim(txtencid.Text), "Admission Report", "ReportSize", MMain.$defUnit)
        hCls.Preview()
      Else
        xPath = modPatReports.ShowAdmissionSheet(Trim(txtencid.Text))
        modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
      Endif
    Endif
  Endif

End

Public Sub mnubarcode_Click()

  If txtencid.Text Then
    ' modDevice.PrintBarCodeEnc(Trim(txtencid.Text))
  Endif

End

Public Sub mnuregslip_Click()

  Dim $hReport As CRegistLabel

  If txtencid.Text Then
    If modNonMedical.AllowRegistSlipWithInvoiceEncid(Trim(txtencid.Text)) = True Then
      $hReport = New CRegistLabel(Trim(txtencid.Text))
      modControlSub.OpenPDFPreview(Trim(txtencid.Text), $hReport.RegistLabelPath(), "LabelSize")
    Endif
  Endif

End

''====================== MENU ======================
Public Sub mnumed_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Medicines")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnusurg_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Surgicals")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuextra_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Extra Items")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnulaboratory_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Diagnostic Tests")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuradio_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Radio Diagnostics")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuproc_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Procedures")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuserv_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "General Services")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuequip_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Equipment")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuother_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowItemDispensedByPatient(modDatabase.$syConn, Trim(txtencid.Text), "Other Items")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuexpenseall_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, Trim(txtencid.Text), "Complete")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuexpadmited_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, Trim(txtencid.Text), "Admitted")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuexpensedate_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowTotalExpenseDatebyPatient(modDatabase.$syConn, Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuexpensedept_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowTotalGroupbyPatient(modDatabase.$syConn, Trim(txtencid.Text), "Complete")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuexpensummary_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowSummaryExpensebyPatient(modDatabase.$syConn, Trim(txtencid.Text), "Complete")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuexpenseinpat_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowSummaryExpensebyPatient(modDatabase.$syConn, Trim(txtencid.Text), "Admitted")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubillall_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLInvoice.ShowTotalInvoicebyPatient(Trim(txtencid.Text), "Complete")
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuextraexpen_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowExtraExpensePatient(modDatabase.$syConn, Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnunoninvoiced_Click()

  Dim xPath As String

  If txtencid.Text Then
    Message.Info(("Generating Report ...."), ("OK"))
    xPath = modCHTMLInvoice.ShowPendingExpensebyPatient(modDatabase.$syConn, Trim(txtencid.Text), "Complete", ["Credit", "Cash"])
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnudemograph_Click()

  Dim hForm As FmPatdemograph

  If txtencid.Text Then
    hForm = New FmPatdemograph(Trim(txtencid.Text), "Acount")
    hForm.ShowModal
  Endif

End

Public Sub mnupatacc_Click()

  Dim hForm As FmPatAccEdit

  If txtencid.Text Then
    hForm = New FmPatAccEdit(Trim(txtencid.Text))
    hForm.ShowModal
  Endif

End

Private Function AllowDataSave(encid As String) As Boolean

  Dim xx As Boolean
  Dim res As Result

  xx = True
  res = modDatabase.$myConn.Exec("select fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptguardian,fldrelation,fldptbirday,fldemail,fldptcode from tblpatientinfo where fldpatientval in(select fldpatientval from tblencounter where fldencounterval=&1)", encid)
  If res.Available Then

    If modBasic.$AdmitEssAddress = "Yes" Then
      If Not res["fldptaddvill"] Then
        xx = False
      Endif
    Endif

    ' If modBasic.$AdmitEssWardNo = "Yes" Then
    '   If Not res["fldptaddward"] Then
    '     xx = False
    '   Endif
    ' Endif

    If modBasic.$AdmitEssDistrict = "Yes" Then
      If Not res["fldptadddist"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssAge = "Yes" Then
      If Not res["fldptbirday"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssGuardian = "Yes" Then
      If Not res["fldptguardian"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssRelation = "Yes" Then
      If Not res["fldrelation"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssContact = "Yes" Then
      If Not res["fldptcontact"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssEMail = "Yes" Then
      If Not res["fldemail"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssCode = "Yes" Then
      If Not res["fldptcode"] Then
        xx = False
      Endif
    Endif

    If modBasic.$AdmitEssEthnic = "Yes" Then
      If Not res["fldethniccode"] Then
        xx = False
      Endif
    Endif
  Endif

  Return xx

End

Private Sub DepoPopUpPatientForm(encid As String, sTag As String)

  Dim hForm As FmIndexForm
  Dim xset As String

  xset = modGlobalSetting.ShowSettingFromDB("PatientFormPopUp/" & sTag)
  If xset = "Yes" Then
    If AllowDataSave(encid) = False Then
      hForm = New FmIndexForm(encid, False, True)
      hForm.Show()
    Endif
  Endif

End

Public Sub mnumonitor_Click()

  Dim hForm As FmAddMonitor

  If Trim(txtencid.Text) = txtlastencid.Text Then
    hForm = New FmAddMonitor(Trim(txtencid.Text))
    hForm.ShowModal
  Else
    Message.Warning(("Use Last Encounter ID"), ("OK"))
  Endif

End
