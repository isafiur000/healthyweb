' Gambas module file

Public $HMISDiagnosticList As String[]
Public $HMISSocialSecurity As String[]
Public $HMISConsultTypes As String[]
Public $HMISIPServiceList As String[]
Public $HMISSocialUnitList As String[]
Public $HMISFreeDisesList As String[]

Public $HMISViolTypeOCMC As String[]
Public $HMISViolCauseOCMC As String[]
Public $HMISDisabilityOCMC As String[]
Public $HMISServiceOCMC As String[]

Public $HMISProblemsICU As String[]

Public $HMISLabCategory As String[]
Public $HMISHematology As String[]
Public $HMISImmunology As String[]
Public $HMISBiochemistry As String[]
Public $HMISBactriology As String[]
Public $HMISCultureSpecimens As String[]
Public $HMISVirology As String[]
Public $HMISParasitology As String[]
Public $HMISHormones As String[]
Public $HMISDrugAnalysis As String[]
Public $HMISCytology As String[]
Public $HMISImmunoHisto As String[]
Public $HMISMolecular As String[]

Public $HMISGeriatricServiceType As String[]
Public $HMISGeriatricExpenseSource As String[]

Public $EWARSDistrictColl As Collection
Public $EWARSMunicipalColl As String[]

Private $OpdVisitColl As Collection
Private $IPservicesColl As Collection
Private $FreeHealthColl As Collection

Public Sub LoadHMISLists()

  $HMISDiagnosticList = ["X-ray", "Ultrasonogram (USG)", "Echocardiogram (Echo)", "Electro Encephalo Gram (EEG)", "Electrocardiogram (ECG)", "Trademill", "Computed Tomographic (CT) Scan", "Magnetic Resonance Imaging (MRI)", "Endoscopy", "Colonoscopy", "Bronchoscopy", "Nuclear Medicine", "Mammogram", "Cystoscopy", "DEXA Scan", "DTPA Scan", "Electroconvulsive Therapy (ECT)", "Transcranial Magnetic Simulation (TMS)"]
  $HMISConsultTypes = ["General Treatment", "IMNCI", "Nutrition", "Safe Motherhood", "Family Planning", "Tuberculosis", "Leprosy", "Infection", "STD", "Non communicable"]
  $HMISIPServiceList = ["General Medicine", "General Surgery", "Paediatrics", "Obstetric", "Gynecology", "ENT", "Orthopedics", "Psychiatric", "Dental"]
  $HMISSocialSecurity = ["Ultra Poor/Poor", "Helpless/Destitute", "Disabled", "Sr Citizens", "FCHV", "Gender Based Violence", "Others"]
  $HMISSocialUnitList = ["Poor", "Helpless", "People with disability", "GBV Survivors", "Senior Citizens", "Deprived Emergency Patients", "Disaster survivors", "Marginalized/Endangered group", "FCHV", "Malnourished Children", "Prisoners", "Martyrs Family", "Others"]
  $HMISFreeDisesList = ["Heart Disease", "Kidney Disease", "Cancer", "Head Injuries", "Spinal Injuries", "Alzheimers Disease", "Parkinsons Disease", "Sickle Cell Anaemia"]

  $HMISViolTypeOCMC = ["Emotional", "Denial of resources/opportunities/services", "Harmful traditional practices", "Physical Violence", "Child/forced marriage", "Sexual assault", "Rape"]
  $HMISViolCauseOCMC = ["Polygamy", "Child marriage", "Dowry", "Witchcraft", "Chhaupadi", "Human trafficking", "Son preference", "Social discrimination", "Child labour", "Others"]
  $HMISDisabilityOCMC = ["Physical disability", "Vision related disability", "Hearing disability", "Vision and hearing impaired", "Speech/language related impairment", "Intellectual disability", "Hereditary hemophilia", "Mental & psychological impairment", "Autism related impairment", "Multiple disability"]
  $HMISServiceOCMC = ["Physical examination", "Injury", "Safe abortions", "Treatment of mental illness", "Psychosocial counseling", "Medico-legal service", "HIV testing/counseling", "Pregnancy test", "Emergency contraceptive", "STI treatment"]

  $HMISProblemsICU = ["Hypothermia", "Asphyxia", "Sepsis", "Seizure", "Hyperbilurubin", "Congenital anomalities", "Others"]

  $HMISLabCategory = ["HAEMATOLOGY", "IMMUNOLOGY", "BIOCHEMISTRY", "BACTERIOLOGY", "VIROLOGY", "PARASITOLOGY", "HORMONE/ENDOCRINE", "DRUG ANALYSIS", "HISTOPATHOLOGY/CYTOLOGY", "IMMUNO-HISTO CHEMISTRY", "MOLECULAR LAB"]
  $HMISHematology = ["HB", "RBC Count", "TLC", "Platelets Count", "DLC", "ESR", "MCV", "MCH", "MCHC", "RDW", "Blood Group & Rh Type", "Coombs test", "Retics", "PBS/PBF", "HbA1c", "Special Stain(MPO)", "Special Stain(PAS)", "Sickling Test", "Urine for Hemosiderin", "BT", "CT", "PT-INR", "APTT", "Bone Marrow Analysis", "Aldehyde test", "MP Total", "Smear MP Pos(PF)", "Smear MP Pos(PV)", "Smear MP Pos(P-MIX)", "MF", "LD Bodies", "Hb Electrophoresis", "LE cell", "ALC", "AEF", "FDP", "D-dimer", "Fac VIII", "Fac IX", "Cross Matching", "Others"]                  ''
  $HMISImmunology = ["Pregnancy Test (UPT)", "ASO", "CRP", "RA Factor", "TPHA", "ANA", "Anti-dsDNA", "PRPR/VDRL", "CEA", "CA-125", "CA-19.9", "CA-15.3", "Toxo", "Rubella", "CMV", "HSV", "Measles", "Echinococcus", "Amoebiasis", "PSA", "Ferritin", "Cysticercosis", "Brucella", "Thyroglobulin", "Anti TPO", "Protein Electrophoresis", "Anti-CCP", "RK-39", "JE", "Dengue", "Rapid MP test", "Mantoux test", "Chikungunya", "Scrub Typhus", "H. Pylori", "Leptospira", "Widal Test", "Others"]
  $HMISBiochemistry = ["Sugar", "Blood Urea", "Creatinine", "Sodium (Na)", "Potassium (K)", "Calcium", "Phosphorus", "Magnesium", "Uric acid", "Total Cholesterol", "Triglycerides", "HDL", "LDL", "Amylase", "Micro albumin", "Bilirubin", "SGPT", "Alk Phos", "SGOT", "Total Protein", "Gamma GT", "24hr urine protein", "24hr urine U/A", "Creatinine Clearance", "Iron", "TIBC", "CPK-MB", "CPK-NAC", "LDH", "Iso-Trop-I", "Others"]
  $HMISBactriology = ["Gram stain", "Sputum AFB", "Other AFB", "Leprosy Smear", "India Ink Test", "Anaerobic Culture", "Fungus(KOH Test)", "Fungus(Culture)", "Others"]
  $HMISCultureSpecimens = ["Blood", "Urine", "Body Fluid", "Swab", "Stool", "Water", "Pus", "Sputum", "CSF", "Others"]
  $HMISVirology = ["HIV RDT", "HBSAg RDT", "HCV RDT", "HIV ELISA/CLIA", "HAV ELISA/CLIA", "HBsAg ELISA/CLIA", "HCV ELISA/CLIA", "HEV ELISA/CLIA", "Anti-HBs", "HBeAg", "Anti-HBe", "HBcAg", "Anti HBcAg", "Western blot", "CD4 count", "Viral load", "Others"]
  $HMISParasitology = ["Stool R/E", "Occult blood", "Reducing sugar", "Urine R/E", "Bile salts", "Bile pigments", "Urobilinogen", "Porphobilinogen", "Acetone", "Chyle", "Specific Gravity", "Bence Jones protein", "Semen analysis", "Others"]
  $HMISHormones = ["T3", "T4", "TSH", "Cortisol", "AFP", "LH", "FSH", "Prolactin", "Oestrogen", "Progesterone", "Testosterone", "Vit.D", "Vit.B12", "Others"]
  $HMISDrugAnalysis = ["Carbamazepine", "Cyclosporine", "Valporic acid", "Phenytoin", "Digoxine", "Tacrolimus", "Others"]
  $HMISCytology = ["Biopsy(H & E)", "Biopsy(Other)", "Cytology(Pap)", "Cytology(Giemsa)", "Cytology(Others)"]
  $HMISImmunoHisto = ["ER", "PR", "G-FAP", "S-100", "Vimentin", "Cytokeratin", "Others"]
  $HMISMolecular = ["Covid-19 PCR", "Influenza", "Leukemia Panel"]

  $HMISGeriatricServiceType = ["General examination", "General treatment", "Surgery", "Palliative", "Rehabilitative"]
  $HMISGeriatricExpenseSource = ["Health Insurance", "Geriatric health care", "SSU", "Deprived citizen"]

End

Public Function GetHMISLabItemList(sDept As String) As String[]

  Dim aList As String[]

  If sDept = "HAEMATOLOGY" Then
    aList = modHMISRep.$HMISHematology
  Else If sDept = "IMMUNOLOGY" Then
    aList = modHMISRep.$HMISImmunology
  Else If sDept = "BIOCHEMISTRY" Then
    aList = modHMISRep.$HMISBiochemistry
  Else If sDept = "BACTERIOLOGY" Then
    aList = modHMISRep.$HMISBactriology
  Else If sDept = "VIROLOGY" Then
    aList = modHMISRep.$HMISVirology
  Else If sDept = "PARASITOLOGY" Then
    aList = modHMISRep.$HMISParasitology
  Else If sDept = "HORMONE/ENDOCRINE" Then
    aList = modHMISRep.$HMISHormones
  Else If sDept = "DRUG ANALYSIS" Then
    aList = modHMISRep.$HMISDrugAnalysis
  Else If sDept = "HISTOPATHOLOGY/CYTOLOGY" Then
    aList = modHMISRep.$HMISCytology
  Else If sDept = "IMMUNO-HISTO CHEMISTRY" Then
    aList = modHMISRep.$HMISImmunoHisto
  Else If sDept = "MOLECULAR LAB" Then
    aList = modHMISRep.$HMISMolecular
  Endif

  Return aList

End

Public Function GetHMISLabItemHead(sDept As String) As String

  Dim aItem As String

  If sDept = "HAEMATOLOGY" Then
    aItem = "Hematology"
  Else If sDept = "IMMUNOLOGY" Then
    aItem = "Immunology"
  Else If sDept = "BIOCHEMISTRY" Then
    aItem = "Biochemistry"
  Else If sDept = "BACTERIOLOGY" Then
    aItem = "Bacteriology"
  Else If sDept = "VIROLOGY" Then
    aItem = "Virology"
  Else If sDept = "PARASITOLOGY" Then
    aItem = "Parasitology"
  Else If sDept = "HORMONE/ENDOCRINE" Then
    aItem = "Hormones"
  Else If sDept = "DRUG ANALYSIS" Then
    aItem = "DrugAnalysis"
  Else If sDept = "HISTOPATHOLOGY/CYTOLOGY" Then
    aItem = "HistoCytology"
  Else If sDept = "IMMUNO-HISTO CHEMISTRY" Then
    aItem = "ImmunoHistochemistry"
  Else If sDept = "MOLECULAR LAB" Then
    aItem = "MolecularLab"
  Endif

  Return aItem

End

Public Function OPDMorbidityGroups() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Certain Infectious or Parasitic Diseases")
  xx.Add("Communicable, Vector Borne")
  xx.Add("Communicable, Water/Food Borne")
  xx.Add("Other Communicable Diseases")
  xx.Add("HIV/STI")
  xx.Add("Other Infected Diseases")
  xx.Add("Nutritional & Metabolic Disorder")
  xx.Add("Skin Diseases")
  xx.Add("Ear, Nose and Throat Infection")
  xx.Add("Oral Health Related Problems")
  xx.Add("Eye Problems")
  xx.Add("Obstetrics Complications")
  xx.Add("Gynaecological Problems")
  xx.Add("Mental Health related problems")
  xx.Add("Malignancy")
  xx.Add("Cardiovascular & Respiratory Related Problems")
  xx.Add("Other Diseases & Injuries")
  xx.Add("Orthopaedic Problems")
  xx.Add("Surgical Problems")
  xx.Add("Reasons for Contact with Health Services")
  xx.Add("Common Symptoms")

  Return xx

End

Public Function ERMorbidityGroups() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Respiratory Emergencies")
  xx.Add("Cardiac Emergencies")
  xx.Add("Neurological Emergencies")
  xx.Add("Gastrointestinal Emergencies")
  xx.Add("Genitourinary Emergencies")
  xx.Add("Gynecology and Obstetrical Emergencies")
  xx.Add("Orthopaedic & Trauma")
  xx.Add("Metabolic Emergencies")
  xx.Add("Ocular Emergencies")
  xx.Add("ENT Emergencies")
  xx.Add("Burns")
  xx.Add("Mental Health Emergencies")
  xx.Add("Toxicological Emergencies")
  xx.Add("Bite")
  xx.Add("Paediatric Emergencies")

  Return xx

End

Public Function GetHMISObsComplicationList() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Ectopic pregnancy;JA01")
  xx.Add("Abortion complication;JA05")
  xx.Add("Pre-eclampsia;JA24")
  xx.Add("Eclampsia;JA25")
  xx.Add("Hyperemesis grivadarum;JA60.0")
  xx.Add("Antepartum haemorrhage;JA41")
  xx.Add("Prolonged labour;JB03")
  xx.Add("Obstructed Labor;JB06")
  xx.Add("Gestational Hypertension;JA23")
  xx.Add("Ruptured uterus;JB0A.1")
  xx.Add("Postpartum haemorrhage;JA43")
  xx.Add("Retained placenta;JA43.0")
  xx.Add("Pueperal sepsis;JB40.0")
  xx.Add("C-Section Wound Infection;JB40.1")
  xx.Add("Other complications;JB0Y")

  Return xx

End

''Non-Communicable Diseases
Public Function GetNonCommDiseases() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Hypertension")
  xx.Add("Cardiovascular Disease")
  xx.Add("Diabetes")
  xx.Add("Cancer")
  xx.Add("COPD")
  xx.Add("Asthma")
  xx.Add("Chronic Kideny Disease (CKD)")
  xx.Add("Rheumatic Heart Disease (RHD)")
  xx.Add("Stroke")
  xx.Add("Heart Attacks")
  xx.Add("Thyroid Diseases")
  xx.Add("Congenital Heart Disease")
  xx.Add("Sickle cell diseases and other haemoglobinopathies")
  xx.Add("Alcohol Liver Diseases")
  xx.Add("Obesity")
  xx.Add("Other NCDs cases")

  Return xx

End

''Injuries
Public Function GetInjuriesList() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Road Traffic Injuries (RTI)")
  xx.Add("Fall")
  xx.Add("Burn")
  xx.Add("Drowning")
  xx.Add("Bites")
  xx.Add("Occupational Injury")
  xx.Add("Violence")
  xx.Add("Self-Harm")

  Return xx

End

''NCD Cause-Specific Deaths
Public Function GetNCDCauseDaeath() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Cardiovascular Disease")
  xx.Add("Cancer")
  xx.Add("Diabetes")
  xx.Add("Chronic Respiratory Diseases")
  xx.Add("Suicide")
  xx.Add("Other NCDs")

  Return xx

End

Public Function GetCancerGroups() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Cervical Cancers")
  xx.Add("Oral Cancers")
  xx.Add("Breast Cancers")
  xx.Add("Lung Cancers")
  xx.Add("Other Cancers")

  Return xx

End

Public Function GetMentalDiseases() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Depression")
  xx.Add("Suicide Attempt")
  xx.Add("Epilepsy")
  xx.Add("Psychosis")
  xx.Add("Anxiety Disorder")
  xx.Add("Emotional and Behavioural Disorder of Children and Adolescents")
  xx.Add("Dementia")
  xx.Add("Conversion Disorder")
  xx.Add("Bipolar Disorder")
  xx.Add("Other Mental Disorder")
  xx.Add("Alcohol Use Disorder")
  xx.Add("Other Substance Use Disorders")

  Return xx

End

Public Function GetGeriatricDiseases() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Stroke")
  xx.Add("Chronic Respiratory")
  xx.Add("Coronary artery disease")
  xx.Add("Hypertension")
  xx.Add("Diabetes mellitus")
  xx.Add("Cancers")
  xx.Add("Parkinsonism")
  xx.Add("Dementia and Alzheimers")
  xx.Add("Benign Prostatic Hypertrophy")
  xx.Add("Depression")
  xx.Add("Osteoarthritis")
  xx.Add("Osteoporosis")
  xx.Add("Sarcopenia")
  xx.Add("Pneumonia")
  xx.Add("Urinary Tract Infection")
  xx.Add("Others")

  Return xx

End

Public Function GetHMISDiseaseGroups(sType As String) As String[]

  Dim xxx As String[]

  If sType = "Diagnosis Groups" Then
    xxx = modHMISRep.OPDMorbidityGroups()
  Else If sType = "Emergency Groups" Then
    xxx = modHMISRep.ERMorbidityGroups()
  Else If sType = "Non Communicable Groups" Then
    xxx = modHMISRep.GetNonCommDiseases()
  Else If sType = "Injury Groups" Then
    xxx = modHMISRep.GetInjuriesList()
  Else If sType = "NCD Death Groups" Then
    xxx = modHMISRep.GetNCDCauseDaeath()
  Else If sType = "Cancer Groups" Then
    xxx = modHMISRep.GetCancerGroups()
  Else If sType = "Mental Groups" Then
    xxx = modHMISRep.GetMentalDiseases()
  Else If sType = "Geriatric Groups" Then
    xxx = modHMISRep.GetGeriatricDiseases()
  Endif

  Return xxx

End

Public Function GetEWARSGroup() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Acute Gastroenteritis(AGE)")
  xx.Add("Anthrax")
  xx.Add("Cholera")
  xx.Add("COVID-19")
  xx.Add("Dengue")
  xx.Add("Diphtheria")
  xx.Add("Encephalitis")
  xx.Add("Enteric Fever")
  xx.Add("Hepatitis-Acute Jaundice")
  xx.Add("Influenza Like Illness")
  xx.Add("Kala azar")
  xx.Add("Leptospirosis")
  xx.Add("Malaria")
  xx.Add("Malaria Falciparum")
  xx.Add("Malaria Vivax")
  xx.Add("Meningococcal Meningitis")
  xx.Add("Neonatal Tetanus")
  xx.Add("Pneumonic Plague")
  xx.Add("Rabies")
  xx.Add("Severe Acute Respiratory Infection(SARI)")
  xx.Add("Scrub Typhus")
  xx.Add("Seasonal Hyperacute Panuveitis(SHAPU)")
  xx.Add("Snake Bite - Poisonous")
  xx.Add("Suspected Measles Like Illness")
  xx.Add("Viral Haemorrhagic Fever")
  xx.Add("Whooping Cough")
  xx.Add("Yellow Fever")
  xx.Add("Other")

  Return xx

End

''-------------- Fill Form Tree ------------------
Public Sub LoadHMISTree(TreeView1 As WebTree)

  Dim pic3 As String
  Dim pic4 As String
  Dim i As Integer
  Dim j As Integer
  Dim k As Integer
  Dim m As Integer
  Dim n As Integer

  Dim xDiagno As String[]
  Dim xLabList As String[]
  Dim xErList As String[]
  Dim xCategLst As String[]

  pic3 = "icons/coll3.png"
  pic4 = "icons/coll4.png"

  TreeView1.Add("Hospital Summary Dataset", "Hospital Summary Dataset", pic3)
  TreeView1.Add("A" & "@" & CStr(1), "Hospital Services", pic4, "Hospital Summary Dataset")
  TreeView1.Add("A" & "@" & CStr(2), "Emergency Services", pic4, "Hospital Summary Dataset")
  TreeView1.Add("A" & "@" & CStr(3), "Diagnostic/Other Services", pic4, "Hospital Summary Dataset")
  TreeView1.Add("A" & "@" & CStr(4), "Free Service for Impoverished Citizen", pic4, "Hospital Summary Dataset")

  TreeView1.Add("Hospital Indoor Service", "Hospital Indoor Service", pic3)
  TreeView1.Add("B" & "@" & CStr(1), "Inpatient Outcome", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(2), "Neonate Form", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(3), "Maternal Age", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(4), "Medico-Legal Cases", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(5), "Type of Surgeries", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(6), "Death Information", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(7), "Social Security Programme", pic4, "Hospital Indoor Service")
  TreeView1.Add("B" & "@" & CStr(8), "Free health service summary", pic4, "Hospital Indoor Service")
  ' TreeView1.Add("B" & "@" & CStr(9), "Inpatient Morbidity", pic4, "Hospital Indoor Service")
  ' TreeView1.Add("B" & "@" & CStr(10), "Hospital Mortality", pic4, "Hospital Indoor Service")

  xCategLst = modBasic.$ClinDiagnoChapterGrouped
  TreeView1.Add("Inpatient Morbidity", "Inpatient Morbidity", pic3)
  For m = 1 To xCategLst.Count
    TreeView1.Add("C" & "@" & CStr(m), xCategLst[m - 1], pic4, "Inpatient Morbidity")
  Next

  TreeView1.Add("Hospital Mortality", "Hospital Mortality", pic3)
  For n = 1 To xCategLst.Count
    TreeView1.Add("D" & "@" & CStr(n), xCategLst[n - 1], pic4, "Hospital Mortality")
  Next

  TreeView1.Add("Maternal And New-born Health", "Maternal And New-born Health", pic3)
  TreeView1.Add("E" & "@" & CStr(1), "ANC Services", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(2), "Delivery Service", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(3), "Delivery Type", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(4), "Delivery Outcome", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(5), "Stillbirth", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(6), "Incentive", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(7), "Obstetric Complications", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(8), "Blood Transfusion", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(9), "Birth Weight", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(10), "PNC Visit", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(11), "Maternal Death", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(12), "Neonatal Death", pic4, "Maternal And New-born Health")
  TreeView1.Add("E" & "@" & CStr(13), "Safe Abortion Service", pic4, "Maternal And New-born Health")

  TreeView1.Add("Family Planning Program", "Family Planning Programme", pic3)
  ' TreeView1.Add("F" & "@" & CStr(1), "", pic4, "Family Planning Programme")

  TreeView1.Add("New Born Care", "New Born Care", pic3)
  TreeView1.Add("G" & "@" & CStr(1), "Number of sick babies admitted at SNCU/NICU/KMCU", pic4, "New Born Care")
  TreeView1.Add("G" & "@" & CStr(2), "Management & Treatment Outocmes at SNCU/NICU/KMCU", pic4, "New Born Care")
  TreeView1.Add("G" & "@" & CStr(3), "Number managed with KMC at SNCU/NICU/KMCU", pic4, "New Born Care")

  TreeView1.Add("Non Communicable Disease", "Non Communicable Disease", pic3)
  TreeView1.Add("H" & "@" & CStr(1), "Number of NCD cases on Treatment (OPD/Emergency)", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(2), "Number of NCD Cause-Specific Deaths", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(3), "Total number of new cancers cases managed", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(4), "Number of Injuries", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(5), "Number of Injury Deaths", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(6), "Number of Mental Health Cases on Treatment (OPD/Emergency)", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(7), "Type of Mental Health Cases", pic4, "Non Communicable Disease")
  TreeView1.Add("H" & "@" & CStr(8), "Control and Follow Up Cases for Hypertension and Diabetes", pic4, "Non Communicable Disease")

  xDiagno = modHMISRep.OPDMorbidityGroups()
  TreeView1.Add("New Outpatient Morbidity", "New Outpatient Morbidity", pic3)
  For j = 1 To xDiagno.Count
    TreeView1.Add("I" & "@" & CStr(j), xDiagno[j - 1], pic4, "New Outpatient Morbidity")
  Next

  xErList = modHMISRep.ERMorbidityGroups()
  TreeView1.Add("Common Emergency Diseases", "Common Emergency Diseases", pic3)
  For i = 1 To xErList.Count
    TreeView1.Add("J" & "@" & CStr(i), xErList[i - 1], pic4, "Common Emergency Diseases")
  Next

  xLabList = modHMISRep.$HMISLabCategory
  TreeView1.Add("Laboratory Services", "Laboratory Services", pic3)
  For k = 1 To xLabList.Count
    TreeView1.Add("K" & "@" & CStr(k), xLabList[k - 1], pic4, "Laboratory Services")
  Next

  TreeView1.Add("Geriatric Services", "Geriatric Services", pic3)
  TreeView1.Add("L" & "@" & CStr("1"), "Age Grouping", pic4, "Geriatric Services")
  TreeView1.Add("L" & "@" & CStr("2"), "Caste/Ethnicity", pic4, "Geriatric Services")
  TreeView1.Add("L" & "@" & CStr("3"), "HI Enrollment", pic4, "Geriatric Services")
  TreeView1.Add("L" & "@" & CStr("4"), "Types of services", pic4, "Geriatric Services")
  TreeView1.Add("L" & "@" & CStr("5"), "Source of expenses", pic4, "Geriatric Services")
  TreeView1.Add("L" & "@" & CStr("6"), "Hospital department", pic4, "Geriatric Services")
  TreeView1.Add("L" & "@" & CStr("7"), "Disease", pic4, "Geriatric Services")

  TreeView1.Add("One-Stop Crisis Management Center", "One-Stop Crisis Management Center", pic3)
  TreeView1.Add("M" & "@" & CStr("1"), "Age Group and Sex", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("2"), "Disability", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("3"), "Number of reported case by service", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("4"), "Cause of violence", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("5"), "Types of violence", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("6"), "Number of new cases by Caste/Ethnicity", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("7"), "Relationship of the perpetrator", pic4, "One-Stop Crisis Management Center")
  TreeView1.Add("M" & "@" & CStr("8"), "Age and Sex of Perpetrator", pic4, "One-Stop Crisis Management Center")

  TreeView1.Add("Social Service Unit", "Social Service Unit", pic3)
  TreeView1.Add("N" & "@" & CStr("1"), "Age Group and Sex", pic4, "Social Service Unit")
  TreeView1.Add("N" & "@" & CStr("2"), "Caste and Ethinicity", pic4, "Social Service Unit")
  TreeView1.Add("N" & "@" & CStr("3"), "HI Enrollment", pic4, "Social Service Unit")
  TreeView1.Add("N" & "@" & CStr("4"), "Hospital Department", pic4, "Social Service Unit")
  TreeView1.Add("N" & "@" & CStr("5"), "Target group", pic4, "Social Service Unit")

  TreeView1.Add("Other Reports", "Other Reports", pic3)
  TreeView1.Add("Z" & "@" & CStr("1"), "Bipanna Report", pic4, "Other Reports")
  TreeView1.Add("Z" & "@" & CStr("2"), "Total Service Recepients", pic4, "Other Reports")
  TreeView1.Add("Z" & "@" & CStr("3"), "New Service Recepients", pic4, "Other Reports")
  TreeView1.Add("Z" & "@" & CStr("4"), "Service Recepients based on Ethnicity", pic4, "Other Reports")

End

Public Sub GetHMISCollection()

  $OpdVisitColl = New Collection
  $IPservicesColl = New Collection
  $FreeHealthColl = New Collection

End

Public Sub ClearHMISCollection()

  $OpdVisitColl.Clear()
  $IPservicesColl.Clear()
  $FreeHealthColl.Clear()

End

Public Function GetHMISSettingSource(sHead As String, sSourceList As String[], sText As String) As String

  Dim xsource As String
  Dim xlist As String[]
  Dim xval As String

  For Each xsource In sSourceList
    If sHead = "OPDVisits" Then
      xlist = $OpdVisitColl[xsource]
    Else If sHead = "IPServices" Then
      xlist = $IPservicesColl[xsource]
    Else If sHead = "SocialSecurity" Then
      xlist = $FreeHealthColl[xsource]
    Endif

    If Not xlist Then
      xlist = modHMISReport.GetDBHMISettingList(sHead, xsource)
      If sHead = "OPDVisits" Then
        $OpdVisitColl.Add(xlist, xsource)
      Else If sHead = "IPServices" Then
        $IPservicesColl.Add(xlist, xsource)
      Else If sHead = "SocialSecurity" Then
        $FreeHealthColl.Add(xlist, xsource)
      Endif
    Endif

    If xlist.Exist(sText) = True Then
      xval = xsource
      Break
    Endif
  Next
  Return xval

End

Public Function ConvertDiagnosisToHMIS(digList As String[]) As String[]

  Dim itmList As String[]
  Dim sColl As New Collection
  Dim xdgno As String
  Dim xval As String

  itmList = New String[]
  For Each xdgno In digList
    If xdgno = "Obstetrics" Then
      xval = "QA40"
    Else If xdgno = "Other" Then
      xval = "MG48"
    Else
      xval = Trim(xdgno)
    Endif

    If xval Then
      If sColl.Exist(xval) Then Continue
      sColl[xval] = True
      itmList.Add(xval)
    Endif
  Next
  If itmList Then
    itmList.Sort()
  Endif

  Return itmList

End

''------------------ HMIS 1------------------------------
Public Function GetConsultationTypeONE(xDept As String) As String

  Dim xval As String
  Dim sDept As String

  If xDept Then
    sDept = GetHMISSettingSource("OPDVisits", $HMISConsultTypes, xDept)
    If sDept Then
      If sDept = "General Treatment" Then
        xval = "1"
      Else If sDept = "IMNCI" Then
        xval = "2"
      Else If sDept = "Nutrition" Then
        xval = "3"
      Else If sDept = "Safe Motherhood" Then
        xval = "4"
      Else If sDept = "Family Planning" Then
        xval = "5"
      Else If sDept = "Tuberculosis" Then
        xval = "6"
      Else If sDept = "Leprosy" Then
        xval = "7"
      Else If sDept = "Infection" Then
        xval = "8"
      Else If sDept = "STD" Then
        xval = "9"
      Else If sDept = "Non communicable" Then
        xval = "10"
      Else
        xval = "11"
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

''----------------- HMIS 8 --------------------------------
Public Function GetDateFormatHMISEight(sDate As Date) As String

  Dim xx As String
  Dim asx As String[]
  Dim bsx As String[]
  Dim xtime As Date
  Dim xam As String
  Dim xpm As String

  If sDate Then
    asx = Split(modDate.ConvertToLocaldate(sDate), Space(1))
    If asx.Count Then
      bsx = Split(asx[0], "/")
      xtime = Time(sDate)
      If xtime < Time("12", 0, 0, 0) Then
        xam = Format(xtime, "hh:nn:ss")
        xpm = modString.HTMLBlankSpace(2)
      Else
        xam = modString.HTMLBlankSpace(2)
        xpm = Format(xtime, "hh:nn:ss")
      Endif
    Else
      bsx = ["", "", ""]
    Endif

    xx = modRepoTemplete.HTMLTableSyntax()
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td class='reportmid_table_h'>" & "DD" & "</td>" & gb.NewLine
    xx = xx & "<td class='reportmid_table_h'>" & "MM" & "</td>" & gb.NewLine
    xx = xx & "<td class='reportmid_table_h'>" & "YY" & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine

    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & bsx[2] & "</td>" & gb.NewLine
    xx = xx & "<td>" & bsx[1] & "</td>" & gb.NewLine
    xx = xx & "<td>" & bsx[0] & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
    xx = xx & "</table>"

    xx = xx & "<br>" & gb.NewLine
    xx = xx & modRepoTemplete.HTMLTableSyntax()
    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & "AM" & "</td>" & gb.NewLine
    xx = xx & "<td>" & "PM" & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine

    xx = xx & "<tr>" & gb.NewLine
    xx = xx & "<td>" & xam & "</td>" & gb.NewLine
    xx = xx & "<td>" & xpm & "</td>" & gb.NewLine
    xx = xx & "</tr>" & gb.NewLine
    xx = xx & "</table>"
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetHMISAgeFormatEight(encid As String, xGender As String, xAgeGroup As String, Optional sCon As Connection) As String

  Dim xsex As String
  Dim $con As Connection
  Dim xage As Float
  Dim xgroup As String
  Dim xx As String

  If sCon Then
    $con = sCon
  Else
    $con = modDatabase.$syConn
  Endif

  xsex = modPatient.GetPatientSex(encid, $con)
  xage = DateDiff(modPatient.GetPatientBirthDay(encid, $con), modPatient.GetRecordDate(encid), gb.Minute) / (60 * 24)
  If xage <= 7 Then
    xgroup = "0-7 days"
  Else If xage > 7 And If xage <= 28 Then
    xgroup = "8-28 days"
  Else If xage > 28 And If xage <= 364 Then
    xgroup = "29 days-11 Months"
  Else If xage > 364
    xgroup = ">=1 Year"
  Endif

  If xGender = xsex And If xAgeGroup = xgroup Then
    If xAgeGroup = "0-7 days" Then
      xx = CStr(Round(xage))
    Else If xAgeGroup = "8-28 days" Then
      xx = CStr(Round(xage))
    Else If xAgeGroup = "29 days-11 Months" Then
      xx = CStr(Round(xage / 30, 0))
    Else If xAgeGroup = ">=1 Year" Then
      xx = CStr(Round(xage / 365, 0))
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetAdmissionSourceEight(sLocat As String) As String

  Dim xval As String

  If sLocat = "Emergency" Then
    xval = "1"
  Else If sLocat = "Out Patient" Then
    xval = "2"
  Else If sLocat = "Referred in" Then
    xval = "3"
  Else
    xval = ""
  Endif

  Return xval

End

Public Function GetServiceDischargeEIGHT(xDept As String) As String

  Dim xval As String
  Dim sDept As String

  If xDept Then
    sDept = GetHMISSettingSource("IPServices", $HMISIPServiceList, xDept)
    If sDept Then
      If sDept = "General Medicine" Then
        xval = "1"
      Else If sDept = "General Surgery" Then
        xval = "2"
      Else If sDept = "Paediatrics" Then
        xval = "3"
      Else If sDept = "Obstetric" Then
        xval = "4"
      Else If sDept = "Gynecology" Then
        xval = "5"
      Else If sDept = "ENT" Then
        xval = "6"
      Else If sDept = "Orthopedics" Then
        xval = "7"
      Else If sDept = "Psychiatric" Then
        xval = "8"
      Else If sDept = "Dental" Then
        xval = "9"
      Else
        xval = "10"
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Public Function GetDiagnosisTableEIGHT(encid As String, sType As String) As String

  Dim res As Result
  Dim aa As String[]
  Dim bb As String[]
  Dim xvar As String

  aa = New String[]
  bb = New String[]
  res = modDatabase.$syConn.Exec("select fldcode,fldcodenew from tblpatfindings where fldencounterval=&1 and fldtype=&2 and fldsave=&3", encid, sType, True) ''"Provisional Diagnosis"/"Final Diagnosis"                                    ''
  If res.Available Then
    For Each res
      If res["fldcode"] Then
        aa.Add(res["fldcode"])
        If res["fldcodenew"] Then
          bb.Add(res["fldcodenew"])
        Else
          bb.Add(".")
        Endif
      Endif
    Next
  Endif
  If aa.Count Then
    xvar = modString.GetDualTableFormat(aa, bb, ["Disease", "ICDCode"])
  Else
    xvar = ""
  Endif
  Return xvar

End

Public Function GetHMISOutcomeEIGHT(encid As String, xStatus As String) As String

  Dim xval As String
  Dim xdisc As String

  If xStatus Then
    If xStatus = "Discharged" Then
      xdisc = modPatient.GetPatExitComment(encid, "Discharged")
      Select xdisc
        Case "Recovered", "Improved"
          xval = "1"
        Case "Unchanged", "Worse"
          xval = "2"
        Case Else
          xval = ""
      End Select
    Else If xStatus = "Refer" Then
      xval = "3"
    Else If xStatus = "LAMA" Then
      xval = "4"
    Else If xStatus = "Absconder" Then
      xval = "5"
    Else If xStatus = "Death" Then
      xval = "6"
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Public Function GetHMISEmergencyOutcomeEIGHT(encid As String, xStatus As String) As String

  Dim xval As String
  Dim xdisc As String

  If xStatus Then
    If xStatus = "Discharged" Then
      xdisc = modPatient.GetPatExitComment(encid, "Discharged")
      Select xdisc
        Case "Recovered", "Improved"
          xval = "1"
        Case "Unchanged", "Worse"
          xval = "2"
        Case Else
          xval = ""
      End Select
    Else If xStatus = "Refer" Then
      xval = "3"
    Else If xStatus = "LAMA" Then
      xval = "4"
    Else If xStatus = "Absconder" Then
      xval = "5"
    Else If xStatus = "Admitted" Then
      xval = "6"
    Else If xStatus = "Death" Then
      xval = "7"
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Public Function GetProcedureAllEIGHT(encid As String) As String

  Dim res As Result
  Dim aa As String[]
  Dim bb As String[]
  Dim xvar As String
  Dim xval As String

  aa = New String[]
  bb = New String[]
  res = modDatabase.$syConn.Exec("select flditemname from tblpatbilling where fldencounterval=&1 and fldsave=&2 and flditemtype=&3", encid, True, "Procedures")                                    ''
  If res.Available Then
    For Each res
      xval = ""
      If res["flditemname"] Then
        aa.Add(res["flditemname"])
        xval = modNonMedical.GetBillingTargeDept(res["flditemname"], "Procedures")
        If xval Then
          If xval = "Major" Then
            bb.Add("1")
          Else If xval = "Minor" Then
            bb.Add("3")
          Else
            bb.Add("2")
          Endif
        Else
          bb.Add("2")
        Endif
      Endif
    Next
  Endif
  If aa.Count Then
    xvar = modString.GetDualTableFormat(aa, bb, ["Name", "Type"])
  Else
    xvar = ""
  Endif
  Return xvar

End

Public Function GetDiscountGradeEIGHT(sDept As String) As String

  Dim xval As String
  Dim discscheme As String

  If sDept Then
    discscheme = GetHMISSettingSource("SocialSecurity", $HMISSocialSecurity, sDept)
    If discscheme Then
      If discscheme = "Helpless/Destitute" Then
        xval = "1"
      Else If discscheme = "Ultra Poor/Poor" Then
        xval = "2"
      Else If discscheme = "Disabled" Then
        xval = "3"
      Else If discscheme = "Sr Citizens" Then
        xval = "4"
      Else If discscheme = "FCHV" Then
        xval = "5"
      Else
        xval = "6"
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Public Function GetCreditExpesnseSelectPackage($conn As Connection, encid As String, sDiscType As String, dtfir As Date, dtlast As Date) As String

  Dim amt As Float
  Dim res As Result
  Dim amt1 As Float
  Dim res1 As Result
  Dim xtot As Float

  res = $conn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as tot from tblpatbilldetail where fldencounterval=&1 and fldbilltype=&2 and fldtime>=&3 and fldtime<=&4 and fldbankname in(select fldacledger from tbldiscount where fldtype=&5)", encid, "Credit", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), sDiscType)
  If res.Available Then
    If res["tot"] Then
      amt = res["tot"]
    Else
      amt = 0
    Endif
  Else
    amt = 0
  Endif

  res1 = $conn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as tot from tbltempbilldetail where fldencounterval=&1 and fldbilltype=&2 and fldtime>=&3 and fldtime<=&4 and fldbankname in(select fldacledger from tbldiscount where fldtype=&5)", encid, "Credit", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), sDiscType)
  If res1.Available Then
    If res1["tot"] Then
      amt1 = res1["tot"]
    Else
      amt1 = 0
    Endif
  Else
    amt1 = 0
  Endif

  xtot = amt + amt1

  Return xtot

End

''================= HMIS Register =======================
Public Function GetUniVariantFormat(sVal As Variant) As Variant[]

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xRowVal = New Collection
  xRowVal.Add(sVal, CStr(0))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function GetANCVisitComment(sLMP As Date, sDate As Date) As String

  Dim xday As Integer
  Dim xxx As String

  xday = DateDiff(sLMP, sDate, gb.Day)
  If xday <= 84 Then
    xxx = "Upto 12 weeks"
  Else If xday >= 112 And If xday < 119 Then
    xxx = "16 weeks"
  Else If xday >= 140 And If xday < 175 Then
    xxx = "20-24 weeks"
  Else If xday >= 196 And If xday < 203 Then
    xxx = "28 weeks"
  Else If xday >= 224 And If xday < 231 Then
    xxx = "32 weeks"
  Else If xday >= 238 And If xday < 245 Then
    xxx = "34 weeks"
  Else If xday >= 252 And If xday < 259 Then
    xxx = "36 weeks"
  Else If xday >= 266 And If xday < 287 Then
    xxx = "38-40 weeks"
  Endif
  Return xxx

End

Public Function GetPNCVisitComment(deltime As Date, sDate As Date) As String

  Dim xday As Integer
  Dim xxx As String

  xday = DateDiff(deltime, sDate, gb.Hour)
  If xday <= 24 Then
    xxx = "Within 24 hour"
  Else If xday >= 72 And If xday < 96 Then
    xxx = "3 days"
  Else If xday >= 168 And If xday < 360 Then
    xxx = "7-14 days"
  Else If xday >= 1008 And If xday < 1032 Then
    xxx = "42 days"
  Endif
  Return xxx

End

''=========== Registers ==================
Public Function GetMasterAgeHMISList() As String[]

  Dim xxx As String[]

  xxx = New String[]
  xxx.Add("0-9 years;0;3650")
  xxx.Add("10-14 years;3650;5475")
  xxx.Add("15-19 years;5475;7300")
  xxx.Add("20-59 years;7300;21900")
  xxx.Add("60-69 years;21900;25550")
  xxx.Add(">=70 years;25550;730000")

  Return xxx

End

Public Sub GetAgeGroupingHMIS() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("0-7 days;0;7")
  xx.Add("8-28 days;8;28")
  xx.Add("29 days-1 year;29;364")
  xx.Add("1-4 years;365;1824")
  xx.Add("5-14 years;1825;5474")
  xx.Add("15-19 years;5475;7299")
  xx.Add("20-29 years;7300;10949")
  xx.Add("30-39 years;10950;14599")
  xx.Add("40-49 years;14600;18249")
  xx.Add("50-59 years;18250;21899")
  xx.Add("60-69 years;21900;25549")
  xx.Add(">= 70 years;25550;730000")
  Return xx

End

Public Sub GetAgeSexGroupingHMIS() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("0-7 days:Female")
  xx.Add("0-7 days:Male")
  xx.Add("8-28 days:Female")
  xx.Add("8-28 days:Male")
  xx.Add("29 days-1 year:Female")
  xx.Add("29 days-1 year:Male")
  xx.Add("1-4 years:Female")
  xx.Add("1-4 years:Male")
  xx.Add("5-14 years:Female")
  xx.Add("5-14 years:Male")
  xx.Add("15-19 years:Female")
  xx.Add("15-19 years:Male")
  xx.Add("20-29 years:Female")
  xx.Add("20-29 years:Male")
  xx.Add("30-39 years:Female")
  xx.Add("30-39 years:Male")
  xx.Add("40-49 years:Female")
  xx.Add("40-49 years:Male")
  xx.Add("50-59 years:Female")
  xx.Add("50-59 years:Male")
  xx.Add("60-69 years:Female")
  xx.Add("60-69 years:Male")
  xx.Add(">= 70 years:Female")
  xx.Add(">= 70 years:Male")

  Return xx

End

Public Function GetOPDMorbidityCodes(sHead As String, sPage As String) As String[]

  Dim sList As String[]
  Dim sTotLst As String[]

  sTotLst = modControlSub.GetDirectFillresultNoNull(modDatabase.$syConn.Exec("select fldcodenew as col from tbldiagnogroup where fldgroupname=&1 and fldformat=&2", sHead, "Diagnosis Groups"))
  If sHead = "Nutritional & Metabolic Disorder" Then
    If sPage = "OPD1" Then
      sList = ["5A01", "5A14", "5B7Z"]
    Else If sPage = "OPD2" Then
      sList = modString.GetRemainingArray(sTotLst, ["5A01", "5A14", "5B7Z"])
    Endif
  Else If sHead = "Mental Health related problems" Then
    If sPage = "OPD4" Then
      sList = ["6B00", "6A00", "8A6Z", "8A80", "6E8Z", "MB24.3", "6C40", "6C4Z"]
    Else If sPage = "OPD3" Then
      sList = modString.GetRemainingArray(sTotLst, ["6B00", "6A00", "8A6Z", "8A80", "6E8Z", "MB24.3", "6C40", "6C4Z"])
    Endif
  Else If sHead = "Orthopaedic Problems" Then
    If sPage = "OPD5" Then
      sList = ["FB55.Z", "ND56.3", "ME84.0", "ME85", "FA8Z", "FA84.Z"]
    Else If sPage = "OPD4" Then
      sList = modString.GetRemainingArray(sTotLst, ["FB55.Z", "ND56.3", "ME84.0", "ME85", "FA8Z", "FA84.Z"])
    Endif
  Endif

  Return sList

End
