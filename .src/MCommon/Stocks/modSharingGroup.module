' Gambas module file

Public $GroupSharePercentData As Collection
Public $GroupShareAmountData As Collection

Private Function GetSharePercentGroupOnly($conn As Connection, SCategory As String, sBillMode As String, sItemName As String, sUserType As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim yy As Variant
  Dim itemid As String

  itemid = SCategory & "@" & sBillMode & "@" & sItemName & "@" & sUserType
  yy = modHelpVariable.GetCollectionValue($GroupSharePercentData, itemid, modBasic.$AppCacheUserShareParameters)
  If yy Then
    xval = CFloat(yy)
  Else
    xval = 0
  Endif
  If Not xval Then
    res = $conn.Exec("select SUM(flditemshare) as flditemshare from tblprocedureshare where fldsharetype=&1 and flditemtype=&2 and fldbillingmode=&3 and flditemname=&4 and fldusertype=&5 and fldactive=&6", "Payable", SCategory, sBillMode, sItemName, sUserType, "Active")
    If res.Available Then
      res.MoveLast
      If res["flditemshare"] Then
        xval = res["flditemshare"]
        If modBasic.$AppCacheUserShareParameters = "Yes" Then
          $GroupSharePercentData.Add(xval, itemid)
        Endif
      Else
        xval = 0
      Endif
    Else
      xval = 0
    Endif
  Endif

  Return xval

End

Private Function GetShareAmountGroupOnly($conn As Connection, SCategory As String, sBillMode As String, sItemName As String, sUserType As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim yy As Variant
  Dim itemid As String

  itemid = SCategory & "@" & sBillMode & "@" & sItemName & "@" & sUserType
  yy = modHelpVariable.GetCollectionValue($GroupShareAmountData, itemid, modBasic.$AppCacheUserShareParameters)
  If yy Then
    xval = CFloat(yy)
  Else
    xval = 0
  Endif
  If Not xval Then
    res = $conn.Exec("select SUM(flditemamt) as flditemamt from tblprocedureshare where fldsharetype=&1 and flditemtype=&2 and fldbillingmode=&3 and flditemname=&4 and fldusertype=&5 and fldactive=&6", "Payable", SCategory, sBillMode, sItemName, sUserType, "Active")
    If res.Available Then
      res.MoveLast
      If res["flditemamt"] Then
        xval = res["flditemamt"]
        If modBasic.$AppCacheUserShareParameters = "Yes" Then
          $GroupShareAmountData.Add(xval, itemid)
        Endif
      Else
        xval = 0
      Endif
    Else
      xval = 0
    Endif
  Endif
  Return xval

End

Private Function GetTaxPercentGroupOnly($conn As Connection, SCategory As String, sBillMode As String, sItemName As String, sUserType As String) As Float

  Dim res As Result
  Dim xval As Float

  res = $conn.Exec("select SUM(flditemtax) as flditemtax from tblprocedureshare where fldsharetype=&1 and flditemtype=&2 and fldbillingmode=&3 and flditemname=&4 and fldusertype=&5 and fldactive=&6", "Payable", SCategory, sBillMode, sItemName, sUserType, "Active")
  If res.Available Then
    res.MoveLast
    If res["flditemtax"] Then
      xval = res["flditemtax"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''--------------- For tblpatgenshare (fldid) --------------------
Public Function GetUserPayPercentGroup(xState As String, $conn As Connection, id As Long) As Float

  Dim res As Result
  Dim res1 As Result
  Dim xval As Float

  xval = 0
  res1 = $conn.Exec("select flditemid,fldshareamt,fldusertype,fldvalue,fldmixper,fldsave from tblpatgenshare where fldid=&1", id)
  If res1.Available Then
    If xState = "Locked" Then
      If res1["fldsave"] = False Then
        xval = res1["fldshareamt"]
      Endif

    Else
      res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", res1["flditemid"])
      If res.Available Then
        xval = (res1["fldmixper"] / 100) * GetSharePercentGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
      Endif
    Endif
  Endif

  Return xval

End

Public Function GetUserPayAmountGroup(xState As String, $conn As Connection, id As Long) As Float

  Dim res As Result
  Dim res1 As Result
  Dim xval As Float

  xval = 0
  res1 = $conn.Exec("select flditemid,fldshareamt,fldusertype,fldvalue,fldmixper,fldsave from tblpatgenshare where fldid=&1", id)
  If res1.Available Then
    If xState = "Locked" Then
      If res1["fldsave"] = False Then
        xval = res1["fldshareamt"]
      Endif

    Else
      res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", res1["flditemid"])
      If res.Available Then
        xval = (res1["fldmixper"] / 100) * GetShareAmountGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
      Endif
    Endif
  Endif

  Return xval

End

Public Function GetUserPayTaxGroup(xState As String, $conn As Connection, id As Long) As Float

  Dim res As Result
  Dim res1 As Result
  Dim xval As Float

  xval = 0
  res1 = $conn.Exec("select flditemid,fldtdsper,fldusertype,fldvalue,fldmixper,fldsave from tblpatgenshare where fldid=&1", id)
  If res1.Available Then
    If xState = "Locked" Then
      If res1["fldsave"] = False Then
        xval = res1["fldtdsper"]
      Endif

    Else
      If modBasic.$PayableTDSMode = "User" Then
        xval = modGeneral.GetStaffTaxPer(res1["fldvalue"])
      Else
        res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", res1["flditemid"])
        If res.Available Then
          xval = GetTaxPercentGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
        Endif
      Endif

    Endif
  Endif

  Return xval

End

''----------------- USES EARNED + CHANGE - TDS ----------------
''get amount based on percent
Public Function GetUserPayOrReferAmtGroup(xState As String, $conn As Connection, id As Long, sFormat As String) As Float

  Dim res As Result
  Dim res1 As Result

  Dim xshareper As Float
  Dim xtaxper As Float
  Dim ushare As Float
  Dim utax As Float
  Dim netot As Float

  netot = 0
  res1 = $conn.Exec("select flditemid,fldsharenet,fldusertype,fldvalue,fldmixper,fldchange,fldsave from tblpatgenshare where fldid=&1", id)
  If res1.Available Then
    If xState = "Locked" Then
      If res1["fldsave"] = False Then
        netot = res1["fldsharenet"]
      Endif

    Else
      If sFormat = "SubTotal" Then
        res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemrate*(flditemqty-fldretqty)) as totl,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", res1["flditemid"])
      Else
        res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemrate*(flditemqty-fldretqty)*(1-flddiscper/100)) as totl,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", res1["flditemid"])
      Endif
      If res.Available Then
        xshareper = (res1["fldmixper"] / 100) * GetSharePercentGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
        If modBasic.$PayableTDSMode = "User" Then
          xtaxper = modGeneral.GetStaffTaxPer(res1["fldvalue"])
        Else
          xtaxper = GetTaxPercentGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
        Endif
        ushare = (res["totl"] * xshareper / 100) + res1["fldchange"]
      Endif
      utax = ushare * xtaxper / 100
      netot = ushare - utax

    Endif
  Endif

  Return netot

End

''get amount based on amount
Public Function GetUserPayOrReferDirectGroup(xState As String, $conn As Connection, id As Long, sFormat As String) As Float

  Dim res As Result
  Dim res1 As Result

  Dim xtaxper As Float
  Dim origshare As Float
  Dim ushare As Float
  Dim utax As Float
  Dim netot As Float

  netot = 0
  res1 = $conn.Exec("select flditemid,fldsharenet,fldusertype,fldvalue,fldmixper,fldchange,fldsave from tblpatgenshare where fldid=&1", id)
  If res1.Available Then
    If xState = "Locked" Then
      If res1["fldsave"] = False Then
        netot = res1["fldsharenet"]
      Endif

    Else
      res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemqty-fldretqty) as xqty,flddiscper,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", res1["flditemid"])
      If res.Available Then
        origshare = res["xqty"] * (res1["fldmixper"] / 100) * GetShareAmountGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
        If sFormat = "SubTotal" Then
          ushare = origshare + res1["fldchange"]
        Else
          ushare = origshare * (1 - (res["flddiscper"] / 100)) + res1["fldchange"]
        Endif
        If modBasic.$PayableTDSMode = "User" Then
          xtaxper = modGeneral.GetStaffTaxPer(res1["fldvalue"])
        Else
          xtaxper = GetTaxPercentGroupOnly($conn, res["flditemtype"], res["fldbillingmode"], res["flditemname"], res1["fldusertype"])
        Endif
      Endif
      utax = ushare * xtaxper / 100
      netot = ushare - utax

    Endif
  Endif

  Return netot

End
