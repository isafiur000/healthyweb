' Gambas module file

Public Function MakeGroupingReport(sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim sList As String[]
  Dim sGroup As String
  Dim sql As String
  Dim res As Result

  $BillingReport = New CReportHTML([("Group"), ("Name")], "", "")
  $BillingReport.UserData.Add(sType, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  If sType = "Ethnic Groups" Then
    sList = modControlSub.GetDirectFillresult(modDatabase.$medConn.Exec("select distinct(fldgroupname) as col from tblethnicgroup"))
  Else ''for all diagnosis formats
    sList = modControlSub.GetDirectFillresult(modDatabase.$medConn.Exec("select distinct(fldgroupname) as col from tbldiagnogroup where fldformat=&1", sType))
  Endif
  For Each sGroup In sList
    $BillingReport.AddSection(sGroup, True)

    If sType = "Ethnic Groups" Then
      sql = "select fldid,fldgroupname as xgroup,flditemname as xitem from tblethnicgroup where fldgroupname=&1 ORDER BY flditemname ASC"
      res = modDatabase.$medConn.Exec(sql, sGroup)
    Else ''for all diagnosis formats
      sql = "select fldid,fldcodenew as xgroup,flditemname as xitem from tbldiagnogroup where fldgroupname=&1 and fldformat=&2"
      res = modDatabase.$medConn.Exec(sql, sGroup, sType)
    Endif
    If res.Available Then
      For Each res
        With asx
          .Add(res["xgroup"])                                                                                              ''
          .Add(res["xitem"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
      With asx
        .Add("****")                                                                                              ''
        .Add("****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next

  Return $BillingReport.NewHTMLPath()

End

Public Function MakeClinicalScaleReport(sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim sTable As String
  Dim sField As String
  Dim xField As String
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim xlist As String[]

  $BillingReport = New CReportHTML([("Examination"), ("Observation")], "", "")
  $BillingReport.UserData.Add("CLINICAL SCALES", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  If sType = "Qualitative Test Components" Then
    sTable = "tblsubtestquali"
    sField = "fldtestid"
    xField = "fldsubtest"
  Else If sType = "Qualitative Exam Components" Then
    sTable = "tblsubexamquali"
    sField = "fldexamid"
    xField = "fldsubexam"
  Else If sType = "Qualitative Radiology Components" Then
    sTable = "tblsubradioquali"
    sField = "fldexamid"
    xField = "fldsubexam"
  Else If sType = "Diagnostic Tests" Then
    sTable = "tbltestoption"
    sField = "fldtestid"
    xField = ""
  Else If sType = "Clinical Examination" Then
    sTable = "tblexamoption"
    sField = "fldexamid"
    xField = ""
  Else If sType = "Radio Diagnostics" Then
    sTable = "tblradiooption"
    sField = "fldexamid"
    xField = ""
  Endif
  res = modDatabase.$medConn.Exec(Subst("select distinct(&1) as col from &2", sField, sTable) & " where fldanswertype=&1", "Clinical Scale")
  If res.Available Then
    For Each res
      $BillingReport.AddSection(res["col"], True)
      res1 = modDatabase.$medConn.Exec(Subst("select distinct(fldscalegroup) as col from &1 where &2", sTable, sField) & "=&1 and fldanswertype=&2", res["col"], "Clinical Scale")
      If res1.Available Then
        For Each res1

          xlist = New String[]
          res2 = modDatabase.$medConn.Exec(Subst("select fldanswer,fldscale from &1 where &2", sTable, sField) & "=&1 and fldanswertype=&2 and fldscalegroup=&3", res["col"], "Clinical Scale", res1["col"])
          For Each res2
            xlist.Add(res2!fldanswer & " [" & CStr(res2!fldscale) & "]")
          Next

          With asx
            .Add(res1["col"])                                                                                              ''
            .Add(xlist.Join(gb.NewLine))
          End With
          $BillingReport.Add(asx)
          asx.Clear()

        Next
      Endif
    Next
  Endif

  Return $BillingReport.NewHTMLPath()

End

Public Function ShowFoodGroupListHTML() As String

  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim asx As New String[0]

  $BillingReport = New CReportHTML([("Particulars"), ("Type"), ("Source"), ("Amount<br>(gm)")], "", "")
  $BillingReport.UserData.Add("REPORT GROUPS", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  res = modDatabase.$medConn.Exec("select distinct(fldgroup) from tblfoodgroup ORDER BY fldgroup ASC")                                                                                        ''
  For Each res
    $BillingReport.AddSection(res!fldgroup, True)

    res1 = modDatabase.$medConn.Exec("select fldid,flditemname,flditemamt from tblfoodgroup where fldgroup=&1 ORDER BY flditemname ASC", res!fldgroup)
    For Each res1
      res2 = modDatabase.$medConn.Exec("select fldfood,fldsource,fldformat from tblfoodcontent where fldfoodid=&1", res1!flditemname)
      With asx
        .Add(res2!fldfood)
        .Add(res2!fldformat)
        .Add(res2!fldsource)
        .Add(res1!flditemamt)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  Return $BillingReport.NewHTMLPath()

End

Public Function ShowTriageSettings(sComp As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res As Result
  Dim TypeList As String[] = ["Symptom", "Exam", "Test"]
  Dim colorList As String[] = ["Red", "Yellow", "Green", "Blue", "Black"]
  Dim xtype As String
  Dim xcolor As String

  $BillingReport = New CReportHTML([("Variable"), ("Relation"), ("Value"), ("Unit")], "", "")
  $BillingReport.UserData.Add("TRIAGE PARAMETERS : " & sComp, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  For Each xcolor In colorList
    $BillingReport.AddSection(xcolor, True)

    For Each xtype In TypeList
      res = modDatabase.$medConn.Exec("select fldchild,fldrelation,fldvalquali,flddiagnounit from tbltriage where flddiagnotype=&1 and fldparent like &2 and fldcomp like &3", xtype, xcolor, sComp)
      If res.Available Then
        $BillingReport.AddChapter(xtype)
        For Each res
          With asx
            .Add(res!fldchild)
            .Add(res!fldrelation)
            .Add(res!fldvalquali)
            .Add(res!flddiagnounit)
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Next
        With asx
          .Add("")
          .Add("")
          .Add("")
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
    Next

    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  Return $BillingReport.NewHTMLPath()

End
