' Gambas class file

''controls
Private aWebFrame As New Object[50]
Private aWebPanel As New Object[50]
Private aIndexLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aDelButton As New Object[50]
Private aContLeft As New Object[50]
Private aMidLine As New Object[50]
Private aContRight As New Object[50]

Private aComboBoxR As New Object[50]
Private aInterSpaceR As New Object[50]
Private aDichoValueR As New Object[50]
Private aHTMLTextR As New Object[50]
Private aLineTextR As New Object[50]
Private aUnitTextR As New Object[50]
Private aValueBoxR As New Object[50]
Private aNullCheckR As New Object[50]
Private aClinBoxR As New Object[50]
Private aTextAreaR As New Object[50]
Private aDateBoxR As New Object[50]
Private aBSDateR As New Object[50]
Private aGenTextAreaR As New Object[50]
Private aLimitLabelR As New Object[50]
Private aCalcBoxR As New Object[50]
Private aCalcUnitR As New Object[50]
Private aCalcNullR As New Object[50]
Private aCalcLimitR As New Object[50]
Private aButtonBoxR As New Object[50]
Private aHelpButtonR As New Object[50]

Private aComboBoxL As New Object[50]
Private aInterSpaceL As New Object[50]
Private aDichoValueL As New Object[50]
Private aHTMLTextL As New Object[50]
Private aLineTextL As New Object[50]
Private aUnitTextL As New Object[50]
Private aValueBoxL As New Object[50]
Private aNullCheckL As New Object[50]
Private aClinBoxL As New Object[50]
Private aTextAreaL As New Object[50]
Private aDateBoxL As New Object[50]
Private aBSDateL As New Object[50]
Private aGenTextAreaL As New Object[50]
Private aLimitLabelL As New Object[50]
Private aCalcBoxL As New Object[50]
Private aCalcUnitL As New Object[50]
Private aCalcNullL As New Object[50]
Private aCalcLimitL As New Object[50]
Private aButtonBoxL As New Object[50]
Private aHelpButtonL As New Object[50]

Private aBlankBox As New Object[50]
Private aWebSpace As New Object[50]
''other variables
Private $frm As String
Private $id As Long
Private AppFactor As Float
''lists
Private $xData As Variant[]
Private $sYear As String
Private $encid As String

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String
Private $FocusTag As Integer
Private $FocusSide As String

''----------------------------------------- create controls -----------------------------------------
Public Sub _new(id As Long, frm As String, strExam As String, xData As Variant[], xnote As String, sYear As String)

  Dim ht As String

  $id = id
  $frm = frm
  lblitem.Text = strExam
  $xData = xData
  $sYear = sYear

  If xnote Then
    lblnote.Text = xnote
  Else
    lblnote.Visible = False
  Endif

  ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
  If ht Then
    Slider1.Value = CInt(ht)
  Else
    Slider1.Value = 3
  Endif
  AppFactor = modBasic.$AppScaleFactor
  LoadTableNames()
  $encid = modMedReports.GetPatientEncFromID($tblpatlabtest, $id)
  CreateControls()

End

Private Sub LoadTableNames()

  Dim res As Result

  If $sYear = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", $sYear, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif

End

Private Sub CreateControls()

  Dim i As Integer

  For i = 0 To $xData.Count - 1
    If i < 49 Then
      aWebFrame[i] = New WebHBox(Frame1)
      aIndexLabel[i] = New WebLabel(aWebFrame[i]) As "IndexLabel"
      aNameLabel[i] = New WebHtml(aWebFrame[i]) As "NameLabel"

      aWebPanel[i] = New WebHBox(Frame1)
      Select $xData[i][3]
        Case "Drug Sensitivity", "WHO Sensitivity"
          aDelButton[i] = New WebButton(aWebPanel[i]) As "DeleteButton"
        Case Else
          aAbnormCheck[i] = New WebCheckBox(aWebPanel[i]) As "CheckBoxgroup"
      End Select
      aContRight[i] = New WebHBox(aWebPanel[i])
      aMidLine[i] = New WebLabel(aWebPanel[i])
      aContLeft[i] = New WebHBox(aWebPanel[i])
      Select $xData[i][3]
        Case "Date Time", "BS Date"
          ''Right
          aDateBoxR[i] = New WebDateBox(aContRight[i]) As "DateGroupR"
          aBSDateR[i] = New WebButton(aContRight[i]) As "BSButtonR"
          ''Left
          aDateBoxL[i] = New WebDateBox(aContLeft[i]) As "DateGroupL"
          aBSDateL[i] = New WebButton(aContLeft[i]) As "BSButtonL"
        Case "User Profile"
        Case "ImageValue"
          ''Right
          aButtonBoxR[i] = New WebButtonBox(aContRight[i]) As "ImageBoxGroupR"
          ''Left
          aButtonBoxL[i] = New WebButtonBox(aContLeft[i]) As "ImageBoxGroupL"
        Case "Calculated"
          ''Right
          aCalcBoxR[i] = New WebValueBox(aContRight[i]) As "CalcGroupR"
          aCalcUnitR[i] = New WebTextBox(aContRight[i]) As "CalcUnitGroupR"
          aCalcNullR[i] = New WebCheckBox(aContRight[i]) As "CalcCheckBoxR"
          aCalcLimitR[i] = New WebLabel(aContRight[i])
          ''Left
          aCalcBoxL[i] = New WebValueBox(aContLeft[i]) As "CalcGroupL"
          aCalcUnitL[i] = New WebTextBox(aContLeft[i]) As "CalcUnitGroupL"
          aCalcNullL[i] = New WebCheckBox(aContLeft[i]) As "CalcCheckBoxL"
          aCalcLimitL[i] = New WebLabel(aContLeft[i])
        Case "Quantitative", "Percent Sum"
          ''Right
          aValueBoxR[i] = New WebValueBox(aContRight[i]) As "ValueGroupR"
          aUnitTextR[i] = New WebTextBox(aContRight[i]) As "UnitGroupR"
          aNullCheckR[i] = New WebCheckBox(aContRight[i]) As "NullCheckBoxR"
          aLimitLabelR[i] = New WebLabel(aContRight[i])
          ''Left
          aValueBoxL[i] = New WebValueBox(aContLeft[i]) As "ValueGroupL"
          aUnitTextL[i] = New WebTextBox(aContLeft[i]) As "UnitGroupL"
          aNullCheckL[i] = New WebCheckBox(aContLeft[i]) As "NullCheckBoxL"
          aLimitLabelL[i] = New WebLabel(aContLeft[i])
        Case "Clinical Scale"
          ''Right
          aTextAreaR[i] = New WebTextArea(aContRight[i]) As "TextAreaGroupR"
          aClinBoxR[i] = New WebValueBox(aContRight[i]) As "ClinGroupR"
          ''Left
          aTextAreaL[i] = New WebTextArea(aContLeft[i]) As "TextAreaGroupL"
          aClinBoxL[i] = New WebValueBox(aContLeft[i]) As "ClinGroupL"
        Case "Qualitative"
          ''Right
          aLineTextR[i] = New WebTextBox(aContRight[i]) As "TextLineGroupR"
          aLimitLabelR[i] = New WebLabel(aContRight[i])
          ''Left
          aLineTextL[i] = New WebTextBox(aContLeft[i]) As "TextLineGroupL"
          aLimitLabelL[i] = New WebLabel(aContLeft[i])
        Case "Single Selection"
          ''Right
          aComboBoxR[i] = New WebComboBox(aContRight[i]) As "ComboGroupR"
          aInterSpaceR[i] = New WebContainer(aContRight[i])
          ''Left
          aComboBoxL[i] = New WebComboBox(aContLeft[i]) As "ComboGroupL"
          aInterSpaceL[i] = New WebContainer(aContLeft[i])
        Case "Dichotomous"
          ''Right
          aDichoValueR[i] = New DichotomousValue(aContRight[i]) As "DichoTextR"
          aInterSpaceR[i] = New WebContainer(aContRight[i])
          ''Left
          aDichoValueL[i] = New DichotomousValue(aContLeft[i]) As "DichoTextL"
          aInterSpaceL[i] = New WebContainer(aContLeft[i])
        Case "RichText Area"
          ''Right
          aHTMLTextR[i] = New WebTextHTML(aContRight[i]) As "TextHTMLgroupR"
          ''Left
          aHTMLTextL[i] = New WebTextHTML(aContLeft[i]) As "TextHTMLgroupL"
        Case "Label Only"
          ''Right
          aLineTextR[i] = New WebTextBox(aContRight[i]) As "LabelOnlygroupR"
          ''Left
          aLineTextL[i] = New WebTextBox(aContLeft[i]) As "LabelOnlygroupL"
        Case Else
          ''Right
          aGenTextAreaR[i] = New WebTextArea(aContRight[i]) As "GenAreaGroupR"
          ''Left
          aGenTextAreaL[i] = New WebTextArea(aContLeft[i]) As "GenAreaGroupL"
      End Select
      aHelpButtonR[i] = New WebButton(aContRight[i]) As "ButtonBoxgroupR"
      aHelpButtonL[i] = New WebButton(aContLeft[i]) As "ButtonBoxgroupL"
      aBlankBox[i] = New WebLabel(aWebPanel[i])
      aWebSpace[i] = New WebSeparator(Frame1)
    Endif
  Next
  DIsplayTextForm()

End

Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim asx As String[]
  Dim bsx As String[]
  Dim aColl As Collection

  For i = 0 To $xData.Count - 1
    If i < 49 Then

      With aWebFrame[i]
        .Class = "less-container-margin"
      End With

      ''create index label
      With aIndexLabel[i]
        .Width = "2em"
        .Height = "2em"
        .Text = i + 1
        .Visible = False
        .Tag = i
      End With

      ''create Name Label
      With aNameLabel[i]
        .Font = "bold"
        If $xData[i][3] = "Label Only" Then
          .Text = UCase($xData[i][0])
        Else
          .Text = "<p>" & $xData[i][0] & "</p>"
        Endif
        .Tag = i
      End With

      If $xData[i][3] = "Label Only" Then
        With aWebPanel[i]
          .Visible = False
        End With
      Else
        With aWebPanel[i]
          .Class = "less-container-margin"
        End With
      Endif

      ''create abnormal checkbox
      If $xData[i][3] = "Drug Sensitivity" Or If $xData[i][3] = "WHO Sensitivity" Then
        With aDelButton[i]
          .Width = "4em"
          .Height = "2em"
          .Text = "Del"
          .Image = "icon:/small/cancel"
          .Tag = i
        End With
      Else If $xData[i][3] = "Label Only" Then
      Else
        With aAbnormCheck[i]
          .Width = "4em"
          .Height = "2em"
          .Text = "Abn"
          .Value = $xData[i][4]
          If .Value = True Then
            .Foreground = Color.Red
          Else
            .Foreground = Color.Default
          Endif
          .Tag = i
        End With
      Endif

      With aContRight[i]
        .Expand = True
        .Margin = True
      End With

      With aMidLine[i]
        .Width = "4em"
      End With

      With aContLeft[i]
        .Expand = True
        .Margin = True
      End With

      ''create observation entry
      aColl = New Collection
      If $xData[i][1] Then
        aColl = JSON.Decode($xData[i][1])
      Else
        aColl = JSON.Decode(modString.GetLefRightJSON("", ""))
      Endif
      If $xData[i][3] = "Date Time" Then
        ''Right
        With aDateBoxR[i]
          .Width = "12em"
          .Height = "2em"
          .Border = True
          .DateTime = True
          .Tag = i
          .Value = Val(aColl["RIGHT"])
        End With
        With aBSDateR[i]
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/calendar"
          .Tag = i
        End With
        ''Left
        With aDateBoxL[i]
          .Width = "12em"
          .Height = "2em"
          .Border = True
          .DateTime = True
          .Tag = i
          .Value = Val(aColl["LEFT"])
        End With
        With aBSDateL[i]
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/calendar"
          .Tag = i
        End With

      Else If $xData[i][3] = "BS Date" Then
        ''Right
        With aDateBoxR[i]
          .Width = "12em"
          .Height = "2em"
          .Border = True
          .DateTime = True
          .Tag = i
          .Value = modDate.ConvertToEngFullDateTime(aColl["RIGHT"])
        End With
        With aBSDateR[i]
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/calendar"
          .Tag = i
        End With
        ''Left
        With aDateBoxL[i]
          .Width = "12em"
          .Height = "2em"
          .Border = True
          .DateTime = True
          .Tag = i
          .Value = modDate.ConvertToEngFullDateTime(aColl["LEFT"])
        End With
        With aBSDateL[i]
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/calendar"
          .Tag = i
        End With

      Else If $xData[i][3] = "User Profile" Then
      Else If $xData[i][3] = "ImageValue" Then
        ''Right
        With aButtonBoxR[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = ""
          .Tag = i
        End With
        ''Left
        With aButtonBoxL[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = ""
          .Tag = i
        End With

      Else If $xData[i][3] = "Calculated" Then
        ''Right
        If aColl["RIGHT"] Then
          asx = modString.SplitValueText(aColl["RIGHT"])
        Else
          asx = ["", ""]
        Endif
        With aCalcBoxR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          If asx[0] Then
            .Value = CFloat(asx[0])
          Endif
        End With
        With aCalcUnitR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Text = asx[1]
        End With
        With aCalcNullR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Value = False
          .Text = "Null"
        End With
        With aCalcLimitR[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = modFixLab.GetSubLatTestQualiReference(lblitem.Text, $xData[i][0])
          .Tag = i
        End With
        ''Left
        If aColl["LEFT"] Then
          bsx = modString.SplitValueText(aColl["LEFT"])
        Else
          bsx = ["", ""]
        Endif
        With aCalcBoxL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          If bsx[0] Then
            .Value = CFloat(bsx[0])
          Endif
        End With
        With aCalcUnitL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Text = bsx[1]
        End With
        With aCalcNullL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Value = False
          .Text = "Null"
        End With
        With aCalcLimitL[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = modFixLab.GetSubLatTestQualiReference(lblitem.Text, $xData[i][0])
          .Tag = i
        End With

      Else If $xData[i][3] = "Quantitative" Or If $xData[i][3] = "Percent Sum" Then
        ''Right
        If aColl["RIGHT"] Then
          asx = modString.SplitValueText(aColl["RIGHT"])
        Else
          asx = ["", ""]
        Endif
        With aValueBoxR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          If asx[0] And If IsNumber(asx[0]) Then
            .Value = CFloat(asx[0])
          Endif
        End With
        With aUnitTextR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Text = asx[1]
        End With
        With aNullCheckR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Value = False
          .Text = "Null"
        End With
        With aLimitLabelR[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = modFixLab.GetSubLatTestQualiReference(lblitem.Text, $xData[i][0])
          .Tag = i
        End With
        ''Left
        If aColl["LEFT"] Then
          bsx = modString.SplitValueText(aColl["LEFT"])
        Else
          bsx = ["", ""]
        Endif
        With aValueBoxL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          If bsx[0] And If IsNumber(bsx[0]) Then
            .Value = CFloat(bsx[0])
          Endif
        End With
        With aUnitTextL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Text = bsx[1]
        End With
        With aNullCheckL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
          .Value = False
          .Text = "Null"
        End With
        With aLimitLabelL[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = modFixLab.GetSubLatTestQualiReference(lblitem.Text, $xData[i][0])
          .Tag = i
        End With

      Else If $xData[i][3] = "Clinical Scale" Then
        ''Right
        With aTextAreaR[i]
          .Expand = True
          .Height = CStr(2 * Slider1.Value) & "em"
          .Border = True
          .Tag = i
        End With
        With aClinBoxR[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
        End With
        ''Left
        With aTextAreaL[i]
          .Expand = True
          .Height = CStr(2 * Slider1.Value) & "em"
          .Border = True
          .Tag = i
        End With
        With aClinBoxL[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Tag = i
        End With

      Else If $xData[i][3] = "Qualitative" Then
        ''Right
        With aLineTextR[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = aColl["RIGHT"]
          .Tag = i
        End With
        With aLimitLabelR[i]
          .Width = "25%"
          .Height = "2em"
          .Border = True
          .Text = modFixLab.GetSubLatTestQualiReference(lblitem.Text, $xData[i][0])
          .Tag = i
        End With
        ''Left
        With aLineTextL[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = aColl["LEFT"]
          .Tag = i
        End With
        With aLimitLabelL[i]
          .Width = "25%"
          .Height = "2em"
          .Border = True
          .Text = modFixLab.GetSubLatTestQualiReference(lblitem.Text, $xData[i][0])
          .Tag = i
        End With

      Else If $xData[i][3] = "Single Selection" Then
        ''Right
        With aComboBoxR[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .ReadOnly = False
          .List = GetListForControl($xData[i][0], $xData[i][3])
          .Text = aColl["RIGHT"]
          .Tag = i
        End With
        With aInterSpaceR[i]
          .Width = "10%"
          .Height = "2em"
          .Tag = i
        End With
        ''Left
        With aComboBoxL[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .ReadOnly = False
          .List = GetListForControl($xData[i][0], $xData[i][3])
          .Text = aColl["LEFT"]
          .Tag = i
        End With
        With aInterSpaceL[i]
          .Width = "10%"
          .Height = "2em"
          .Tag = i
        End With

      Else If $xData[i][3] = "Dichotomous" Then
        ''Right
        With aDichoValueR[i]
          .Expand = True
          .Height = "2em"
          .List = GetListForControl($xData[i][0], $xData[i][3])
          .Value = aColl["RIGHT"]
          .Tag = i
        End With
        With aInterSpaceR[i]
          .Width = "10%"
          .Height = "2em"
          .Tag = i
        End With
        ''Left
        With aDichoValueL[i]
          .Expand = True
          .Height = "2em"
          .List = GetListForControl($xData[i][0], $xData[i][3])
          .Value = aColl["LEFT"]
          .Tag = i
        End With
        With aInterSpaceL[i]
          .Width = "10%"
          .Height = "2em"
          .Tag = i
        End With

      Else If $xData[i][3] = "RichText Area" Then
        ''Right
        With aHTMLTextR[i]
          .Expand = True
          .Height = CStr(2 * Slider1.Value) & "em"
          .Border = True
          .RichText = aColl["RIGHT"]
          ' .DictionaryPath = modBasic.$dictPathList
          .Tag = i
        End With
        ''Left
        With aHTMLTextL[i]
          .Expand = True
          .Height = CStr(2 * Slider1.Value) & "em"
          .Border = True
          .RichText = aColl["LEFT"]
          ' .DictionaryPath = modBasic.$dictPathList
          .Tag = i
        End With

      Else If $xData[i][3] = "Label Only" Then
        ''Right
        With aLineTextR[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = ""
          .Tag = i
        End With
        ''Left
        With aLineTextL[i]
          .Expand = True
          .Height = "2em"
          .Border = True
          .Text = ""
          .Tag = i
        End With

      Else
        ''Right
        With aGenTextAreaR[i]
          .Expand = True
          .Height = 25 * Slider1.Value * AppFactor
          .Text = aColl["RIGHT"]
          ' .DictionaryPath = modBasic.$dictPathList
          .Tag = i
        End With
        ''Left
        With aGenTextAreaL[i]
          .Expand = True
          .Height = 25 * Slider1.Value * AppFactor
          .Text = aColl["LEFT"]
          ' .DictionaryPath = modBasic.$dictPathList
          .Tag = i
        End With

      Endif

      ''create help button
      ''Right
      With aHelpButtonR[i]
        .Class = "toolButton"
        .Width = "2em"
        .Height = "2em"
        .Text = ""
        .Image = "icon:/small/info"
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With
      ''Left
      With aHelpButtonL[i]
        .Class = "toolButton"
        .Width = "2em"
        .Height = "2em"
        .Text = ""
        .Image = "icon:/small/info"
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With

      With aBlankBox[i]
        .Width = "1em"
        .Height = "2em"
      End With

      With aWebSpace[i]
        .Height = "1em"
      End With

    Endif
  Next

End

Private Function GetListForControl(sItem As String, sSelection As String) As String[]

  Dim xList As String[]

  xList = modAllExam.SelectSubExamOptionList($frm, lblitem.Text, sItem, sSelection)

  Return xList

End

Public Sub CheckBoxgroup_Click()

  Dim j As Integer

  j = Last.Tag
  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Public Sub DeleteButton_Click()

  Dim j As Integer

  j = Last.Tag
  modDatabase.$myConn.Delete($tblpatlabsubtest, "fldid=&1", $xData[j][2])
  Wait
  Me.Close()

End

''Right
Public Sub BSButtonR_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBoxR[j].Value))
  If xx Then
    aDateBoxR[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

''Left
Public Sub BSButtonL_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBoxL[j].Value))
  If xx Then
    aDateBoxL[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnrefresh_Click()

  modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
  DIsplayTextForm()

End

Public Sub Form_Resize()

  DIsplayTextForm()

End

Public Sub btnclose_Click()

  Me.Close()

End

Public Sub btnBrOK_Click()

  Dim i As Integer
  Dim xval As Float
  Dim yval As Float

  xval = 0
  yval = 0
  For i = 0 To $xData.Count - 1
    If $xData[i][3] = "Percent Sum" Then
      xval = xval + aValueBoxR[i].Value
      yval = yval + aValueBoxL[i].Value
    Endif
  Next
  If xval = 0 And If yval = 0 Then
    SaveEntryData()
  Else
    If xval = 100 And If yval = 100 Then
      SaveEntryData()
    Else
      If Message.Question(("Percent Values Sum not equal to 100. Do you want to proceed?"), ("No"), ("Yes")) = 2 Then
        SaveEntryData()
      Endif
    Endif
  Endif

End

Private Sub SaveEntryData()

  If $frm = "Test" Then
    FillLabTestSubTest()
  Else If $frm = "Exam" Then
    FillExamSubExam()
  Else If $frm = "Radio" Then
    FillRadioTestSubTest()
  Endif
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Private Function GetJsonTwin(sRight As String, sLeft As String) As String

  Dim xx As String

  xx = modString.GetLefRightJSON(sLeft, sRight)
  Return xx

End

''for examination
Private Sub FillExamSubExam()

  Dim i As Integer
  Dim res As Result

  For i = 0 To $xData.Count - 1
    If i < 49 Then
      If $xData[i][0] = "Final Impression" Then
        If aHTMLTextR[i] Or If aHTMLTextL[i] Then
          modClinSub.UpdateQualiData($id, GetJsonTwin(aHTMLTextR[i].RichText, aHTMLTextL[i].RichText), aAbnormCheck[i].Value, "")
        Else If aGenTextAreaR[i] Or If aGenTextAreaL[i] Then
          modClinSub.UpdateQualiData($id, GetJsonTwin(aGenTextAreaR[i].Text, aGenTextAreaL[i].Text), aAbnormCheck[i].Value, "")
        Endif

      Else
        If $xData[i][3] = "Date Time" Then
          If aDateBoxR[i].Value Or If aDateBoxL[i].Value Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(modDate.DateStringForExam(aDateBoxR[i].Value), modDate.DateStringForExam(aDateBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "BS Date" Then
          If aDateBoxR[i].Value Or If aDateBoxL[i].Value Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(modDate.ConvertToLocaldate(aDateBoxR[i].Value), modDate.ConvertToLocaldate(aDateBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "User Profile" Then
        Else If $xData[i][3] = "ImageValue" Then
          If aButtonBoxR[i].Text Or If aButtonBoxL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then

            Endif
          Endif
        Else If $xData[i][3] = "Calculated" Then
          If (aCalcBoxR[i].Value Or aCalcNullR[i].Value) Or If (aCalcBoxL[i].Value Or aCalcNullL[i].Value) Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aCalcBoxR[i].Value) & Space(1) & aCalcUnitR[i].Text, CStr(aCalcBoxL[i].Value) & Space(1) & aCalcUnitL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Quantitative" Or If $xData[i][3] = "Percent Sum" Then
          If (aValueBoxR[i].Value Or aNullCheckR[i].Value) Or If (aValueBoxL[i].Value Or aNullCheckL[i].Value) Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aValueBoxR[i].Value) & Space(1) & aUnitTextR[i].Text, CStr(aValueBoxL[i].Value) & Space(1) & aUnitTextL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Clinical Scale" Then
          If aTextAreaR[i].Text Or If aTextAreaL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aClinBoxR[i].Value), CStr(aClinBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Qualitative" Then
          If Len(Trim(aLineTextR[i].Text)) Or If Len(Trim(aLineTextL[i].Text)) Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aLineTextR[i].Text, aLineTextL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Single Selection" Then
          If aComboBoxR[i].Text Or If aComboBoxL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aComboBoxR[i].Text, aComboBoxL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Dichotomous" Then
          If aDichoValueR[i].Value Or If aDichoValueL[i].Value Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aDichoValueR[i].Value, aDichoValueL[i].Value)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "RichText Area" Then
          If aHTMLTextR[i].Text Or If aHTMLTextL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aHTMLTextR[i].RichText, aHTMLTextL[i].RichText)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["fldfilepath"] = ""
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Label Only" Then
          res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
          If res.Available Then
            res["fldreport"] = ""
            res["fldsave"] = True
            res["fldabnormal"] = False
            res["flduserid"] = ""
            res["fldtime"] = ""
            res["xyz"] = False
            res.Update()
          Endif
        Else
          If Len(Trim(aGenTextAreaR[i].Text)) Or If Len(Trim(aGenTextAreaL[i].Text)) Then
            res = modDatabase.$myConn.Edit("tblpatientsubexam", "fldsubtexam=&1 and fldheadid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aGenTextAreaR[i].Text, aGenTextAreaL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["fldfilepath"] = ""
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Endif
      Endif
    Endif
  Next

End

''for lab tests
Private Sub FillLabTestSubTest()

  Dim i As Integer
  Dim res As Result

  For i = 0 To $xData.Count - 1
    If i < 49 Then
      If $xData[i][0] = "Final Impression" Then
        If aHTMLTextR[i] Or If aHTMLTextL[i] Then
          modLabSub.UpdateLabTestReportQuali($id, GetJsonTwin(aHTMLTextR[i].RichText, aHTMLTextL[i].RichText), aAbnormCheck[i].Value, "", $tblpatlabtest)
        Else If aGenTextAreaR[i] Or aGenTextAreaL[i] Then
          modLabSub.UpdateLabTestReportQuali($id, GetJsonTwin(aGenTextAreaR[i].Text, aGenTextAreaL[i].Text), aAbnormCheck[i].Value, "", $tblpatlabtest)
        Endif

      Else
        If $xData[i][3] = "Date Time" Then
          If aDateBoxR[i].Value Or If aDateBoxL[i].Value Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(modDate.DateStringForExam(aDateBoxR[i].Value), modDate.DateStringForExam(aDateBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "BS Date" Then
          If aDateBoxR[i].Value Or If aDateBoxL[i].Value Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(modDate.ConvertToLocaldate(aDateBoxR[i].Value), modDate.ConvertToLocaldate(aDateBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "User Profile" Then
        Else If $xData[i][3] = "ImageValue" Then
          If aButtonBoxR[i].Text Or If aButtonBoxL[i].Text Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then

            Endif
          Endif
        Else If $xData[i][3] = "Calculated" Then
          If (aCalcBoxR[i].Value Or aCalcNullR[i].Value) Or If (aCalcBoxL[i].Value Or aCalcNullL[i].Value) Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aCalcBoxR[i].Value) & Space(1) & aCalcUnitR[i].Text, CStr(aCalcBoxL[i].Value) & Space(1) & aCalcUnitL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Quantitative" Or If $xData[i][3] = "Percent Sum" Then
          If (aValueBoxR[i].Value Or aNullCheckR[i].Value) Or If (aValueBoxL[i].Value Or aNullCheckL[i].Value) Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aValueBoxR[i].Value) & Space(1) & aUnitTextR[i].Text, CStr(aValueBoxL[i].Value) & Space(1) & aUnitTextL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Clinical Scale" Then
          If aTextAreaR[i].Text Or If aTextAreaL[i].Text Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aClinBoxR[i].Value), CStr(aClinBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Qualitative" Then
          If Len(Trim(aLineTextR[i].Text)) Or If Len(Trim(aLineTextL[i].Text)) Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aLineTextR[i].Text, aLineTextL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Single Selection" Then
          If aComboBoxR[i].Text Or If aComboBoxL[i].Text Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aComboBoxR[i].Text, aComboBoxL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Dichotomous" Then
          If aDichoValueR[i].Value Or If aDichoValueL[i].Value Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aDichoValueR[i].Value, aDichoValueL[i].Value)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "RichText Area" Then
          If aHTMLTextR[i].Text Or If aHTMLTextL[i].Text Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aHTMLTextR[i].RichText, aHTMLTextL[i].RichText)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["fldfilepath"] = ""
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Label Only" Then
          res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
          If res.Available Then
            res["fldreport"] = ""
            res["fldsave"] = True
            res["fldabnormal"] = False
            res["flduserid"] = ""
            res["fldtime"] = ""
            res["xyz"] = False
            res.Update()
          Endif
        Else
          If Len(Trim(aGenTextAreaR[i].Text)) Or If Len(Trim(aGenTextAreaL[i].Text)) Then
            res = modDatabase.$myConn.Edit($tblpatlabsubtest, "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aGenTextAreaR[i].Text, aGenTextAreaL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["fldfilepath"] = ""
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Endif
      Endif
    Endif
  Next

End

''for radio tests
Private Sub FillRadioTestSubTest()

  Dim i As Integer
  Dim res As Result

  For i = 0 To $xData.Count - 1
    If i < 49 Then
      If $xData[i][0] = "Final Impression" Then
        If aHTMLTextR[i] Or If aHTMLTextL[i] Then
          modRadioSub.UpdateRadioTestReportQuali($id, GetJsonTwin(aHTMLTextR[i].RichText, aHTMLTextL[i].RichText), aAbnormCheck[i].Value, "")
        Else If aGenTextAreaR[i] Or If aGenTextAreaL[i] Then
          modRadioSub.UpdateRadioTestReportQuali($id, GetJsonTwin(aGenTextAreaR[i].Text, aGenTextAreaL[i].Text), aAbnormCheck[i].Value, "")
        Endif

      Else
        If $xData[i][3] = "Date Time" Then
          If aDateBoxR[i].Value Or If aDateBoxL[i].Value Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(modDate.DateStringForExam(aDateBoxR[i].Value), modDate.DateStringForExam(aDateBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "BS Date" Then
          If aDateBoxR[i].Value Or If aDateBoxL[i].Value Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(modDate.ConvertToLocaldate(aDateBoxR[i].Value), modDate.ConvertToLocaldate(aDateBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "User Profile" Then
        Else If $xData[i][3] = "ImageValue" Then
          If aButtonBoxR[i].Text Or If aButtonBoxL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then

            Endif
          Endif
        Else If $xData[i][3] = "Calculated" Then
          If (aCalcBoxR[i].Value Or aCalcNullR[i].Value) Or If (aCalcBoxL[i].Value Or aCalcNullL[i].Value) Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aCalcBoxR[i].Value) & Space(1) & aCalcUnitR[i].Text, CStr(aCalcBoxL[i].Value) & Space(1) & aCalcUnitL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Quantitative" Or If $xData[i][3] = "Percent Sum" Then
          If (aValueBoxR[i].Value Or aNullCheckR[i].Value) Or If (aValueBoxL[i].Value Or aNullCheckL[i].Value) Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aValueBoxR[i].Value) & Space(1) & aUnitTextR[i].Text, CStr(aValueBoxL[i].Value) & Space(1) & aUnitTextL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Clinical Scale" Then
          If aTextAreaR[i].Text Or If aTextAreaL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(CStr(aClinBoxR[i].Value), CStr(aClinBoxL[i].Value))
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Qualitative" Then
          If Len(Trim(aLineTextR[i].Text)) Or If Len(Trim(aLineTextL[i].Text)) Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aLineTextR[i].Text, aLineTextL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Single Selection" Then
          If aComboBoxR[i].Text Or If aComboBoxL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aComboBoxR[i].Text, aComboBoxL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Dichotomous" Then
          If aDichoValueR[i].Value Or If aDichoValueL[i].Value Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aDichoValueR[i].Value, aDichoValueL[i].Value)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "RichText Area" Then
          If aHTMLTextR[i].Text Or If aHTMLTextL[i].Text Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aHTMLTextR[i].RichText, aHTMLTextL[i].RichText)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["fldfilepath"] = ""
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Else If $xData[i][3] = "Label Only" Then
          res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
          If res.Available Then
            res["fldreport"] = ""
            res["fldsave"] = True
            res["fldabnormal"] = False
            res["flduserid"] = ""
            res["fldtime"] = ""
            res["xyz"] = False
            res.Update()
          Endif
        Else
          If Len(Trim(aGenTextAreaR[i].Text)) Or If Len(Trim(aGenTextAreaL[i].Text)) Then
            res = modDatabase.$myConn.Edit("tblpatradiosubtest", "fldsubtest=&1 and fldtestid=&2", $xData[i][0], $id)
            If res.Available Then
              res["fldreport"] = GetJsonTwin(aGenTextAreaR[i].Text, aGenTextAreaL[i].Text)
              res["fldsave"] = True
              res["fldabnormal"] = aAbnormCheck[i].Value
              res["flduserid"] = modBasic.$lbluser
              res["fldtime"] = Now()
              res["fldfilepath"] = ""
              res["xyz"] = False
              res.Update()
            Endif
          Endif
        Endif
      Endif
    Endif
  Next

End

''for tabular data
Private Sub SetQualitativeAbnormalR(i As Integer)

  If $xData[i][3] = "Single Selection" Then
    If aComboBoxR[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aComboBoxR[i].Text, $xData[i][3])
    Endif
  Else If $xData[i][3] = "Dichotomous" Then
    If aDichoValueR[i].Value Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aDichoValueR[i].Value, $xData[i][3])
    Endif
  Else If $xData[i][3] = "Qualitative" Then
    If aLineTextR[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aLineTextR[i].Text, $xData[i][3])
    Endif
  Else If $xData[i][3] = "No Selection" Then
    If aGenTextAreaR[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aGenTextAreaR[i].Text, $xData[i][3])
    Endif
  Endif

End

Private Sub SetQualitativeAbnormalL(i As Integer)

  If $xData[i][3] = "Single Selection" Then
    If aComboBoxL[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aComboBoxL[i].Text, $xData[i][3])
    Endif
  Else If $xData[i][3] = "Dichotomous" Then
    If aDichoValueL[i].Value Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aDichoValueL[i].Value, $xData[i][3])
    Endif
  Else If $xData[i][3] = "Qualitative" Then
    If aLineTextL[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aLineTextL[i].Text, $xData[i][3])
    Endif
  Else If $xData[i][3] = "No Selection" Then
    ''Left
    If aGenTextAreaL[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectSubExamAbnormal($frm, lblitem.Text, $xData[i][0], aGenTextAreaL[i].Text, $xData[i][3])
    Endif
  Endif

End

''------------------------------------- short cut keys ------------------------------
Private Sub GetAbnormalValueTest()

  Dim i As Integer
  Dim xrange As Float[]
  Dim yrange As Float[]

  i = Last.Tag
  aAbnormCheck[i].Value = False
  ''Right
  If aValueBoxR[i].Value Then
    xrange = GetRefRange(aLimitLabelR[i].Text)
    If xrange And If xrange.Count = 2 Then
      If aValueBoxR[i].Value < xrange[0] Then
        aAbnormCheck[i].Value = True
      Else If aValueBoxR[i].Value > xrange[1] Then
        aAbnormCheck[i].Value = True
      Endif
    Endif
  Endif
  ''Left
  If aValueBoxL[i].Value Then
    yrange = GetRefRange(aLimitLabelL[i].Text)
    If yrange And If yrange.Count = 2 Then
      If aValueBoxL[i].Value < yrange[0] Then
        aAbnormCheck[i].Value = True
      Else If aValueBoxL[i].Value > yrange[1] Then
        aAbnormCheck[i].Value = True
      Endif
    Endif
  Endif

  If aAbnormCheck[i].Value = True Then
    aAbnormCheck[i].Foreground = Color.Red
  Else
    aAbnormCheck[i].Foreground = Color.Default
  Endif

End

''Right
Public Sub ValueGroupR_Change()

  GetAbnormalValueTest()

End

''Left
Public Sub ValueGroupL_Change()

  GetAbnormalValueTest

End

Private Sub GetAbnormalCalcTest()

  Dim i As Integer
  Dim xrange As Float[]
  Dim yrange As Float[]

  i = Last.Tag
  aAbnormCheck[i].Value = False
  ''Right
  If aCalcBoxR[i].Value Then
    xrange = GetRefRange(aCalcLimitR[i].Text)
    If xrange And If xrange.Count = 2 Then
      If aCalcBoxR[i].Value < xrange[0] Then
        aAbnormCheck[i].Value = True
      Else If aCalcBoxR[i].Value > xrange[1] Then
        aAbnormCheck[i].Value = True
      Endif
    Endif
  Endif
  ''Left
  If aCalcBoxL[i].Value Then
    yrange = GetRefRange(aCalcLimitL[i].Text)
    If yrange And If yrange.Count = 2 Then
      If aCalcBoxL[i].Value < yrange[0] Then
        aAbnormCheck[i].Value = True
      Else If aCalcBoxL[i].Value > yrange[1] Then
        aAbnormCheck[i].Value = True
      Endif
    Endif
  Endif

  If aAbnormCheck[i].Value = True Then
    aAbnormCheck[i].Foreground = Color.Red
  Else
    aAbnormCheck[i].Foreground = Color.Default
  Endif

End

''Right
Public Sub CalcGroupR_Change()

  GetAbnormalCalcTest()

End

''Left
Public Sub CalcGroupL_Change()

  GetAbnormalCalcTest()

End

Private Function GetRefRange(sRange As String) As Float[]

  Dim asx As String[]
  Dim bsx1 As String[]
  Dim bsx2 As String[]
  Dim afinal As Float[]

  afinal = New Float[]
  If sRange Then
    asx = Split(sRange, "-")
    bsx1 = Split(Trim(asx[0]), " ")
    Try afinal.Add(CFloat(Trim(bsx1[0])))
    If asx.Count > 1 Then
      bsx2 = Split(Trim(asx[1]), " ")
      Try afinal.Add(CFloat(Trim(bsx2[0])))
    Endif
  Endif
  Return afinal

End

''Right
Public Sub ComboGroupR_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormalR(j)

End

''Left
Public Sub ComboGroupL_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormalL(j)

End

''Right
Public Sub DichoTextR_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormalR(j)

End

''Left
Public Sub DichoTextL_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormalL(j)

End

''-----------------------------help options  --------------------------------------
Public Sub ButtonBoxgroupR_Click()

  Dim j As Integer

  j = Last.Tag
  $FocusTag = j
  $FocusSide = "R"

  OpenOptionR(j)
  SetQualitativeAbnormalR(J)

End

''Left
Public Sub ButtonBoxgroupL_Click()

  Dim j As Integer

  j = Last.Tag
  $FocusTag = j
  $FocusSide = "L"

  OpenOptionL(j)
  SetQualitativeAbnormalL(J)

End

''Right
Private Sub OpenOptionR(j As Integer)

  Dim sql1 As String
  Dim sql As String
  Dim res1 As Result
  Dim res As Result
  Dim xoption As String[]
  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String

  xoption = New String[]

  If $xData[j][0] = "Final Impression" Then
    If $frm = "Test" Then
      sql1 = "select fldoption as fldanswertype from tbltest where fldtestid=&1"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tbltestoption where fldtestid=&1 ORDER BY fldindex"
    Else If $frm = "Exam" Then
      sql1 = "select fldoption as fldanswertype from tblexam where fldexamid=&1"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblexamoption where fldexamid=&1 ORDER BY fldindex"
    Else If $frm = "Radio" Then
      sql1 = "select fldoption as fldanswertype from tblradio where fldexamid=&1"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblradiooption where fldexamid=&1 ORDER BY fldindex"
    Endif
    res1 = modDatabase.$myConn.Exec(sql1, lblitem.Text)
    res = modDatabase.$myConn.Exec(sql, lblitem.Text)
  Else
    If $frm = "Test" Then
      sql1 = "select fldtanswertype as fldanswertype from tbltestquali where fldsubtest=&1 and fldtestid=&2"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblsubtestquali where fldsubtest=&1 and fldtestid=&2 ORDER BY fldindex"
    Else If $frm = "Exam" Then
      sql1 = "select fldtanswertype as fldanswertype from tblexamquali where fldsubexam=&1 and fldexamid=&2"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblsubexamquali where fldsubexam=&1 and fldexamid=&2 ORDER BY fldindex"
    Else If $frm = "Radio" Then
      sql1 = "select fldtanswertype as fldanswertype from tblradioquali where fldsubexam=&1 and fldexamid=&2"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblsubradioquali where fldsubexam=&1 and fldexamid=&2 ORDER BY fldindex"
    Endif
    res1 = modDatabase.$myConn.Exec(sql1, $xData[j][0], lblitem.Text)
    res = modDatabase.$myConn.Exec(sql, $xData[j][0], lblitem.Text)
  Endif

  If res1.Available Then
    If res1["fldanswertype"] = "Date Time" Then
      xval = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBoxR[j].Value))
      If xval Then
        aDateBoxR[j].Value = modDate.ConvertToEnglishdate(xval)
      Endif

    Else If res1["fldanswertype"] = "BS Date" Then
      xval = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBoxR[j].Value))
      If xval Then
        aDateBoxR[j].Value = modDate.ConvertToEnglishdate(xval)
      Endif

    Else If res1["fldanswertype"] = "User Profile" Then

    Else If res1["fldanswertype"] = "ImageValue" Then
      sPath = modImage.DisplayVisualData($frm, lblitem.Text, $xData[j][0], res1["fldanswertype"])
      sVal = CustomDraw(sPath)
      If sVal Then
        aButtonBoxR[j].Text = sVal[0]
      Endif

    Else If res1["fldanswertype"] = "Visual Input" Then
      sPath = modImage.DisplayVisualData($frm, lblitem.Text, $xData[j][0], res1["fldanswertype"])
      If sPath Then
        xval = CVisualValue(lblitem.Text, sPath, aGenTextAreaR[j].Text)
        If xval Then
          aGenTextAreaR[j].Text = xval
        Endif
      Endif

    Else If res1["fldanswertype"] = "Calculated" Then

    Else If res1["fldanswertype"] = "Quantitative" Or If res1["fldanswertype"] = "Percent Sum" Then
      aValueBoxR[j].Value = GetCalculateValueR(modSettings.ShowEqnSettingFromFIle(lblitem.Text & "/" & $xData[j][0]))

    Else If res1["fldanswertype"] = "RichText Area" Then
      aHTMLTextR[j].RichText = aHTMLTextR[j].RichText & Space(1) & GetRichTextArea($xData[j][0], "")

    Else If res1["fldanswertype"] = "No Selection" Then
      aGenTextAreaR[j].Text = aGenTextAreaR[j].Text & Space(1) & GetTextArea($xData[j][0], "")

    Else
      If res.Available Then    ''if options available
        If res1["fldanswertype"] = "Single Selection" Then
          For Each res
            xoption.Add(res["fldanswer"])
          Next
          sVal = SubChoose(xoption, "Single Selection", $xData[j][0])
          If sVal Then
            aComboBoxR[j].Text = sVal[0]
          Endif

        Else If res1["fldanswertype"] = "Dichotomous" Then
          For Each res
            xoption.Add(res["fldanswer"])
          Next
          sVal = SubChoose(xoption, "Single Selection", $xData[j][0])
          If sVal Then
            aDichoValueR[j].Value = sVal[0]
          Endif

        Else If res1["fldanswertype"] = "Clinical Scale" Then
          For Each res
            xoption.Add(res["fldanswer"] & "@" & res["fldscale"] & "@" & res["fldscalegroup"])
          Next
          sVal = SubChoose(xoption, "Clinical Scale", $xData[j][0])
          If sVal Then
            aClinBoxR[j].Value = sVal[0]
            aTextAreaR[j].Text = sVal[1]
          Endif

        Endif
      Endif

    Endif
  Endif

End

''Left
Private Sub OpenOptionL(j As Integer)

  Dim sql1 As String
  Dim sql As String
  Dim res1 As Result
  Dim res As Result
  Dim xoption As String[]
  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String

  xoption = New String[]

  If $xData[j][0] = "Final Impression" Then
    If $frm = "Test" Then
      sql1 = "select fldoption as fldanswertype from tbltest where fldtestid=&1"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tbltestoption where fldtestid=&1 ORDER BY fldindex"
    Else If $frm = "Exam" Then
      sql1 = "select fldoption as fldanswertype from tblexam where fldexamid=&1"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblexamoption where fldexamid=&1 ORDER BY fldindex"
    Else If $frm = "Radio" Then
      sql1 = "select fldoption as fldanswertype from tblradio where fldexamid=&1"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblradiooption where fldexamid=&1 ORDER BY fldindex"
    Endif
    res1 = modDatabase.$myConn.Exec(sql1, lblitem.Text)
    res = modDatabase.$myConn.Exec(sql, lblitem.Text)
  Else
    If $frm = "Test" Then
      sql1 = "select fldtanswertype as fldanswertype from tbltestquali where fldsubtest=&1 and fldtestid=&2"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblsubtestquali where fldsubtest=&1 and fldtestid=&2 ORDER BY fldindex"
    Else If $frm = "Exam" Then
      sql1 = "select fldtanswertype as fldanswertype from tblexamquali where fldsubexam=&1 and fldexamid=&2"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblsubexamquali where fldsubexam=&1 and fldexamid=&2 ORDER BY fldindex"
    Else If $frm = "Radio" Then
      sql1 = "select fldtanswertype as fldanswertype from tblradioquali where fldsubexam=&1 and fldexamid=&2"
      sql = "select fldanswertype,fldanswer,fldscale,fldscalegroup from tblsubradioquali where fldsubexam=&1 and fldexamid=&2 ORDER BY fldindex"
    Endif
    res1 = modDatabase.$myConn.Exec(sql1, $xData[j][0], lblitem.Text)
    res = modDatabase.$myConn.Exec(sql, $xData[j][0], lblitem.Text)
  Endif

  If res1.Available Then
    If res1["fldanswertype"] = "Date Time" Then
      xval = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBoxL[j].Value))
      If xval Then
        aDateBoxL[j].Value = modDate.ConvertToEnglishdate(xval)
      Endif

    Else If res1["fldanswertype"] = "BS Date" Then
      xval = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBoxL[j].Value))
      If xval Then
        aDateBoxL[j].Value = modDate.ConvertToEnglishdate(xval)
      Endif

    Else If res1["fldanswertype"] = "User Profile" Then

    Else If res1["fldanswertype"] = "ImageValue" Then
      sPath = modImage.DisplayVisualData($frm, lblitem.Text, $xData[j][0], res1["fldanswertype"])
      sVal = CustomDraw(sPath)
      If sVal Then
        aButtonBoxL[j].Text = sVal[0]
      Endif

    Else If res1["fldanswertype"] = "Visual Input" Then
      sPath = modImage.DisplayVisualData($frm, lblitem.Text, $xData[j][0], res1["fldanswertype"])
      If sPath Then
        xval = CVisualValue(lblitem.Text, sPath, aGenTextAreaL[j].Text)
        If xval Then
          aGenTextAreaL[j].Text = xval
        Endif
      Endif

    Else If res1["fldanswertype"] = "Calculated" Then

    Else If res1["fldanswertype"] = "Quantitative" Or If res1["fldanswertype"] = "Percent Sum" Then
      aValueBoxL[j].Value = GetCalculateValueL(modSettings.ShowEqnSettingFromFIle(lblitem.Text & "/" & $xData[j][0]))

    Else If res1["fldanswertype"] = "RichText Area" Then
      aHTMLTextL[j].RichText = aHTMLTextL[j].RichText & Space(1) & GetRichTextArea($xData[j][0], "")

    Else If res1["fldanswertype"] = "No Selection" Then
      aGenTextAreaL[j].Text = aGenTextAreaL[j].Text & Space(1) & GetTextArea($xData[j][0], "")

    Else
      If res.Available Then    ''if options available
        If res1["fldanswertype"] = "Single Selection" Then
          For Each res
            xoption.Add(res["fldanswer"])
          Next
          sVal = SubChoose(xoption, "Single Selection", $xData[j][0])
          If sVal Then
            aComboBoxL[j].Text = sVal[0]
          Endif

        Else If res1["fldanswertype"] = "Dichotomous" Then
          For Each res
            xoption.Add(res["fldanswer"])
          Next
          sVal = SubChoose(xoption, "Single Selection", $xData[j][0])
          If sVal Then
            aDichoValueL[j].Value = sVal[0]
          Endif

        Else If res1["fldanswertype"] = "Clinical Scale" Then
          For Each res
            xoption.Add(res["fldanswer"] & "@" & res["fldscale"] & "@" & res["fldscalegroup"])
          Next
          sVal = SubChoose(xoption, "Clinical Scale", $xData[j][0])
          If sVal Then
            aClinBoxL[j].Value = sVal[0]
            aTextAreaL[j].Text = sVal[1]
          Endif

        Endif
      Endif

    Endif
  Endif

End

Public Sub btnfill_Click()

  Dim j As Integer
  Dim res As Result
  Dim sql As String
  Dim asx As String[]

  For j = 0 To $xData.Count - 1
    If j < 49 Then

      If $xData[j][0] = "Final Impression" Then
        ''Right
        If aHTMLTextR[j] Then
          If Not aHTMLTextR[j].Text Then
            aHTMLTextR[j].RichText = modAllExam.GetExamDefaultValue($frm, lblitem.Text)
          Endif
        Else If aGenTextAreaR[j] Then
          If Not aGenTextAreaR[j].Text Then
            aGenTextAreaR[j].Text = modAllExam.GetExamDefaultValue($frm, lblitem.Text)
          Endif
        Endif
        ''Left
        If aHTMLTextL[j] Then
          If Not aHTMLTextL[j].Text Then
            aHTMLTextL[j].RichText = modAllExam.GetExamDefaultValue($frm, lblitem.Text)
          Endif
        Else If aGenTextAreaL[j] Then
          If Not aGenTextAreaL[j].Text Then
            aGenTextAreaL[j].Text = modAllExam.GetExamDefaultValue($frm, lblitem.Text)
          Endif
        Endif

      Else
        If $frm = "Test" Then
          sql = "select flddetail from tbltestquali where fldsubtest=&1 and fldtestid=&2"
        Else If $frm = "Exam" Then
          sql = "select flddetail from tblexamquali where fldsubexam=&1 and fldexamid=&2"
        Else If $frm = "Radio" Then
          sql = "select flddetail from tblradioquali where fldsubexam=&1 and fldexamid=&2"
        Endif
        res = modDatabase.$myConn.Exec(sql, $xData[j][0], lblitem.Text)
        If res.Available Then

          res.MoveLast
          ''Right
          If aHTMLTextR[j] Then
            If Not aHTMLTextR[j].Text Then
              aHTMLTextR[j].RichText = res["flddetail"]
            Endif

          Else If aGenTextAreaR[j] Then
            If Not aGenTextAreaR[j].Text Then
              aGenTextAreaR[j].Text = res["flddetail"]
            Endif

          Else If aComboBoxR[j] Then
            If Not aComboBoxR[j].Text Then
              aComboBoxR[j].Text = res["flddetail"]
            Endif

          Else If aDichoValueR[j] Then
            If Not aDichoValueR[j].Value Then
              aDichoValueR[j].Value = res["flddetail"]
            Endif

          Else If aLineTextR[j] Then
            If Not aLineTextR[j].Text Then
              aLineTextR[j].Text = res["flddetail"]
            Endif

          Else If aUnitTextR[j] Then
            asx = New String[]
            asx = Split(res["flddetail"], Space(1))
            If asx.Count = 2 Then
              aValueBoxR[j].Value = CFloat(asx[0])
              aUnitTextR[j].Text = asx[1]
            Else If asx.Count = 1 Then
              aValueBoxR[j].Value = CFloat(asx[0])
            Endif

          Else If aCalcUnitR[j] Then
            asx = New String[]
            asx = Split(res["flddetail"], Space(1))
            If asx.Count = 2 Then
              aCalcBoxR[j].Value = modReportVar.GetCalcValueFloat(asx[0], $encid)
              aCalcUnitR[j].Text = asx[1]
            Else If asx.Count = 1 Then
              aCalcBoxR[j].Value = modReportVar.GetCalcValueFloat(asx[0], $encid)
            Endif

          Endif

          ''Left
          If aHTMLTextL[j] Then
            If Not aHTMLTextL[j].Text Then
              aHTMLTextL[j].RichText = res["flddetail"]
            Endif

          Else If aGenTextAreaL[j] Then
            If Not aGenTextAreaL[j].Text Then
              aGenTextAreaL[j].Text = res["flddetail"]
            Endif

          Else If aComboBoxL[j] Then
            If Not aComboBoxL[j].Text Then
              aComboBoxL[j].Text = res["flddetail"]
            Endif

          Else If aDichoValueL[j] Then
            If Not aDichoValueL[j].Value Then
              aDichoValueL[j].Value = res["flddetail"]
            Endif

          Else If aLineTextL[j] Then
            If Not aLineTextL[j].Text Then
              aLineTextL[j].Text = res["flddetail"]
            Endif

          Else If aUnitTextL[j] Then
            asx = New String[]
            asx = Split(res["flddetail"], Space(1))
            If asx.Count = 2 Then
              aValueBoxL[j].Value = CFloat(asx[0])
              aUnitTextL[j].Text = asx[1]
            Else If asx.Count = 1 Then
              aValueBoxL[j].Value = CFloat(asx[0])
            Endif

          Else If aCalcUnitL[j] Then
            asx = New String[]
            asx = Split(res["flddetail"], Space(1))
            If asx.Count = 2 Then
              aCalcBoxL[j].Value = modReportVar.GetCalcValueFloat(asx[0], $encid)
              aCalcUnitL[j].Text = asx[1]
            Else If asx.Count = 1 Then
              aCalcBoxL[j].Value = modReportVar.GetCalcValueFloat(asx[0], $encid)
            Endif

          Endif

        Endif
      Endif

    Endif
  Next

End

Public Sub chkabnall_Click()

  Dim j As Integer

  For j = 0 To $xData.Count - 1
    If j < 49 Then
      aAbnormCheck[j].Value = chkabnall.Value
    Endif
  Next

End

''Right
Private Function GetCalculateValueR(sLine As String) As Float

  Dim i As Integer
  Dim xval As Float

  If sLine Then
    For i = 0 To $xData.Count - 1
      If aValueBoxR[i] Then
        If (String.InStr(sLine, $xData[i][0]) > 0) Then                                   ''
          sLine = Replace(sLine, "{" & $xData[i][0] & "}", CStr(aValueBoxR[i].Value))
        Endif
      Endif
    Next
    If (String.InStr(sLine, "$Calc[") > 0) Then
      sLine = modReportVar.GetReportCalculation(sLine)
    Endif
    xval = CFloat(sLine)

  Else
    xval = 0
  Endif

  Return xval

End

''Left
Private Function GetCalculateValueL(sLine As String) As Float

  Dim i As Integer
  Dim xval As Float

  If sLine Then
    For i = 0 To $xData.Count - 1
      If aValueBoxR[i] Then
        If (String.InStr(sLine, $xData[i][0]) > 0) Then                                   ''
          sLine = Replace(sLine, "{" & $xData[i][0] & "}", CStr(aValueBoxR[i].Value))
        Endif
      Endif
    Next
    If (String.InStr(sLine, "$Calc[") > 0) Then
      sLine = modReportVar.GetReportCalculation(sLine)
    Endif
    xval = CFloat(sLine)

  Else
    xval = 0
  Endif

  Return xval

End

''Right
Public Sub ImageBoxGroupR_Click()

End

''Left
Public Sub ImageBoxGroupL_Click()

End

''------------------------ General form
Public Sub btntxtmulti_Click()

  Dim j As Integer

  Try j = $FocusTag
  ''Right
  If $FocusSide = "R" Then
    If aHTMLTextR[j] Then
      aHTMLTextR[j].RichText = aHTMLTextR[j].RichText & Space(1) & modFillContainer.GetExtraTextArea($xData[j][0], aHTMLTextR[j].Text)
    Else If aGenTextAreaR[j] Then
      aGenTextAreaR[j].Text = aGenTextAreaR[j].Text & Space(1) & GetTextArea($xData[j][0], aGenTextAreaR[j].Text)
    Endif

    ''Left
  Else If $FocusSide = "L" Then
    If aHTMLTextL[j] Then
      aHTMLTextL[j].RichText = aHTMLTextL[j].RichText & Space(1) & modFillContainer.GetExtraTextArea($xData[j][0], aHTMLTextL[j].Text)
    Else If aGenTextAreaL[j] Then
      aGenTextAreaL[j].Text = aGenTextAreaL[j].Text & Space(1) & GetTextArea($xData[j][0], aGenTextAreaL[j].Text)
    Endif
  Endif

End

Public Sub btnexecexam_Click()

  Dim j As Integer

  Try j = $FocusTag
  ''Right
  If $FocusSide = "R" Then
    If aHTMLTextR[j] Then
      aHTMLTextR[j].RichText = aHTMLTextR[j].RichText & modCloudAI.GetPatCloudAIResponse($encid, aHTMLTextR[j].Text)
    Else If aGenTextAreaR[j] Then
      aGenTextAreaR[j].Text = aGenTextAreaR[j].Text & modCloudAI.GetPatCloudAIResponse($encid, aGenTextAreaR[j].Text)
    Endif

    ''Left
  Else If $FocusSide = "L" Then
    If aHTMLTextL[j] Then
      aHTMLTextL[j].RichText = aHTMLTextL[j].RichText & modCloudAI.GetPatCloudAIResponse($encid, aHTMLTextL[j].Text)
    Else If aGenTextAreaL[j] Then
      aGenTextAreaL[j].Text = aGenTextAreaL[j].Text & modCloudAI.GetPatCloudAIResponse($encid, aGenTextAreaL[j].Text)
    Endif
  Endif

End

Public Sub btntempltext_Click()

  Dim j As Integer

  Try j = $FocusTag
  ''Right
  If $FocusSide = "R" Then
    If aHTMLTextR[j] Then
      aHTMLTextR[j].RichText = aHTMLTextR[j].RichText & DictionaryVIew(modBasic.$dictadvPath)
    Else If aGenTextAreaR[j] Then
      aGenTextAreaR[j].Text = aGenTextAreaR[j].Text & DictionaryVIew(modBasic.$dictadvPath)
    Endif

    ''Left
  Else If $FocusSide = "L" Then
    If aHTMLTextL[j] Then
      aHTMLTextL[j].RichText = aHTMLTextL[j].RichText & DictionaryVIew(modBasic.$dictadvPath)
    Else If aGenTextAreaL[j] Then
      aGenTextAreaL[j].Text = aGenTextAreaL[j].Text & DictionaryVIew(modBasic.$dictadvPath)
    Endif
  Endif

End
