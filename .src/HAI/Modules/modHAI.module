' Gambas module file

Public Function GetFirstBSIDeviceCRF(encid As String) As String

  Dim xxx As String
  Dim xval As String

  xxx = modHIReport.GetDeviceCategory(modHIReport.GetHAIBSIDeviceFirstType(encid))
  If xxx Then
    If xxx = "Peripheral Line Catheter" Then
      xval = "Yes, peripheral line"
    Else If xxx = "Central Line Catheter" Then
      xval = "Yes, central line"
    Endif
  Else
    xval = "Unknown"
  Endif

  Return xval

End

Public Function GetHAIExamCodeColl() As Collection

  Dim xxx As Collection

  xxx = New Collection
  xxx.Add("Fever (temp >38Â°C)", "Fever")
  xxx.Add("Chills (Chills or sweat)", "Chills")
  xxx.Add("Respiratory ( Sore throat, cough, weezing, other respiratory symptoms)", "Respiratory")
  xxx.Add("Symptoms indicative of a UTI", "UTI")
  xxx.Add("The patient has a wound presenting redness and/or purulent discharge", "Wound")
  xxx.Add("The area around the catheter/peripheral line infection shows redness and/or purulent discharge", "Line")
  xxx.Add("The patient presents gastrointestinal symptoms and/or diarrhea", "Gastrointestinal")
  xxx.Add("The patient presents skin/mucosal lesions", "Lesions")
  xxx.Add("The patient presents signs and symptoms of sepsis", "Sepsis")

  Return xxx

End

Public Function GetHaiExamCodeValue(sItem As String) As String

  Dim aColl As Collection
  Dim xkey As String
  Dim xitem As Variant

  aColl = GetHAIExamCodeColl()
  For Each xitem In aColl
    If xitem = sItem Then
      xkey = aColl.Key
    Endif
  Next

  Return xkey

End

Public Function GetHAIExaminationList() As String[]

  Dim aColl As Collection
  Dim xkey As String
  Dim xxx As String[]

  xxx = New String[]
  aColl = GetHAIExamCodeColl()
  For Each xkey In aColl.Keys
    xxx.Add(aColl[xkey])
  Next

  Return xxx

End

Public Function GetHaiSensitivity(sValue As String) As String

  Dim sForm As String

  If sValue = "Sensitive" Then
    sForm = "Susceptible"
  Else
    sForm = sValue
  Endif
  Return sForm

End

Public Function GetHaiOutcome(sOutcome As String) As String

  Dim xval As String

  If sOutcome = "Discharged" Then
    xval = "Discharged"
  Else If sOutcome = "Refer" Then
    xval = "Transferred to another hospital"
  Else If sOutcome = "Death" Then
    xval = "Death"
  Else
    xval = "Unknown"
  Endif

  Return xval

End

Public Function GetInfectionValues(encid As String, sType As String) As String[]

  Dim rsn As Result
  Dim sql As String
  Dim res As Result
  Dim xxx As String[]

  xxx = New String[]
  rsn = modDatabase.$syConn.Exec("select fldexamid from tbldeptexam where flddept=&1", sType)
  If rsn.Available Then
    For Each rsn
      sql = "select fldhead,fldrepquali,fldrepquanti,fldtime from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldhead=&3 and fldrepquali=&4"                  ''
      res = modDatabase.$syConn.Exec(sql, encid, sType, rsn["fldexamid"], "Yes")
      If res.Available Then
        res.MoveFirst
        xxx.Add("[" & modReportVar.GetDateTimeReport(res["fldtime"], gb.MediumDate) & "] " & res["fldhead"] & " : " & res["fldrepquali"])
      Endif
    Next
  Endif

  Return xxx

End

Private Function GetShortDevice(xcateg As String) As String

  Dim xname As String

  If xcateg = "Peripheral Line Catheter" Then
    xname = "Peripheral"
  Else If xcateg = "Central Line Catheter" Then
    xname = "Central"
  Else If xcateg = "Urinary Catheter" Then
    xname = "Urinary"
  Endif

  Return xname

End

Public Function GetHAIDeviceProfile(encid As String) As String[]

  Dim xxx As String[]
  Dim xcateg As String
  Dim res As Result
  Dim xhour As Integer

  xxx = New String[]
  For Each xcateg In modHIReport.$DeviceCategory
    xhour = 0
    res = modDatabase.$myConn.Exec("select flditem,fldfirsttime,fldsecondtime,flddetail from tblpatevents where fldencounterval=&1 and fldtype=&2 and flditem in(select flditem from tblevents where fldtype=&2 and fldcategory=&3)", encid, "Devices", xcateg)
    If res.Available Then
      For Each res
        If res["fldsecondtime"] Then
          xhour = xhour + DateDiff(res["fldfirsttime"], res["fldsecondtime"], gb.Hour)
        Else
          xhour = xhour + DateDiff(res["fldfirsttime"], Now(), gb.Hour)
        Endif
      Next
    Endif

    xxx.Add(GetShortDevice(xcateg) & " : " & xhour & " Hours")
  Next
  Return xxx

End

Public Function GetDeviceStartDates(encid As String) As String[]

  Dim xxx As String[]
  Dim xcateg As String
  Dim xdate As Date

  xxx = New String[]
  For Each xcateg In modHIReport.$DeviceCategory
    xdate = ""
    xdate = modHIReport.GetHAIDeviceFirstDate(encid, xcateg)
    xxx.Add(GetShortDevice(xcateg) & " : " & modReportVar.GetDateTimeReport(xdate, gb.MediumDate))
  Next
  Return xxx

End

Public Function GetCultureNoGrowthList(encid As String) As String[]

  Dim res As Result
  Dim xxx As String[]

  xxx = New String[]
  res = modDatabase.$myConn.Exec("select fldtime_sample,fldtestid,fldreportquali from tblpatlabtest where fldencounterval=&1 and fldtestid in(select fldtestid from tbltestquali where (fldtanswertype=&2 or fldtanswertype=&3)) and fldid NOT IN(select fldtestid from tblpatlabsubtest)", encid, "Drug Sensitivity", "WHO Sensitivity")
  If res.Available Then
    For Each res
      If res["fldreportquali"] Then
        xxx.Add("[" & modReportVar.GetDateTimeReport(res["fldtime_sample"], gb.MediumDate) & "] " & res["fldtestid"] & " : " & res["fldreportquali"])
      Endif
    Next
  Endif

  Return xxx

End

Public Function GetCulturePathogenList(encid As String) As String[]

  Dim res As Result
  Dim xxx As String[]

  xxx = New String[]
  res = modDatabase.$myConn.Exec("select tblpatlabsubtest.fldsubtest as fldsubtest,tblpatlabtest.fldtime_sample as fldtime_sample from tblpatlabsubtest inner join tblpatlabtest on tblpatlabsubtest.fldtestid=tblpatlabtest.fldid  where tblpatlabtest.fldencounterval=&1 and tblpatlabsubtest.fldencounterval=&1 and tblpatlabsubtest.fldtanswertype=&2 or tblpatlabsubtest.fldtanswertype=&3 ORDER BY tblpatlabtest.fldtime_sample", encid, "Drug Sensitivity", "WHO Sensitivity")
  If res.Available Then
    For Each res
      xxx.Add("[" & modReportVar.GetDateTimeReport(res["fldtime_sample"], gb.MediumDate) & "] " & res["fldsubtest"])
    Next
  Endif
  Return xxx

End

Public Function GetHaiMidOutcome(encid As String) As String

  Dim xval As String
  Dim xdate As Date
  Dim res As Result
  Dim res1 As Result

  res = modDatabase.$myConn.Exec("select flddoa,flddod,fldadmission,fldcurrlocat from tblencounter where fldencounterval=&1", encid)
  If res.Available And If res["flddod"] Then
    xdate = DateAdd(res["flddoa"], gb.Day, 14)

    If res["flddod"] > xdate Then
      res1 = modDatabase.$myConn.Exec("select fldid,flditem,fldfirsttime,fldsecondtime,fldsecondreport from tblpattiming where fldencounterval=&1 and fldtype=&2 and fldfirstreport=&3 ORDER BY fldfirsttime", encid, "General Services", "Bed")
      If res1.Available Then
        res1.MoveFirst
        If res1["fldsecondtime"] Then
          If res1["fldsecondtime"] > xdate Then
            xval = "Still in the ward"
          Else
            xval = "Transferred to another ward within the hospital"
          Endif
        Else
          xval = "Still in the ward"
        Endif
      Else
        xval = "Unknown"
      Endif

    Else
      If res["fldadmission"] = "Discharged" Then
        xval = "Discharged on patient request"
      Else If res["fldadmission"] = "Refer" Then
        xval = "Transferred to another hospital"
      Else If res["fldadmission"] = "Death" Then
        xval = "Death"
      Else If res["fldadmission"] = "LAMA" Then
        xval = "Leave against medical advise"
      Else
        xval = "Unknown"
      Endif
    Endif

  Else
    xval = "Unknown"
  Endif

  Return xval

End

Public Function GetHAIGridOutcome(encid As String) As String

  Dim xdisc As Date
  Dim xxx As String

  xdisc = modPatient.GetDischargeDate(encid)
  If xdisc Then
    xxx = "Date : " & modReportVar.GetDateTimeReport(xdisc, gb.MediumDate) & "<br>" & "Outcome : " & modPatient.CurrentStatuswithComment(encid)
  Else
    xxx = ""
  Endif

  Return xxx

End

Public Function GetFixedClassification(encid As String) As String

  Dim res As Result
  Dim xx As String[]
  Dim xval As String

  res = modDatabase.$myConn.Exec("select fldbsiclassify,flduticlassify from tblhaicasereports where fldencounterval=&1", encid)
  If res.Available Then
    If Not res["fldbsiclassify"] And If Not res["flduticlassify"] Then
      xval = ""
    Else
      xx = New String[]
      If res["fldbsiclassify"] Then
        xx.Add("BSI : " & res["fldbsiclassify"])
      Endif
      If res["flduticlassify"] Then
        xx.Add("UTI : " & res["flduticlassify"])
      Endif
      xval = xx.Join("<br>")
    Endif
  Else
    xval = ""
  Endif

  Return xval

End
