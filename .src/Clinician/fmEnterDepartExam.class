' Gambas class file

''controls
Private aWebFrame As New Object[50]
Private aWebPanel As New Object[50]
Private aIndexLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aHTMLText As New Object[50]
Private aLineText As New Object[50]
Private aUnitText As New Object[50]
Private aValueBox As New Object[50]
Private aQuantiBox As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aClinBox As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aTextArea As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGridView As New Object[50]
Private aListBox As New Object[50]
Private aGenTextArea As New Object[50]
Private aButtonBox As New Object[50]
Private aHelpButton As New Object[50]
Private aWebSpace As New Object[50]

Private aWebBottom As New Object[50]
Private aValSlider As New Object[50]

''other variables
Private $encid As String
Private $sTable As String
Private $sCategory As String
''Arrays
Private $xType As String[]
Private $xOption As String[]
Private $xitem As String[]
Private $xExam As String[]
Private $xOpList As String[]
Private $xSysCons As String[]
Private $xSource As String[]

Private AppFactor As Float
Private $enableControl As Boolean
Private $viewSlider As Boolean

''----------------------------------------- create controls -----------------------------------------
Public Sub _new(sChapter As String, encid As String, sFormat As String, sCategory As String)

  Dim i As Integer
  Dim ht As String

  Dim rsn As Result
  Dim res As Result

  Dim xType As String
  Dim xOption As String
  Dim xitem As String
  Dim xexam As String
  Dim xopList As String[]
  Dim xSysCons As String
  Dim xsource As String

  lblitem.Text = sChapter
  $encid = encid
  $sTable = sFormat
  $sCategory = sCategory
  modGeneralMain.GetOpenModalForm(Me)

  AppFactor = modBasic.$AppScaleFactor
  If modBasic.$ClinSliderValue = "Enable" Then
    $viewSlider = True
  Else
    $viewSlider = False
  Endif
  ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
  If ht Then
    Slider1.Value = CInt(ht)
  Else
    Slider1.Value = 3
  Endif

  $xType = New String[]
  $xOption = New String[]
  $xitem = New String[]
  $xExam = New String[]
  $xOpList = New String[]
  $xSysCons = New String[]
  $xSource = New String[]

  rsn = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldsysconst,fldtanswertype from tbldeptexam where flddept=&1", $sTable)
  If rsn.Available Then
    For Each rsn
      xitem = rsn["fldexamid"]
      xType = rsn["fldtype"]
      xOption = rsn["fldtanswertype"]
      xSysCons = rsn["fldsysconst"]
      xsource = "Free"

      ''get parameters
      If rsn["fldtanswertype"] = "Sys Constant" And If rsn["fldsysconst"] Then
        If modBasic.$sysExamDualList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption from tblexam where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldexamid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Exam", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Exam", xexam)
            Endif
            xsource = "Exam"
          Endif
        Else If modBasic.$sysTestDualList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldtestid,fldtype,fldoption from tbltest where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldtestid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Test", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Test", xexam)
            Endif
            xsource = "Test"
          Endif
        Else If modBasic.$sysRadioList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption from tblradio where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldexamid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Radio", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Radio", xexam)
            Endif
            xsource = "Radio"
          Endif
        Else If modBasic.$DemogList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select flddemoid,fldoption from tbldemographic where flddemoid=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldoption"]
            xOption = res["fldoption"]
            xexam = res["flddemoid"]
            xopList = modAllExam.SelectExamOptionList("Demog", xexam)
            xsource = "Demog"
          Endif
        Endif

      Else If rsn["fldtanswertype"] = "CopyValue" And If rsn["fldsysconst"] Then
        If modBasic.$sysExamDualList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixClinic.GetExamIDFromSysConst(rsn["fldsysconst"])
          xsource = "Exam"
        Else If modBasic.$sysTestDualList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixLab.GetLabTestIDFromSysConst(rsn["fldsysconst"])
          xsource = "Test"
        Else If modBasic.$sysRadioList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixRadio.GetRadioTestIDFromSysConst(rsn["fldsysconst"])
          xsource = "Radio"
        Endif

      Else If rsn["fldtanswertype"] = "Calculated" And If rsn["fldsysconst"] Then
        xexam = "Expression"

      Else
        xopList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tbldeptexamoption where fldexamid=&1 and flddept=&2 and fldtanswertype=&3 ORDER BY fldindex", rsn["fldexamid"], $sTable, xOption))
        xexam = ""
      Endif

      $xitem.Add(xitem)
      If xexam Then
        $xExam.Add(xexam)
      Else
        $xExam.Add("__")
      Endif
      If xType Then
        $xType.Add(xType)
      Else
        $xType.Add("__")
      Endif
      If xOption Then
        $xOption.Add(xOption)
      Else
        $xOption.Add("__")
      Endif
      If xopList And If xopList.Count Then
        $xOpList.Add(xopList.Join(";"))
      Else
        $xOpList.Add("__")
      Endif
      If xSysCons Then
        $xSysCons.Add(xSysCons)
      Else
        $xSysCons.Add("__")
      Endif
      If xsource Then
        $xSource.Add(xsource)
      Else
        $xSource.Add("__")
      Endif

    Next
  Endif

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      ''Create controls
      aWebFrame[i] = New WebHBox(Frame1)
      aIndexLabel[i] = New WebLabel(aWebFrame[i])
      aNameLabel[i] = New WebHtml(aWebFrame[i])

      aWebPanel[i] = New WebHBox(Frame1)
      aAbnormCheck[i] = New WebCheckBox(aWebPanel[i])
      If $xType[i] = "Quantitative" Then
        aQuantiBox[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroup"
        aQuantiMin[i] = New WebValueBox(aWebPanel[i])
        aQuantiMax[i] = New WebValueBox(aWebPanel[i])
        aWebBottom[i] = New WebContainer(Frame1)
        aValSlider[i] = New WebSlider(aWebBottom[i]) As "SliderGroup"
      Else
        Select $xOption[i]
          Case "Sys Constant"
            aGenTextArea[i] = New WebTextArea(aWebPanel[i])
          Case "Multiple Selection"
            aListBox[i] = New WebListBox(aWebPanel[i])
          Case "Text Table"
            aGridView[i] = New WebTable(aWebPanel[i])
          Case "Left and Right"
            aLeftRight[i] = New LeftRightTextArea(aWebPanel[i])
          Case "Date Time", "BS Date"
            aDateBox[i] = New WebDateBox(aWebPanel[i])
            aBSDate[i] = New WebButton(aWebPanel[i]) As "BSButton"
          Case "Single Selection"
            aComboBox[i] = New WebComboBox(aWebPanel[i])
          Case "Dichotomous"
            aDichoValue[i] = New DichotomousValue(aWebPanel[i])
          Case "Quantitative"
            aValueBox[i] = New WebValueBox(aWebPanel[i])
            aUnitText[i] = New WebTextBox(aWebPanel[i])
          Case "User Profile"
          Case "ImageValue"
            aButtonBox[i] = New WebButtonBox(aWebPanel[i])
          Case "Qualitative"
            aLineText[i] = New WebTextBox(aWebPanel[i])
          Case "Clinical Scale"
            aTextArea[i] = New WebTextArea(aWebPanel[i])
            aClinBox[i] = New WebValueBox(aWebPanel[i])
          Case "RichText Area"
            aHTMLText[i] = New WebTextHTML(aWebPanel[i])
          Case Else
            aGenTextArea[i] = New WebTextArea(aWebPanel[i])
        End Select
      Endif
      aHelpButton[i] = New WebButton(aWebPanel[i]) As "ButtonBoxgroup"
      aWebSpace[i] = New WebSeparator(Frame1)
    Endif
  Next
  $enableControl = False
  DIsplayTextForm()
  $enableControl = True

End

''------------------------ General form
Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim xlimit As Float[]

  Dim xcrit As Float
  Dim aCrlower As Float
  Dim aCrupper As Float

  For i = 0 To $xitem.Count - 1
    If i < 49 Then

      ''create index label
      With aIndexLabel[i]
        .Width = "2.5%"
        .Height = "2em"
        .Text = i + 1
        .Visible = False
        .Tag = i
      End With
      ''create Name Label
      With aNameLabel[i]
        .Expand = True
        .Font = "bold"
        .Text = "<p>" & $xitem[i] & "</p>"
        .Tag = i
      End With

      With aWebPanel[i]
        .Class = "less-container-margin"
      End With

      ''create abnormal checkbox
      With aAbnormCheck[i]
        .Width = "20%"
        .Height = "2em"
        .Text = "Flag"
        .Tag = i

        If modBasic.$ClinFlagAbnormExam = "Disable" Then
          .Visible = False
        Else
          .Visible = True
        Endif
      End With

      ''create observation entry
      If $xType[i] = "Quantitative" Then
        xlimit = modClinic.GetBothQuantiExamVal($xExam[i], $encid)
        xcrit = modFixClinic.GetCritValueExam($xExam[i])
        If xcrit Then
          aCrlower = xlimit[0] - xcrit * (xlimit[1] - xlimit[0])
          aCrupper = xlimit[1] + xcrit * (xlimit[1] - xlimit[0])
          If aCrupper = 0 Then
            aCrupper = 500
          Endif
        Else
          aCrlower = 0
          aCrupper = 500
        Endif
        With aQuantiBox[i]
          .Width = "25%"
          .Height = "2em"
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .Width = "22.5%"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .Width = "22.5%"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With

        With aWebBottom[i]
          .Arrangement = Arrange.Horizontal
          .Class = "less-container-margin"
          .Visible = $viewSlider
        End With

        With aValSlider[i]
          .Expand = True
          .Height = "1em"
          .Tag = i
        End With
        aValSlider[i].MinValue = aCrlower
        aValSlider[i].MaxValue = aCrupper

      Else
        If $xOption[i] = "Multiple Selection" Then
          With aListBox[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            ' .ScrollBar = Scroll.Both
            .Tag = i
          End With

        Else If $xOption[i] = "Text Table" Then
          ' DisplayAgegrid(Split($xOpList[i], ";"), "", aGridView[i])
          With aGridView[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Mode = Select.Multiple
            .Tag = i
          End With

        Else If $xOption[i] = "Single Selection" Then
          With aComboBox[i]
            .Width = "70%"
            .Height = "2em"
            .ReadOnly = False
            .List = Split($xOpList[i], ";")
            .Tag = i
          End With

        Else If $xOption[i] = "Dichotomous" Then
          With aDichoValue[i]
            .Width = "70%"
            .Height = "2em"
            .List = Split($xOpList[i], ";")
            .Tag = i
          End With

        Else If $xOption[i] = "Left and Right" Then
          With aLeftRight[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Tag = i
          End With

        Else If $xOption[i] = "Date Time" Then
          With aDateBox[i]
            .Width = "60%"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "10%"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $xOption[i] = "BS Date" Then
          With aDateBox[i]
            .Width = "60%"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "10%"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $xOption[i] = "Clinical Scale" Then
          With aTextArea[i]
            .Width = "50%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With
          With aClinBox[i]
            .Width = "20%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "Quantitative" Then
          With aValueBox[i]
            .Width = "40%"
            .Height = "2em"
            .Tag = i
          End With
          With aUnitText[i]
            .Width = "30%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "User Profile" Then
        Else If $xOption[i] = "ImageValue" Then
          With aButtonBox[i]
            .Width = "70%"
            .Height = "2em"
            .Text = ""
            .Tag = i
          End With

        Else If $xOption[i] = "Qualitative" Then
          With aLineText[i]
            .Width = "70%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "RichText Area" Then
          With aHTMLText[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            ' .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Else
          With aGenTextArea[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With

        Endif
      Endif

      ''create help button
      With aHelpButton[i]
        .Class = "toolButton"
        .Width = "2em"
        .Height = "2em"
        .Text = ""
        .Image = "icon:/small/info"
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With

      With aWebSpace[i]
        .Height = "1em"
      End With

    Endif
  Next

End

Public Sub chkautoption_Click()

  modSettings.EnterCheckSetting(chkautoption, "EntrySetting/AutoDisplayOptions")

End

Public Sub btnrefresh_Click()

  modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
  DIsplayTextForm()

End

Public Sub btnBrChange_Click()

  Me.Close()

End

Public Sub btnBrOK_Click()

  FillExamSubExam()
  btnBrOK.Enabled = False
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub BSButton_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBox[j].Value))
  If xx Then
    aDateBox[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub SliderGroup_Change()

  Dim j As Integer

  j = Last.Tag
  If aQuantiBox[j] Then
    If $enableControl = True Then
      aQuantiBox[j].Value = aValSlider[j].Value
    Endif
  Endif

End

Public Sub QuantiGroup_Change()

  Dim j As Integer

  j = Last.Tag

  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif

  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Private Sub FillExamSubExam()

  Dim i As Integer
  ' Dim xval As String

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      If $xType[i] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modClinSub.AddQuantiData($encid, "", $xitem[i], $xOption[i], aQuantiBox[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
        Endif
      Else
        If $xOption[i] = "Multiple Selection" Then
          If aListBox[i].Count Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aListBox[i].List.Join(gb.NewLine), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Text Table" Then
          ' xval = GetTableData(Split($xOpList[i]), aGridView[i])
          ' If xval Then
          '   modClinSub.AddQualiData($encid, "", $xitem[i],$xOption[i], modString.GetTableFormatFromText(xval), aAbnormCheck[i].Value, $sTable, $xSysCons[i])
          ' Endif
        Else If $xOption[i] = "Single Selection" Then
          If aComboBox[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aComboBox[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aDichoValue[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aLeftRight[i].DataText, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Date Time" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "BS Date" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "ImageValue" Then
          If aButtonBox[i].Text Then
            modClinSub.AddQualiImageData($encid, "", $xitem[i], $xOption[i], $sTable, $xSysCons[i], aButtonBox[i].Text, $sCategory)
          Endif
        Else If $xOption[i] = "Quantitative" Then
          If aValueBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Qualitative" Then
          If aLineText[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aLineText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "Clinical Scale" Then
          If aTextArea[i].Text Then
            modClinSub.AddClinicExam($encid, "", $xitem[i], $xOption[i], aTextArea[i].Text, aClinBox[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aHTMLText[i].RichText, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else
          If aGenTextArea[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aGenTextArea[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Endif
      Endif
    Endif
  Next

End

Private Sub SetQualitativeAbnormal(i As Integer)

  If $xOption[i] = "Single Selection" Then
    If aComboBox[i].Text Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aComboBox[i].Text, $xOption[i])
    Endif
  Else If $xOption[i] = "Dichotomous" Then
    If aDichoValue[i].Value Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aDichoValue[i].Value, $xOption[i])
    Endif
  Else If $xOption[i] = "Left and Right" Then
    If aLeftRight[i].DataText Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aLeftRight[i].DataText, $xOption[i])
    Endif
  Else If $xOption[i] = "Qualitative" Then
    If aLineText[i].Text Then
      aAbnormCheck[i].Value = modFixClinic.SelectDeptExamAbnormal(lblitem.Text, $xitem[i], aLineText[i].Text, $xOption[i])
    Endif
  Else If $xOption[i] = "No Selection" Then
    If aGenTextArea[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal(lblitem.Text, $xitem[i], aGenTextArea[i].Text, $xOption[i])
    Endif
  Endif

End

''-----------------------------help options  --------------------------------------
Public Sub ButtonBoxgroup_Click()

  Dim j As Integer

  j = Last.Tag
  OpenOption(j)
  SetQualitativeAbnormal(j)

End

Private Sub OpenOption(j As Integer)

  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String
  Dim xopt As String[]
  Dim xflot As Variant[]
  Dim acalc As Variant

  If $xType[j] = "Quantitative" Then
    If $xOption[j] = "Calculated" Then
      If $xExam[j] = "Expression" Then
        acalc = modReportVar.GetCalcValueFloat($xSysCons[j], $encid)
      Else
        xval = modAllExam.GetExamDefaultValue("Exam", $xExam[j])
        If xval Then
          acalc = modReportVar.GetCalcValueFloat(xval, $encid)
        Endif
      Endif
      If acalc Then
        aQuantiBox[j].Value = acalc
      Else
        aQuantiBox[j].Value = 0
      Endif

    Else If $xOption[j] = "CopyValue" Then
      acalc = modReportVar.GetLastQuantiParamValue($xSource[j], $xExam[j], $encid)
      If acalc Then
        aQuantiBox[j].Value = acalc
      Else
        aQuantiBox[j].Value = 0
      Endif

    Else
      xflot = GetQuantiValues("Exam", $encid, $xitem[j], 0, 0, aQuantiBox[j].Value)
      If xflot Then
        acalc = xflot[0]
        If acalc Then
          aQuantiBox[j].Value = acalc
        Else
          aQuantiBox[j].Value = 0
        Endif
      Endif

    Endif

  Else
    If $xOpList[j] Then
      xopt = Split($xOpList[j], "|")
    Endif

    If $xOption[j] = "Single Selection" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Single Selection", $xitem[j])
        If sVal Then
          aComboBox[j].Text = sVal.Join(";")
        Endif
      Endif

    Else If $xOption[j] = "Dichotomous" Then

    Else If $xOption[j] = "Multiple Selection" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Multiple Selection", $xitem[j])
        If sVal Then
          aListBox[j].List = sVal
        Endif
      Endif

    Else If $xOption[j] = "Text Table" Then
      If xopt.Count Then
        ' xval = TableEntry(xopt, $xitem[j], "")
        ' If xval Then
        '   DisplayAgegrid(Split($xOpList[j], "|"), xval, aGridView[j])
        ' Endif
      Endif

    Else If $xOption[j] = "Clinical Scale" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Clinical Scale", $xExam[j])
        If sVal Then
          aClinBox[j].Value = sVal[0]
          aTextArea[j].Text = sVal[1]
        Endif
      Endif

    Else If $xOption[j] = "Date Time" Then
      aDateBox[j].Value = Now()

    Else If $xOption[j] = "BS Date" Then
      aDateBox[j].Value = Now()
    Else If $xOption[j] = "User Profile" Then

    Else If $xOption[j] = "ImageValue" Then
      sPath = modImage.DisplayVisualData(lblitem.Text, $xitem[j], "", $xOption[j])
      sVal = CustomDraw(sPath)
      If sVal Then
        aButtonBox[j].Text = sVal[0]
      Endif

    Else If $xOption[j] = "Visual Input" Then
      sPath = modImage.DisplayVisualData(lblitem.Text, $xitem[j], "", $xOption[j])
      If sPath Then
        xval = CVisualValue(lblitem.Text, sPath, aGenTextArea[j].Text)
        If xval Then
          aGenTextArea[j].Text = xval
        Endif
      Endif

    Else If $xOption[j] = "CopyValue" Then
      aGenTextArea[j].Text = modReportVar.GetLastQualiParamValue($xSource[j], $xExam[j], $encid)

    Else If $xOption[j] = "Calculated" Then
      If $xExam[j] = "Expression" Then
        aGenTextArea[j].Text = modReportVar.GetCalcValueVariant($xSysCons[j], $encid)
      Else
        xval = modAllExam.GetExamDefaultValue("Exam", $xExam[j])
        If xval Then
          aGenTextArea[j].Text = modReportVar.GetCalcValueVariant(xval, $encid)
        Else
          aGenTextArea[j].Text = ""
        Endif
      Endif

    Endif

  Endif

End

Public Sub ComboGroup_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

Public Sub DichoText_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

' Public Sub ComboGroup_GotFocus()
'
'   Dim j As Integer
'
'   j = Last.Tag
'   If modBasic.$TabletModeEnable = "Yes" Then
'     If Not aComboBox[j].Text Then
'       aComboBox[j].Popup
'     Endif
'   Endif
'
' End
'
' Public Sub ComboGroup_KeyRelease()
'
'   Dim j As Integer
'
'   j = Last.Tag
'   modFillContainer.AutoFillComboBox(aComboBox[j])
'
' End
'
' Private Sub OpenAutoOptions(j As Integer)
'
'   If chkautoption.Value = True Then
'     OpenOption(j - 1)
'   Endif
'
' End

''======================= For GridView (copied from TextTable)=================
' Private Sub DisplayAgegrid(sColumns As String[], sTable As String, GridView1 As GridView)
'
'   Dim $ageFile As String[]
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'   Dim Column As Integer
'
'   GridView1.Clear
'   GridView1.Columns.Count = sColumns.Count
'   GridView1.Count = Split(sTable, gb.NewLine).Count - 1
'
'   Row = 0
'   $ageFile = Split(sTable, gb.NewLine)
'   For Each sline In $ageFile
'     sCol = Split(sline, ";")
'     If sline = $ageFile[0] Then
'     Else
'       For Column = 0 To sCol.Count - 1
'         GridView1[Row - 1, Column].Text = sCol[Column]
'       Next
'     Endif
'     Row = Row + 1
'   Next
'
'   For Column = 0 To sColumns.Count - 1
'     GridView1.Columns[Column].Text = sColumns[Column]
'     Try GridView1.Columns.Width = CInt(Floor(Frame1.Width / sCol.Count))
'   Next
'
' End
'
' Private Function GetTableData(sColumns As String[], GridView1 As GridView) As String
'
'   Dim Row As Integer
'   Dim Column As Integer
'   Dim sCol As String[]
'   Dim sRow As String[]
'   Dim xval As String
'
'   sRow = New String[]
'   sRow.Add(sColumns.Join(";"))
'   For Row = 0 To GridView1.Count - 1
'     sCol = New String[]
'     For Column = 0 To GridView1.Columns.Count - 1
'       sCol.Add(GridView1[Row, Column].Text)
'     Next
'     sRow.Add(sCol.Join(";"))
'   Next
'   xval = sRow.Join(gb.NewLine)
'   Return xval
'
' End

Public Sub WebForm_Open()

  Dim xoption As String

  xoption = modSettings.ShowSettingFromFIle("EntrySetting/AutoDisplayOptions")
  If xoption = "Yes" Then
    chkautoption.Value = True
  Else If xoption = "No" Then
    chkautoption.Value = False
  Endif

End

''----------- icons
Public Sub btnpanexam_Click()

End

Public Sub btnexecexam_Click()

End

Public Sub btnattexam_Click()

End
