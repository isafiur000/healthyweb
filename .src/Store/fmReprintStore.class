' Gambas class file

Private $sType As String
Private $rData As Result
Private $aMyFields As String[]

Public Sub _new(sType As String)

  $sType = sType

  Me.Title = $sType
  ShowControls()

  FillICDGrid()
  txtname.SetFocus

End

Private Sub ShowControls()

  If $sType = "PurEntry" Then
    btnprintpast.Visible = True
  Endif

End

''========================== Individual types ===============
Private Function GetItemList() As Result

  Dim res As Result

  If $sType = "PurEntry" Then
    res = GetPurchaseReferenceList()
  Else If $sType = "StockReturn" Then
    res = StockReturnRefe()
  Else If $sType = "Transfer" Then
    res = GetTransferReferenceList()
  Else If $sType = "Consume" Then
    res = GetBulkSaleReferenceList()
  Else If $sType = "Adjustment" Then
    res = AdjustReferenceList()
  Endif

  Return res

End

Public Sub GridView1_Select()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    txtrefno.Text = $rData["fldreference"]
  Endif

End

Public Sub btnreprt_Click()

  Dim xPath As String

  If $sType = "PurEntry" Then
    xPath = modHTMLStockReport.PurchaseEntryReport(txtrefno.Text, "PurEntry")
  Else If $sType = "StockReturn" Then
    xPath = modHTMLStock.ShowStockReturnReport(txtrefno.Text)
  Else If $sType = "Transfer" Then
    xPath = modHTMLStock.ShowStockTransferReport(txtrefno.Text)
  Else If $sType = "Consume" Then
    xPath = modHTMLStock.ShowStockConsumeReport(txtrefno.Text)
  Else If $sType = "Adjustment" Then
    xPath = modHTMLStock.ShowStockAdjustmentReport(txtrefno.Text)
  Endif
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnprintformat_Click()

  Dim xPath As String

  If $sType = "PurEntry" Then
    xPath = modMaLePaFormat.PurchaseEntryMaLePa(txtrefno.Text, "PurEntry")
  Else If $sType = "StockReturn" Then

  Else If $sType = "Transfer" Then

  Else If $sType = "Consume" Then

  Else If $sType = "Adjustment" Then

  Endif
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnprintpast_Click()

  Dim xPath As String

  If $sType = "PurEntry" Then
    xPath = modMaLePaFormat.PastPurchaseOrderMaLePa(txtrefno.Text, "PurEntry")
  Endif
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

''===================== Procedures ==========================
Private Function GetPurchaseReferenceList() As Result

  Dim res As Result

  If modBasic.$ViewLockInventory = "Location" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldpurdate from tblpurchasebill where fldreference in(select fldreference from tblpurchase where fldcomp=&1) and fldreference like &2 ORDER BY fldpurdate DESC", modBasic.$compID, Trim(txtname.Text) & "%")
  Else If modBasic.$ViewLockInventory = "User" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldpurdate from tblpurchasebill where flduserid=&1 and fldreference like &2 ORDER BY fldpurdate DESC", modBasic.$lbluser, Trim(txtname.Text) & "%")
  Else
    res = modDatabase.$myConn.Exec("select fldreference,fldpurdate from tblpurchasebill where fldreference like &1 ORDER BY fldpurdate DESC", Trim(txtname.Text) & "%")
  Endif
  Return res

End

Private Function StockReturnRefe() As Result

  Dim res As Result

  If modBasic.$ViewLockInventory = "Location" Then
    res = modDatabase.$myConn.Exec("select fldnewreference as fldreference,fldtime from tblstockreturn where fldsave=&1 and fldcomp=&2 and fldnewreference like &3 GROUP BY fldnewreference ORDER BY fldtime DESC", True, modBasic.$compID, Trim(txtname.Text) & "%")
  Else If modBasic.$ViewLockInventory = "User" Then
    res = modDatabase.$myConn.Exec("select fldnewreference as fldreference,fldtime from tblstockreturn where fldsave=&1 and flduserid=&2 and fldnewreference like &3 GROUP BY fldnewreference ORDER BY fldtime DESC", True, modBasic.$lbluser, Trim(txtname.Text) & "%")
  Else
    res = modDatabase.$myConn.Exec("select fldnewreference as fldreference,fldtime from tblstockreturn where fldsave=&1 and fldnewreference like &2 GROUP BY fldnewreference ORDER BY fldtime DESC", True, Trim(txtname.Text) & "%")
  Endif
  Return res

End

Private Function GetTransferReferenceList() As Result

  Dim res As Result

  If modBasic.$ViewLockInventory = "Location" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldtoentrytime from tbltransfer where fldfromsav=&1 and fldtosav=&2 and fldfromcomp=&3 and fldreference like &4 GROUP BY fldreference ORDER BY fldtoentrytime DESC", True, True, modBasic.$compID, Trim(txtname.Text) & "%")
  Else If modBasic.$ViewLockInventory = "User" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldtoentrytime from tbltransfer where fldfromsav=&1 and fldtosav=&2 and fldfromuser=&3 and fldreference like &4 GROUP BY fldreference ORDER BY fldtoentrytime DESC", True, True, modBasic.$lbluser, Trim(txtname.Text) & "%")
  Else
    res = modDatabase.$myConn.Exec("select fldreference,fldtoentrytime from tbltransfer where fldfromsav=&1 and fldtosav=&2 and fldreference like &3 GROUP BY fldreference ORDER BY fldtoentrytime DESC", True, True, Trim(txtname.Text) & "%")
  Endif
  Return res

End

Private Function GetBulkSaleReferenceList() As Result

  Dim res As Result

  If modBasic.$ViewLockInventory = "Location" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldtime from tblbulksale where fldsave=&1 and fldcomp=&2 and fldreference like &3 GROUP BY fldreference ORDER BY fldtime DESC", True, modBasic.$compID, Trim(txtname.Text) & "%")
  Else If modBasic.$ViewLockInventory = "User" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldtime from tblbulksale where fldsave=&1 and flduserid=&2 and fldreference like &3 GROUP BY fldreference ORDER BY fldtime DESC", True, modBasic.$lbluser, Trim(txtname.Text) & "%")
  Else
    res = modDatabase.$myConn.Exec("select fldreference,fldtime from tblbulksale where fldsave=&1 and fldreference like &2 GROUP BY fldreference ORDER BY fldtime DESC", True, Trim(txtname.Text) & "%")
  Endif
  Return res

End

Private Function AdjustReferenceList() As Result

  Dim res As Result

  If modBasic.$ViewLockInventory = "Location" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldtime from tbladjustment where fldreference like &1 and fldsav=&2 and fldcomp=&3 GROUP BY fldreference ORDER BY fldtime DESC", Trim(txtname.Text) & "%", True, modBasic.$compID)
  Else If modBasic.$ViewLockInventory = "User" Then
    res = modDatabase.$myConn.Exec("select fldreference,fldtime from tbladjustment where fldreference like &1 and fldsav=&2 and flduserid=&3 GROUP BY fldreference ORDER BY fldtime DESC", Trim(txtname.Text) & "%", True, modBasic.$lbluser)
  Else
    res = modDatabase.$myConn.Exec("select fldreference,fldtime from tbladjustment where fldreference like &1 and fldsav=&2 GROUP BY fldreference ORDER BY fldtime DESC", Trim(txtname.Text) & "%", True)
  Endif
  Return res

End

''========================== controls =====================
Public Sub FillICDGrid()

  $rData = GetItemList()
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Width = CStr(400 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "Reference"
    .Columns[1].Text = "Date"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub txtname_Change()

  FillICDGrid()

End

Public Sub btnclose_Click()

  Me.Close

End
