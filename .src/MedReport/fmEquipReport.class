' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $SSQLFields As String[]
Private $RepoStr As String

Public Sub _new()

  Dim xhospfld As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      pnlocat.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif

  Else
    pnlocat.Visible = False
  Endif

  cmbitem.List = modNonMedical.NonStockBillingItemArray("Equipment", "%")
  cmbitem.Add("%")
  cmbitem.Text = "%"

  dtfir.Value = Now()
  dtlast.Value = Now()
  rbentry.Value = True

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldid", "fldencounterval", "fldencounterval", "fldencounterval", "flditem", "fldfirsttime", "fldsecondtime", "fldid"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif
  chkgrid.Value = True

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim sql As String
  Dim res As Result

  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  If rbentry.Value = True Then
    sql = "select " & xFldList.Join(",") & " from tblpattiming where fldtype=&1 and flditem like &2 and fldfirsttime>=&3 and fldfirsttime<=&4" & $RepoStr                                                                         ''
  Else If rbexit.Value = True Then
    sql = "select " & xFldList.Join(",") & " from tblpattiming where fldtype=&1 and flditem like &2 and fldsecondtime>=&3 and fldsecondtime<=&4" & $RepoStr                                                                        ''
  Endif
  res = modDatabase.$syConn.Exec(sql, "Equipment", cmbitem.Text, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value))
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 5 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 6 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 7 Then
    xxx = modPatPatho.GetEquipServiceInterval(xVariable)
  Else If Column = 8 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif
  Return xxx

End

Public Sub btnrefresh_Click()

  TabStrip1.Index = 0
  $rData = ExecuteQuery($SSQLFields.Copy())
  If $rData.Available Then
    lblrecordcount.Text = "Count: " & $rData.Count
  Else
    lblrecordcount.Text = "Count: 0"
  Endif

  If chkgrid.Value = True Then
    FillPatGrid()
  Endif

  If chkchart.Value = True Then
    FillItemChartQTY()
  Endif

End

Public Sub FillPatGrid()

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "EncID"
    .Columns[2].Text = "Name"
    .Columns[3].Text = "Gender"
    .Columns[4].Text = "Equipment"
    .Columns[5].Text = "Start"
    .Columns[6].Text = "Stop"
    .Columns[7].Text = "Duration"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])

End

''---------------------------------- Chart -------------------------------------
Private Sub FillItemChartQTY()

  Dim xLst As String[]
  Dim sFile As String

  xLst = New String[]
  For Each $rData
    If Not modBasic.$HospCode And If MMain.$WebReport = "Multiple" Then
      xLst.Add($rData["fldhospcode"] & gb.Tab & modPatient.GetPatientSex($rData["fldencounterval"], modDatabase.$syConn))
    Else
      If rbentry.Value = True Then
        xLst.Add(Format(DateDiff(dtfir.Value, $rData["fldfirsttime"], modChart.GetDateIntegerFromSetting()), "0#.#") & gb.Tab & modPatient.GetPatientSex($rData["fldencounterval"], modDatabase.$syConn))
      Else If rbexit.Value = True Then
        xLst.Add(Format(DateDiff(dtfir.Value, $rData["fldsecondtime"], modChart.GetDateIntegerFromSetting()), "0#.#") & gb.Tab & modPatient.GetPatientSex($rData["fldencounterval"], modDatabase.$syConn))
      Endif
    Endif
  Next

  sFile = Temp()
  File.Save(sFile, xLst.Join(gb.NewLine))
  btnstats.Tag = sFile
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.ProportionChart(sFile, "Equipment Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.ProportionChart(sFile, "Equipment Count"))
  Endif

End

Public Sub btnexport_Click()

  Me.Exec("window.open('" & PictureBox1.Image & "'); ")

End

Public Sub btnstats_Click()

  Dim hForm As FmOpenLink

  If modBasic.$ExpoRepoUser = True Then
    Message.Info(("Generating Data ...."), ("OK"))
    hForm = New FmOpenLink(modPrint.GetFileWebURL(btnstats.Tag))
    hForm.ShowModal
  Endif

End

''--------------------------- Grid View report -----------------------------
Public Sub mnuReport_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If modPatientSub.AllowEncIDHistory($rData["fldencounterval"], modDatabase.$syConn) = True Then
      modPatReports.GetSelectedPatientValues($rData["fldencounterval"], MMain.$defUnit)
    Endif
  Endif

End

Public Sub mnuencreport_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  hFile = New CUnivariate
  Column = modCustPatient.GetUnivariateColumn(1)
  xField = $SSQLFields[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucross_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(1)
  xFieRow = $SSQLFields[Row]
  Column = modCustPatient.GetCrossVarColumn(1)
  xFieColm = $SSQLFields[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab

    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = $SSQLFields[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = $SSQLFields[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    'modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnugridsummary_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = $SSQLFields[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = $SSQLFields[modCustPatient.$SumGroupColumn - 1]
  valCol = $SSQLFields[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub btnexpo_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "EQUIPMENT: " & cmbitem.Text
  xparam2 = modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  encColumn = 1
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To $SSQLFields.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[$SSQLFields[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)
  Next
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

Public Sub chkchart_Click()

  TabStrip1.Index = 1

End

Public Sub mnucolumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim xFieColm As String
  Dim res As Result
  Dim yval As Variant
  Dim xList As String[]

  Dim xVar As Variant[]
  Dim xFldList As String[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then
    xFldList = $SSQLFields
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieColm])
    xList = New String[]
    If res.Available Then
      For Each res
        yval = GetGridViewValue(Column, res[xFieColm])
        If yval Then
          xList.Add(yval)
        Endif
      Next
    Endif
    If xList.Count Then
      xVar = modString.GetUnivariateSummary(xList)
      xPath = modCHTMLReport.CreateHTMLReportFromArray(["Variable", "Count"], xVar, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
