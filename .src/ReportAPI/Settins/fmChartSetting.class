' Gambas class file

' Private $ageFile As File

Public Sub _new()

  Dim hForm As FmUnivariate

  hForm = New FmUnivariate(Panel2)

End

Public Sub IconPanel1_Click()

  Dim hForm As FmUnivariate
  Dim hForm1 As FmBivariate
  Dim hForm2 As FmGridSummary
  Dim hForm3 As FmCrossTabChart

  If IconPanel1.Index = 0 Then
    If Panel2.Children.Count Then
      Panel2.DeleteChildren()
    Endif
    hForm = New FmUnivariate(Panel2)
  Else If IconPanel1.Index = 1 Then
    If Panel3.Children.Count Then
      Panel3.DeleteChildren()
    Endif
    hForm1 = New FmBivariate(Panel3)
  Else If IconPanel1.Index = 2 Then
    cmbregdepvariable.List = modLongVar.$RegistVar
    cmbregvarvariable1.List = modLongVar.$RegistVar
    cmbregvarvariable2.List = modLongVar.$RegistVar
    cmbregvarvariable3.List = modLongVar.$RegistVar
    cmbregvarvariable4.List = modLongVar.$RegistVar
    cmbregvarvariable5.List = modLongVar.$RegistVar
    DisplayRegressionValues()
  Else If IconPanel1.Index = 3 Then
    cmbtimerowtype.List = ["Nominal", "Ordinal", "Scale"]
    cmbtimecoltype.List = ["Nominal", "Ordinal", "Scale"]
    cmbtimerow.List = modLongVar.$RegistVar
    cmbtimecol.List = modLongVar.$RegistVar
    ShowTimeCustColumn()
  Else If IconPanel1.Index = 4 Then
    If Panel1.Children.Count Then
      Panel1.DeleteChildren()
    Endif
    hForm3 = New FmCrossTabChart(Panel1)
  Else If IconPanel1.Index = 5 Then
    If Panel4.Children.Count Then
      Panel4.DeleteChildren()
    Endif
    hForm2 = New FmGridSummary(Panel4)
  Else If IconPanel1.Index = 6 Then
    cmbcurve.List = ["Yes", "No"]
    cmbclinpoint.List = ["Yes", "No"]
    cmbclinlabel.List = ["Yes", "No"]
    cmbclinup.List = ["Yes", "No"]
    cmbclinlow.List = ["Yes", "No"]
    cmbclinormal.List = ["Yes", "No"]
    cmbclinhour.List = ["Yes", "No"]
    cmbclindaylabel.List = ["Yes", "No"]
    ShowClinicalSetting()
  Else If IconPanel1.Index = 7 Then
    cmbfintitle.List = ["Yes", "No"]
    cmbfinxlabel.List = ["Yes", "No"]
    cmbfinylabel.List = ["Yes", "No"]
    cmbfinstat.List = ["GNUChart", "PSPP"]
    cmbchartday.List = ["Day", "Week", "Month", "Year"]
    cmbfinamtgrp.List = ["Units", "Tens", "Hundreds", "Thousands"]
    cmbfinqtygrp.List = ["Units", "Tens", "Hundreds", "Thousands"]
    cmbfinsummry.List = ["Date", "Item"]
    ShowFinancialChart()
  Else If IconPanel1.Index = 8 Then
    cmbgender.List = ["Yes", "No"]
    cmbtotal.List = ["Yes", "No"]
    StatSetting()
    ShowHealthReport()
    GetCustomGrouping()
  Endif

  ' cmbagefir.List = ["Days", "Months", "Years"]
  ' cmbagelas.List = ["Days", "Months", "Years"]
  ' cmbwtfir.List = ["Gram", "KiloGram"]
  ' cmbwtlast.List = ["Gram", "KiloGram"]

  ' DisplayAgegrid()
  ' DisplayWtgrid()

End

Private Sub ClearPatientBox(txtmin As WebValueBox, txtmax As WebValueBox, txtusegridcol As WebSpinBox, chkusegrid As WebCheckBox, txtsqlgrid As WebTextArea, txtgrdfir As WebSpinBox, txtgrdsec As WebTextBox, txtgrdthir As WebTextBox, cmbencvar As WebComboBox, txtsqlenc As WebTextArea, txtencfir As WebTextBox, txtencsec As WebTextBox, txtencthir As WebTextBox, txtxscript As WebButtonBox, txtxshell As WebTextBox)                                                              ''

  txtmin.Value = 0
  txtmax.Value = 0
  txtusegridcol.Value = 0
  chkusegrid.Value = False
  txtsqlgrid.Text = ""
  txtgrdfir.Value = 0
  txtgrdsec.Text = ""
  txtgrdthir.Text = ""
  cmbencvar.Text = ""
  txtsqlenc.Text = ""
  txtencfir.Text = ""
  txtencsec.Text = ""
  txtencthir.Text = ""
  txtxscript.Text = ""
  txtxshell.Text = ""

End

'''--------------------------clinical chart -----------------------------------------
Private Sub ShowClinicalSetting()

  cmbcurve.Text = modSettings.ShowSettingFromFIle("ClinicalChart/DataCurve")
  cmbclinpoint.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowPoints")
  cmbclinlabel.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowLabels")
  cmbclinup.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowUpperRange")
  cmbclinlow.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowLowerRange")
  cmbclinormal.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowNormalRange")
  cmbclinhour.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowHourGrid")
  cmbclindaylabel.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowGridLabel")

  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowData_Color") Then
  '   coldatacurve.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowData_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowPoints_Color") Then
  '   colclinpoint.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowPoints_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowLabels_Color") Then
  '   colclinlabel.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowLabels_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowUpperRange_Color") Then
  '   colclinup.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowUpperRange_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowLowerRange_Color") Then
  '   colclinlow.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowLowerRange_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowNormalRange_Color") Then
  '   colclinormal.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowNormalRange_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowHourGrid_Color") Then
  '   colclinhour.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowHourGrid_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowDayGrid_Color") Then
  '   colclinday.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowDayGrid_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowGridLabel_Color") Then
  '   colclindaylabel.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowGridLabel_Color"))
  ' Endif

  ''hour diff
  If modSettings.ShowSettingFromFIle("ClinicalChart/HourDifference") Then
    txthrdiff.Val = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/HourDifference"))
  Endif

End

Public Sub btndatacurve_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/DataCurve", cmbcurve.Text)
  modBasic.$ClinChartDataCurve = cmbcurve.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowData_Color", coldatacurve.Value)
  ' modBasic.$ClinColorData = coldatacurve.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclinpoint_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowPoints", cmbclinpoint.Text)
  modBasic.$ClinChartShowPoint = cmbclinpoint.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowPoints_Color", colclinpoint.Value)
  ' modBasic.$ClinColorPoints = colclinpoint.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclinlabel_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowLabels", cmbclinlabel.Text)
  modBasic.$ClinChartShowLabel = cmbclinlabel.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowLabels_Color", colclinlabel.Value)
  ' modBasic.$ClinColorLabel = colclinlabel.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclinup_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowUpperRange", cmbclinup.Text)
  modBasic.$ClinChartShowUpper = cmbclinup.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowUpperRange_Color", colclinup.Value)
  ' modBasic.$ClinColorUpper = colclinup.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclinlow_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowLowerRange", cmbclinlow.Text)
  modBasic.$ClinChartShowLower = cmbclinlow.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowLowerRange_Color", colclinlow.Value)
  ' modBasic.$ClinColorLower = colclinlow.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclinormal_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowNormalRange", cmbclinormal.Text)
  modBasic.$ClinChartShowNormal = cmbclinormal.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowNormalRange_Color", colclinormal.Value)
  ' modBasic.$ClinColorNormal = colclinormal.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclinhour_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowHourGrid", cmbclinhour.Text)
  modBasic.$ClinChartShowHourGrid = cmbclinhour.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowHourGrid_Color", colclinhour.Value)
  ' modBasic.$ClinColorHourGrid = colclinhour.Value
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowDayGrid_Color", colclinday.Value)
  ' modBasic.$ClinColorDayGrid = colclinday.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnclindaylabel_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowGridLabel", cmbclindaylabel.Text)
  modBasic.$ClinChartShowGridLabel = cmbclindaylabel.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowGridLabel_Color", colclindaylabel.Value)
  ' modBasic.$ClinColorGridLabel = colclindaylabel.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnhrdiff_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/HourDifference", CStr(txthrdiff.Value))
  modBasic.$ClinChartHourDiff = txthrdiff.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

''----------------------------------- financial chart ------------------------------------------------
Private Sub ShowFinancialChart()

  cmbfintitle.Text = modSettings.ShowSettingFromFIle("InventoryChart/ShowTitle")
  cmbfinxlabel.Text = modSettings.ShowSettingFromFIle("InventoryChart/ShowXLabel")
  cmbfinylabel.Text = modSettings.ShowSettingFromFIle("InventoryChart/ShowYLabel")
  cmbchartday.Text = modSettings.ShowSettingFromFIle("InventoryChart/DataGrouping")
  cmbfinqtygrp.Text = modSettings.ShowSettingFromFIle("InventoryChart/QTYGrouping")
  cmbfinamtgrp.Text = modSettings.ShowSettingFromFIle("InventoryChart/AMTGrouping")
  cmbfinsummry.Text = modSettings.ShowSettingFromFIle("InventoryChart/SummaryBy")
  If modSettings.ShowSettingFromFIle("InventoryChart/ChartColor") Then
    clrchartcolor.Text = modSettings.ShowSettingFromFIle("InventoryChart/ChartColor")
  Endif
  cmbfinstat.Text = modSettings.ShowSettingFromFIle("InventoryChart/Statistics")

  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartLeft") Then
  '   txtleftval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartLeft"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartTop") Then
  '   txttopval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartTop"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartRight") Then
  '   txtrightval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartRight"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartBottom") Then
  '   txtbottomval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartBottom"))
  ' Endif

End

Public Sub btnfintitle_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ShowTitle", cmbfintitle.Text)
  modBasic.$InvChShowTitle = cmbfintitle.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfinxlabel_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ShowXLabel", cmbfinxlabel.Text)
  modBasic.$InvChShowXLabel = cmbfinxlabel.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfinylabel_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ShowYLabel", cmbfinylabel.Text)
  modBasic.$InvChShowYLabel = cmbfinylabel.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnchartday_Click()

  modSettings.SaveSettingsToFile("InventoryChart/DataGrouping", cmbchartday.Text)
  modBasic.$InvChDataGrouping = cmbchartday.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfinqtygrp_Click()

  modSettings.SaveSettingsToFile("InventoryChart/QTYGrouping", cmbfinqtygrp.Text)
  modBasic.$InvChQTYGrouping = cmbfinqtygrp.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfinamtgrp_Click()

  modSettings.SaveSettingsToFile("InventoryChart/AMTGrouping", cmbfinamtgrp.Text)
  modBasic.$InvChAMTGrouping = cmbfinamtgrp.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnchartcolor_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ChartColor", clrchartcolor.Text)
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfinstat_Click()

  modSettings.SaveSettingsToFile("InventoryChart/Statistics", cmbfinstat.Text)
  modBasic.$ChartExecStat = cmbfinstat.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnfinsummry_Click()

  modSettings.SaveSettingsToFile("InventoryChart/SummaryBy", cmbfinsummry.Text)
  modBasic.$ChartSummaryFormat = cmbfinsummry.Text
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnset_Click()

  ' modSettings.SaveSettingsToFile("InventoryChart/ChartLeft", CStr(txtleftval.Value))
  ' modSettings.SaveSettingsToFile("InventoryChart/ChartTop", CStr(txttopval.Value))
  ' modSettings.SaveSettingsToFile("InventoryChart/ChartRight", CStr(txtrightval.Value))
  ' modSettings.SaveSettingsToFile("InventoryChart/ChartBottom", CStr(txtbottomval.Value))
  ' modBasic.ResizeInventoryChartSet()
  ' Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

' '''-------------------------------------------------- Age Grouping -----------------------------
' Public Sub btnageadd_Click()
'
'   Dim xx As String
'   Dim xfir As String
'   Dim xlas As String
'
'   If txtagegroup.Text Then
'     If Not Exist(modHelpVariable.AppDirectory &/ "agegrouping") Then
'       File.Save(modHelpVariable.AppDirectory &/ "agegrouping", "")
'     Endif
'     xx = File.Load(modHelpVariable.AppDirectory &/ "agegrouping")
'
'     If cmbagefir.Text = "Months" Then
'       xfir = CStr(CInt(txtagefir.Value * 30))
'     Else If cmbagefir.Text = "Years" Then
'       xfir = CStr(CInt(txtagefir.Value * 365))
'     Else
'       xfir = CStr(CInt(txtagefir.Value))
'     Endif
'
'     If cmbagelas.Text = "Months" Then
'       xlas = CStr(CInt(txtagelas.Value * 30))
'     Else If cmbagelas.Text = "Years" Then
'       xlas = CStr(CInt(txtagelas.Value * 365))
'     Else
'       xlas = CStr(CInt(txtagelas.Value))
'     Endif
'
'     xx = xx & txtagegroup.Text & ";" & xfir & ";" & xlas & gb.NewLine
'     If Exist(modHelpVariable.AppDirectory &/ "agegrouping") Then
'       Kill modHelpVariable.AppDirectory &/ "agegrouping"
'     Endif
'     File.Save(modHelpVariable.AppDirectory &/ "agegrouping", xx)
'     DisplayAgegrid()
'   Endif
'
' End
'
' Public Sub btnagegrprefresh_Click()
'
'   DisplayAgegrid()
'
' End
'
' Private Sub DisplayAgegrid()
'
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'
'   If Exist(modHelpVariable.AppDirectory &/ "agegrouping") Then
'     GridView1.Clear
'     GridView1.Columns.Count = 3
'     GridView1.Count = modString.GetLineInTextFile(modHelpVariable.AppDirectory &/ "agegrouping")
'     $ageFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
'     modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
'
'     Row = 0
'     For Each sline In $ageFile.Lines
'       sCol = Split(sLine, ";")
'       GridView1[Row, 0].Text = sCol[0]
'       GridView1[Row, 1].Text = sCol[1]
'       GridView1[Row, 2].Text = sCol[2]
'       Row = Row + 1
'     Next
'     $ageFile.Close()
'
'     With GridView1
'       .Columns[0].Text = "Age Group Label"
'       .Columns[1].Text = "Min age (Days)"
'       .Columns[2].Text = "Max age(Days)"
'       .Columns[0].Width = 250 * modBasic.$AppWidthRatio
'       .Columns[1].Width = 150 * modBasic.$AppWidthRatio
'       .Columns[2].Width = 150 * modBasic.$AppWidthRatio
'     End With
'   Else
'     GridView1.Clear
'   Endif
'
' End
'
' Public Sub btnagerefresh_Click()
'
'   Dim sPath As String
'
'   sPath = modHelpVariable.AppDirectory &/ "agegrouping"
'   If Exist(sPath) Then
'     Desktop.Open(sPath)
'   Endif
'
' End
'
' Public Sub btnclear_Click()
'
'   Dim sPath As String
'
'   sPath = modHelpVariable.AppDirectory &/ "agegrouping"
'   If Exist(sPath) Then
'     Kill sPath
'   Endif
'
' End

' '''-------------------------------------------------- Weight Grouping -----------------------------
' Public Sub cmbwtadd_Click()
'
'   Dim xx As String
'   Dim xfir As String
'   Dim xlas As String
'
'   If txtwtgroup.Text Then
'     If Not Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
'       File.Save(modHelpVariable.AppDirectory &/ "weightgrouping", "")
'     Endif
'     xx = File.Load(modHelpVariable.AppDirectory &/ "weightgrouping")
'
'     If cmbwtfir.Text = "KiloGram" Then
'       xfir = CStr(txtwtfir.Value * 1000)
'     Else
'       xfir = CStr(txtwtfir.Value)
'     Endif
'
'     If cmbwtlast.Text = "KiloGram" Then
'       xlas = CStr(txtwtlast.Value * 1000)
'     Else
'       xlas = CStr(txtwtlast.Value)
'     Endif
'
'     xx = xx & txtwtgroup.Text & ";" & xfir & ";" & xlas & gb.NewLine
'     If Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
'       Kill modHelpVariable.AppDirectory &/ "weightgrouping"
'     Endif
'     File.Save(modHelpVariable.AppDirectory &/ "weightgrouping", xx)
'     DisplayWtgrid()
'   Endif
'
' End
'
' Public Sub btnwtgrprefresh_Click()
'
'   DisplayWtgrid()
'
' End
'
' Private Sub DisplayWtgrid()
'
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'
'   If Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
'     GridView2.Clear
'     GridView2.Columns.Count = 3
'     GridView2.Count = modString.GetLineInTextFile(modHelpVariable.AppDirectory &/ "weightgrouping")
'     $ageFile = Open modHelpVariable.AppDirectory &/ "weightgrouping"
'     modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "weightgrouping")
'
'     Row = 0
'     For Each sline In $ageFile.Lines
'       sCol = Split(sLine, ";")
'       GridView2[Row, 0].Text = sCol[0]
'       GridView2[Row, 1].Text = sCol[1]
'       GridView2[Row, 2].Text = sCol[2]
'       Row = Row + 1
'     Next
'     $ageFile.Close()
'
'     With GridView2
'       .Columns[0].Text = "Wt Group Label"
'       .Columns[1].Text = "Min Wt (Gram)"
'       .Columns[2].Text = "Max Wt (Gram)"
'       .Columns[0].Width = 250 * modBasic.$AppWidthRatio
'       .Columns[1].Width = 150 * modBasic.$AppWidthRatio
'       .Columns[2].Width = 150 * modBasic.$AppWidthRatio
'     End With
'
'   Else
'     GridView2.Clear
'   Endif
'
' End
'
' Public Sub btnwtrefresh_Click()
'
'   Dim sPath As String
'
'   sPath = modHelpVariable.AppDirectory &/ "weightgrouping"
'   If Exist(sPath) Then
'     Desktop.Open(sPath)
'   Endif
'
' End

''---------------------------------- Health Report ---------------------------
Private Sub ShowHealthReport()

  cmbgender.Text = modSettings.ShowSettingFromFIle("HealthReport/ShowGender")
  cmbtotal.Text = modSettings.ShowSettingFromFIle("HealthReport/ShowTotal")

End

Public Sub btngender_Click()

  modSettings.SaveSettingsToFile("HealthReport/ShowGender", cmbgender.Text)
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntotal_Click()

  modSettings.SaveSettingsToFile("HealthReport/ShowTotal", cmbtotal.Text)
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

''----------------------------- Custom Grouping ------------------
Private Sub GetCustomGrouping()

  modSettings.ShowCheckBox(chkagegrpcustom, "AgeGrouping/Custom")
  modSettings.ShowCheckBox(chkwtgrpcustom, "WeightGrouping/Custom")

End

Public Sub btnagegrpcustom_Click()

  modSettings.EnterCheckSetting(chkagegrpcustom, "AgeGrouping/Custom")
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnwtgrpcustom_Click()

  modSettings.EnterCheckSetting(chkwtgrpcustom, "WeightGrouping/Custom")
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

''------------------------------------- Statistical Settings -------------------------
Private Sub StatSetting()

  If modSettings.ShowSettingFromFIle("StatisticsSetting/ConfidenceInterval") Then
    txtconfinterval.Value = CFloat(modSettings.ShowSettingFromFIle("StatisticsSetting/ConfidenceInterval"))
  Endif

End

Public Sub btnconfinterval_Click()

  modSettings.SaveSettingsToFile("StatisticsSetting/ConfidenceInterval", CStr(txtconfinterval.Value))
  modBasic.$StatConfInterval = txtconfinterval.Value
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

''=============================== Regression analysis ================================
Private Sub DisplayRegressionValues()

  ''dependent variable
  modSettings.ShowCheckBox(chkregdepgrid, "RegressionAnalysis/OutcomeVar_UseGridView")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridViewCol") Then
    txtregdepgridcol.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridViewCol"))
  Endif
  txtregdepgridsql.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridSQLText")
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridOption1") Then
    txtregdepgridfiroption.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridOption1"))
  Endif
  txtregdepgridsecoption.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridOption2")
  txtregdepgridthirdoption.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_GridOption3")

  cmbregdepvariable.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_Enc")
  txtregdepencsql.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_EncSQLText")
  txtregdepencfiroption.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_EncOption1")
  If Not txtregdepencfiroption.Text Then
    txtregdepencfiroption.Text = "{EncounterID}"
  Endif
  txtregdepencsecoption.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_EncOption2")
  txtregdepencthirdoption.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_EncOption3")

  txtregdepscript.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_Script")
  txtregdepshell.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_Shell")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_LowerRange") Then
    txtregdeplower.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_UpperRange") Then
    txtregdepupper.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/OutcomeVar_UpperRange"))
  Endif

  ''Indep Var1
  modSettings.ShowCheckBox(chkregvargrid1, "RegressionAnalysis/IndependentVar1_UseGridView")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridViewCol") Then
    txtregvargridcol1.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridViewCol"))
  Endif
  txtregvargridsql1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridSQLText")
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridOption1") Then
    txtregvargridfiroption1.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridOption1"))
  Endif
  txtregvargridsecoption1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridOption2")
  txtregvargridthirdoption1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_GridOption3")

  cmbregvarvariable1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_Enc")
  txtregvarencsql1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_EncSQLText")
  txtregvarencfiroption1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_EncOption1")
  If Not txtregvarencfiroption1.Text Then
    txtregvarencfiroption1.Text = "{EncounterID}"
  Endif
  txtregvarencsecoption1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_EncOption2")
  txtregvarencthirdoption1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_EncOption3")

  txtregvarscript1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_Script")
  txtregvarshell1.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_Shell")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_LowerRange") Then
    txtregvarlower1.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_UpperRange") Then
    txtregvarupper1.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar1_UpperRange"))
  Endif

  ''Indep Var2
  modSettings.ShowCheckBox(chkregvargrid2, "RegressionAnalysis/IndependentVar2_UseGridView")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridViewCol") Then
    txtregvargridcol2.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridViewCol"))
  Endif
  txtregvargridsql2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridSQLText")
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridOption1") Then
    txtregvargridfiroption2.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridOption1"))
  Endif
  txtregvargridsecoption2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridOption2")
  txtregvargridthirdoption2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_GridOption3")

  cmbregvarvariable2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_Enc")
  txtregvarencsql2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_EncSQLText")
  txtregvarencfiroption2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_EncOption1")
  If Not txtregvarencfiroption2.Text Then
    txtregvarencfiroption2.Text = "{EncounterID}"
  Endif
  txtregvarencsecoption2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_EncOption2")
  txtregvarencthirdoption2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_EncOption3")

  txtregvarscript2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_Script")
  txtregvarshell2.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_Shell")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_LowerRange") Then
    txtregvarlower2.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_UpperRange") Then
    txtregvarupper2.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar2_UpperRange"))
  Endif

  ''Indep Var3
  modSettings.ShowCheckBox(chkregvargrid3, "RegressionAnalysis/IndependentVar3_UseGridView")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridViewCol") Then
    txtregvargridcol3.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridViewCol"))
  Endif
  txtregvargridsql3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridSQLText")
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridOption1") Then
    txtregvargridfiroption3.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridOption1"))
  Endif
  txtregvargridsecoption3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridOption2")
  txtregvargridthirdoption3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_GridOption3")

  cmbregvarvariable3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_Enc")
  txtregvarencsql3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_EncSQLText")
  txtregvarencfiroption3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_EncOption1")
  If Not txtregvarencfiroption3.Text Then
    txtregvarencfiroption3.Text = "{EncounterID}"
  Endif
  txtregvarencsecoption3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_EncOption2")
  txtregvarencthirdoption3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_EncOption3")

  txtregvarscript3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_Script")
  txtregvarshell3.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_Shell")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_LowerRange") Then
    txtregvarlower3.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_UpperRange") Then
    txtregvarupper3.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar3_UpperRange"))
  Endif

  ''Indep Var4
  modSettings.ShowCheckBox(chkregvargrid4, "RegressionAnalysis/IndependentVar4_UseGridView")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridViewCol") Then
    txtregvargridcol4.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridViewCol"))
  Endif
  txtregvargridsql4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridSQLText")
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridOption1") Then
    txtregvargridfiroption4.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridOption1"))
  Endif
  txtregvargridsecoption4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridOption2")
  txtregvargridthirdoption4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_GridOption3")

  cmbregvarvariable4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_Enc")
  txtregvarencsql4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_EncSQLText")
  txtregvarencfiroption4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_EncOption1")
  If Not txtregvarencfiroption4.Text Then
    txtregvarencfiroption4.Text = "{EncounterID}"
  Endif
  txtregvarencsecoption4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_EncOption2")
  txtregvarencthirdoption4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_EncOption3")

  txtregvarscript4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_Script")
  txtregvarshell4.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_Shell")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_LowerRange") Then
    txtregvarlower4.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_UpperRange") Then
    txtregvarupper4.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar4_UpperRange"))
  Endif

  ''Indep Var5
  modSettings.ShowCheckBox(chkregvargrid5, "RegressionAnalysis/IndependentVar5_UseGridView")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridViewCol") Then
    txtregvargridcol5.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridViewCol"))
  Endif
  txtregvargridsql5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridSQLText")
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridOption1") Then
    txtregvargridfiroption5.Value = CInt(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridOption1"))
  Endif
  txtregvargridsecoption5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridOption2")
  txtregvargridthirdoption5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_GridOption3")

  cmbregvarvariable5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_Enc")
  txtregvarencsql5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_EncSQLText")
  txtregvarencfiroption5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_EncOption1")
  If Not txtregvarencfiroption5.Text Then
    txtregvarencfiroption5.Text = "{EncounterID}"
  Endif
  txtregvarencsecoption5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_EncOption2")
  txtregvarencthirdoption5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_EncOption3")

  txtregvarscript5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_Script")
  txtregvarshell5.Text = modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_Shell")

  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_LowerRange") Then
    txtregvarlower5.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_UpperRange") Then
    txtregvarupper5.Value = CFloat(modSettings.ShowSettingFromFIle("RegressionAnalysis/IndependentVar5_UpperRange"))
  Endif

End

Public Sub btnsaveregdep_Click()

  modSettings.EnterCheckSetting(chkregdepgrid, "RegressionAnalysis/OutcomeVar_UseGridView")

  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_GridViewCol", CStr(txtregdepgridcol.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_GridSQLText", txtregdepgridsql.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_GridOption1", CStr(txtregdepgridfiroption.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_GridOption2", txtregdepgridsecoption.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_GridOption3", txtregdepgridthirdoption.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_Enc", cmbregdepvariable.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_EncSQLText", txtregdepencsql.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_EncOption1", txtregdepencfiroption.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_EncOption2", txtregdepencsecoption.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_EncOption3", txtregdepencthirdoption.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_Script", txtregdepscript.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_Shell", txtregdepshell.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_LowerRange", CStr(txtregdeplower.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/OutcomeVar_UpperRange", CStr(txtregdepupper.Value))

  modCustPatient.LoadRegressionSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsaveregvar1_Click()

  modSettings.EnterCheckSetting(chkregvargrid1, "RegressionAnalysis/IndependentVar1_UseGridView")

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_GridViewCol", CStr(txtregvargridcol1.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_GridSQLText", txtregvargridsql1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_GridOption1", CStr(txtregvargridfiroption1.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_GridOption2", txtregvargridsecoption1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_GridOption3", txtregvargridthirdoption1.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_Enc", cmbregvarvariable1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_EncSQLText", txtregvarencsql1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_EncOption1", txtregvarencfiroption1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_EncOption2", txtregvarencsecoption1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_EncOption3", txtregvarencthirdoption1.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_Script", txtregvarscript1.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_Shell", txtregvarshell1.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_LowerRange", CStr(txtregvarlower1.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar1_UpperRange", CStr(txtregvarupper1.Value))

  modCustPatient.LoadRegressionSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsaveregvar2_Click()

  modSettings.EnterCheckSetting(chkregvargrid2, "RegressionAnalysis/IndependentVar2_UseGridView")

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_GridViewCol", CStr(txtregvargridcol2.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_GridSQLText", txtregvargridsql2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_GridOption1", CStr(txtregvargridfiroption2.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_GridOption2", txtregvargridsecoption2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_GridOption3", txtregvargridthirdoption2.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_Enc", cmbregvarvariable2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_EncSQLText", txtregvarencsql2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_EncOption1", txtregvarencfiroption2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_EncOption2", txtregvarencsecoption2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_EncOption3", txtregvarencthirdoption2.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_Script", txtregvarscript2.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_Shell", txtregvarshell2.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_LowerRange", CStr(txtregvarlower2.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar2_UpperRange", CStr(txtregvarupper2.Value))

  modCustPatient.LoadRegressionSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsaveregvar3_Click()

  modSettings.EnterCheckSetting(chkregvargrid3, "RegressionAnalysis/IndependentVar3_UseGridView")

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_GridViewCol", CStr(txtregvargridcol3.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_GridSQLText", txtregvargridsql3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_GridOption1", CStr(txtregvargridfiroption3.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_GridOption2", txtregvargridsecoption3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_GridOption3", txtregvargridthirdoption3.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_Enc", cmbregvarvariable3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_EncSQLText", txtregvarencsql3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_EncOption1", txtregvarencfiroption3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_EncOption2", txtregvarencsecoption3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_EncOption3", txtregvarencthirdoption3.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_Script", txtregvarscript3.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_Shell", txtregvarshell3.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_LowerRange", CStr(txtregvarlower3.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar3_UpperRange", CStr(txtregvarupper3.Value))

  modCustPatient.LoadRegressionSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsaveregvar4_Click()

  modSettings.EnterCheckSetting(chkregvargrid4, "RegressionAnalysis/IndependentVar4_UseGridView")

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_GridViewCol", CStr(txtregvargridcol4.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_GridSQLText", txtregvargridsql4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_GridOption1", CStr(txtregvargridfiroption4.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_GridOption2", txtregvargridsecoption4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_GridOption3", txtregvargridthirdoption4.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_Enc", cmbregvarvariable4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_EncSQLText", txtregvarencsql4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_EncOption1", txtregvarencfiroption4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_EncOption2", txtregvarencsecoption4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_EncOption3", txtregvarencthirdoption4.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_Script", txtregvarscript4.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_Shell", txtregvarshell4.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_LowerRange", CStr(txtregvarlower4.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar4_UpperRange", CStr(txtregvarupper4.Value))

  modCustPatient.LoadRegressionSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnsaveregvar5_Click()

  modSettings.EnterCheckSetting(chkregvargrid5, "RegressionAnalysis/IndependentVar5_UseGridView")

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_GridViewCol", CStr(txtregvargridcol5.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_GridSQLText", txtregvargridsql5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_GridOption1", CStr(txtregvargridfiroption5.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_GridOption2", txtregvargridsecoption5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_GridOption3", txtregvargridthirdoption5.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_Enc", cmbregvarvariable5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_EncSQLText", txtregvarencsql5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_EncOption1", txtregvarencfiroption5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_EncOption2", txtregvarencsecoption5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_EncOption3", txtregvarencthirdoption5.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_Script", txtregvarscript5.Text)
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_Shell", txtregvarshell5.Text)

  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_LowerRange", CStr(txtregvarlower5.Value))
  modSettings.SaveSettingsToFile("RegressionAnalysis/IndependentVar5_UpperRange", CStr(txtregvarupper5.Value))

  modCustPatient.LoadRegressionSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnaddregdep_Click()

  cmbregdepvariable.Text = VarDiagnostic()

End

Public Sub btnaddregvar1_Click()

  cmbregvarvariable1.Text = VarDiagnostic()

End

Public Sub btnaddregvar2_Click()

  cmbregvarvariable2.Text = VarDiagnostic()

End

Public Sub btnaddregvar3_Click()

  cmbregvarvariable3.Text = VarDiagnostic()

End

Public Sub btnaddregvar4_Click()

  cmbregvarvariable4.Text = VarDiagnostic()

End

Public Sub btnaddregvar5_Click()

  cmbregvarvariable5.Text = VarDiagnostic()

End

Public Sub btnclearregressdep_Click()

  ClearPatientBox(txtregdeplower, txtregdepupper, txtregdepgridcol, chkregdepgrid, txtregdepgridsql, txtregdepgridfiroption, txtregdepgridsecoption, txtregdepgridthirdoption, cmbregdepvariable, txtregdepencsql, txtregdepencfiroption, txtregdepencsecoption, txtregdepencthirdoption, txtregdepscript, txtregdepshell)

End

Public Sub btnclearregresvar1_Click()

  ClearPatientBox(txtregvarlower1, txtregvarupper1, txtregvargridcol1, chkregvargrid1, txtregvargridsql1, txtregvargridfiroption1, txtregvargridsecoption1, txtregvargridthirdoption1, cmbregvarvariable1, txtregvarencsql1, txtregvarencfiroption1, txtregvarencsecoption1, txtregvarencthirdoption1, txtregvarscript1, txtregvarshell1)

End

Public Sub btnclearregresvar2_Click()

  ClearPatientBox(txtregvarlower2, txtregvarupper2, txtregvargridcol2, chkregvargrid2, txtregvargridsql2, txtregvargridfiroption2, txtregvargridsecoption2, txtregvargridthirdoption2, cmbregvarvariable2, txtregvarencsql2, txtregvarencfiroption2, txtregvarencsecoption2, txtregvarencthirdoption2, txtregvarscript2, txtregvarshell2)

End

Public Sub btnclearregresvar3_Click()

  ClearPatientBox(txtregvarlower3, txtregvarupper3, txtregvargridcol3, chkregvargrid3, txtregvargridsql3, txtregvargridfiroption3, txtregvargridsecoption3, txtregvargridthirdoption3, cmbregvarvariable3, txtregvarencsql3, txtregvarencfiroption3, txtregvarencsecoption3, txtregvarencthirdoption3, txtregvarscript3, txtregvarshell3)

End

Public Sub btnclearregresvar4_Click()

  ClearPatientBox(txtregvarlower4, txtregvarupper4, txtregvargridcol4, chkregvargrid4, txtregvargridsql4, txtregvargridfiroption4, txtregvargridsecoption4, txtregvargridthirdoption4, cmbregvarvariable4, txtregvarencsql4, txtregvarencfiroption4, txtregvarencsecoption4, txtregvarencthirdoption4, txtregvarscript4, txtregvarshell4)

End

Public Sub btnclearregresvar5_Click()

  ClearPatientBox(txtregvarlower5, txtregvarupper5, txtregvargridcol5, chkregvargrid5, txtregvargridsql5, txtregvargridfiroption5, txtregvargridsecoption5, txtregvargridthirdoption5, cmbregvarvariable5, txtregvarencsql5, txtregvarencfiroption5, txtregvarencsecoption5, txtregvarencthirdoption5, txtregvarscript5, txtregvarshell5)

End

''---------------------------------------- Time series -------------------------------
Public Sub btntimerow_Click()

  cmbtimerow.Text = VarDiagnostic()

End

Public Sub btntimecol_Click()

  cmbtimecol.Text = VarDiagnostic()

End

Public Sub btncleartimerow_Click()

  cmbtimerowtype.Text = ""
  ClearPatientBox(txttimeindeplow, txttimeindephigh, txttimegridrow, chktimegridrow, txttimegridsqlrow, txttimegridfiroptrow, txttimegridsecoptrow, txttimegridthirdoptrow, cmbtimerow, txttimeencsqlrow, txttimeencfiroptrow, txttimeencsecoptrow, txttimeencthirdoptrow, txttimeindepscript, txttimeindepshell)

End

Public Sub btncleartimecol_Click()

  cmbtimecoltype.Text = ""
  ClearPatientBox(txttimedeplow, txttimedephigh, txttimegridcol, chktimegridcol, txttimegridsqlcol, txttimegridfiroptcol, txttimegridsecoptcol, txttimegridthirdoptcol, cmbtimecol, txttimeencsqlcol, txttimeencfiroptcol, txttimeencsecoptcol, txttimeencthirdoptcol, txttimedepscript, txttimedepshell)

End

Public Sub btntimesaverow_Click()

  modSettings.EnterCheckSetting(chktimegridrow, "TimeSeriesAnalysis/IndependentVar_UseGridView")
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_DataType", cmbtimerowtype.Text)
  modSettings.EnterCheckSetting(chktimeindeptrans, "TimeSeriesAnalysis/IndependentVar_Translate")

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_GridViewCol", CStr(txttimegridrow.Value))
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_GridSQLText", txttimegridsqlrow.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_GridOption1", CStr(txttimegridfiroptrow.Value))
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_GridOption2", txttimegridsecoptrow.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_GridOption3", txttimegridthirdoptrow.Text)

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_Enc", cmbtimerow.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_EncSQLText", txttimeencsqlrow.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_EncOption1", txttimeencfiroptrow.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_EncOption2", txttimeencsecoptrow.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_EncOption3", txttimeencthirdoptrow.Text)

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_Script", txttimeindepscript.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_Shell", txttimeindepshell.Text)

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_LowerRange", CStr(txttimeindeplow.Value))
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/IndependentVar_UpperRange", CStr(txttimeindephigh.Value))

  modCustPatient.LoadTimeChartSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btntimesavecol_Click()

  modSettings.EnterCheckSetting(chktimegridcol, "TimeSeriesAnalysis/OutcomeVar_UseGridView")
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_DataType", cmbtimecoltype.Text)
  modSettings.EnterCheckSetting(chktimedeptrans, "TimeSeriesAnalysis/OutcomeVar_Translate")

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_GridViewCol", CStr(txttimegridcol.Value))
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_GridSQLText", txttimegridsqlcol.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_GridOption1", CStr(txttimegridfiroptcol.Value))
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_GridOption2", txttimegridsecoptcol.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_GridOption3", txttimegridthirdoptcol.Text)

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_Enc", cmbtimecol.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_EncSQLText", txttimeencsqlcol.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_EncOption1", txttimeencfiroptcol.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_EncOption2", txttimeencsecoptcol.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_EncOption3", txttimeencthirdoptcol.Text)

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_Script", txttimedepscript.Text)
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_Shell", txttimedepshell.Text)

  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_LowerRange", CStr(txttimedeplow.Value))
  modSettings.SaveSettingsToFile("TimeSeriesAnalysis/OutcomeVar_UpperRange", CStr(txttimedephigh.Value))

  modCustPatient.LoadTimeChartSetting()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub ShowTimeCustColumn()

  ''independent
  modSettings.ShowCheckBox(chktimegridrow, "TimeSeriesAnalysis/IndependentVar_UseGridView")
  cmbtimerowtype.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_DataType")
  modSettings.ShowCheckBox(chktimeindeptrans, "TimeSeriesAnalysis/IndependentVar_Translate")

  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridViewCol") Then
    txttimegridrow.Value = CInt(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridViewCol"))
  Endif
  txttimegridsqlrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridSQLText")
  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridOption1") Then
    txttimegridfiroptrow.Value = CInt(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridOption1"))
  Endif
  txttimegridsecoptrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridOption2")
  txttimegridthirdoptrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_GridOption3")

  cmbtimerow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_Enc")
  txttimeencsqlrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_EncSQLText")
  txttimeencfiroptrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_EncOption1")
  If Not txttimeencfiroptrow.Text Then
    txttimeencfiroptrow.Text = "{EncounterID}"
  Endif
  txttimeencsecoptrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_EncOption2")
  txttimeencthirdoptrow.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_EncOption3")

  txttimeindepscript.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_Script")
  txttimeindepshell.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_Shell")

  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_LowerRange") Then
    txttimeindeplow.Value = CFloat(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_UpperRange") Then
    txttimeindephigh.Value = CFloat(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/IndependentVar_UpperRange"))
  Endif

  ''dependent
  modSettings.ShowCheckBox(chktimegridcol, "TimeSeriesAnalysis/OutcomeVar_UseGridView")
  cmbtimecoltype.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_DataType")
  modSettings.ShowCheckBox(chktimedeptrans, "TimeSeriesAnalysis/OutcomeVar_Translate")

  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridViewCol") Then
    txttimegridcol.Value = CInt(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridViewCol"))
  Endif
  txttimegridsqlcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridSQLText")
  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridOption1") Then
    txttimegridfiroptcol.Value = CInt(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridOption1"))
  Endif
  txttimegridsecoptcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridOption2")
  txttimegridthirdoptcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_GridOption3")

  cmbtimecol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_Enc")
  txttimeencsqlcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_EncSQLText")
  txttimeencfiroptcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_EncOption1")
  If Not txttimeencfiroptcol.Text Then
    txttimeencfiroptcol.Text = "{EncounterID}"
  Endif
  txttimeencsecoptcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_EncOption2")
  txttimeencthirdoptcol.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_EncOption3")

  txttimedepscript.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_Script")
  txttimedepshell.Text = modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_Shell")

  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_LowerRange") Then
    txttimedeplow.Value = CFloat(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_LowerRange"))
  Endif
  If modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_UpperRange") Then
    txttimedephigh.Value = CFloat(modSettings.ShowSettingFromFIle("TimeSeriesAnalysis/OutcomeVar_UpperRange"))
  Endif

End

''=====================
Public Sub WebButton11_Click()

  GetNormalButtons()
  IconPanel1.Index = 0
  WebButton11.Background = Color.LightGray

End

Public Sub WebButton10_Click()

  GetNormalButtons()
  IconPanel1.Index = 1
  WebButton10.Background = Color.LightGray

End

Public Sub WebButton9_Click()

  GetNormalButtons()
  IconPanel1.Index = 2
  WebButton9.Background = Color.LightGray

End

Public Sub WebButton8_Click()

  GetNormalButtons()
  IconPanel1.Index = 3
  WebButton8.Background = Color.LightGray

End

Public Sub WebButton7_Click()

  GetNormalButtons()
  IconPanel1.Index = 4
  WebButton7.Background = Color.LightGray

End

Public Sub WebButton6_Click()

  GetNormalButtons()
  IconPanel1.Index = 5
  WebButton6.Background = Color.LightGray

End

Public Sub WebButton5_Click()

  GetNormalButtons()
  IconPanel1.Index = 6
  WebButton5.Background = Color.LightGray

End

Public Sub WebButton4_Click()

  GetNormalButtons()
  IconPanel1.Index = 7
  WebButton4.Background = Color.LightGray

End

Public Sub WebButton1_Click()

  GetNormalButtons()
  IconPanel1.Index = 8
  WebButton1.Background = Color.LightGray

End

Public Sub WebButton3_Click()

  GetNormalButtons()
  IconPanel1.Index = 9
  WebButton3.Background = Color.LightGray

End

Private Sub GetNormalButtons()

  WebButton1.Background = Color.Default
  WebButton3.Background = Color.Default
  WebButton4.Background = Color.Default
  WebButton5.Background = Color.Default
  WebButton6.Background = Color.Default
  WebButton7.Background = Color.Default
  WebButton8.Background = Color.Default
  WebButton9.Background = Color.Default
  WebButton10.Background = Color.Default
  WebButton11.Background = Color.Default

End

Public Sub btnclose_Click()

  Me.Close()

End
