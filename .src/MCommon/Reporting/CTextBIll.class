' Gambas class file

Private ReportPath As String 'Path to report

Public UserData As New Collection
Public SPecData As New Collection

Private TablePath As String
Private TableFile As File

Private Template As String
Private Columns As String[]
Private $encid As String
Private $Type As String
Private $sBillNo As String

Public Sub _new(hColumns As String[], hType As String, encid As String, sBillNo As String)

  Columns = hColumns
  Template = modHelpVariable.$textDirectory
  $Type = hType
  $encid = encid
  $sBillNo = sBillNo

  TablePath = Temp()
  modBasic.DebugString("Writing Invoice Data to " & TablePath)
  TableFile = Open TablePath For Write Create
  modBasic.DebugString("Open File " & TablePath)

End

Public Sub Add(col_content As String[])

  Dim counter As Integer
  Dim xx As String
  Dim sInt As Integer

  Dim xcolwid As String
  Dim xtabcol As String

  If Not (col_content.Count = Columns.Count) Then
    Error.Raise("col_content must be equivalent to Columns")
  Endif

  xx = ""
  xtabcol = modSettings.ShowSettingFromFIle("Invoice/LinePrintTable_Col")
  For counter = 0 To Columns.Count - 1
    xcolwid = modSettings.ShowSettingFromFIle("Invoice/LinePrint_WidthCol" & CStr(counter + 1))
    If xcolwid Then
      sInt = CInt(xcolwid)
      xx = xx & modString.GetFormattedText(col_content[counter], sInt, modSettings.ShowSettingFromFIle("Invoice/LinePrint_AlignCol" & CStr(counter + 1)))                                     ''
    Else
      xx = xx & col_content[counter]
    Endif

    'add column separator
    If xtabcol Then
      If counter = 0 Then
        xx = xtabcol & xx & xtabcol
      Else
        xx = xx & xtabcol
      Endif
    Else
      xx = xx & " "
    Endif                                         ''
  Next

  Write #TableFile, xx & gb.NewLine

End

Public Sub AddChapter(col_content As String)

  Write #TableFile, col_content & gb.NewLine

End

Private Sub MakeHTMLFile()

  Dim hCls As CTextBillFormat

  Close #TableFile
  hCls = New CTextBillFormat($encid, Columns, $Type, TablePath, Template, $sBillNo, UserData, SPecData)
  ReportPath = hCls.GetHTMLFile()

End

Public Function NewHTMLPath() As String

  If modHelpVariable.$ApplKey < 2 Then
    MakeHTMLFile()
    Return ReportPath
  Endif

End

Public Sub Preview(strSize As String)

  If modHelpVariable.$ApplKey < 2 Then
    MakeHTMLFile()
    modControlSub.OpenHTMLPreview($encid, ReportPath, strSize)
  Else
    Message.Warning(("HTML Report disabled. Please insert validation key"), ("OK"))
  Endif

End
