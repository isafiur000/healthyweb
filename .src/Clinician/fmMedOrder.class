' Gambas class file

Private $encid As String
Private $status As String
Private $DiscPackage As String
Private $Dept As String = "IPD"
Private $doa As Date
Private $xFinClear As Boolean
Private $PatientNum As String
Private $xNHISCode As String

Private $rDataM As Result
Private $aMyFieldsM As String[]
Private $rData As Result
Private $aMyFields As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]
Private $rData4 As Result
Private $aMyFields4 As String[]
Private $LastEncid As String

Private $HideErr As Boolean
Private $HideDos As Boolean
Private $ShowReview As String
Private $AlphaList As String[]
Private $LedgerAC As String
Private $xBillType As String
Private $sBillMode As String
Private $LabelType As String
Private xYear As Integer

Private $ClinicianLst As String[]

Public Sub _new(encid As String, sStatus As String, DiscPackage As String)

  Dim mfglist As String
  Dim accLst As String[]

  $encid = encid
  $status = sStatus
  $DiscPackage = DiscPackage

  modGeneralMain.GetOpenModalForm(Me)

  accLst = modBasic.$BillDiscountCash
  If accLst.Count = 0 Then
    accLst.Add($DiscPackage)
  Endif
  cmbdisctype.List = accLst
  cmbdisctype.Text = $DiscPackage
  If modSettings.ShowSettingFromFIle("ClinicForms/ShowInjectionSubRoutes") = "Disable" Then
    cmbroute.List = modMedicine.AllComboRoute()
  Else
    cmbroute.List = modMedicine.InpatientRoute(False)
  Endif
  cmbfreq.List = modMedicine.FrequencyCombo()
  cmbstatus.List = ["Continue", "Completed", "Discontinue", "Hold", "Change", "ReWrite", "Cancelled", "Wasted"]
  $ClinicianLst = modGeneral.GetClinicianCodeList()
  modStockSub.DisplayDefaultDispensingMode(rbrand, rbgeneric)
  modSettings.ShowCheckBox(chkout, "OutOfStock/Dispensing")

  mfglist = modSettings.ShowSettingFromFIle("PharmacyForm/AdviceList")
  If mfglist Then
    If Exist(mfglist) Then
      txtdirection.List = modString.GetStringArrayFromFile(mfglist)
    Endif
  Endif

  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & modPatient.GetPatientSex($encid)
  $doa = modPatient.GetRecordDate($encid)
  xYear = DateDiff(modPatient.GetPatientBirthDay($encid), Now(), gb.Year)
  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)

  ShowBillingParam($DiscPackage)
  If $status = "Admitted" Then
    $LabelType = "Inpatient"
  Else
    $LabelType = "Outpatient"
  Endif

  If $status = "Registered" Then
    $LastEncid = modPatient.GetSecondLastEncidPatient($encid)
  Else
    $LastEncid = $encid
  Endif
  $xFinClear = modNonMedical.GetFinanceClearance($encid)

  $ShowReview = modBasic.$MedErrorEnable
  If modPharmacy.DisableEncounterForReview($encid) = True Then
    $ShowReview = "No"
  Endif
  If $ShowReview = "No" Then
  Else
    modSysCons.ClearPatParameterCalc()
    modSysCons.SetPatParametersCalc($encid)
  Endif

  ButtonControl()
  $AlphaList = New String[]
  GetDoseFormatType()
  rbsurg.Value = True
  rbcurrent.Value = True
  ShowRunningMedicine()
  If $xFinClear = True Then
    btnsetregimen.Visible = False
    btngroup.Visible = False
    btnrepeat.Visible = False
    chksave.Visible = False
    btnaddselfsingle.Visible = False
    tnaddselfmed.Visible = False
  Endif

End

Public Sub WebForm_Close()

  modSysCons.ClearPatParameterCalc()

End

Private Sub ButtonControl()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm($Status)
  tnaddselfmed.Enabled = xx
  btnownwty.Enabled = xx
  btnowndelete.Enabled = xx
  btnownsave.Enabled = xx

End

' Public Sub Form_KeyRelease()
'
'   If Key.Code = Key.Esc Then
'     Me.Close
'   Else If Key.Code = Key.F1 Then
'     TabPanel1.Index = 0
'     ShowRunningMedicine()
'   Else If Key.Code = Key.F2 Then
'     TabPanel1.Index = 1
'     btndoserefresh_Click()
'   Else If Key.Code = Key.F3 Then
'     TabPanel1.Index = 2
'     FillDosingGrid()
'     BlankDosingBox()
'     cmbroute.SetFocus
'   Else If Key.Code = Key.F4 Then
'     TabPanel1.Index = 3
'     ShowCurrStockGrid()
'     ShowUsedGridViewList()
'     txtname.SetFocus
'   Else
'     modGeneralmain.GoToNextControlTab()
'   Endif
'
' End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    ShowRunningMedicine()
  Else If TabPanel1.Index = 1 Then
    BlankDosingBox()
    FillDosingGrid()
  Else If TabPanel1.Index = 2 Then
    ShowUsedGridViewList()
  Else If TabPanel1.Index = 3 Then
    ShowMedicationHistory()
  Endif

End

Private Sub BlankDosingBox()

  cmbroute.Text = ""
  cmbmedicine.Text = ""
  cmbfreq.Text = ""
  txtdose.Value = 0
  txtday.Tag = ""
  txtday.Value = 0
  txtqty.Tag = ""
  txtqty.Value = 0
  txtdirection.Text = ""
  $HideErr = False
  $HideDos = False

End

Private Sub ShowBillingParam(sDisctype As String)

  Dim resx As Result

  resx = modDatabase.$myConn.Exec("select fldmode,fldbillingmode,fldacledger,fldbilltype,fldreference,fldlimit,fldlockstate from tbldiscount where fldtype=&1", sDisctype)
  If resx.Available Then
    ''billingmode
    If resx["fldbillingmode"] Then
      $sBillMode = resx["fldbillingmode"]
    Else
      $sBillMode = modPatient.GetPatBillingMode($encid)
    Endif
    ''ledger A/C
    $LedgerAC = resx["fldacledger"]
    ''BillType
    $xBillType = resx["fldbilltype"]
    If Not $xBillType Then
      $xBillType = "Cash"
    Endif
  Endif

End

''------------------------------ Request ---------------------------------
Public Sub chkout_Click()

  modSettings.EnterCheckSetting(chkout, "OutOfStock/Dispensing")

End

Public Sub rbgeneric_Click()

  modSettings.SaveSettingsToFile("BrandOrGeneric/Dispensing", "Generic")

End

Public Sub rbrand_Click()

  modSettings.SaveSettingsToFile("BrandOrGeneric/Dispensing", "Brand")

End

Private Function GetBrandGenerricType() As String

  Dim brandOrGeneric As String

  If rbrand.Value = True Then
    brandOrGeneric = "Brand"
  Else
    brandOrGeneric = "Generic"
  Endif
  Return brandOrGeneric

End

Public Sub cmbdisctype_Click()

  If cmbdisctype.Text Then
    ShowBillingParam(cmbdisctype.Text)
  Endif

End

Private Sub RegimenBoxSetting(sBool As Boolean)

  txtdose.Enabled = sBool
  cmbfreq.Enabled = sBool
  txtday.Enabled = sBool

End

Public Sub cmbroute_Click()

  cmbmedicine.Text = ""
  RegimenBoxSetting(True)
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    cmbmedicine.SetFocus
  Endif

End

Private Function GetMedicineList() As String[]

  Dim res As Result
  Dim xlist As String[]
  Dim xlist1 As String[]

  If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
    If chkout.Value = True Then
      res = modStock.ItemListForPurchaseBillMode(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
    Else
      res = modStock.FillMedicinesPrescribingComboResult(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
    Endif
    xlist = modControlSub.GetDirectFillresult(res)
  Else
    If chkout.Value = True Then
      res = modStock.ItemListForPurchaseBillMode(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
    Else
      res = modStock.FillMedicinesPrescribingComboResult(cmbroute.Text, GetBrandGenerricType(), $sBillMode)
    Endif
    xlist = modControlSub.GetDirectFillresult(res)
  Endif

  Return xlist

End

Public Sub cmbmedicine_Completion(Text As String)

  Dim xallLst As String[]
  Dim xList As String[]

  xallLst = GetMedicineList()
  If xallLst And If xallLst.Count Then
    xList = modString.SelectStringArrayToText(Text, xallLst, False)
    cmbmedicine.CompleteWith(xList)
  Endif

End

Public Sub btnmedlist_Click()

  Dim res As Result
  Dim xlist As String[]
  Dim xlist1 As String[]

  $HideErr = False
  xlist = GetMedicineList()
  If xlist Then
    If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
      cmbmedicine.Text = GridViewNew("Select Particulars", xlist, False)
    Else
      If modBasic.$ClinCategoryGrid = "Yes" Then
        xlist1 = modMedConstant.GetStockIDWithCategory(xlist)
        If xlist1 Then
          cmbmedicine.Text = GridViewGroup("Select Medicine", xlist1, False)
        Endif
      Else
        cmbmedicine.Text = GridViewNew("Select Particulars", xlist, False)
      Endif
    Endif
  Endif
  CheckMedicineName()

End

Private Sub CheckMedicineName()
  ' ' Dim hForm As FmDiseaseDose

  If cmbmedicine.Text Then
    If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
      RegimenBoxSetting(False)
      txtqty.SetFocus
      Me.Exec("$_(" & JS(txtqty.Name & ":entry") & ").select()")
    Else
      If rbrand.Value = True Then
        cmbmedicine.Text = modMedConstant.ConvertBrandToGeneric(cmbroute.Text, cmbmedicine.Text)
      Endif
      RegimenBoxSetting(True)

      If modBasic.$MedDoseRecommend = "Yes" Then
        txtdose.Value = modMedDosing.RecommendedDoseDrug($encid, xYear, cmbmedicine.Text)
        cmbfreq.Text = modMedDosing.RecommendedFrequencyDrug(xYear, cmbmedicine.Text, True)
      Endif
      If $HideDos = False Then
        CheckLastDispensing(cmbmedicine.Text)
      Endif

      ' '   If modBasic.$MedDiseaseDose Then
      ' '     If modBasic.$MedDiseaseDose = "None" Then
      ' '     Else
      ' '       hForm = New FmDiseaseDose(modBasic.$MedDiseaseDose, $encid, cmbroute.Text, cmbmedicine.Text, txtdose, cmbfreq, txtday)
      ' '       hForm.ShowModal
      ' '     Endif
      ' '   Endif

      txtdose.SetFocus()
      Me.Exec("$_(" & JS(txtdose.Name & ":entry") & ").select()")
    Endif
  Endif

End

Private Sub CheckLastDispensing(xmedicine As String)

  Dim cForm As CLastDispensing
  Dim xdate As Date
  Dim xdays As Integer

  If modBasic.$SalesHistoryAlert Then
    cForm = New CLastDispensing(xmedicine, $PatientNum, $xNHISCode, cmbdisctype.Text)
    txttotalqty.Value = cForm.GetLastQty()
    xdate = cForm.GetLastDate()
    xdays = cForm.GetLastDays()

    If xdate Then
      txtlastdispdate.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
      If DateDiff(xdate, Now(), gb.Month) <= 3 Then
        txtlastdispdate.Foreground = Color.Red
      Endif

      If xdays Then
        If DateAdd(xdate, gb.Day, xdays) > Now() Then
          $HideDos = True
          Message.Warning("Dispensed for " & xdays & " Days On " & modReportVar.GetDateTimeReport(xdate, gb.GeneralDate), ("OK"))
        Endif
      Else
        $HideDos = True
      Endif
    Endif

  Else
    $HideDos = True
  Endif

End

Public Sub cmbmedicine_Activate()

  If Not cmbroute.Text Then
    cmbroute.SetFocus
  Else If cmbroute.Text Then
    If Not cmbmedicine.Text Then
      btnmedlist_Click()
    Else
      CheckMedicineName()
    Endif
  Endif

End

Public Sub txtdose_Activate()

  ' modJavaScript.PopUpSelect2Combo(cmbfreq)
  cmbfreq.SetFocus

End

Public Sub cmbfreq_Click()

  txtday.SetFocus()
  If txtdose.Value Then
    Me.Exec("$_(" & JS(txtday.Name & ":entry") & ").select()")
  Endif

End

Public Sub cmbfreq_Activate()

  If cmbfreq.Text Then
    txtday.SetFocus
  Endif

End

Public Sub txtday_Activate()

  Dim opt As String[]
  Dim xval As String
  Dim xcount As Integer

  If txtdose.Value And If cmbfreq.Text Then
    If txtday.Value Then
      xcount = 0
      If $HideErr = False Then
        If txtdose.Value And If cmbfreq.Text Then
          If $ShowReview = "No" Then
          Else
            opt = New String[]
            For Each $rDataM
              Select $rDataM["fldroute"]
                Case "suture", "msurg", "ortho", "extra", "topical"
                Case Else
                  xval = modMedConstant.GetDrugFromStockID($rDataM["flditem"])
                  If opt.Count = 0 Then
                    opt.Add(xval)
                  Else
                    If opt.Exist(xval) = False Then
                      opt.Add(xval)
                    Endif
                  Endif
              End Select
            Next

            Select cmbroute.Text
              Case "suture", "msurg", "ortho", "extra", "topical"
              Case Else
                $HideErr = True
                xcount = modMedError.ShowMedicationReviewPunching($encid, cmbroute.Text, cmbmedicine.Text, txtdose.Value, cmbfreq.Text, opt, "Message Box")
            End Select
          Endif
        Endif
      Endif

      txtqty.Value = Ceil(modMedConstant.GetQuantityDosing(cmbmedicine.Text, txtdose.Value, cmbfreq.Text, txtday.Value))
      txtqty.SetFocus()
      Me.Exec("$_(" & JS(txtqty.Name & ":entry") & ").select()")
    Endif
  Endif

End

Public Sub txtqty_Activate()

  txtdirection.SetFocus

End

Public Sub txtdirection_Activate()

  chksave_Click()

End

Public Sub chksave_Click()

  If cmbroute.Text And If cmbmedicine.Text And If txtqty.Value Then
    If modStockSub.GetComboStockControl(cmbroute.Text, cmbmedicine.Text, rbgeneric, rbrand, modDatabase.$medConn) = False Then
      cmbmedicine.Text = ""
      Message.Warning(("Item not listed"), "OK")
      cmbroute.SetFocus
    Else
      EnterDosingRecord()
      If modBasic.$TabletModeEnable = "Yes" Then
      Else
        ' modJavaScript.TriggerSelect2Combo(cmbfreq)
        cmbroute.SetFocus
      Endif
    Endif '
  Endif

End

Private Sub EnterDosingRecord()

  Dim txprescriber As String
  Dim txpresno As String

  Dim xtax As Float
  Dim xdisc As Float
  Dim itemtype As String
  Dim xfixrate As Float
  Dim xfixname As String
  ' Dim xvarfix As Variant[]
  Dim itemmode As String
  Dim xcurVal As String
  Dim xnarcotic As String[]
  Dim CPharmFix As CFixRatePharmacy

  If modBasic.$DispRequestStatus = "Reserve" Then
    xcurVal = "Reserve"
  Else
    xcurVal = "Continue"
  Endif
  If cmbroute.Text And If cmbmedicine.Text Then

    If cmbroute.Text = "suture" Or If cmbroute.Text = "msurg" Or If cmbroute.Text = "ortho" Or If cmbroute.Text = "extra" Then
      itemtype = modNonMedical.GetBillItemCategoryFromCombo(cmbroute.Text)
      CPharmFix = New CFixRatePharmacy(itemtype, cmbmedicine.Text, $sBillMode)
      xfixrate = CPharmFix.GetFixRate()
      xfixname = CPharmFix.GetFixItem()
      ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, cmbmedicine.Text, $sBillMode)
      ' If xvarfix Then
      '   xfixrate = xvarfix[1]
      '   xfixname = xvarfix[0]
      ' Else
      '   xfixrate = 0
      '   xfixname = ""
      ' Endif
      itemmode = $sBillMode
      xtax = modNonMedical.ShowTaxValues(itemtype, cmbmedicine.Text)
      xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, cmbmedicine.Text, itemmode)
      modPharmSub.InsertNonMedDosingEntry(itemtype, $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, cmbroute.Text, cmbmedicine.Text, txtqty.Value, $status, 0, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, Trim(txtdirection.Text), 0, xcurVal)

    Else
      If modMedConstant.GetNarcoticType(cmbmedicine.Text) = "Yes" Then
        xnarcotic = DualGridValue(("Select Narcotic Prescriber"), $ClinicianLst, False)
        If xnarcotic Then
          txprescriber = xnarcotic[1]
          txpresno = xnarcotic[0]
        Endif
      Else
        txprescriber = ""
        txpresno = ""
      Endif
      itemtype = modNonMedical.GetBillItemCategoryFromCombo(cmbroute.Text)
      CPharmFix = New CFixRatePharmacy(itemtype, cmbmedicine.Text, $sBillMode)
      xfixrate = CPharmFix.GetFixRate()
      xfixname = CPharmFix.GetFixItem()
      ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, cmbmedicine.Text, $sBillMode)
      ' If xvarfix Then
      '   xfixrate = xvarfix[1]
      '   xfixname = xvarfix[0]
      ' Else
      '   xfixrate = 0
      '   xfixname = ""
      ' Endif
      itemmode = $sBillMode
      xtax = modNonMedical.ShowTaxValues(itemtype, cmbmedicine.Text)
      xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, cmbmedicine.Text, itemmode)
      modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, cmbroute.Text, cmbmedicine.Text, txtdose.Value, cmbfreq.Text, txtday.Value, txtqty.Value, $status, txprescriber, txpresno, 0, xtax, xdisc, xfixname, xfixrate, "Request", $Dept, Trim(txtdirection.Text), 0, xcurVal)                     '
    Endif

    BlankDosingBox()
    FillDosingGrid()
  Endif

End

Public Sub btngroup_Click()

  Dim rsx As Result
  Dim xgroup As String

  Dim res As Result
  Dim txprescriber As String
  Dim txpresno As String
  Dim xdose As Float
  Dim xtax As Float
  Dim xdisc As Float
  Dim itemtype As String
  Dim xfixrate As Float
  Dim xfixname As String
  ' Dim xvarfix As Variant[]
  Dim itemmode As String
  Dim xcurVal As String
  Dim xnarcotic As String[]
  Dim CPharmFix As CFixRatePharmacy

  If modBasic.$DispRequestStatus = "Reserve" Then
    xcurVal = "Reserve"
  Else
    xcurVal = "Continue"
  Endif
  rsx = modDatabase.$myConn.Exec("select distinct(fldmedgroup) as col from tblproductgroup")
  xgroup = GridViewNew("Select Particulars", modControlSub.GetDirectFillresult(rsx), False)
  If xgroup Then

    res = modDatabase.$myConn.Exec("select fldroute,flditem,flddose,flddoseunit,fldfreq,fldday,fldqty,fldstart,fldadvice from tblproductgroup where fldmedgroup=&1", xgroup)
    If res.Available Then
      For Each res

        itemtype = modNonMedical.GetBillItemCategoryFromCombo(res["fldroute"])
        CPharmFix = New CFixRatePharmacy(itemtype, res["flditem"], $sBillMode)
        xfixrate = CPharmFix.GetFixRate()
        xfixname = CPharmFix.GetFixItem()
        If xfixname Then
          itemmode = $sBillMode
        Else
          itemmode = "%"
        Endif
        ' xvarfix = modStock.GetSellingPriceFixByStockID(itemtype, res["flditem"], $sBillMode)
        ' If xvarfix Then
        '   xfixrate = xvarfix[1]
        '   xfixname = xvarfix[0]
        '   itemmode = $sBillMode
        ' Else
        '   xfixrate = 0
        '   xfixname = ""
        '   itemmode = "%"
        ' Endif
        xtax = modNonMedical.ShowTaxValues(itemtype, res["flditem"])
        xdisc = modNonMedical.DiscPercentForCategoryValue($encid, cmbdisctype.Text, itemtype, res["flditem"], itemmode)
        Select res["fldroute"]
          Case "suture", "msurg", "ortho"
            modPharmSub.InsertNonMedDosingEntry("Surgicals", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["fldqty"], $status, res["fldstart"], xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldadvice"], 0, xcurVal)
          Case "extra"
            modPharmSub.InsertNonMedDosingEntry("Extra Items", $encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], res["fldqty"], $status, res["fldstart"], xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldadvice"], 0, xcurVal)
          Case Else
            xdose = modMedDosing.GetDoseInMg(res["flddose"], res["flddoseunit"], $encid)
            If xdose Then
              If modMedConstant.GetNarcoticType(res["flditem"]) = "Yes" Then
                xnarcotic = DualGridValue(("Select Narcotic Prescriber"), $ClinicianLst, False)
                If xnarcotic Then
                  txprescriber = xnarcotic[1]
                  txpresno = xnarcotic[0]
                Endif
              Else
                txprescriber = ""
                txpresno = ""
              Endif
              modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, cmbdisctype.Text, $LedgerAC, res["fldroute"], res["flditem"], xdose, res["fldfreq"], res["fldday"], res["fldqty"], $status, txprescriber, txpresno, res["fldstart"], xtax, xdisc, xfixname, xfixrate, "Request", $Dept, res["fldadvice"], 0, xcurVal)
            Endif
        End Select

      Next
    Endif

    BlankDosingBox()
    FillDosingGrid()
  Endif

End

Private Sub FillDosingGrid()

  Dim sql As String

  If rblabel.Value = True Then
    sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldqtydisp,flduserid_order,fldid,fldid,fldstarttime,fldcurval,flddirection from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstatus=&3 and fldorder=&4 and (fldcurval=&5 or fldcurval=&6)"
  Else
    sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,flduserid_order,fldid,fldid,fldstarttime,fldcurval,flddirection from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstatus=&3 and fldorder=&4 and (fldcurval=&5 or fldcurval=&6)"                                                   ''
  Endif
  $rDataM = modDatabase.$myConn.Exec(sql, $encid, False, $status, "Request", "Continue", "Reserve")
  $aMyFieldsM = New String[]
  modGridView.ReadSmallData(GridView1, $rDataM, $aMyFieldsM)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Hidden = True
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True
    .Columns[11].Hidden = True
    .Columns[12].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[13].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Start"
    .Columns[2].Text = "Route"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "Dose"
    .Columns[5].Text = "Freq"
    .Columns[6].Text = "Day"
    .Columns[7].Text = "QTY"
    .Columns[12].Text = "Status"
    .Columns[13].Text = "Direction"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rDataM.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rDataM[$aMyFieldsM[Column]], gb.GeneralDate)
  Else If Column = 4 Then
    If rblabel.Value = True Then
      Data.Text = modPharmacy.GetMedicineDoseInFormat($rDataM[$aMyFieldsM[Column]], "Label")
    Else
      Data.Text = $rDataM[$aMyFieldsM[Column]]
    Endif
  Else
    Data.Text = $rDataM[$aMyFieldsM[Column]]
  Endif

End

Public Sub btnsetregimen_Click()

  Dim sIdx As Long
  Dim res As Result

  sIdx = GetSetRegimen("Personal")
  If sIdx Then
    res = modDatabase.$myConn.Exec("select fldroute,fldbrandid,flddose,fldfreq,fldday,fldqty,fldusage from tblmedregimen where fldid=&1", sIdx)
    If res.Available Then
      cmbroute.Text = res["fldroute"]
      cmbmedicine.Text = res["fldbrandid"]
      txtdose.Value = res["flddose"]
      ' modJavaScript.UpdateSelect2Combo(cmbfreq, res["fldfreq"])
      cmbfreq.Text = res["fldfreq"]
      txtday.Value = res["fldday"]
      txtqty.Value = res["fldqty"]
      txtdirection.Text = res["fldusage"]
      If modBasic.$TabletModeEnable = "Yes" Then
      Else
        txtqty.SetFocus
      Endif
    Endif
  Endif

End

Public Sub btnrepeat_Click()

  Dim sIdx As Long
  Dim res As Result

  sIdx = GetSetRegimen($LastEncid)
  If sIdx Then
    res = modDatabase.$myConn.Exec("select fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,flddirection from tblpatdosing where fldid=&1", sIdx)
    If res.Available Then
      cmbroute.Text = res["fldroute"]
      cmbmedicine.Text = res["flditem"]
      txtdose.Value = res["flddose"]
      ' modJavaScript.UpdateSelect2Combo(cmbfreq, res["fldfreq"])
      cmbfreq.Text = res["fldfreq"]
      txtday.Value = res["flddays"]
      txtqty.Value = res["fldqtydisp"]
      txtdirection.Text = res["flddirection"]
      If modBasic.$TabletModeEnable = "Yes" Then
      Else
        txtqty.SetFocus
      Endif
    Endif
  Endif

End

Public Sub btnmeddate_Click()

  Dim xdate As Date

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If modGeneral.AllowClinicalEdit($rDataM["flduserid_order"]) = True Then
      xdate = GetDateValue($rDataM["flditem"], ("Alter Starting Date"), $rDataM["fldstarttime"])
      If xdate Then
        modPharmSub.UpdateStartBefDispensing($rDataM["fldid"], xdate)
        FillDosingGrid()
      Endif
    Endif
  Endif

End

Public Sub txtmeddose_Click()

  Dim xval As Float

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If modGeneral.AllowClinicalEdit($rDataM["flduserid_order"]) = True Then
      xval = InputValue($rDataM["flditem"], ("Alter Unit Dose"), $rDataM["flddose"])
      If xval Then
        modPharmSub.UpdateDoseBefDispensing($rDataM["fldid"], xval)
        FillDosingGrid()
      Endif
    Endif
  Endif

End

Public Sub btnmedfreq_Click()

  Dim yval As String

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If modGeneral.AllowClinicalEdit($rDataM["flduserid_order"]) = True Then
      yval = InputCombo($rDataM["flditem"], ("Alter Frequency"), modMedicine.FrequencyCombo(), $rDataM["fldfreq"], True)
      If yval Then
        modPharmSub.UpdateFreqBefDispensing($rDataM["fldid"], yval)
        FillDosingGrid()
      Endif
    Endif
  Endif

End

Public Sub btnmeddays_Click()

  Dim xval As Float

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If modGeneral.AllowClinicalEdit($rDataM["flduserid_order"]) = True Then
      xval = InputValue($rDataM["flditem"], ("Alter Duration"), $rDataM["flddays"])
      If xval Then
        modPharmSub.UpdateDaysBefDispensing($rDataM["fldid"], xval)
        FillDosingGrid()
      Endif
    Endif
  Endif

End

Public Sub btnmedqty_Click()

  Dim xval As Float

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    xval = InputValue($rDataM["flditem"], ("Alter Quantity"), $rDataM["fldqtydisp"])
    If xval Then
      modPharmSub.UpdateQTYBefDispensing($rDataM["fldid"], xval)
      FillDosingGrid()
    Endif
  Endif

End

Public Sub btnadvice_Click()

  Dim yval As String

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If modGeneral.AllowClinicalEdit($rDataM["flduserid_order"]) = True Then
      yval = InputBox($rDataM["flditem"], ("Alter Direction"), $rDataM["flddirection"])
      If yval Then
        modPharmSub.UpdateAdviceBefDispensing($rDataM["fldid"], yval)
        FillDosingGrid()
      Endif
    Endif
  Endif

End

Public Sub btnmeddelete_Click()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1 and fldsave_order=&2", $rDataM["fldid"], False)
      If modGeneral.AllowClinicalEdit(res["flduserid_order"]) = True Then
        modDatabase.$myConn.Delete("tblpatdosing", "fldid=&1 and fldsave_order=&2", $rDataM["fldid"], False)
      Else
        res["fldcurval"] = "Cancelled"
        res["flduserid_order"] = modBasic.$lbluser
        res["xyz"] = False
        res.Update
      Endif
      FillDosingGrid()
    Endif
  Endif

End

Public Sub btnmedlabel_Click()

  Dim hClabel As CLabelSize

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    hClabel = New CLabelSize($rDataM["fldid"], $LabelType)
    ' modPrint.PrintPopUp(CStr($rDataM["fldid"], hClabel.LabelPath(), "LabelSize")
  Endif

End

Public Sub btnreview_Click()

  Dim opt As Long[]

  If GridView1.Count Then
    opt = New Long[]
    For Each $rDataM
      Select $rDataM["fldroute"]
        Case "suture", "msurg", "ortho", "extra", "topical"
        Case Else
          opt.Add($rDataM["fldid"])
      End Select
    Next
    modMedError.ShowMedicationReviewMultipleDosID($encid, opt, "Report")
  Endif

End

Public Sub btnaireview_Click()

  Dim opt As Long[]
  Dim xdata As String
  Dim xans As String

  If GridView1.Count Then
    opt = New Long[]
    For Each $rDataM
      Select $rDataM["fldroute"]
        Case "suture", "msurg", "ortho", "extra", "topical"
        Case Else
          opt.Add($rDataM["fldid"])
      End Select
    Next

    If opt.Count Then
      xdata = modPharmacy.ShowMedicationListDosID($encid, opt).Join(gb.NewLine)
      xans = modCloudAI.GetComboCloudAIResponse(xdata, modBasic.$CloudAIDrugQuery)
      If xans Then
        xans = MessageHtml("Cloud AI Response", modString.TextToHTML(xans), [("Useless"), ("Neutral"), ("Useful")])
      Endif
    Endif

  Endif

End

Public Sub btnshow_Click()

  Dim xPath As String

  xPath = modCHTMLPatient.ShowMedicationOrder($encid)
  modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")

End

' Public Sub GridView1_Menu()
'
'   mnuhide.Popup
'
' End

Public Sub mnutaper_Click()

  Dim hForm As Fmtaperdose

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    If $rDataM["fldfreq"] = "Tapering" Then
      hForm = New Fmtaperdose($rDataM["fldid"])
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btndispown_Click()

  If GridView1.Selection.Count Then
    If Message.Question(("Dispense from LOCAL Stock. Are you sure ?"), ("No"), ("Yes")) = 2 Then
      $rDataM.MoveTo(GridView1.Selection[0])
      SaveOwnDispensing($rDataM["fldid"], "Continue")
      FillDosingGrid()
    Endif
  Endif

End

Public Sub mnusave_Click()

  If GridView1.Selection.Count Then
    If Message.Question(("Bring from OUTSIDE. Are you sure ?"), ("No"), ("Yes")) = 2 Then
      $rDataM.MoveTo(GridView1.Selection[0])
      modPharmSub.UpdateDispensing($rDataM["fldid"], True)
      FillDosingGrid()
    Endif
  Endif

End

Public Sub mnuonline_Click()

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    modPharmSub.DisableDispOnline($rDataM["fldid"])
    FillDosingGrid()
    Me.Exec("Toastify({text: 'Request updated', duration: 3000}).showToast()")
  Endif

End

Public Sub mnucontinue_Click()

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    modPharmSub.ContinueDispReq($rDataM["fldid"])
    FillDosingGrid()
    Me.Exec("Toastify({text: 'Request updated', duration: 3000}).showToast()")
  Endif

End

Public Sub mnureview_Click()

  Dim opt As String[]
  Dim xval As String

  opt = New String[]
  For Each $rDataM
    Select $rDataM["fldroute"]
      Case "suture", "msurg", "ortho", "extra", "topical"
      Case Else
        xval = modMedConstant.GetDrugFromStockID($rDataM["flditem"])
        If opt.Count = 0 Then
          opt.Add(xval)
        Else
          If opt.Exist(xval) = False Then
            opt.Add(xval)
          Endif
        Endif
    End Select
  Next

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    modMedError.ShowMedicationReviewSingleDosID($rDataM["fldid"], opt, "Report")
  Endif

End

Public Sub mnudisplabel_Click()

  Dim xPath As String

  If GridView1.Selection.Count Then
    $rDataM.MoveTo(GridView1.Selection[0])
    xPath = modCHTMLPatient.ShowSingleCounselingReport($rDataM["fldid"])
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

''====================================Runnung medicines =================================
Private Sub GetDoseFormatType()

  Dim def As String

  def = modSettings.ShowSettingFromFIle("DoseFormat/Dispensing")
  If def Then
    If def = "Label" Then
      rblabel.Value = True
    Else
      rbvalue.Value = True
    Endif
  Else
    rbvalue.Value = True
  Endif

End

Public Sub rbvalue_Click()

  modSettings.SaveSettingsToFile("DoseFormat/Dispensing", "Value")
  If TabPanel1.Index = 0 Then
    ShowRunningMedicine()
  Else If TabPanel1.Index = 1 Then
    FillDosingGrid()
  Endif

End

Public Sub rblabel_Click()

  modSettings.SaveSettingsToFile("DoseFormat/Dispensing", "Label")
  If TabPanel1.Index = 0 Then
    ShowRunningMedicine()
  Else If TabPanel1.Index = 1 Then
    FillDosingGrid()
  Endif

End

Public Sub btncurrefresh_Click()

  ShowRunningMedicine()

End

Private Sub ShowRunningMedicine()

  Dim sql As String

  If rbcurrent.Value = True Then
    If rblabel.Value = True Then
      sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 and fldcurval=&6 ORDER BY fldid DESC"
    Else
      sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 and fldcurval=&6 ORDER BY fldid DESC"                    ''
    Endif
    $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, Now(), DateAdd(Now(), gb.Hour, -3), "Medicines", "Continue")

  Else If rballmeds.Value = True Then
    If rblabel.Value = True Then
      sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 ORDER BY fldid DESC"
    Else
      sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstarttime<=&3 and fldendtime>=&4 and flditemtype=&5 ORDER BY fldid DESC"                    ''
    Endif
    $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, modDate.EndSqlDate(Now()), modDate.StartSqlDate(Now()), "Medicines")

  Else If rballdates.Value = True Then
    If rblabel.Value = True Then
      sql = "select fldid,fldstarttime,fldroute,flditem,fldid,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 ORDER BY fldid DESC"
    Else
      sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldcurval,fldid,fldstarttime,fldstatus,flduserid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3 ORDER BY fldid DESC"                    ''
    Endif
    $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, "Medicines")

  Endif
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(grdmedicine, $rData2, $aMyFields2)

  With grdmedicine
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True
    .Columns[11].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Start"
    .Columns[2].Text = "Route"
    .Columns[3].Text = "Medicine"
    .Columns[4].Text = "Dose"
    .Columns[5].Text = "Freq"
    .Columns[6].Text = "Days"
    .Columns[7].Text = "Status"
    .Columns[8].Text = "N"
    .Columns[11].Text = "Disp By"
  End With

End

Public Sub grdmedicine_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else If Column = 4 Then
    If rblabel.Value = True Then
      Data.Text = modPharmacy.GetMedicineDoseInFormat($rData2[$aMyFields2[Column]], "Label")
    Else
      Data.Text = $rData2[$aMyFields2[Column]]
    Endif
  Else If Column = 8 Then
    Data.Text = modPharmacy.TotalDoseCount($rData2[$aMyFields2[Column]])
  Else If Column = 11 Then
    Data.Text = modGeneral.GetUserFullName($rData2[$aMyFields2[Column]])
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub btnstatus_Click()

  Dim res As Result

  If grdmedicine.Selection.Count
    If cmbstatus.Text Then
      $rData2.MoveTo(grdmedicine.Selection[0])
      res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", $rData2["fldid"])
      res["fldcurval"] = cmbstatus.Text
      res["xyz"] = False
      res.Update()
      ShowRunningMedicine()
      cmbstatus.Text = ""
      Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
    Endif
  Endif

End

Public Sub btnaiadvice_Click()

  Dim xList As String[]
  Dim xans As String

  xList = New String[]
  For Each $rData2
    xList.Add($rData2["fldroute"] & Space(1) & modMedConstant.GetCodeFromStockID($rData2["flditem"]) & Space(2) & $rData2["flddose"] & " " & modMedConstant.GetMedicineDoseUnit($rData2["flditem"]) & " X " & $rData2["fldfreq"] & " X " & $rData2["flddays"] & " day(s)")
  Next

  If xList.Count Then
    xans = modCloudAI.GetComboCloudAIResponse(xList.Join(gb.NewLine), modBasic.$CloudAIDrugQuery)
    If xans Then
      xans = MessageHtml("Cloud AI Response", modString.TextToHTML(xans), [("Useless"), ("Neutral"), ("Useful")])
    Endif
  Endif

End

''==================================== USE OWN ==============================
Public Sub btnshowown_Click()

  ShowCurrStockGrid()

End

Private Sub ShowCurrStockGrid()

  If rbmed.Value = True Then
    If cmbuseroute.Text Then
      $rData = modDatabase.$syConn.Exec("select fldbrandid,fldbrand,fldbrandid,fldbrandid as qty from tblmedbrand where lower(fldbrandid) like &1 and fldbrandid in(select fldstockid from tblentry where fldqty>&2 and fldcomp like &3) and flddrug in(select flddrug from tbldrug where fldroute=&4) ORDER BY fldbrandid ASC", LCase(txtname.Text) & "%", 0, modBasic.$compID, cmbuseroute.Text)
    Else
      $rData = modDatabase.$syConn.Exec("select fldbrandid,fldbrand,fldbrandid,fldbrandid as qty from tblmedbrand where lower(fldbrandid) like &1 and fldbrandid in(select fldstockid from tblentry where fldqty>&2 and fldcomp like &3) ORDER BY fldbrandid ASC", LCase(txtname.Text) & "%", 0, modBasic.$compID)                                   ''
    Endif
  Else If rbsurg.Value = True Then
    $rData = modDatabase.$syConn.Exec("select fldbrandid,fldbrand,fldbrandid,fldbrandid as qty from tblsurgbrand where lower(fldbrandid) like &1 and fldbrandid in(select fldstockid from tblentry where fldqty>&2 and fldcomp like &3) ORDER BY fldbrandid ASC", LCase(txtname.Text) & "%", 0, modBasic.$compID)
  Else If rbextra.Value = True Then
    $rData = modDatabase.$syConn.Exec("select fldbrandid,fldbrand,fldbrandid,fldbrandid as qty from tblextrabrand where lower(fldbrandid) like &1 and fldbrandid in(select fldstockid from tblentry where fldqty>&2 and fldcomp like &3) ORDER BY fldbrandid ASC", LCase(txtname.Text) & "%", 0, modBasic.$compID)
  Endif

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView3, $rData, $aMyFields)

  With GridView3
    ' .Columns[0].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[0].Expand = True
    .Columns[1].Hidden = True
    .Columns[2].Hidden = True
    .Columns[3].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[0].Text = "Particulars"
    .Columns[3].Text = "QTY"
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Text = modStock.TotalQTYbyBrand($rData[$aMyFields[Column]], modBasic.$compID)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub rbmed_Click()

  $AlphaList.Clear()
  txtname.Text = ""
  ShowCurrStockGrid()
  cmbuseroute.List = modMedicine.RouteMedicine()
  cmbuseroute.Text = ""
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtname.SetFocus
  Endif

End

Public Sub rbsurg_Click()

  txtname.Text = ""
  ShowCurrStockGrid()
  cmbuseroute.Clear()
  cmbuseroute.Text = ""
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtname.SetFocus
  Endif

End

Public Sub rbextra_Click()

  txtname.Text = ""
  ShowCurrStockGrid()
  cmbuseroute.Clear()
  cmbuseroute.Text = ""
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtname.SetFocus
  Endif

End

Public Sub txtname_Change()

  ShowCurrStockGrid()

End

Public Sub txtname_Click()

  txtname.Text = ""
  ShowCurrStockGrid()

End

Public Sub cmbuseroute_Click()

  ShowCurrStockGrid()

End

Public Sub btnaddselfsingle_Click()

  Dim sType As String

  If GridView3.Selection.Count
    $rData.MoveTo(GridView3.Selection[0])
    If rbmed.Value = True Then
      sType = "Medicines"
    Else If rbsurg.Value = True Then
      sType = "Surgicals"
    Else If rbextra.Value = True Then
      sType = "Extra Items"
    Endif
    EntryUseOwndata(sType, $rData["fldbrandid"], 1)
    Me.Exec("Toastify({text: 'Item Added', duration: 3000}).showToast()")
    ShowUsedGridViewList()
  Endif

End

Public Sub tnaddselfmed_Click()

  Dim xval As Float
  Dim sType As String

  If GridView3.Selection.Count
    $rData.MoveTo(GridView3.Selection[0])
    If rbmed.Value = True Then
      sType = "Medicines"
    Else If rbsurg.Value = True Then
      sType = "Surgicals"
    Else If rbextra.Value = True Then
      sType = "Extra Items"
    Endif
    xval = InputValue("QUANTITY OF <b>" & $rData["fldbrandid"] & "</b>", "Use Own Stock", 0)
    If xval Then
      EntryUseOwndata(sType, $rData["fldbrandid"], xval)
      ShowUsedGridViewList()
    Endif
  Endif

End

Private Sub EntryUseOwndata(sType As String, sItem As String, sQty As Float)

  Dim xroute As String
  Dim xtax As Float
  Dim xdisc As Float
  Dim xdose As Float
  Dim xfixrate As Float
  Dim xfixname As String
  ' Dim xvarfix As Variant[]
  Dim itemmode As String
  Dim CPharmFix As CFixRatePharmacy

  CPharmFix = New CFixRatePharmacy(sType, sItem, $sBillMode)
  xfixrate = CPharmFix.GetFixRate()
  xfixname = CPharmFix.GetFixItem()
  ' xvarfix = modStock.GetSellingPriceFixByStockID(sType, sItem, $sBillMode)
  ' If xvarfix Then
  '   xfixrate = xvarfix[1]
  '   xfixname = xvarfix[0]
  ' Else
  '   xfixrate = 0
  '   xfixname = ""
  ' Endif
  itemmode = $sBillMode
  xtax = modNonMedical.ShowTaxValues(sType, sItem)
  xdisc = modNonMedical.DiscPercentForCategoryValue($encid, $DiscPackage, sType, sItem, itemmode)
  xroute = modMedicine.GetRouteFromItem(sItem, sType)

  If sType = "Medicines" Then
    xdose = sQty * modPharmLabel.GetPackVolValue(sItem) * modMedConstant.GetDrugInitialStrength(sItem)
    modPharmSub.InsertDosingEntry($encid, $xBillType, $sBillMode, $DiscPackage, $LedgerAC, xroute, sItem, xdose, "stat", 1, sQty, $status, "", "", 0, xtax, xdisc, xfixname, xfixrate, "UseOwn", $Dept, "", 0)
  Else
    modPharmSub.InsertNonMedDosingEntry(sType, $encid, $xBillType, $sBillMode, $DiscPackage, $LedgerAC, xroute, sItem, sQty, $status, 0, xtax, xdisc, xfixname, xfixrate, "UseOwn", $Dept, "", 0)
  Endif

End

Private Sub ShowUsedGridViewList()

  Dim sql As String

  sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,flduserid_order,fldid,fldid,fldstarttime from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and fldstatus=&3 and fldorder=&4 and fldcurval=&5"                                                   ''
  $rData4 = modDatabase.$myConn.Exec(sql, $encid, False, $status, "UseOwn", "Continue")
  $aMyFields4 = New String[]
  modGridView.ReadSmallData(GridView4, $rData4, $aMyFields4)

  With GridView4
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Hidden = True
    .Columns[3].Expand = True
    ' .Columns[3].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Hidden = True
    .Columns[5].Hidden = True
    .Columns[6].Hidden = True
    .Columns[7].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Hidden = True
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True
    .Columns[11].Hidden = True

    .Columns[3].Text = "Particulars"
    .Columns[7].Text = "QTY"
  End With

End

Public Sub GridView4_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData4.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData4[$aMyFields4[Column]]

End

Public Sub btnownwty_Click()

  Dim xval As Float

  If GridView4.Selection.Count Then
    $rData4.MoveTo(GridView4.Selection[0])
    xval = InputValue($rData4["flditem"], ("Change Value"), $rData4["fldqtydisp"])
    If xval Then
      modPharmSub.UpdateQTYBefDispensing($rData4["fldid"], xval)
      ShowUsedGridViewList()
    Endif
  Endif

End

Public Sub btnowndelete_Click()

  Dim res As Result

  If GridView4.Selection.Count Then
    $rData4.MoveTo(GridView4.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1 and fldsave_order=&2", $rData4["fldid"], False)
      If modGeneral.AllowClinicalEdit(res["flduserid_order"]) = True Then
        modDatabase.$myConn.Delete("tblpatdosing", "fldid=&1 and fldsave_order=&2", $rData4["fldid"], False)
      Else
        res["fldcurval"] = "Cancelled"
        res["flduserid_order"] = modBasic.$lbluser
        res["xyz"] = False
        res.Update
      Endif
      ShowUsedGridViewList()
    Endif
  Endif

End

Public Sub btnownsave_Click()

  If GridView4.Selection.Count Then
    $rData4.MoveTo(GridView4.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      SaveOwnDispensing($rData4["fldid"], "Completed")
      ShowUsedGridViewList()
      ShowCurrStockGrid()
    Endif
  Endif

End

Private Sub SaveOwnDispensing(sID As Long, sStatus As String)

  Dim sql1 As String
  Dim res1 As Result
  Dim res2 As Result
  Dim sql2 As String

  Dim tax As Float
  Dim disc As Float
  Dim xrate As Float
  Dim xitem As String

  Dim qtynew As Float
  Dim xcateg As String
  ' Dim xdose As Float
  ' Dim xunit As String
  Dim xerr As String

  Dim xrefer As String
  Dim xpayble As String
  Dim xallow As Boolean
  Dim xCshCrd As Float

  xrefer = modBillings.GetReferralUserSetting("Pharmacy", $encid)
  xpayble = modBillings.GetPayableUserSetting("Pharmacy", $encid)

  xerr = ""
  sql1 = "select fldid,fldtime,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,fldlabel,flditemtype,fldfixname,fldfixrate,fldtaxper,flddiscper,fldbillingmode,flddisctype,fldacledger,fldbilltype,fldcashincredit from tblpatdosing where fldid=&1"                                                   ''
  res1 = modDatabase.$myConn.Exec(sql1, sID)
  If res1.Available = True Then

    'get tax and discount percentages
    xcateg = res1["flditemtype"]
    If res1["fldtaxper"] Then
      tax = res1["fldtaxper"]
    Else
      tax = 0
    Endif
    If res1["flddiscper"] Then
      disc = res1["flddiscper"]
    Else
      disc = 0
    Endif
    If res1["fldcashincredit"] Then
      xCshCrd = res1["fldcashincredit"]
    Else
      xCshCrd = 0
    Endif

    If res1["fldfixrate"] Then
      xrate = res1["fldfixrate"]
    Else
      xrate = modStock.GetCurrentSellingPrice(res1["flditem"], modBasic.$compID)
    Endif
    xallow = modNonMedical.AllowPharmProceedPreBill($encid, $DiscPackage, res1["fldqtydisp"], xrate, res1["flddiscper"], res1["fldbilltype"], xCshCrd, res1["fldroute"], res1["flditem"])
    If xallow = True Then

      qtynew = res1["fldqtydisp"]
      modDatabase.$myConn.Begin
      While qtynew > 0
        'get stockno, rate and quantity based on expiry check
        sql2 = "select fldstockno,fldstockid,fldcategory,fldexpiry,fldqty,fldstatus from tblentry where fldstockid=&1 and fldcomp=&2 and fldstatus=&3 and fldqty>&4"
        res2 = modDatabase.$myConn.Exec(sql2, res1["flditem"], modBasic.$compID, 1, 0)
        If res2.Available Then
          res2.MoveFirst

          xitem = res1["flditem"]
          If res1["fldfixname"] Then
            xitem = res1["fldfixname"]
            If res1["fldfixrate"] Then
              xrate = res1["fldfixrate"]
            Else
              xrate = 0
            Endif
          Else
            xrate = modStock.GetSellingPriceByStockNo(res2["fldstockno"], $sBillMode)
          Endif

          If qtynew <= res2["fldqty"] Then
            If modBasic.$AutoBillUseOwn = "Enable" Then
              modBillings.InsertBlankBillItemNewApp($encid, res1["fldbilltype"], res1["fldbillingmode"], res1["flddisctype"], res1["fldacledger"], res1["flditemtype"], res2["fldstockno"], xitem, xrate, qtynew, tax, disc, xCshCrd, "Done", res1["fldid"], True, False, "", xpayble, xrefer)
            Endif
            modStockSub.AddToExistEntry(res2["fldstockno"], (0 - qtynew), modBasic.$compID)
            qtynew = 0
          Else If qtynew > res2["fldqty"] Then
            If modBasic.$AutoBillUseOwn = "Enable" Then
              modBillings.InsertBlankBillItemNewApp($encid, res1["fldbilltype"], res1["fldbillingmode"], res1["flddisctype"], res1["fldacledger"], res1["flditemtype"], res2["fldstockno"], xitem, xrate, res2["fldqty"], tax, disc, xCshCrd, "Done", res1["fldid"], True, False, "", xpayble, xrefer)
            Endif
            modStockSub.AddToExistEntry(res2["fldstockno"], (0 - res2["fldqty"]), modBasic.$compID)
            qtynew = qtynew - res2["fldqty"]
          Endif
          Wait
        Else
          Break
        Endif
      Wend

      If res1["fldqtydisp"] > qtynew Then
        If qtynew > 0 Then
          modPharmSub.DuplicateRecordWithQTY(res1["fldid"], qtynew)
          modPharmSub.UpdateQTYBefDispensing(res1["fldid"], res1["fldqtydisp"] - qtynew)
        Endif
        If sStatus = "Completed" Then
          modPharmSub.UpdateDispensing(res1["fldid"], True, True)
        Else
          modPharmSub.UpdateDispensing(res1["fldid"], True, False)
        Endif
      Endif
      modDatabase.$myConn.Commit

      ''Why to insert dosing when save from local stock?
      ' If modNonMedical.GetBillItemCategoryFromCombo(res1["fldroute"]) = "Medicines" Then
      '   xdose = Round(res1["flddose"] / modMedConstant.GetDrugInitialStrength(res1["flditem"]), -2)
      '   xunit = modPharmLabel.GetDosageFormForLabel(res1["flditem"], "Inpatient")
      '   modPharmSub.InsertNurDosing(res1["fldid"], $encid, xdose, xunit, "")
      ' Endif

    Else
      xerr = xerr & res1["fldfixname"] & gb.NewLine
    Endif
  Endif
  If xerr Then
    Message.Warning("<b>Over Set Discount/Credit Limit:</b>" & gb.NewLine & xerr, "OK")
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub btnclose_Click()

  Me.Close()

End

''================================Dosing History ===============================
Private Sub ShowMedicationHistory()

  Dim dtList As Date[]
  Dim xdate As Date
  Dim sql As String
  Dim res As Result

  Dim Column As Integer
  Dim pic2 As String
  Dim pic3 As String

  pic2 = "icons/coll2.png"
  pic3 = "icons/coll3.png"

  dtList = modDate.GetDateArrayBetween($doa, Now())
  dtList.Sort(gb.Descent)
  GridView2.Clear()
  GridView2.Columns.Count = 6
  With GridView2
    .Columns[0].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "Time"
    .Columns[1].Text = "Medicine"
    .Columns[2].Text = "Regimen"
    .Columns[3].Text = "Dose"
    .Columns[4].Text = "Unit"
    .Columns[5].Text = "User"
  End With

  For Each xdate In dtList
    sql = "select tblnurdosing.fldtime as fldtime,tblpatdosing.flditem as flditem,tblpatdosing.fldid as fldid,tblnurdosing.fldvalue as fldvalue,tblnurdosing.fldunit as fldunit,tblnurdosing.flduserid as flduserid from tblnurdosing inner join tblpatdosing on tblnurdosing.flddoseno=tblpatdosing.fldid where tblnurdosing.fldencounterval=&1 and tblpatdosing.fldencounterval=&1 and tblnurdosing.fldtime>=&2 and tblnurdosing.fldtime<=&3"
    res = modDatabase.$syConn.Exec(sql, $encid, modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate))
    If res.Available Then
      GridView2.Add(CStr(xdate), modReportVar.GetDateTimeReport(xdate, gb.MediumDate), pic2)

      Column = 0
      For Each res
        GridView2.Add(CStr(xdate) & ":" & CStr(Column), modReportVar.GetDateTimeReport(res["fldtime"], gb.ShortTime), pic3, CStr(xdate))

        GridView2[CStr(xdate) & ":" & CStr(Column)][1] = res["flditem"]
        GridView2[CStr(xdate) & ":" & CStr(Column)][2] = modPharmacy.GetDoseRegimenString(res["fldid"], True)
        GridView2[CStr(xdate) & ":" & CStr(Column)][3] = res["fldvalue"]
        GridView2[CStr(xdate) & ":" & CStr(Column)][4] = res["fldunit"]
        GridView2[CStr(xdate) & ":" & CStr(Column)][5] = res["flduserid"]
        Column = Column + 1
      Next
    Endif
  Next

End

''-------------- select2 js ------------------
' Public Sub cmbfreq_Render()
'
'   modJavaScript.SetSelect2Combo(cmbfreq)
'
' End
