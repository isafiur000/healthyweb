' Gambas class file

Private $billReference As String

Public Sub _new(encid As String)

  txtencid.Text = encid
  modGeneralMain.GetOpenModalForm(Me)
  If txtencid.Text Then
    btnshow_Click()
  Else
    pnlfirst.Visible = True
  Endif

End

Public Sub txtencid_Activate()

  btnshow_Click()

End

Public Sub btnwebcam_Click()

  txtencid.Text = QRScanValue("")
  If txtencid.Text Then
    btnshow_Click()
  Endif

End

Public Sub btnshow_Click()

  If txtencid.Text Then
    txtname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
    $billReference = modNonMedical.GetFixedReference(txtencid.Text)
    txtgencomplaint.RichText = modPatPatho.ShowSelectedHistoryValue(Trim(txtencid.Text), "General Complaints")
    cmbhistory.List = GetHistoryList()
    If modBasic.$TabletModeEnable = "Yes" Then
    Else
      txtgencomplaint.SetFocus
    Endif
  Endif

End

Private Function GetHistoryList() As String[]

  Dim xList As String[]
  Dim xnew As String[]
  Dim xfinal As String[]

  xList = New String[]
  xList.Add("History of Illness")
  xnew = modMedicine.GetClinHistoryList($billReference)
  If xnew And If xnew.Count Then
    xList.Insert(xnew)
  Else
    xList.Insert(modMedicine.GetDefaultClinHistories())
  Endif

  xfinal = modString.BinaryDistinctStringArray(xList)
  Return xfinal

End

Public Sub btnclose_Click()

  Me.Close

End

''---------------------Coplaints -------------------
Public Sub btngencompln_Click()

  Dim xboolean As Boolean

  If modBasic.$ClinHistoryInput = "Single" Then
    xboolean = True
  Else
    xboolean = False
  Endif

  If txtgencomplaint.Text Then
    modPatientGeneral.AddExamGeneralQualiData(Trim(txtencid.Text), "History", "General Complaints", txtgencomplaint.KeyList.Join(";"), txtgencomplaint.RichText, xboolean)
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
  Endif

End

''--------------------- History ------------------------

Public Sub cmbhistory_Select()

  If cmbhistory.Text Then
    txthistory.RichText = modPatPatho.ShowSelectedHistoryValue(Trim(txtencid.Text), cmbhistory.Text)
  Endif

End

Public Sub tlbtnhistory_Click()

  Dim xboolean As Boolean

  If modBasic.$ClinHistoryInput = "Single" Then
    xboolean = True
  Else
    xboolean = False
  Endif

  If cmbhistory.Text Then
    If txthistory.Text Then
      modPatientGeneral.AddExamGeneralQualiData(Trim(txtencid.Text), "History", cmbhistory.Text, txthistory.KeyList.Join(";"), txthistory.RichText, xboolean)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

''----------database
Public Sub btndatacompl_Click()

End

Public Sub btnhistorydef_Click()

  If cmbhistory.Text Then
    txthistory.RichText = AddHistory("History", cmbhistory.Text)
  Endif

End

''------------- pen
Public Sub btnpancompl_Click()

  txtgencomplaint.RichText = txtgencomplaint.RichText & Space(1) & modFillContainer.GetExtraTextArea("General Complaints", txtgencomplaint.Text)

End

Public Sub btnpanhistory_Click()

  If cmbhistory.Text Then
    txthistory.RichText = txthistory.RichText & Space(1) & modFillContainer.GetExtraTextArea(cmbhistory.Text, txthistory.Text)
  Endif

End

''------------ exec
Public Sub btnexeccompl_Click()

  txtgencomplaint.RichText = txtgencomplaint.RichText & modString.TextToHTML(modCloudAI.GetPatCloudAIResponse(Trim(txtencid.Text), txtgencomplaint.Text))

End

Public Sub btnexechistory_Click()

  txthistory.RichText = txthistory.RichText & modString.TextToHTML(modCloudAI.GetPatCloudAIResponse(Trim(txtencid.Text), txthistory.Text))

End

''----------- attach
Public Sub btnattcompl_Click()

  txtgencomplaint.RichText = txtgencomplaint.RichText & DictionaryVIew(modBasic.$dictadvPath)

End

Public Sub btnatthistory_Click()

  txthistory.RichText = txthistory.RichText & DictionaryVIew(modBasic.$dictadvPath)

End

Public Sub btnclear_Click()

  txtgencomplaint.RichText = ""

End

Public Sub btnclearhist_Click()

  txthistory.RichText = ""

End
