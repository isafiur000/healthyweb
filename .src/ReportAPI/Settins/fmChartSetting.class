' Gambas class file

' Private $ageFile As File

Public Sub _new()

  Dim hForm As FmUnivariate

  hForm = New FmUnivariate(Panel2)

End

Public Sub IconPanel1_Click()

  Dim hForm As FmUnivariate
  Dim hForm1 As FmBivariate
  Dim hForm2 As FmGridSummary
  Dim hForm3 As FmCrossTabChart
  Dim hForm4 As FmRegression
  Dim hForm5 As FmTimeSeries

  If IconPanel1.Index = 0 Then
    If Panel2.Children.Count Then
      Panel2.DeleteChildren()
    Endif
    hForm = New FmUnivariate(Panel2)
  Else If IconPanel1.Index = 1 Then
    If Panel3.Children.Count Then
      Panel3.DeleteChildren()
    Endif
    hForm1 = New FmBivariate(Panel3)
  Else If IconPanel1.Index = 2 Then
    If Panel5.Children.Count Then
      Panel5.DeleteChildren()
    Endif
    hForm4 = New FmRegression(Panel5)
  Else If IconPanel1.Index = 3 Then
    If Panel6.Children.Count Then
      Panel6.DeleteChildren()
    Endif
    hForm5 = New FmTimeSeries(Panel6)
  Else If IconPanel1.Index = 4 Then
    If Panel1.Children.Count Then
      Panel1.DeleteChildren()
    Endif
    hForm3 = New FmCrossTabChart(Panel1)
  Else If IconPanel1.Index = 5 Then
    If Panel4.Children.Count Then
      Panel4.DeleteChildren()
    Endif
    hForm2 = New FmGridSummary(Panel4)
  Else If IconPanel1.Index = 6 Then
    cmbcurve.List = ["Yes", "No"]
    cmbclinpoint.List = ["Yes", "No"]
    cmbclinlabel.List = ["Yes", "No"]
    cmbclinup.List = ["Yes", "No"]
    cmbclinlow.List = ["Yes", "No"]
    cmbclinormal.List = ["Yes", "No"]
    cmbclinhour.List = ["Yes", "No"]
    cmbclindaylabel.List = ["Yes", "No"]
    ShowClinicalSetting()
  Else If IconPanel1.Index = 7 Then
    cmbfintitle.List = ["Yes", "No"]
    cmbfinxlabel.List = ["Yes", "No"]
    cmbfinylabel.List = ["Yes", "No"]
    cmbfinstat.List = ["GNUChart", "PSPP"]
    cmbchartday.List = ["Day", "Week", "Month", "Year"]
    cmbfinamtgrp.List = ["Units", "Tens", "Hundreds", "Thousands"]
    cmbfinqtygrp.List = ["Units", "Tens", "Hundreds", "Thousands"]
    cmbfinsummry.List = ["Date", "Item"]
    ShowFinancialChart()
  Else If IconPanel1.Index = 8 Then
    cmbgender.List = ["Yes", "No"]
    cmbtotal.List = ["Yes", "No"]
    StatSetting()
    ShowHealthReport()
    GetCustomGrouping()
  Endif

  ' cmbagefir.List = ["Days", "Months", "Years"]
  ' cmbagelas.List = ["Days", "Months", "Years"]
  ' cmbwtfir.List = ["Gram", "KiloGram"]
  ' cmbwtlast.List = ["Gram", "KiloGram"]

  ' DisplayAgegrid()
  ' DisplayWtgrid()

End

'''--------------------------clinical chart -----------------------------------------
Private Sub ShowClinicalSetting()

  cmbcurve.Text = modSettings.ShowSettingFromFIle("ClinicalChart/DataCurve")
  cmbclinpoint.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowPoints")
  cmbclinlabel.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowLabels")
  cmbclinup.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowUpperRange")
  cmbclinlow.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowLowerRange")
  cmbclinormal.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowNormalRange")
  cmbclinhour.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowHourGrid")
  cmbclindaylabel.Text = modSettings.ShowSettingFromFIle("ClinicalChart/ShowGridLabel")

  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowData_Color") Then
  '   coldatacurve.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowData_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowPoints_Color") Then
  '   colclinpoint.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowPoints_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowLabels_Color") Then
  '   colclinlabel.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowLabels_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowUpperRange_Color") Then
  '   colclinup.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowUpperRange_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowLowerRange_Color") Then
  '   colclinlow.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowLowerRange_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowNormalRange_Color") Then
  '   colclinormal.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowNormalRange_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowHourGrid_Color") Then
  '   colclinhour.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowHourGrid_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowDayGrid_Color") Then
  '   colclinday.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowDayGrid_Color"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("ClinicalChart/ShowGridLabel_Color") Then
  '   colclindaylabel.Value = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/ShowGridLabel_Color"))
  ' Endif

  ''hour diff
  If modSettings.ShowSettingFromFIle("ClinicalChart/HourDifference") Then
    txthrdiff.Val = CInt(modSettings.ShowSettingFromFIle("ClinicalChart/HourDifference"))
  Endif

End

Public Sub btndatacurve_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/DataCurve", cmbcurve.Text)
  modBasic.$ClinChartDataCurve = cmbcurve.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowData_Color", coldatacurve.Value)
  ' modBasic.$ClinColorData = coldatacurve.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclinpoint_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowPoints", cmbclinpoint.Text)
  modBasic.$ClinChartShowPoint = cmbclinpoint.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowPoints_Color", colclinpoint.Value)
  ' modBasic.$ClinColorPoints = colclinpoint.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclinlabel_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowLabels", cmbclinlabel.Text)
  modBasic.$ClinChartShowLabel = cmbclinlabel.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowLabels_Color", colclinlabel.Value)
  ' modBasic.$ClinColorLabel = colclinlabel.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclinup_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowUpperRange", cmbclinup.Text)
  modBasic.$ClinChartShowUpper = cmbclinup.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowUpperRange_Color", colclinup.Value)
  ' modBasic.$ClinColorUpper = colclinup.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclinlow_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowLowerRange", cmbclinlow.Text)
  modBasic.$ClinChartShowLower = cmbclinlow.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowLowerRange_Color", colclinlow.Value)
  ' modBasic.$ClinColorLower = colclinlow.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclinormal_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowNormalRange", cmbclinormal.Text)
  modBasic.$ClinChartShowNormal = cmbclinormal.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowNormalRange_Color", colclinormal.Value)
  ' modBasic.$ClinColorNormal = colclinormal.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclinhour_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowHourGrid", cmbclinhour.Text)
  modBasic.$ClinChartShowHourGrid = cmbclinhour.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowHourGrid_Color", colclinhour.Value)
  ' modBasic.$ClinColorHourGrid = colclinhour.Value
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowDayGrid_Color", colclinday.Value)
  ' modBasic.$ClinColorDayGrid = colclinday.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclindaylabel_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/ShowGridLabel", cmbclindaylabel.Text)
  modBasic.$ClinChartShowGridLabel = cmbclindaylabel.Text
  ' modSettings.SaveSettingsToFile("ClinicalChart/ShowGridLabel_Color", colclindaylabel.Value)
  ' modBasic.$ClinColorGridLabel = colclindaylabel.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhrdiff_Click()

  modSettings.SaveSettingsToFile("ClinicalChart/HourDifference", CStr(txthrdiff.Value))
  modBasic.$ClinChartHourDiff = txthrdiff.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''----------------------------------- financial chart ------------------------------------------------
Private Sub ShowFinancialChart()

  cmbfintitle.Text = modSettings.ShowSettingFromFIle("InventoryChart/ShowTitle")
  cmbfinxlabel.Text = modSettings.ShowSettingFromFIle("InventoryChart/ShowXLabel")
  cmbfinylabel.Text = modSettings.ShowSettingFromFIle("InventoryChart/ShowYLabel")
  cmbchartday.Text = modSettings.ShowSettingFromFIle("InventoryChart/DataGrouping")
  cmbfinqtygrp.Text = modSettings.ShowSettingFromFIle("InventoryChart/QTYGrouping")
  cmbfinamtgrp.Text = modSettings.ShowSettingFromFIle("InventoryChart/AMTGrouping")
  cmbfinsummry.Text = modSettings.ShowSettingFromFIle("InventoryChart/SummaryBy")
  If modSettings.ShowSettingFromFIle("InventoryChart/ChartColor") Then
    clrchartcolor.Text = modSettings.ShowSettingFromFIle("InventoryChart/ChartColor")
  Endif
  cmbfinstat.Text = modSettings.ShowSettingFromFIle("InventoryChart/Statistics")

  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartLeft") Then
  '   txtleftval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartLeft"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartTop") Then
  '   txttopval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartTop"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartRight") Then
  '   txtrightval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartRight"))
  ' Endif
  ' If modSettings.ShowSettingFromFIle("InventoryChart/ChartBottom") Then
  '   txtbottomval.Value = CInt(modSettings.ShowSettingFromFIle("InventoryChart/ChartBottom"))
  ' Endif

End

Public Sub btnfintitle_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ShowTitle", cmbfintitle.Text)
  modBasic.$InvChShowTitle = cmbfintitle.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfinxlabel_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ShowXLabel", cmbfinxlabel.Text)
  modBasic.$InvChShowXLabel = cmbfinxlabel.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfinylabel_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ShowYLabel", cmbfinylabel.Text)
  modBasic.$InvChShowYLabel = cmbfinylabel.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnchartday_Click()

  modSettings.SaveSettingsToFile("InventoryChart/DataGrouping", cmbchartday.Text)
  modBasic.$InvChDataGrouping = cmbchartday.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfinqtygrp_Click()

  modSettings.SaveSettingsToFile("InventoryChart/QTYGrouping", cmbfinqtygrp.Text)
  modBasic.$InvChQTYGrouping = cmbfinqtygrp.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfinamtgrp_Click()

  modSettings.SaveSettingsToFile("InventoryChart/AMTGrouping", cmbfinamtgrp.Text)
  modBasic.$InvChAMTGrouping = cmbfinamtgrp.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnchartcolor_Click()

  modSettings.SaveSettingsToFile("InventoryChart/ChartColor", clrchartcolor.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfinstat_Click()

  modSettings.SaveSettingsToFile("InventoryChart/Statistics", cmbfinstat.Text)
  modBasic.$ChartExecStat = cmbfinstat.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfinsummry_Click()

  modSettings.SaveSettingsToFile("InventoryChart/SummaryBy", cmbfinsummry.Text)
  modBasic.$ChartSummaryFormat = cmbfinsummry.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnset_Click()

  ' modSettings.SaveSettingsToFile("InventoryChart/ChartLeft", CStr(txtleftval.Value))
  ' modSettings.SaveSettingsToFile("InventoryChart/ChartTop", CStr(txttopval.Value))
  ' modSettings.SaveSettingsToFile("InventoryChart/ChartRight", CStr(txtrightval.Value))
  ' modSettings.SaveSettingsToFile("InventoryChart/ChartBottom", CStr(txtbottomval.Value))
  ' modBasic.ResizeInventoryChartSet()
  ' Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
  ' Balloon.Delay = modBasic.$BalloonDelay

End

' '''-------------------------------------------------- Age Grouping -----------------------------
' Public Sub btnageadd_Click()
'
'   Dim xx As String
'   Dim xfir As String
'   Dim xlas As String
'
'   If txtagegroup.Text Then
'     If Not Exist(modHelpVariable.AppDirectory &/ "agegrouping") Then
'       File.Save(modHelpVariable.AppDirectory &/ "agegrouping", "")
'     Endif
'     xx = File.Load(modHelpVariable.AppDirectory &/ "agegrouping")
'
'     If cmbagefir.Text = "Months" Then
'       xfir = CStr(CInt(txtagefir.Value * 30))
'     Else If cmbagefir.Text = "Years" Then
'       xfir = CStr(CInt(txtagefir.Value * 365))
'     Else
'       xfir = CStr(CInt(txtagefir.Value))
'     Endif
'
'     If cmbagelas.Text = "Months" Then
'       xlas = CStr(CInt(txtagelas.Value * 30))
'     Else If cmbagelas.Text = "Years" Then
'       xlas = CStr(CInt(txtagelas.Value * 365))
'     Else
'       xlas = CStr(CInt(txtagelas.Value))
'     Endif
'
'     xx = xx & txtagegroup.Text & ";" & xfir & ";" & xlas & gb.NewLine
'     If Exist(modHelpVariable.AppDirectory &/ "agegrouping") Then
'       Kill modHelpVariable.AppDirectory &/ "agegrouping"
'     Endif
'     File.Save(modHelpVariable.AppDirectory &/ "agegrouping", xx)
'     DisplayAgegrid()
'   Endif
'
' End
'
' Public Sub btnagegrprefresh_Click()
'
'   DisplayAgegrid()
'
' End
'
' Private Sub DisplayAgegrid()
'
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'
'   If Exist(modHelpVariable.AppDirectory &/ "agegrouping") Then
'     GridView1.Clear
'     GridView1.Columns.Count = 3
'     GridView1.Count = modString.GetLineInTextFile(modHelpVariable.AppDirectory &/ "agegrouping")
'     $ageFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
'     modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
'
'     Row = 0
'     For Each sline In $ageFile.Lines
'       sCol = Split(sLine, ";")
'       GridView1[Row, 0].Text = sCol[0]
'       GridView1[Row, 1].Text = sCol[1]
'       GridView1[Row, 2].Text = sCol[2]
'       Row = Row + 1
'     Next
'     $ageFile.Close()
'
'     With GridView1
'       .Columns[0].Text = "Age Group Label"
'       .Columns[1].Text = "Min age (Days)"
'       .Columns[2].Text = "Max age(Days)"
'       .Columns[0].Width = 250 * modBasic.$AppWidthRatio
'       .Columns[1].Width = 150 * modBasic.$AppWidthRatio
'       .Columns[2].Width = 150 * modBasic.$AppWidthRatio
'     End With
'   Else
'     GridView1.Clear
'   Endif
'
' End
'
' Public Sub btnagerefresh_Click()
'
'   Dim sPath As String
'
'   sPath = modHelpVariable.AppDirectory &/ "agegrouping"
'   If Exist(sPath) Then
'     Desktop.Open(sPath)
'   Endif
'
' End
'
' Public Sub btnclear_Click()
'
'   Dim sPath As String
'
'   sPath = modHelpVariable.AppDirectory &/ "agegrouping"
'   If Exist(sPath) Then
'     Kill sPath
'   Endif
'
' End

' '''-------------------------------------------------- Weight Grouping -----------------------------
' Public Sub cmbwtadd_Click()
'
'   Dim xx As String
'   Dim xfir As String
'   Dim xlas As String
'
'   If txtwtgroup.Text Then
'     If Not Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
'       File.Save(modHelpVariable.AppDirectory &/ "weightgrouping", "")
'     Endif
'     xx = File.Load(modHelpVariable.AppDirectory &/ "weightgrouping")
'
'     If cmbwtfir.Text = "KiloGram" Then
'       xfir = CStr(txtwtfir.Value * 1000)
'     Else
'       xfir = CStr(txtwtfir.Value)
'     Endif
'
'     If cmbwtlast.Text = "KiloGram" Then
'       xlas = CStr(txtwtlast.Value * 1000)
'     Else
'       xlas = CStr(txtwtlast.Value)
'     Endif
'
'     xx = xx & txtwtgroup.Text & ";" & xfir & ";" & xlas & gb.NewLine
'     If Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
'       Kill modHelpVariable.AppDirectory &/ "weightgrouping"
'     Endif
'     File.Save(modHelpVariable.AppDirectory &/ "weightgrouping", xx)
'     DisplayWtgrid()
'   Endif
'
' End
'
' Public Sub btnwtgrprefresh_Click()
'
'   DisplayWtgrid()
'
' End
'
' Private Sub DisplayWtgrid()
'
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'
'   If Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
'     GridView2.Clear
'     GridView2.Columns.Count = 3
'     GridView2.Count = modString.GetLineInTextFile(modHelpVariable.AppDirectory &/ "weightgrouping")
'     $ageFile = Open modHelpVariable.AppDirectory &/ "weightgrouping"
'     modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "weightgrouping")
'
'     Row = 0
'     For Each sline In $ageFile.Lines
'       sCol = Split(sLine, ";")
'       GridView2[Row, 0].Text = sCol[0]
'       GridView2[Row, 1].Text = sCol[1]
'       GridView2[Row, 2].Text = sCol[2]
'       Row = Row + 1
'     Next
'     $ageFile.Close()
'
'     With GridView2
'       .Columns[0].Text = "Wt Group Label"
'       .Columns[1].Text = "Min Wt (Gram)"
'       .Columns[2].Text = "Max Wt (Gram)"
'       .Columns[0].Width = 250 * modBasic.$AppWidthRatio
'       .Columns[1].Width = 150 * modBasic.$AppWidthRatio
'       .Columns[2].Width = 150 * modBasic.$AppWidthRatio
'     End With
'
'   Else
'     GridView2.Clear
'   Endif
'
' End
'
' Public Sub btnwtrefresh_Click()
'
'   Dim sPath As String
'
'   sPath = modHelpVariable.AppDirectory &/ "weightgrouping"
'   If Exist(sPath) Then
'     Desktop.Open(sPath)
'   Endif
'
' End

''---------------------------------- Health Report ---------------------------
Private Sub ShowHealthReport()

  cmbgender.Text = modSettings.ShowSettingFromFIle("HealthReport/ShowGender")
  cmbtotal.Text = modSettings.ShowSettingFromFIle("HealthReport/ShowTotal")

End

Public Sub btngender_Click()

  modSettings.SaveSettingsToFile("HealthReport/ShowGender", cmbgender.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntotal_Click()

  modSettings.SaveSettingsToFile("HealthReport/ShowTotal", cmbtotal.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''----------------------------- Custom Grouping ------------------
Private Sub GetCustomGrouping()

  modSettings.ShowCheckBox(chkagegrpcustom, "AgeGrouping/Custom")
  modSettings.ShowCheckBox(chkwtgrpcustom, "WeightGrouping/Custom")

End

Public Sub btnagegrpcustom_Click()

  modSettings.EnterCheckSetting(chkagegrpcustom, "AgeGrouping/Custom")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnwtgrpcustom_Click()

  modSettings.EnterCheckSetting(chkwtgrpcustom, "WeightGrouping/Custom")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------------------------- Statistical Settings -------------------------
Private Sub StatSetting()

  If modSettings.ShowSettingFromFIle("StatisticsSetting/ConfidenceInterval") Then
    txtconfinterval.Value = CFloat(modSettings.ShowSettingFromFIle("StatisticsSetting/ConfidenceInterval"))
  Endif

End

Public Sub btnconfinterval_Click()

  modSettings.SaveSettingsToFile("StatisticsSetting/ConfidenceInterval", CStr(txtconfinterval.Value))
  modBasic.$StatConfInterval = txtconfinterval.Value
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''=====================
Public Sub WebButton11_Click()

  GetNormalButtons()
  IconPanel1.Index = 0
  WebButton11.Background = Color.LightGray

End

Public Sub WebButton10_Click()

  GetNormalButtons()
  IconPanel1.Index = 1
  WebButton10.Background = Color.LightGray

End

Public Sub WebButton9_Click()

  GetNormalButtons()
  IconPanel1.Index = 2
  WebButton9.Background = Color.LightGray

End

Public Sub WebButton8_Click()

  GetNormalButtons()
  IconPanel1.Index = 3
  WebButton8.Background = Color.LightGray

End

Public Sub WebButton7_Click()

  GetNormalButtons()
  IconPanel1.Index = 4
  WebButton7.Background = Color.LightGray

End

Public Sub WebButton6_Click()

  GetNormalButtons()
  IconPanel1.Index = 5
  WebButton6.Background = Color.LightGray

End

Public Sub WebButton5_Click()

  GetNormalButtons()
  IconPanel1.Index = 6
  WebButton5.Background = Color.LightGray

End

Public Sub WebButton4_Click()

  GetNormalButtons()
  IconPanel1.Index = 7
  WebButton4.Background = Color.LightGray

End

Public Sub WebButton1_Click()

  GetNormalButtons()
  IconPanel1.Index = 8
  WebButton1.Background = Color.LightGray

End

Public Sub WebButton3_Click()

  GetNormalButtons()
  IconPanel1.Index = 9
  WebButton3.Background = Color.LightGray

End

Private Sub GetNormalButtons()

  WebButton1.Background = Color.Default
  WebButton3.Background = Color.Default
  WebButton4.Background = Color.Default
  WebButton5.Background = Color.Default
  WebButton6.Background = Color.Default
  WebButton7.Background = Color.Default
  WebButton8.Background = Color.Default
  WebButton9.Background = Color.Default
  WebButton10.Background = Color.Default
  WebButton11.Background = Color.Default

End

Public Sub btnclose_Click()

  Me.Close()

End
