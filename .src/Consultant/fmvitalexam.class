' Gambas class file

Private $ExamOption As String[]
Private $rData As Result
Private $aMyFields As String[]

Public Sub _new()

  If modHelpVariable.$LogInCategory = "Clinician" Then
    cmbtarget.Text = modBasic.$compID
    cmbtarget.Enabled = False
  Else
    cmbtarget.List = modBasic.$AllCompPerList
    cmbtarget.Enabled = True
  Endif
  cmbcategory.List = ["Triage Examinations", "Essential Examinations", "Physician Examinations", "Nursing Examinations", "Discharge Examinations"]                         ''
  cmbtype.List = ["Qualitative", "Quantitative"]
  cmbconstant.List = modSysCons.GetAllSysConstantsList()
  $ExamOption = modMedicine.FillClinSepOptionCombo()

End

Public Sub cmbtarget_Click()

  lblcomp.Text = modGeneral.GetCompNameFromCompID(cmbtarget.Text)

End

Public Sub btnexport_Click()

  If cmbcategory.Text Then
    modCHTMLReport.ExportGridToHTML(GridView1, UCase(cmbcategory.Text), lblcomp.Text & "[" & cmbtarget.Text & "]")
  Endif

End

Public Sub cmbtype_Click()

  If cmbtype.Text Then
    If cmbtype.Text = "Quantitative" Then
      cmboption.List = ["No Selection", "Calculated"]
    Else If cmbtype.Text = "Qualitative" Then
      cmboption.List = $ExamOption
    Endif
  Endif

End

Private Function GetFlagValue(sBool As Boolean) As String

  Dim sVal As String

  If sBool = True Then
    sVal = "Flagged"
  Else If sBool = False Then
    sVal = "Unflagged"
  Endif
  Return sVal

End

Public Sub btnrefresh_Click()

  If cmbcategory.Text And If cmbtarget.Text Then
    FillFindingGrid(cmbcategory.Text)
  Endif

End

Public Sub btnaddall_Click()

  Dim hForm As FmSelectList

  If cmbcategory.Text And If cmbtarget.Text Then
    hForm = New FmSelectList(("Select Examinations for the selected department"), cmbcategory.Text, cmbtarget.Text)
    hForm.ShowModal
    FillFindingGrid(cmbcategory.Text)
  Endif

End

Private Sub MakeBlank()

  txtexamname.Text = ""
  cmbtype.Text = ""
  cmbconstant.Text = ""
  cmboption.Text = ""
  txtorder.Value = 0

End

Public Sub btnBrOK_Click()

  Dim res As Result

  If cmbcategory.Text And If txtexamname.Text And If cmbtype.Text And If cmbtarget.Text Then
    If txtgroupname.Text And If cmbtype.Text Then
      res = modDatabase.$myConn.Create("tblcompexam")
      res["fldcategory"] = cmbcategory.Text
      res["fldexamid"] = txtexamname.Text
      res["fldtype"] = cmbtype.Text
      res["fldsysconst"] = cmbconstant.Text
      res["fldtanswertype"] = cmboption.Text
      res["fldoptionlist"] = ""
      res["fldgroupname"] = Trim(txtgroupname.Text)
      res["fldexamorder"] = txtorder.Value
      res["fldflag"] = False
      res["fldcomp"] = cmbtarget.Text
      res.Update
      FillFindingGrid(cmbcategory.Text)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
      MakeBlank()
    Endif
  Endif

End

Public Sub btnedit_Click()

  Dim res As Result

  If cmbcategory.Text And If txtexamname.Text And If cmbtype.Text And If cmbtarget.Text Then
    If txtgroupname.Text And If cmbtype.Text Then
      res = modDatabase.$myConn.Edit("tblcompexam", "fldid=&1", GridView1[GridView1.Row, 0].Text)
      res["fldexamid"] = txtexamname.Text
      res["fldtype"] = cmbtype.Text
      res["fldsysconst"] = cmbconstant.Text
      res["fldtanswertype"] = cmboption.Text
      res["fldexamorder"] = txtorder.Value
      res["fldgroupname"] = Trim(txtgroupname.Text)
      res.Update
      FillFindingGrid(cmbcategory.Text)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
    Endif
  Endif

End

Private Sub FillFindingGrid(sType As String)

  Dim sql As String

  If cmbtarget.Text Then
    sql = "select fldid,fldgroupname,fldflag,fldexamid,fldflag,fldtanswertype,fldsysconst,fldtype,fldexamorder from tblcompexam where fldcomp=&1 and fldcategory=&2 ORDER BY fldexamorder"
    $rData = modDatabase.$myConn.Exec(sql, cmbtarget.Text, sType)
    $aMyFields = New String[]
    modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

    With GridView1
      .Columns[0].Hidden = True
      .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[2].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(325 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Hidden = True
      .Columns[5].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[6].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[7].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[8].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"

      .Columns[1].Text = "Group Name"
      .Columns[3].Text = "Exam Name"
      .Columns[5].Text = "Option"
      .Columns[6].Text = "Constant"
      .Columns[7].Text = "Data Type"
      .Columns[8].Text = "Order"
    End With
  Endif

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.SetGridCheckIcon($rData[$aMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub GridView1_Select()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    txtexamname.Text = $rData["fldexamid"]
    txtgroupname.Text = $rData["fldgroupname"]
    cmbconstant.Text = $rData["fldsysconst"]
    cmboption.Text = $rData["fldtanswertype"]
    cmbtype.Text = $rData["fldtype"]
    txtorder.Value = $rData["fldexamorder"]
  Endif

End

Public Sub btnexamflag_Click()

  Dim xval As String
  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xval = InputCombo("Alter Flag", $rData["fldexamid"], ["Flagged", "Unflagged"], GetFlagValue($rData["fldflag"]), True)
    If xval Then
      res = modDatabase.$myConn.Edit("tblcompexam", "fldid=&1", $rData["fldid"])
      If xval = "Flagged" Then
        res["fldflag"] = True
      Else If xval = "Unflagged" Then
        res["fldflag"] = False
      Endif
      res.Update
      FillFindingGrid(cmbcategory.Text)
    Endif
  Endif

End

Public Sub btnoptions_Click()

  Dim res As Result
  Dim xlist As String[]
  Dim aList As String[]

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    res = modDatabase.$myConn.Edit("tblcompexam", "fldid=&1", $rData["fldid"])
    If res.Available Then
      If res["fldoptionlist"] Then
        xlist = JSON.Decode(res["fldoptionlist"])
      Else
        xlist = New String[]
      Endif
      aList = InputList(res["fldexamid"], xlist)

      If aList And If aList.Count Then
        res["fldoptionlist"] = JSON.Encode(aList)
        res.Update
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Public Sub mnudel_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If cmbcategory.Text Then
      modDatabase.$myConn.Delete("tblcompexam", "fldid=&1", $rData["fldid"])
      FillFindingGrid(cmbcategory.Text)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information deleted", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub btnupload_Click()

  Dim xdelim As String

  If Trim(txtdelim.Text) Then
    xdelim = Trim(txtdelim.Text)
  Else
    xdelim = ";"
  Endif

  If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
    If cmbtarget.Text Then
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcompexam", txtcsv.Text, xdelim, "fldcomp", cmbtarget.Text)
    Else
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcompexam", txtcsv.Text, xdelim)
    Endif
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Data upload completed", modBasic.$BalloonDelay))
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End
