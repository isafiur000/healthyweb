' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $rData1 As Result
Private $aMyFields1 As String[]
Private $SSQLFields As String[]
Private $GridType As String
Private $SuperMode As Boolean

Private $tblpatbilling As String
Private $tblpatlabtest As String

Public Sub _new()

  Dim xhospfld As String

  cmbcategory.List = ["%", "Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]                              ''
  cmbcategory.Text = "%"
  cmbcomp.List = modBasic.$AllCompPerList
  cmbcomp.Text = "%"
  dtfir.Value = Now()
  dtlast.Value = Now()

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldencounterval", "fldencounterval", "flditemname", "flditemrate", "flditemqty", "fldtaxper", "flddiscper", "fldditemamt", "fldtime", "fldbillno", "fldid", "flditemtype", "fldsample", "fldextracol", "fldpayto", "fldrefer"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif
  If modBasic.$SuperUser = True Then
    btnlock.Visible = True
  Endif
  $SuperMode = False
  rbbilled.Value = True
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatbilling = "tblpatbilling"
    $tblpatlabtest = "tblpatlabtest"
  Else
    res = modDatabase.$myConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail,fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
      $tblpatlabtest = "tblpatlabtest"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim sql As String
  Dim encid As String
  Dim billno As String
  Dim res As Result

  If txtencid.Text Then
    encid = Trim(txtencid.Text)
  Else
    encid = "%"
  Endif
  If txtinvoice.Text Then
    billno = Trim(txtinvoice.Text)
  Else
    billno = "%"
  Endif

  If rbbilled.Value = True Then
    sql = "select " & xFldList.Join(",") & " from " & $tblpatbilling & " where fldsave=&1 and fldtime>=&2 and fldtime<=&3 and flditemtype like &4 and fldcomp like &5 and fldencounterval like &6 and fldbillno like &7"                                                   ''
    res = modDatabase.$syConn.Exec(sql, True, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcategory.Text, cmbcomp.Text, encid, billno)
  Else If rbsaved.Value = True Then
    sql = "select " & xFldList.Join(",") & " from " & $tblpatbilling & " where fldsave=&1 and fldtime>=&2 and fldtime<=&3 and flditemtype like &4 and fldcomp like &5 and fldencounterval like &6 and fldbillno IS NULL"                                                   ''
    res = modDatabase.$syConn.Exec(sql, True, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcategory.Text, cmbcomp.Text, encid)
  Endif
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 1 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable)
  Else If Column = 3 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 4 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 5 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 6 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 7 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 8 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 14 Then
    xxx = modGeneral.GetUserFullName(xVariable)
  Else If Column = 15 Then
    xxx = modGeneral.GetUserFullName(xVariable)
  Else If Column = 16 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif
  Return xxx

End

Public Sub btnrefresh_Click()

  $rData = ExecuteQuery($SSQLFields.Copy())
  ShowSaleData()

End

Private Sub ShowSaleData()

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  With GridView1
    .Columns[0].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Hidden = True
    .Columns[11].Hidden = True
    .Columns[12].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[13].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[14].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[15].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "Encounter"
    .Columns[1].Text = "Patient Name"
    .Columns[2].Text = "Particulars"
    .Columns[3].Text = "Rate"
    .Columns[4].Text = "QTY"
    .Columns[5].Text = "Tax%"
    .Columns[6].Text = "Disc%"
    .Columns[7].Text = "Total"
    .Columns[8].Text = "DateTime"
    .Columns[9].Text = "Invoice"
    .Columns[12].Text = "Status"
    .Columns[13].Text = "Reference"
    .Columns[14].Text = "Payable"
    .Columns[15].Text = "Referral"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])

End

Public Sub GridView1_Select()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    $GridType = $rData["flditemtype"]
    If $GridType Then
      If $GridType = "Diagnostic Tests" Then
        DiagnoGrid($rData["fldid"])
      Else If $GridType = "Radio Diagnostics" Then
        RadioGrid($rData["fldid"])
      Else If $GridType = "Procedures" Then
        ProcedureGrid($rData["fldid"])
      Endif
    Endif
  Endif

End

Private Sub RadioGrid(sid As Long)

  Dim sql As String

  sql = "select fldid,fldtestid,fldmethod,fldsampletype,fldstatus,fldtime_report,flduserid_report,fldtime_verify,flduserid_verify from tblpatradiotest where fldgroupid=&1"
  $rData1 = modDatabase.$syConn.Exec(sql, sid)
  ShowSecondGrid("Radio")

End

Private Sub DiagnoGrid(sid As Long)

  Dim sql As String

  sql = "select fldid,fldtestid,fldsampleid,fldsampletype,fldstatus,fldtime_sample,flduserid_sample,fldtime_report,flduserid_report,fldtime_verify,flduserid_verify from " & $tblpatlabtest & " where fldgroupid=&1"
  $rData1 = modDatabase.$syConn.Exec(sql, sid)
  ShowSecondGrid("Test")

End

Private Sub ProcedureGrid(sid As Long)

  Dim sql As String

  sql = "select fldid,flditem,fldgroupid,fldreportquali,fldstatus,fldtime,flduserid from tblpatgeneral where fldgroupid=&1"
  $rData1 = modDatabase.$syConn.Exec(sql, sid)
  ShowSecondGrid("Procedure")

End

Private Sub ShowSecondGrid(sType As String)

  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView2, $rData1, $aMyFields1)
  With GridView2
    If sType = "Test" Then
      .Columns[0].Hidden = True
      .Columns[1].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
      .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(120 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Width = CStr(70 * modBasic.$AppWidthRatio) & "px"
      .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[6].Width = CStr(70 * modBasic.$AppWidthRatio) & "px"
      .Columns[7].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[8].Width = CStr(70 * modBasic.$AppWidthRatio) & "px"
      .Columns[9].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[10].Width = CStr(70 * modBasic.$AppWidthRatio) & "px"

      .Columns[1].Text = "TestName"
      .Columns[2].Text = "SampID"
      .Columns[3].Text = "Specimen"
      .Columns[4].Text = "Status"
      .Columns[5].Text = "SampleDate"
      .Columns[6].Text = "SampledBy"
      .Columns[7].Text = "ReportDate"
      .Columns[8].Text = "ReportedBy"
      .Columns[9].Text = "VerifyDate"
      .Columns[10].Text = "VerifiedBy"

    Else If sType = "Radio" Then
      .Columns[0].Hidden = True
      .Columns[1].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
      .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
      .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[6].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
      .Columns[7].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[8].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

      .Columns[1].Text = "TestName"
      .Columns[2].Text = "SampID"
      .Columns[3].Text = "Specimen"
      .Columns[4].Text = "Status"
      .Columns[5].Text = "ReportDate"
      .Columns[6].Text = "ReportedBy"
      .Columns[7].Text = "VerifyDate"
      .Columns[8].Text = "VerifiedBy"

    Else If sType = "Procedure" Then
      .Columns[0].Hidden = True
      .Columns[1].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
      .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
      .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[6].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

      .Columns[1].Text = "Procedure"
      .Columns[2].Text = "BillID"
      .Columns[3].Text = "Format"
      .Columns[4].Text = "Status"
      .Columns[5].Text = "DateTime"
      .Columns[6].Text = "User"
    Endif
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData1[$aMyFields1[Column]]

End

Public Sub mnucancel_Click()

  Dim xtype As String
  Dim res1 As Result
  Dim res2 As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xtype = $rData["flditemtype"]
    If xtype Then
      If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then

        modDatabase.$myConn.Begin
        If xtype = "Diagnostic Tests" Then
          DeleteDiagno($rData["fldid"])
          DiagnoGrid($rData["fldid"])
        Else If xtype = "Radio Diagnostics" Then
          DeleteRadio($rData["fldid"])
          RadioGrid($rData["fldid"])
        Else If xtype = "Procedures" Then
          DeleteProcedure($rData["fldid"])
          ProcedureGrid($rData["fldid"])
        Endif
        res1 = modDatabase.$myConn.Edit("tblpatgenshare", "flditemid=&1 and fldsave=&2", $rData["fldid"], True)
        If res1.Available Then
          For Each res1
            res1["fldactive"] = "Cancelled"
            res1.Update
          Next
        Endif
        res2 = modDatabase.$myConn.Edit("tblpatusershares", "fldbillid=&1", $rData["fldid"])
        If res2.Available Then
          For Each res2
            res2["fldactive"] = "Cancelled"
            res2.Update
          Next
        Endif
        modDatabase.$myConn.Commit
        btnrefresh_Click()

      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Private Sub DeleteRadio(sid As Long)

  Dim res As Result
  Dim res1 As Result
  Dim xcashcrd As Float

  res = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1 and fldsample=&2", sid, "Sampled")
  If res.Available = True Then
    res1 = modDatabase.$myConn.Edit("tblpatradiotest", "fldgroupid=&1 and (fldstatus=&2 or fldstatus=&3)", sid, "Ordered", "Sampled")
    If res1.Available Then

      ''insert return bill entry
      xcashcrd = 0
      If res["fldcashincredit"] Then
        xcashcrd = res["fldcashincredit"]
      Endif
      If modBasic.$BillVerifyReturn = "Enable" Then
        modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - res["flditemqty"], res["fldtaxper"], res["flddiscper"], xcashcrd, "Waiting", res["fldid"], False, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], "AutoReturn", res["fldbillno"])
      Else
        modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - res["flditemqty"], res["fldtaxper"], res["flddiscper"], xcashcrd, "Done", res["fldid"], True, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], "AutoReturn", res["fldbillno"])
        res["fldretqty"] = res["flditemqty"]
      Endif

      ''update billing entry
      res["fldsample"] = "Removed"
      res["xyz"] = False
      res.Update()

      ''cancel tests
      For Each res1
        res1["fldstatus"] = "Cancelled"
        res1["xyz"] = False
        res1.Update
      Next
    Endif

  Endif

End

Private Sub DeleteDiagno(sid As Long)

  Dim res As Result
  Dim res1 As Result
  Dim xcashcrd As Float

  res = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1 and fldsample=&2", sid, "Sampled")
  If res.Available = True Then
    res1 = modDatabase.$myConn.Edit($tblpatlabtest, "fldgroupid=&1 and (fldstatus=&2 or fldstatus=&3)", sid, "Ordered", "Sampled")
    If res1.Available Then

      ''insert return bill entry
      xcashcrd = 0
      If res["fldcashincredit"] Then
        xcashcrd = res["fldcashincredit"]
      Endif
      If modBasic.$BillVerifyReturn = "Enable" Then
        modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - res["flditemqty"], res["fldtaxper"], res["flddiscper"], xcashcrd, "Waiting", res["fldid"], False, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], "AutoReturn", res["fldbillno"])
      Else
        modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - res["flditemqty"], res["fldtaxper"], res["flddiscper"], xcashcrd, "Done", res["fldid"], True, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], "AutoReturn", res["fldbillno"])
        res["fldretqty"] = res["flditemqty"]
      Endif

      ''update billing entry
      res["fldsample"] = "Removed"
      res["xyz"] = False
      res.Update()

      ''cancel tests
      For Each res1
        res1["fldstatus"] = "Cancelled"
        res1["xyz"] = False
        res1.Update
      Next

    Endif

  Endif

End

Private Sub DeleteProcedure(sid As Long)

  Dim res As Result
  Dim res1 As Result
  Dim xcashcrd As Float

  res = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1 and fldsample=&2", sid, "Sampled")
  If res.Available = True Then
    res1 = modDatabase.$myConn.Edit("tblpatgeneral", "fldgroupid=&1 and (fldstatus=&2 or fldstatus=&3)", sid, "Cleared", "Sampled")
    If res1.Available Then

      ''insert return bill entry
      xcashcrd = 0
      If res["fldcashincredit"] Then
        xcashcrd = res["fldcashincredit"]
      Endif
      If modBasic.$BillVerifyReturn = "Enable" Then
        modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - res["flditemqty"], res["fldtaxper"], res["flddiscper"], xcashcrd, "Waiting", res["fldid"], False, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], "AutoReturn", res["fldbillno"])
      Else
        modBillings.InsertBlankBillItemNewApp(res["fldencounterval"], res["fldbilltype"], res["fldbillingmode"], res["flddisctype"], res["fldacledger"], res["flditemtype"], res["flditemno"], res["flditemname"], res["flditemrate"], 0 - res["flditemqty"], res["fldtaxper"], res["flddiscper"], xcashcrd, "Done", res["fldid"], True, False, res["fldtarget"], res["fldpayto"], res["fldrefer"], "AutoReturn", res["fldbillno"])
        res["fldretqty"] = res["flditemqty"]
      Endif

      ''update billing entry
      res["fldsample"] = "Removed"
      res["xyz"] = False
      res.Update()

      ''cancel tests
      For Each res1
        res1["fldstatus"] = "Cancelled"
        res1["xyz"] = False
        res1.Update
      Next
    Endif

  Endif

End

Public Sub mnureferal_Click()

  Dim xx As String
  Dim res1 As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xx = MedicalSelectedUser(("Select Referral User"), modBasic.$ReferUserList)
    If xx Then
      If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
        res1 = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1", $rData["fldid"])
        res1["fldrefer"] = xx
        res1["xyz"] = False
        res1.Update
        btnrefresh_Click()
      Endif
    Endif
  Endif

End

Public Sub mnupayble_Click()

  Dim xx As String
  Dim res1 As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xx = MedicalSelectedUser(("Select Payable User"), modBasic.$PayUserList)
    If xx Then
      If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
        res1 = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1", $rData["fldid"])
        res1["fldpayto"] = xx
        res1["xyz"] = False
        res1.Update
        btnrefresh_Click()
      Endif
    Endif
  Endif

End

Public Sub mnusershare_Click()

  Dim hForm As FmDiffShare

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If Not $rData["fldextracol"] Then
      hForm = New FmDiffShare($rData["fldid"])
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnuremovepay_Click()

  Dim res1 As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    res1 = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1", $rData["fldid"])
    res1["fldpayto"] = ""
    res1["xyz"] = False
    res1.Update
    ShowSaleData()
  Endif

End

Public Sub mnuremoverefer_Click()

  Dim res1 As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    res1 = modDatabase.$myConn.Edit($tblpatbilling, "fldid=&1", $rData["fldid"])
    res1["fldrefer"] = ""
    res1["xyz"] = False
    res1.Update
    ShowSaleData()
  Endif

End

Public Sub btnexpo_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "BILLING STATUS : " & cmbcategory.Text & "," & cmbcomp.Text & "," & txtencid.Text & "," & txtinvoice.Text
  xparam2 = modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  encColumn = 0
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To $SSQLFields.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[$SSQLFields[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)
  Next
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnlock_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    $SuperMode = True
    btnlock.Image = "icon:/small/unlock"
    btnedit.Visible = True
  Endif

End

Public Sub btnedit_Click()

  Dim xstate As String
  Dim res As Result

  If GridView1.Selection.Count Then
    If $SuperMode = True Then
      If $GridType Then

        If $GridType = "Diagnostic Tests" Then
          $rData1.MoveTo(GridView2.Selection[0])
          xstate = InputCombo($rData1["fldtestid"], "Select Status", ["Sampled", "Reported"], $rData1["fldstatus"], True)
          If xstate Then
            res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData1["fldid"])
            res["fldstatus"] = xstate
            res.Update
            DiagnoGrid($rData["fldid"])
          Endif
        Else If $GridType = "Radio Diagnostics" Then
          $rData1.MoveTo(GridView2.Selection[0])
          xstate = InputCombo($rData1["fldtestid"], "Select Status", ["Sampled", "Reported"], $rData1["fldstatus"], True)
          If xstate Then
            res = modDatabase.$myConn.Edit("tblpatradiotest", "fldid=&1", $rData1["fldid"])
            res["fldstatus"] = xstate
            res.Update
            RadioGrid($rData["fldid"])
          Endif
        Endif

      Endif
    Endif
  Endif

End
