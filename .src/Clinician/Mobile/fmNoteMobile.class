' Gambas class file

Private $doa As Date

Private $rData As Result
Private $aMyFields As String[]
Private $sType As String

Public Sub _new(encid As String)

  txtencid.Text = encid
  modGeneralMain.GetOpenModalForm(Me)
  cmbnote.List = ["Progress Note", "Clinicians Note", "Nurses Note", "Transfer Note"]
  rbclinician.Value = True
  $sType = "Clinicians Note"

  If txtencid.Text Then
    btnshow_Click()
  Else
    pnlfirst.Visible = True
  Endif

End

Public Sub txtencid_Activate()

  btnshow_Click()

End

Public Sub btnwebcam_Click()

  txtencid.Text = QRScanValue("")
  If txtencid.Text Then
    btnshow_Click()
  Endif

End

Public Sub btnshow_Click()

  Dim xx As Boolean

  If txtencid.Text Then
    txtname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
    $doa = modPatient.GetRecordDate(Trim(txtencid.Text))
    xx = modPatient.EnableClinicForm(modPatient.CurrentAdmissionStatus(Trim(txtencid.Text)))
    btnsaveall.Enabled = xx
    If modBasic.$TabletModeEnable = "Yes" Then
    Else
      cmbnote.SetFocus
    Endif
  Endif

End

Public Sub btnsaveall_Click()

  If txtencid.Text Then
    If cmbnote.Text Then
      If txtnote.Text Then
        modPatientGeneral.AddExamGeneralQualiData(Trim(txtencid.Text), "Notes", cmbnote.Text, txtimpression.Text, txtnote.RichText, False)                ''
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Public Sub btnclose_Click()

  Me.Close

End

Public Sub rbclinician_Click()

  $sType = "Clinicians Note"

End

Public Sub rbnurses_Click()

  $sType = "Nurses Note"

End

Public Sub rbtransfer_Click()

  $sType = "Transfer Note"

End

Public Sub rbprogress_Click()

  $sType = "Progress Note"

End

Public Sub rbpatient_Click()

  $sType = "Patient Note"

End

Public Sub btnshownote_Click()

  $rData = modDatabase.$myConn.Exec("select Date(fldtime) as flddate,Date(fldtime) as flddate from tblexamgeneral where fldencounterval=&1 and fldinput=&2 and flditem=&3 and fldtime>=&4 and fldtime<=&5 GROUP BY flddate ORDER BY flddate DESC", Trim(txtencid.Text), "Notes", $sType, modDate.StartSqlDate($doa), modDate.EndSqlDate(Now()))                          ''
  $aMyFields = New String[]
  modGridView.ReadSmallData(WebTable1, $rData, $aMyFields)

  With WebTable1
    .Columns[0].Expand = True
    .Columns[1].Hidden = True
  End With

End

Public Sub WebTable1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 0 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub WebTable1_Select()

  If WebTable1.Selection.Count Then
    $rData.MoveTo(WebTable1.Selection[0])
    GetNoteData($sType, $rData["flddate"])
  Endif

End

Private Sub GetNoteData(xType As String, xdate As Date)

  Dim res As Result
  Dim xdata As String
  Dim xList As String[]

  xList = New String[]
  res = modDatabase.$myConn.Exec("select fldreportquali,flddetail,flduserid,fldtime from tblexamgeneral where fldencounterval=&1 and fldinput=&2 and flditem=&3 and fldtime>=&4 and fldtime<=&5 ORDER BY fldtime DESC", Trim(txtencid.Text), "Notes", xType, modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate))                          ''
  If res.Available Then
    xList.Add("<b>DATE : " & modReportVar.GetDateTimeReport(xdate, gb.MediumDate) & "</b><br>")

    For Each res
      xdata = ""
      If res["flddetail"] Then
        xdata = res["flddetail"]
      Endif
      If res["fldreportquali"] Then
        xdata = xdata & "<br><b>" & res["fldreportquali"] & "</b>"
      Endif
      xList.Add("<p>[" & modReportVar.GetDateTimeReport(res["fldtime"], gb.ShortTime) & "] " & xdata & "</p><br>")
    Next

  Endif
  WebHtml1.Html = modString.GetUniColumnTableFromList(xList)

End

''----------- icons
Public Sub btndatanote_Click()

End

Public Sub btnpannote_Click()

  If cmbnote.Text Then
    txtnote.RichText = txtnote.RichText & Space(1) & modFillContainer.GetExtraTextArea(cmbnote.Text, txtnote.Text)
  Endif

End

Public Sub btnexecnote_Click()

  txtnote.RichText = txtnote.RichText & modString.TextToHTML(modCloudAI.GetPatCloudAIResponse(Trim(txtencid.Text), txtnote.Text))

End

Public Sub btnattnote_Click()

  txtnote.RichText = txtnote.RichText & DictionaryVIew(modBasic.$dictadvPath)

End

Public Sub btnclear_Click()

  txtnote.RichText = ""

End
