' Gambas module file

Public $SyncService As String
Public $SyncHost As String
Public $SyncUser As String
Public $SyncPassword As String
Public $SyncDatabase As String
Public $SyncPort As String
Public $SyncUseSSL As Boolean

''table grouping
Public $sBrandData As String[] = ["tblcode", "tbldrug", "tbllabel", "tblmedbrand", "tblsurgicalname", "tblsuturetype", "tblsurgicals", "tblsurgbrand", "tblextra", "tblextrabrand"]
Public $sMedSuppData As String[] = ["tbldilutionfluid", "tblreconstfluid", "tblincompatdrug", "tblincompatfluid", "tblcompatdrug", "tblcompatfluid", "tblinjection", "tbllocallabel"]
Public $sPrecauData As String[] = ["tblcodelimit", "tblmedhepatic", "tblmedinteraction", "tblmedpregnancy", "tblmedrenal", "tblmedcontraindication", "tblmedadveffect", "tblmedmonitor", "tblcodehypo", "tblcodehyper", "tblcodebrady", "tblcodetachy", "tblregimen"]                  ''

Public $sExamData As String[] = ["tblexam", "tblexamoption", "tblexamlimit", "tblexamcomment", "tblexamquali", "tblsubexamquali", "tblstructexam", "tblstructexamoption", "tbldeptexam", "tbldeptexamoption", "tblgroupexam", "tblcompexam"]
Public $sLabData As String[] = ["tbltest", "tblsampletype", "tblorganism", "tbltestmethod", "tbltestcondition", "tbltestoption", "tbltestlimit", "tbltestcomment", "tbltestquali", "tblsubtestquali", "tblantipanel", "tblsensidrugs"]
Public $sRadioData As String[] = ["tblradio", "tblradiooption", "tblradiolimit", "tblradiocomment", "tblradioquali", "tblsubradioquali"]
Public $sFoodData As String[] = ["tblfoodlist", "tblfoodtype", "tblfoodcontent", "tblfoodgroup", "tblnutrition"]

Public $sExamFactor As String[] = ["tblcodebrady", "tblcodetachy", "tblsyndrobrady", "tblsyndrotachy"]
Public $sLabFactor As String[] = ["tblcodehypo", "tblcodehyper", "tblsyndrohypo", "tblsyndrohyper"]
Public $sDiagnoData As String[] = ["tblpathosymp", "tblpathoexam", "tblpathotest", "tblsymptoms", "tblsubsymptoms", "tblsyndromes", "tbldischarge", "tblhistory", "tbldelivery", "tbldelcomplication", "tbldeldeformity", "tbldellabour", "tblprocedure", "tblprocedureuser", "tblanaesthesia", "tblpathocategory", "tblbodyfluid", "tbldiagnogroup", "tblcomplaints"]                                          ''
Public $sBillingData As String[] = ["tblservicecost", "tblbillitem", "tblbillingset", "tblassetsname", "tblstockrate", "tblgrouptest", "tblgroupradio", "tbldepartment", "tbldiscount", "tblcustdiscount"]
Public $sDemogData As String[] = ["tblsurname", "tblmunicipals", "tblrelations", "tblethnicgroup", "tbldemographic", "tbldemogoption"]

Private Sub GetSyncFields(sTable As String) As String[]

  Dim xx As String[]

  ''medicine data
  If sTable = "tblcode" Then
    xx = ["fldcodename"]
  Else If sTable = "tbldrug" Then
    xx = ["flddrug"]
  Else If sTable = "tbllabel" Then
    xx = ["fldlabel"]
  Else If sTable = "tblmedbrand" Then
    xx = ["fldbrandid"]
  Else If sTable = "tblmedgroup" Then
    xx = ["fldmedgroup"]
  Else If sTable = "tblmedcategory" Then
    xx = ["flclass"]
  Else If sTable = "tblchemclass" Then
    xx = ["flclass"]
  Else If sTable = "tbldosageforms" Then
    xx = ["flforms"]
  Else If sTable = "tblsurgicalname" Then
    xx = ["fldsurgname", "fldsurgcateg"]
  Else If sTable = "tblsuturetype" Then
    xx = ["fldsuturetype"]
  Else If sTable = "tblsurgicals" Then
    xx = ["fldsurgid"]
  Else If sTable = "tblsurgbrand" Then
    xx = ["fldbrandid"]
  Else If sTable = "tblextra" Then
    xx = ["fldextraid"]
  Else If sTable = "tblextrabrand" Then
    xx = ["fldbrandid"]

    ''drug related problems
  Else If sTable = "tblcodelimit" Then
    xx = ["fldcodename", "fldptsex", "fldagegroup"]
  Else If sTable = "tblmedhepatic" Then
    xx = ["fldcodename", "fldcondition"]
  Else If sTable = "tblmedinteraction" Then
    xx = ["fldcodename", "fldcondition"]
  Else If sTable = "tblmedpregnancy" Then
    xx = ["fldcodename", "fldcondition"]
  Else If sTable = "tblmedrenal" Then
    xx = ["fldcodename", "fldgfrfrom", "fldgfrto"]
  Else If sTable = "tblmedcontraindication" Then
    xx = ["fldparent", "fldtype", "fldchild"]
  Else If sTable = "tblmedadveffect" Then
    xx = ["fldparent", "fldtype", "fldchild"]
  Else If sTable = "tblmedmonitor" Then
    xx = ["fldparent", "fldtype", "fldchild"]
  Else If sTable = "tblcodehypo" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcodehyper" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcodebrady" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcodetachy" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblregimen" Then
    xx = ["fldcodename", "flddisease", "flddosetype", "fldroute", "fldagegroup", "fldgender"]

    ''compounding data
  Else If sTable = "tbldilutionfluid" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblincompatdrug" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblincompatfluid" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblreconstfluid" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcompatdrug" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcompatfluid" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblinjection" Then
    xx = ["fldinjection"]
  Else If sTable = "tbllocallabel" Then
    xx = ["fldengcode"]

    ''laboratory data
  Else If sTable = "tbltest" Then
    xx = ["fldtestid"]
  Else If sTable = "tblorganism" Then
    xx = ["fldorganism"]
  Else If sTable = "tblsampletype" Then
    xx = ["fldsampletype"]
  Else If sTable = "tbltestoption" Then
    xx = ["fldtestid", "fldanswertype", "fldanswer", "fldscale", "fldscalegroup"]
  Else If sTable = "tbltestlimit" Then
    xx = ["fldtestid", "fldmethod", "fldptsex", "fldagegroup"]
  Else If sTable = "tbltestcomment" Then
    xx = ["fldtestid", "fldptsex", "fldagegroup"]
  Else If sTable = "tbltestquali" Then
    xx = ["fldtestid", "fldsubtest"]
  Else If sTable = "tblsubtestquali" Then
    xx = ["fldtestid", "fldsubtest", "fldanswertype", "fldanswer", "fldscale", "fldscalegroup"]
  Else If sTable = "tbltestmethod" Then
    xx = ["fldmethod", "fldcateg"]
  Else If sTable = "tbltestcondition" Then
    xx = ["fldtestcondition"]
  Else If sTable = "tblantipanel" Then
    xx = ["fldgroup", "flditemname", "flditemtype", "fldspecimen"]
  Else If sTable = "tblsensidrugs" Then
    xx = ["flclass"]

    ''exam data
  Else If sTable = "tblexam" Then
    xx = ["fldexamid"]
  Else If sTable = "tblexamoption" Then
    xx = ["fldexamid", "fldanswertype", "fldanswer", "fldscale", "fldscalegroup"]
  Else If sTable = "tblexamlimit" Then
    xx = ["fldexamid", "fldmethod", "fldptsex", "fldagegroup"]
  Else If sTable = "tblexamcomment" Then
    xx = ["fldexamid", "fldptsex", "fldagegroup"]
  Else If sTable = "tblexamquali" Then
    xx = ["fldexamid", "fldsubexam"]
  Else If sTable = "tblsubexamquali" Then
    xx = ["fldexamid", "fldsubexam", "fldanswertype", "fldanswer", "fldscale", "fldscalegroup"]
  Else If sTable = "tblstructexam" Then
    xx = ["fldheadcode"]
  Else If sTable = "tblstructexamoption" Then
    xx = ["fldheadcode", "fldanswer"]
  Else If sTable = "tbldeptexam" Then
    xx = ["flddept", "fldexamid"]
  Else If sTable = "tbldeptexamoption" Then
    xx = ["flddept", "fldexamid", "fldanswer"]
  Else If sTable = "tblgroupexam" Then
    xx = ["fldgroupname", "fldexamid"]
  Else If sTable = "tblcompexam" Then
    xx = ["fldexamid", "fldcomp"]

    ''radiology data
  Else If sTable = "tblradio" Then
    xx = ["fldexamid"]
  Else If sTable = "tblradiooption" Then
    xx = ["fldexamid", "fldanswertype", "fldanswer", "fldscale", "fldscalegroup"]
  Else If sTable = "tblradiolimit" Then
    xx = ["fldexamid", "fldmethod", "fldptsex", "fldagegroup"]
  Else If sTable = "tblradiocomment" Then
    xx = ["fldexamid", "fldptsex", "fldagegroup"]
  Else If sTable = "tblradioquali" Then
    xx = ["fldexamid", "fldsubexam"]
  Else If sTable = "tblsubradioquali" Then
    xx = ["fldexamid", "fldsubexam", "fldanswertype", "fldanswer", "fldscale", "fldscalegroup"]

    ''nutrition data
  Else If sTable = "tblfoodlist" Then
    xx = ["fldfood"]
  Else If sTable = "tblfoodtype" Then
    xx = ["fldfoodtype"]
  Else If sTable = "tblfoodcontent" Then
    xx = ["fldfoodid"]
  Else If sTable = "tblfoodgroup" Then
    xx = ["fldgroup"]
  Else If sTable = "tblnutrition" Then
    xx = ["fldptsex", "fldagegroup"]

    ''factors affecting examination
  Else If sTable = "tblcodebrady" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcodetachy" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblsyndrobrady" Then
    xx = ["fldparent", "fldtype", "fldchild"]
  Else If sTable = "tblsyndrotachy" Then
    xx = ["fldparent", "fldtype", "fldchild"]

    ''factors affecting laboratory
  Else If sTable = "tblcodehypo" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblcodehyper" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblsyndrohypo" Then
    xx = ["fldparent", "fldtype", "fldchild"]
  Else If sTable = "tblsyndrohyper" Then
    xx = ["fldparent", "fldtype", "fldchild"]

    ''diagnosis
  Else If sTable = "tbldischarge" Then
    xx = ["flditem"]
  Else If sTable = "tblhistory" Then
    xx = ["flditem"]
  Else If sTable = "tbldelivery" Then
    xx = ["flditem"]
  Else If sTable = "tbldelcomplication" Then
    xx = ["flditem"]
  Else If sTable = "tbldeldeformity" Then
    xx = ["flditem"]
  Else If sTable = "tbldellabour" Then
    xx = ["flditem"]
  Else If sTable = "tblprocedure" Then
    xx = ["flditem"]
  Else If sTable = "tblprocedureuser" Then
    xx = ["flditem"]
  Else If sTable = "tblanaesthesia" Then
    xx = ["flditem"]
  Else If sTable = "tblpathocategory" Then
    xx = ["flclass", "fldcategory"]
  Else If sTable = "tblbodyfluid" Then
    xx = ["fldfluid"]
  Else If sTable = "tblsymptoms" Then
    xx = ["fldsymptom"]
  Else If sTable = "tblsubsymptoms" Then
    xx = ["fldsymptom", "fldsubsymptom"]
  Else If sTable = "tblsyndromes" Then
    xx = ["fldsyndrome"]
  Else If sTable = "tbldiagnogroup" Then
    xx = ["fldgroupname", "flditemname", "fldformat"]
  Else If sTable = "tblpathosymp" Then
    xx = ["fldparent", "fldchild"]
  Else If sTable = "tblpathoexam" Then
    xx = ["fldparent", "fldexamid"]
  Else If sTable = "tblpathotest" Then
    xx = ["fldparent", "fldtestid"]
  Else If sTable = "tblcomplaints" Then
    xx = ["fldsymptom", "fldcomp"]

    ''billing
  Else If sTable = "tblservicecost" Then
    xx = ["flditemname"]
  Else If sTable = "tblbillitem" Then
    xx = ["fldbillitem", "flditemcateg"]
  Else If sTable = "tblbillingset" Then
    xx = ["fldsetname"]
  Else If sTable = "tblassetsname" Then
    xx = ["flditemname"]
  Else If sTable = "tblstockrate" Then
    xx = ["flditemname", "fldbillingmode"]
  Else If sTable = "tblgrouptest" Then
    xx = ["fldgroupname", "fldtestid"]
  Else If sTable = "tblgroupradio" Then
    xx = ["fldgroupname", "fldtestid", "fldptsex"]

    ''demographics
  Else If sTable = "tblsurname" Then
    xx = ["flditem"]
  Else If sTable = "tblmunicipals" Then
    xx = ["fldpality", "flddistrict"]
  Else If sTable = "tblrelations" Then
    xx = ["flditem"]
  Else If sTable = "tblethnicgroup" Then
    xx = ["flditemname"]
  Else If sTable = "tbldemographic" Then
    xx = ["flddemoid"]
  Else If sTable = "tbldemogoption" Then
    xx = ["flddemoid", "fldanswertype", "fldanswer"]

    ''others
  Else If sTable = "tbltelemeduser" Then
    xx = ["fldteleuser", "fldusername", "fldcategory", "fldcontact", "fldemail", "fldusercode", "fldstatus"]
  Else If sTable = "tblpatientinfo" Then
    xx = ["fldpatientval"]
  Else If sTable = "tblencounter" Then
    xx = ["fldencounterval"]

    ''advertise
  Else If sTable = "tbladvertise" Then
    xx = ["advid"]
  Else If sTable = "tbladlinks" Then
    xx = ["advid"]

  Endif
  Return xx

End

''========================================== DATA DOWNLOAD =====================================
Private Function GetSyncConfigSettingFIle() As String

  Dim xfile As String

  xfile = Temp() & ".conf"
  If Exist(modHelpVariable.$appetcFolder &/ "syncrepository.conf.7z") Then
    modDevAll.Get7ZExtraction(modHelpVariable.$appetcFolder &/ "syncrepository.conf.7z", modHelpVariable.$CryptRepoZip, xfile)
  Endif

  Return xfile

End

Public Sub ReadSyncConfig()

  Dim xfile As String
  Dim xssl As String

  xfile = GetSyncConfigSettingFIle()
  xssl = modControlSub.ShowSettingValue(xfile, "SyncServer/UseOpenSSL")
  If xssl = "Yes" Then
    $SyncUseSSL = True
  Else
    $SyncUseSSL = False
  Endif
  $SyncService = modControlSub.ShowSettingValue(xfile, "SyncServer/Service")
  $SyncHost = modControlSub.ShowSettingValue(xfile, "SyncServer/Host")
  $SyncUser = modControlSub.ShowSettingValue(xfile, "SyncServer/User")
  $SyncPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "SyncServer/Password"), $SyncUseSSL)
  $SyncDatabase = modControlSub.ShowSettingValue(xfile, "SyncServer/Database")
  $SyncPort = modControlSub.ShowSettingValue(xfile, "SyncServer/Port")

  ''Try Kill xfile

End

''use only from command line... connection closes at end
Public Sub DataSyncData(sType As String, xdebug As Boolean)

  Dim sCon As Connection

  ReadSyncConfig()
  If $SyncService = "http" Then
    modHelpVariable.ConnectionMain()
    DataSyncAPIDownload(sType, xdebug)

    Try modDatabase.$myConn.Close()
    ' Print "======== Complete ============"
  Else
    If $SyncPort Then
      sCon = modDBApp.OpenConnection($SyncService, $SyncHost, $SyncDatabase, $SyncUser, $SyncPassword, $SyncPort)
    Else
      sCon = modDBApp.OpenConnection($SyncService, $SyncHost, $SyncDatabase, $SyncUser, $SyncPassword)
    Endif
    If sCon.Opened Then
      modHelpVariable.ConnectionMain()
      DataSyncDownload(sType, xdebug, sCon)

      Try modDatabase.$myConn.Close()
      Try sCon.Close()
      ' Print "======== Complete ============"
    Endif
  Endif

End

''------------- from database connection ----------------------
Public Sub DataSyncDownload(sType As String, xdebug As Boolean, sCon As Connection)

  Dim stab As String

  If modHelpVariable.$conTarget = "Remote" Then
  Else
    If modDatabase.$myConn.Opened Then

      If sType = "--medicine-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/MedicineData") = "Yes" Then
          For Each stab In $sBrandData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--examination-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/ExaminationData") = "Yes" Then
          For Each stab In $sExamData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--laboratory-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/LaboratoryData") = "Yes" Then
          For Each stab In $sLabData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--radiology-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/RadiologyData") = "Yes" Then
          For Each stab In $sRadioData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--nutrition-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/NutritionData") = "Yes" Then
          For Each stab In $sFoodData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--medicine-problems" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Medicine_Problems") = "Yes" Then
          For Each stab In $sPrecauData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--examination-factors" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Examination_Factors") = "Yes" Then
          For Each stab In $sExamFactor
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--laboratory-factors" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Laboratory_Factors") = "Yes" Then
          For Each stab In $sLabFactor
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--medicine-compounding" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Medicine_Compounding") = "Yes" Then
          For Each stab In $sMedSuppData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--diagnosis-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/DiagnosisData") = "Yes" Then
          For Each stab In $sDiagnoData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--billing-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/BillingData") = "Yes" Then
          For Each stab In $sBillingData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--demographics-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/DemographicsData") = "Yes" Then
          For Each stab In $sDemogData
            GetDataSyncTwoSource(sCon, modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Endif

    Endif
  Endif

End

Private Sub GetDataSyncTwoSource(con1 As Connection, con2 As Connection, sTable As String, xdebug As Boolean)

  Dim hTable As Table
  Dim xPriKey As String
  Dim hField As Field

  Dim xprifield As String[]
  Dim xwhere As String
  Dim k As Integer
  Dim xSql As String
  Dim ySql As String

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim sourceTables As String[]
  Dim sourceFields As String[]

  If con1.Opened = True And If con2.Opened = True Then
    sourceTables = modDBApp.FillDBTables(con1, False)
    If sourceTables.Exist(sTable) Then
      If xdebug = True Then
        db.Debug = True
      Endif
      xprifield = GetSyncFields(sTable)

      For Each hTable In con2.Tables
        If hTable.Name = sTable Then
          xPriKey = hTable.PrimaryKey[0]

          ySql = Subst("select * from &1", sTable)
          res1 = con1.Exec(ySql)
          sourceFields = modDBApp.GetFieldsInResult(res1)
          If res1.Available Then

            For Each res1
              If xprifield And If xprifield.Count > 0 Then
                xwhere = " WHERE"
                For k = 0 To xprifield.Count - 1
                  If k = 0 Then
                    xwhere = xwhere & Space(1) & db.Subst(xprifield[k] & "=&1", res1[xprifield[k]])
                  Else
                    If res1[xprifield[k]] Then
                      xwhere = xwhere & " and " & db.Subst(xprifield[k] & "=&1", res1[xprifield[k]])
                    Endif
                  Endif
                Next
              Else
                xwhere = ""
              Endif

              xSql = Subst("select &1 from &2", xPriKey, sTable) & xwhere
              res2 = con2.Exec(xSql)
              If res2.Available = False Then
                If xdebug = True Then
                  modBasic.PrintErrorString("Data not found in Local DB. Inserting Data from Remote DB")
                Endif
                res3 = con2.Create(sTable)
                For Each hField In hTable.Fields
                  If hField.Type = db.Serial Then
                  Else
                    If sourceFields.Exist(hField.Name) Then
                      res3[hField.Name] = res1[hField.Name]
                    Endif
                  Endif
                Next
                Try res3.Update
              Endif

            Next
            modBasic.PrintErrorString("Data Synchronization for Table " & sTable & " completed.")

          Endif

        Endif
      Next

    Endif
  Endif

End

''-------- API based ---------------
Public Sub DataSyncAPIDownload(sType As String, xdebug As Boolean)

  Dim stab As String

  If modHelpVariable.$conTarget = "Remote" Then
  Else
    If modDatabase.$myConn.Opened Then

      If sType = "--medicine-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/MedicineData") = "Yes" Then
          For Each stab In $sBrandData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--examination-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/ExaminationData") = "Yes" Then
          For Each stab In $sExamData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--laboratory-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/LaboratoryData") = "Yes" Then
          For Each stab In $sLabData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--radiology-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/RadiologyData") = "Yes" Then
          For Each stab In $sRadioData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--nutrition-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/NutritionData") = "Yes" Then
          For Each stab In $sFoodData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--medicine-problems" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Medicine_Problems") = "Yes" Then
          For Each stab In $sPrecauData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--examination-factors" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Examination_Factors") = "Yes" Then
          For Each stab In $sExamFactor
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--laboratory-factors" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Laboratory_Factors") = "Yes" Then
          For Each stab In $sLabFactor
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--medicine-compounding" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/Medicine_Compounding") = "Yes" Then
          For Each stab In $sMedSuppData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--diagnosis-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/DiagnosisData") = "Yes" Then
          For Each stab In $sDiagnoData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--billing-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/BillingData") = "Yes" Then
          For Each stab In $sBillingData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Else If sType = "--demographics-data" Then
        If modGlobalSetting.ShowSettingFromDB("DataSynchronization/DemographicsData") = "Yes" Then
          For Each stab In $sDemogData
            GetAPISyncTwoSource(modDatabase.$myConn, stab, xdebug)
          Next
        Endif

      Endif

    Endif
  Endif

End

Public Sub GetAPISyncTwoSource(con2 As Connection, sTable As String, xdebug As Boolean)

  Dim hTable As Table
  Dim xPriKey As String
  Dim hField As Field

  Dim xprifield As String[]
  Dim xwhere As String
  Dim k As Integer
  Dim xSql As String

  Dim res2 As Result
  Dim res3 As Result

  Dim xx As String
  Dim xtot As Integer
  Dim xcoll As Variant[]
  Dim i As Integer
  Dim j As Integer

  If con2.Opened = True Then
    If xdebug = True Then
      db.Debug = True
    Endif
    xprifield = GetSyncFields(sTable)

    xtot = modXMySQL.GetXMYSQLHTTPCountJson($SyncHost, $SyncUser, $SyncPassword, sTable)
    For j = 0 To Ceil(xtot / 100) - 1
      If j = 0 Then
        xx = modXMySQL.GetXMYSQLHTTPDownloadJson($SyncHost, $SyncUser, $SyncPassword, sTable)
      Else
        xx = modXMySQL.GetXMYSQLHTTPDownloadJson($SyncHost, $SyncUser, $SyncPassword, sTable, j)
      Endif

      If xx Then
        Try xcoll = JSON.Decode(xx)
      Endif

      If xcoll Then
        For Each hTable In con2.Tables
          If hTable.Name = sTable Then
            xPriKey = hTable.PrimaryKey[0]

            For i = 0 To xcoll.Count - 1
              If xprifield.Count > 0 Then
                xwhere = " WHERE"
                For k = 0 To xprifield.Count - 1
                  If k = 0 Then
                    xwhere = xwhere & Space(1) & db.Subst(xprifield[k] & "=&1", xcoll[i][xprifield[k]])
                  Else
                    If xcoll[i][xprifield[k]] Then
                      xwhere = xwhere & " and " & db.Subst(xprifield[k] & "=&1", xcoll[i][xprifield[k]])
                    Endif
                  Endif
                Next
              Else
                xwhere = ""
              Endif

              xSql = Subst("select &1 from &2", xPriKey, sTable) & xwhere
              res2 = con2.Exec(xSql)
              If res2.Available = False Then
                If xdebug = True Then
                  modBasic.PrintErrorString("Data not found in Local DB. Inserting Data from Remote DB")
                Endif
                res3 = con2.Create(sTable)
                For Each hField In hTable.Fields
                  If hField.Name = "fldpass" Or If hField.Name = "fldroot" Then
                  Else
                    If hField.Type = db.Serial Then
                    Else If hField.Type = db.Date Then
                      res3[hField.Name] = modDate.GetDateFromJSON(xcoll[i][hField.Name])
                    Else
                      res3[hField.Name] = xcoll[i][hField.Name]
                    Endif
                  Endif
                Next
                Try res3.Update
              Endif

            Next
            modBasic.PrintErrorString("Data Synchronization for Table " & sTable & " completed.")

          Endif
        Next
      Endif

    Next
  Endif

End

''----------------- Patient data ----------------------
Public Sub SyncPatientDemographicDB()

  ReadSyncConfig()
  If $SyncService = "http" Then
    GetAPISyncTwoSource(modDatabase.$myConn, "tblpatientinfo", True)
  Endif

End

''------------ advertise ---------------
Public Sub UpdateAdvertiseContent()

  ReadSyncConfig()
  If $SyncService = "http" Then
    If modAdvertise.$advCon.Opened = True Then
      GetAPISyncTwoSource(modAdvertise.$advCon, "tbladvertise", True)
      GetAPISyncTwoSource(modAdvertise.$advCon, "tbladlinks", True)
    Endif
  Endif

End

Public Sub UpdateAdvertiseCreateDB()

  ReadSyncConfig()
  If $SyncService = "http" Then
    modAdvertise.ConnectAdLocalDB()
    If modAdvertise.$advCon.Opened = True Then
      GetAPISyncTwoSource(modAdvertise.$advCon, "tbladvertise", True)
      GetAPISyncTwoSource(modAdvertise.$advCon, "tbladlinks", True)
      Try modAdvertise.$advCon.Close()
    Endif
  Endif

End
