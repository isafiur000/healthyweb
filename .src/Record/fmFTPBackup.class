' Gambas class file

Private $TableList As String[]

Public Sub _new()

  $TableList = modDBApp.FillDBTables(modDatabase.$myConn, True)
  cmbftpenable.List = ["Yes", "No"]
  cmbcompress.List = ["Enabled", "None"]

  cmbcompresslocal.List = ["Enabled", "None"]
  cmblocalenable.List = ["Yes", "No"]

  SHowFTPvalue()

End

Public Sub WebTabPanel1_Click()

  If WebTabPanel1.Index = 0 Then
    SHowFTPvalue()
  Else If WebTabPanel1.Index = 1 Then
    SHowLocalvalue()
  Endif

End

''------------------------------------------ FTP Setting ----------------------------------------------
Public Sub chkftpuser_Click()

  If chkftpuser.Value = True Then
    txtftpuser.Password = False
  Else If chkftpuser.Value = False Then
    txtftpuser.Password = True
  Endif

End

Public Sub chkftppass_Click()

  If chkftppass.Value = True Then
    txtftppass.Password = False
  Else If chkftppass.Value = False Then
    txtftppass.Password = True
  Endif

End

Private Sub SHowFTPvalue()

  ListBox1.List = modGlobalSetting.ShowTableSettingDB(modBasic.$compID, "FTPBackup")
  txtftphost.Text = modGlobalSetting.ShowSettingFromDBAny("FTPBackup/Host", modBasic.$compID)
  txtftpfolder.Text = modGlobalSetting.ShowSettingFromDBAny("FTPBackup/Folder", modBasic.$compID)
  txtftpuser.Text = modGlobalSetting.ShowSettingFromDBAny("FTPBackup/User", modBasic.$compID)
  txtftppass.Text = modPassword.DecryptSimple(modGlobalSetting.ShowSettingFromDBAny("FTPBackup/Password", modBasic.$compID))
  cmbcompress.Text = modGlobalSetting.ShowSettingFromDBAny("FTPBackup/Compression", modBasic.$compID)
  cmbftpenable.Text = modGlobalSetting.ShowSettingFromDBAny("FTPBackup/Enable", modBasic.$compID)

End

Public Sub mnudel_Click()

  If ListBox1.Text Then
    modDatabase.$myConn.Delete("tbltabsettings", "fldcomp=&1 and fldcategory=&2 and fldvalue=&3", modBasic.$compID, "FTPBackup/TableList", ListBox1.Text)                                   ''
    ListBox1.List = modGlobalSetting.ShowTableSettingDB(modBasic.$compID, "FTPBackup")
  Endif

End

Public Sub btnaddftp_Click()

  Dim xx As String[]
  Dim tablist As String[]

  tablist = modString.GetRemainingArray($TableList, ListBox1.List)
  xx = SelectListView("Insert Table Name", tablist, False)
  If xx Then
    modGlobalSetting.AddTableListDB(modBasic.$compID, "FTPBackup", xx)
    ListBox1.List = modGlobalSetting.ShowTableSettingDB(modBasic.$compID, "FTPBackup")
  Endif

End

Private Sub SaveSettingFTP()

  modGlobalSetting.SaveSettingToDB("FTPBackup/Host", txtftphost.Text, modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("FTPBackup/Folder", txtftpfolder.Text, modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("FTPBackup/User", txtftpuser.Text, modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("FTPBackup/Password", modPassword.EncryptSimple(txtftppass.Text), modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("FTPBackup/Enable", cmbftpenable.Text, modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("FTPBackup/Compression", cmbcompress.Text, modBasic.$compID)

End

Public Sub btnsaveall_Click()

  SaveSettingFTP()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnbackup_Click()

  Dim xx As String
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    xx = modDatabase.SendBackupToFTP()
    If xx Then
      Message.Info(xx, ("OK"))
    Endif
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

''-------------------------------------------- Local Backup --------------------------------
Private Sub SHowLocalvalue()

  ListBox2.List = modGlobalSetting.ShowTableSettingDB(modBasic.$compID, "LocalBackup")
  cmbcompresslocal.Text = modGlobalSetting.ShowSettingFromDBAny("LocalBackup/Compression", modBasic.$compID)
  txtpassword.Text = modGlobalSetting.ShowSettingFromDBAny("LocalBackup/Password", modBasic.$compID)
  cmblocalenable.Text = modGlobalSetting.ShowSettingFromDBAny("LocalBackup/Enable", modBasic.$compID)

End

Public Sub btnaddlocal_Click()

  Dim xx As String[]
  Dim tablist As String[]

  tablist = modString.GetRemainingArray($TableList, ListBox2.List)
  xx = SelectListView("Insert Table Name", tablist, False)
  If xx Then
    modGlobalSetting.AddTableListDB(modBasic.$compID, "LocalBackup", xx)
    ListBox2.List = modGlobalSetting.ShowTableSettingDB(modBasic.$compID, "LocalBackup")
  Endif

End

Public Sub mnudelocal_Click()

  modDatabase.$myConn.Delete("tbltabsettings", "fldcomp=&1 and fldcategory=&2 and fldvalue=&3", modBasic.$compID, "LocalBackup/TableList", ListBox2.Text)                                   ''
  ListBox2.List = modGlobalSetting.ShowTableSettingDB(modBasic.$compID, "LocalBackup")

End

Private Sub SaveSettingLocal()

  modGlobalSetting.SaveSettingToDB("LocalBackup/Compression", cmbcompresslocal.Text, modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("LocalBackup/Password", txtpassword.Text, modBasic.$compID)
  modGlobalSetting.SaveSettingToDB("LocalBackup/Enable", cmblocalenable.Text, modBasic.$compID)

End

Public Sub btnsavelocal_Click()

  SaveSettingLocal()
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")

End

Public Sub chklocalpass_Click()

  If chklocalpass.Value = True Then
    txtpassword.Password = False
  Else If chklocalpass.Value = False Then
    txtpassword.Password = True
  Endif

End

Public Sub btnbackuplocal_Click()

  Dim aPath As String
  Dim xPath As String
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    Message.Info(("Executing Request ...."), ("OK"))
    aPath = modDatabase.BackUpCurrentDB()
    If aPath Then
      xPath = modPrint.GetFileWebURL(aPath)
      If xPath Then
        Me.Exec("window.open('" & xPath & "'); ")
      Endif
    Endif
  Endif

End
