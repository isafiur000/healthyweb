' Gambas class file

Private $xFinClear As Boolean
Private $PatientNum As String
Private $xNHISCode As String

Private $rData As Result
Private $aMyFields As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]
Private $rData3 As MyResult
Private $aMyFields3 As String[]

Private $encid As String
Private $billModeService As String
Private $billModeProcedure As String
Private $billModeOthers As String

Private $ratePlanService As String
Private $ratePlanProcedure As String
Private $ratePlanOthers As String

Public Sub _new(encid As String, packService As String, packProced As String, packOthers As String)

  $encid = encid
  $billModeService = packService
  $billModeProcedure = packProced
  $billModeOthers = packOthers

  cmbdiscservice.List = modBasic.$BillDiscountCash
  If cmbdiscservice.List.Count = 0 Then
    cmbdiscservice.Add($billModeService)
  Endif
  cmbdiscservice.Text = $billModeService
  $ratePlanService = modNonMedical.GetDiscBindBillMode(cmbdiscservice.Text)
  If Not $ratePlanService Then
    $ratePlanService = modpatient.GetPatBillingMode($encid)
  Endif

  cmbdiscprocedure.List = modBasic.$BillDiscountCash
  If cmbdiscprocedure.List.Count = 0 Then
    cmbdiscprocedure.Add($billModeProcedure)
  Endif
  cmbdiscprocedure.Text = $billModeProcedure
  $ratePlanProcedure = modNonMedical.GetDiscBindBillMode(cmbdiscprocedure.Text)
  If Not $ratePlanProcedure Then
    $ratePlanProcedure = modpatient.GetPatBillingMode($encid)
  Endif

  cmbdiscother.List = modBasic.$BillDiscountCash
  If cmbdiscother.List.Count = 0 Then
    cmbdiscother.Add($billModeOthers)
  Endif
  cmbdiscother.Text = $billModeOthers
  $ratePlanOthers = modNonMedical.GetDiscBindBillMode(cmbdiscother.Text)
  If Not $ratePlanOthers Then
    $ratePlanOthers = modpatient.GetPatBillingMode($encid)
  Endif

  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)

  $xFinClear = modNonMedical.GetFinanceClearance($encid)
  btnrefer.Tag = modBillings.GetReferralUserSetting("Service", $encid)
  If btnrefer.Tag Then
    btnrefer.Text = modGeneral.GetUserFullName(btnrefer.Tag)
  Endif
  If modBasic.$ReferralLockEntry = "Yes" Then
    btnrefer.Enabled = False
  Endif
  rbcategory.Value = True
  cmbsection.List = ["General Services", "Procedures", "Other Items"]

  FillLabtable()
  CompleteGrid()
  If $xFinClear = True Then
    btnaddone.Enabled = False
  Endif

End

Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$OPConsulUserList)
  If xMedUser And If xMedUser.Count Then
    btnrefer.Tag = xMedUser[0]
    btnrefer.Text = xMedUser[1]
  Else
    btnrefer.Tag = ""
    btnrefer.Text = ""
  Endif

End

Public Sub btnrefer_Change()

  If btnrefer.Text = "" Then
    btnrefer.Tag = ""
  Endif

End

Public Sub btnsms_Click()

  If btnrefer.Tag Then
    modDevice.SendMessageToRegistPhysician($encid, btnrefer.Tag)
  Endif

End

Public Sub btnservice_Click()

  If cmbdiscservice.Text Then
    $ratePlanService = modNonMedical.GetDiscBindBillMode(cmbdiscservice.Text)
    If Not $ratePlanService Then
      $ratePlanService = modpatient.GetPatBillingMode($encid)
    Endif
    GetFirstList()
  Endif

End

Public Sub btnprocedure_Click()

  If cmbdiscprocedure.Text Then
    $ratePlanProcedure = modNonMedical.GetDiscBindBillMode(cmbdiscprocedure.Text)
    If Not $ratePlanProcedure Then
      $ratePlanProcedure = modpatient.GetPatBillingMode($encid)
    Endif
    GetFirstList()
  Endif

End

Public Sub btnothers_Click()

  If cmbdiscother.Text Then
    $ratePlanOthers = modNonMedical.GetDiscBindBillMode(cmbdiscother.Text)
    If Not $ratePlanOthers Then
      $ratePlanOthers = modpatient.GetPatBillingMode($encid)
    Endif
    GetFirstList()
  Endif

End

Private Sub GetFirstList()

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  If rbcategory.Value = True Then
    cmbsection.List = ["General Services", "Procedures", "Other Items"]
  Else If rbsection.Value = True Then
    res1 = modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where fldgroup=&1 and fldstatus=&2 and flditemtype=&3", $ratePlanService, "Active", "General Services")
    res2 = modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where fldgroup=&1 and fldstatus=&2 and flditemtype=&3", $ratePlanProcedure, "Active", "Procedures")
    res3 = modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where fldgroup=&1 and fldstatus=&2 and flditemtype=&3", $ratePlanOthers, "Active", "Other Items")
    cmbsection.List = GetTriColumnList(res1, res2, res3)
  Else If rbgroup.Value = True Then
    res1 = modDatabase.$myConn.Exec("select distinct(fldbillitem) as col from tblservicecost where fldgroup=&1 and fldbillitem IS NOT NULL and fldstatus=&2 and flditemtype=&3", $ratePlanService, "Active", "General Services")
    res2 = modDatabase.$myConn.Exec("select distinct(fldbillitem) as col from tblservicecost where fldgroup=&1 and fldbillitem IS NOT NULL and fldstatus=&2 and flditemtype=&3", $ratePlanProcedure, "Active", "Procedures")
    res3 = modDatabase.$myConn.Exec("select distinct(fldbillitem) as col from tblservicecost where fldgroup=&1 and fldbillitem IS NOT NULL and fldstatus=&2 and flditemtype=&3", $ratePlanOthers, "Active", "Other Items")
    cmbsection.List = GetTriColumnList(res1, res2, res3)
  Else If rbcashpack.Value = True Then
    res1 = modDatabase.$myConn.Exec("select distinct(fldgroup) as col from tblservicegroup where flditemname in(select flditemname from tblservicecost where fldgroup=&1 and fldstatus=&2 and flditemtype=&3)", $ratePlanService, "Active", "General Services")
    res2 = modDatabase.$myConn.Exec("select distinct(fldgroup) as col from tblservicegroup where flditemname in(select flditemname from tblservicecost where fldgroup=&1 and fldstatus=&2 and flditemtype=&3)", $ratePlanProcedure, "Active", "Procedures")
    res3 = modDatabase.$myConn.Exec("select distinct(fldgroup) as col from tblservicegroup where flditemname in(select flditemname from tblservicecost where fldgroup=&1 and fldstatus=&2 and flditemtype=&3)", $ratePlanOthers, "Active", "Other Items")
    cmbsection.List = GetTriColumnList(res1, res2, res3)
  Endif

End

Private Function GetTriColumnList(res1 As Result, res2 As Result, res3 As Result) As String[]

  Dim aList As String[]
  Dim bList As String[]
  Dim cList As String[]

  Dim xList As String[]
  Dim yList As String[]

  xList = New String[]

  aList = modControlSub.GetDirectFillresultNoNull(res1, "col")
  If aList And If aList.Count Then
    xList.Insert(aList)
  Endif

  bList = modControlSub.GetDirectFillresultNoNull(res2, "col")
  If bList And If bList.Count Then
    xList.Insert(bList)
  Endif

  cList = modControlSub.GetDirectFillresultNoNull(res3, "col")
  If cList And If cList.Count Then
    xList.Insert(cList)
  Endif

  yList = modString.GetDistinctStringArray(xList)
  Return yList

End

Public Sub rbcategory_Click()

  GetFirstList()
  chkall.Enabled = False

End

Public Sub rbsection_Click()

  GetFirstList()
  chkall.Enabled = False

End

Public Sub rbgroup_Click()

  GetFirstList()
  chkall.Enabled = False

End

Public Sub rbcashpack_Click()

  GetFirstList()
  chkall.Enabled = True

End

Private Sub LoadItemList()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim xsearch As String

  If chkleftmain.Value Then
    xsearch = "%" & LCase(txtsearch.Text) & "%"
  Else
    xsearch = LCase(txtsearch.Text) & "%"
  Endif

  $rData3 = New MyResult
  If rbcategory.Value = True Then
    If cmbsection.Text = "General Services" Then
      res = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 ORDER BY flditemname", $ratePlanService, "Active", xsearch, "General Services")
    Else If cmbsection.Text = "Procedures" Then
      res = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 ORDER BY flditemname", $ratePlanProcedure, "Active", xsearch, "Procedures")
    Else If cmbsection.Text = "Other Items" Then
      res = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 ORDER BY flditemname", $ratePlanOthers, "Active", xsearch, "Other Items")
    Endif
    $rData3.AddResult(res)

  Else If rbsection.Value = True Then
    res1 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and fldreport=&5 ORDER BY flditemname", $ratePlanService, "Active", xsearch, "General Services", cmbsection.Text)
    If res1.Available Then
      $rData3.AddResult(res1)
    Endif
    res2 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and fldreport=&5 ORDER BY flditemname", $ratePlanProcedure, "Active", xsearch, "Procedures", cmbsection.Text)
    If res2.Available Then
      $rData3.AddResult(res2)
    Endif
    res3 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and fldreport=&5 ORDER BY flditemname", $ratePlanOthers, "Active", xsearch, "Other Items", cmbsection.Text)
    If res3.Available Then
      $rData3.AddResult(res3)
    Endif

  Else If rbgroup.Value = True Then
    res1 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and fldbillitem=&5 ORDER BY flditemname", $ratePlanService, "Active", xsearch, "General Services", cmbsection.Text)
    If res1.Available Then
      $rData3.AddResult(res1)
    Endif
    res2 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and fldbillitem=&5 ORDER BY flditemname", $ratePlanProcedure, "Active", xsearch, "Procedures", cmbsection.Text)
    If res2.Available Then
      $rData3.AddResult(res2)
    Endif
    res3 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and fldbillitem=&5 ORDER BY flditemname", $ratePlanOthers, "Active", xsearch, "Other Items", cmbsection.Text)
    If res3.Available Then
      $rData3.AddResult(res3)
    Endif

  Else If rbcashpack.Value = True Then
    res1 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and flditemname in(select flditemname from tblservicegroup where fldgroup=&5) ORDER BY flditemname", $ratePlanService, "Active", xsearch, "General Services", cmbsection.Text)
    If res1.Available Then
      $rData3.AddResult(res1)
    Endif
    res2 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and flditemname in(select flditemname from tblservicegroup where fldgroup=&5) ORDER BY flditemname", $ratePlanProcedure, "Active", xsearch, "Procedures", cmbsection.Text)
    If res2.Available Then
      $rData3.AddResult(res2)
    Endif
    res3 = modDatabase.$myConn.Exec("select flditemname,flditemname,flditemtype,fldgroup from tblservicecost where fldgroup=&1 and fldstatus=&2 and lower(flditemname) like &3 and flditemtype=&4 and flditemname in(select flditemname from tblservicegroup where fldgroup=&5) ORDER BY flditemname", $ratePlanOthers, "Active", xsearch, "Other Items", cmbsection.Text)
    If res3.Available Then
      $rData3.AddResult(res3)
    Endif

  Endif

  $aMyFields3 = New String[]
  modGridView.ReadSmallMyData(GridView3, $rData3, $aMyFields3, 4)

  With GridView3
    .Columns[0].Hidden = True
    .Columns[1].Expand = True
    .Columns[2].Hidden = True
    .Columns[3].Hidden = True
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData3.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData3[$aMyFields3[Column]]

End

Public Sub cmbsection_Select()

  If cmbsection.Text Then
    LoadItemList()
  Endif

End

Public Sub txtsearch_Change()

  LoadItemList()

End

Public Sub GridView3_Select()

  Dim xform As String
  Dim xpackg As String
  Dim xdate As Date

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    xform = modNonMedical.GetServiceKeyFromCategory($rData3["flditemtype"])
    If xform = "Service" Then
      xpackg = cmbdiscservice.Text
    Else If xform = "Procedure" Then
      xpackg = cmbdiscprocedure.Text
    Else If xform = "Others" Then
      xpackg = cmbdiscother.Text
    Endif
    xdate = modBillings.CheckLastSalesItemDate($rData3["flditemname"], $PatientNum, $xNHISCode, xpackg)
    If xdate Then
      txtlastsaledate.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
      If DateDiff(xdate, Now(), gb.Month) <= 3 Then
        txtlastsaledate.Foreground = Color.Red
      Else
        txtlastsaledate.Foreground = Color.Default
      Endif
    Else
      txtlastsaledate.Text = ""
      txtlastsaledate.Foreground = Color.Default
    Endif
  Endif

End

Public Sub chkall_Click()

  If chkall.Value = True Then
    GridView3.SelectAll()
  Else If chkall.Value = False Then
    GridView3.UnselectAll()
  Endif

End

Public Sub btnaddone_Click()

  Dim Row As Integer

  If GridView3.Selection.Count Then
    If modMisc.AllowDiagnoBilling($encid) = True Then
      For Row = 0 To GridView3.Count - 1
        If GridView3.IsSelected(Row) = True Then
          $rData3.MoveTo(Row)
          InsertClinicService($rData3["flditemtype"], $rData3["flditemname"], 1)
        Endif
      Next
      GridView3.UnselectAll()
      FillLabtable()
    Else
      Message.Warning("Diagnosis not provided", ("OK"))
    Endif
  Endif

End

Private Sub InsertClinicService(sCateg As String, sItem As String, sQty As Float)

  Dim xform As String
  Dim xauto As String
  Dim xrefer As String
  Dim xpayble As String
  Dim xpackg As String

  xform = modNonMedical.GetServiceKeyFromCategory(sCateg)
  If xform = "Service" Then
    xauto = modBasic.$AutoBillService
    xpackg = cmbdiscservice.Text
  Else If xform = "Procedure" Then
    xauto = modBasic.$AutoBillProcedure
    xpackg = cmbdiscprocedure.Text
  Else If xform = "Others" Then
    xauto = modBasic.$AutoBillOthers
    xpackg = cmbdiscother.Text
  Endif

  If xauto Then
    If xauto = "Standard" Or If xauto = "Full" Or If xauto = "Partial" Then
      If btnrefer.Tag Then
        xrefer = btnrefer.Tag
      Else
        xrefer = modBillings.GetReferralUserSetting(xform, $encid)
      Endif
      xpayble = modBillings.GetPayableUserSetting(xform, $encid)
      modBillings.GetAutoBillingClinic($encid, xpackg, xform, sItem, sQty, "Punched", 0, False, False, xpayble, xrefer)
    Endif
  Endif

End

Public Sub FillLabtable()

  Dim sql As String

  sql = "select fldid,flditemname,fldid,flditemqty,fldordtime from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and fldordcomp like &4 and fldstatus=&5 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)"                                             ''
  $rData = modDatabase.$myConn.Exec(sql, $encid, False, False, modBasic.$compID, "Punched", "General Services", "Procedures", "Other Items")
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
    .Columns[3].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Particulars"
    .Columns[3].Text = "QTY"
    .Columns[4].Text = "DateTime"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 4 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btndelete_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", $rData["fldid"], False)
      FillLabtable()
    Endif
  Endif

End

Public Sub btnsave_Click()

  Dim xform As String
  Dim res As Result
  Dim xauto As String
  Dim xadv As String

  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval=&1 and fldsave=&2 and fldprint=&3 and fldordcomp like &4 and fldstatus=&5 and (flditemtype=&6 or flditemtype=&7 or flditemtype=&8)", $encid, False, False, modBasic.$compID, "Punched", "General Services", "Procedures", "Other Items")                 ''
  If res.Available Then
    If modBasic.$AutoBillAdvReceipt = "Enable" Then
      xadv = modBillLock.AdvanceReceiptString("Advance Receipt")
    Else
      xadv = ""
    Endif

    For Each res
      xform = modNonMedical.GetServiceKeyFromCategory(res["flditemtype"])
      If xform = "Service" Then
        xauto = modBasic.$AutoBillService
      Else If xform = "Procedure" Then
        xauto = modBasic.$AutoBillProcedure
      Else If xform = "Others" Then
        xauto = modBasic.$AutoBillOthers
      Endif

      If xauto = "Standard" Then
        If modNonMedical.AllowPreCheckDeposit($encid, res["fldditemamt"], res["flddisctype"]) = True Then
          SavePartialEntry(res, xadv)
        Endif
      Else If xauto = "Full" Then
        If modNonMedical.AllowPreEntryWithDeposit($encid, xform, res["fldditemamt"], res["flddisctype"]) = True Then
          SavePartialEntry(res, xadv)
        Endif
      Else
        If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
          SavePartialEntry(res, xadv)
        Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
          SavePartialEntry(res, xadv)
        Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
          SavePartialEntry(res, xadv)
        Endif
      Endif

    Next
  Endif

  FillLabtable()
  CompleteGrid()

End

Private Sub SavePartialEntry(res As Result, Optional advReceipt As String)

  res["fldstatus"] = "Done"
  If advReceipt Then
    res["fldextracol"] = advReceipt
  Endif
  res["fldsave"] = True
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["xyz"] = False
  res.Update()

End

''====================== completed ====================
Private Sub CompleteGrid()

  Dim sql As String

  sql = "select fldid,fldordtime,flditemname,flditemqty,fldid,flditemtype from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldprint=&3 and fldordcomp like &4 and (flditemtype=&5 or flditemtype=&6 or flditemtype=&7)"
  $rData2 = modDatabase.$myConn.Exec(sql, $encid, True, False, modBasic.$compID, "General Services", "Procedures", "Other Items")
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(GridView2, $rData2, $aMyFields2)

  With GridView2
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(275 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Hidden = True
    .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Particulars"
    .Columns[3].Text = "QTY"
    .Columns[5].Text = "Category"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End
