' Gambas module file

Public $machineCon As Connection

Public $IntfaceVendor As String
Public $IntfaceService As String
Public $IntfaceHost As String
Public $IntfaceURL As String
Public $IntfaceUser As String
Public $IntfacePassword As String
Public $IntfaceDatabase As String
Public $IntfacePort As String
Public $IntfaceUnit As String
Public $IntfaceTestList As String[]

Private Function GetIntfaceConfigSettingFIle() As String

  Dim xfile As String

  xfile = Temp() & ".conf"
  If Exist(modHelpVariable.$appetcFolder &/ "labinterfacing.conf.7z") Then
    modDevAll.Get7ZExtraction(modHelpVariable.$appetcFolder &/ "labinterfacing.conf.7z", modHelpVariable.$CryptZip, xfile)
  Else
    If Exist(modHelpVariable.$appetcFolder &/ "labinterfacing.conf") Then
      File.Save(xfile, File.Load(modHelpVariable.$appetcFolder &/ "labinterfacing.conf"))
    Endif
  Endif
  Return xfile

End

Public Sub ReadIntfaceConfig()

  Dim xfile As String
  Dim xunit As String

  xfile = GetIntfaceConfigSettingFIle()
  If Exist(xfile) Then
    $IntfaceVendor = modControlSub.ShowSettingValue(xfile, "Interface/Vendor")
    $IntfaceService = modControlSub.ShowSettingValue(xfile, "Interface/Service")
    $IntfaceHost = modControlSub.ShowSettingValue(xfile, "Interface/Host")
    $IntfaceURL = modControlSub.ShowSettingValue(xfile, "Interface/URL")
    $IntfaceUser = modControlSub.ShowSettingValue(xfile, "Interface/User")
    $IntfacePassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "Interface/Password"), False)
    $IntfaceDatabase = modControlSub.ShowSettingValue(xfile, "Interface/Database")
    $IntfacePort = modControlSub.ShowSettingValue(xfile, "Interface/Port")
    xunit = modControlSub.ShowSettingValue(xfile, "Interface/Unit")
    If xunit Then
      $IntfaceUnit = xunit
    Else
      $IntfaceUnit = "Metric"
    Endif

    ' Try Kill xfile
  Endif

End

Public Sub GetInterfaceConn()

  ReadIntfaceConfig()
  $machineCon = modDBApp.OpenConnection($IntfaceService, $IntfaceHost, $IntfaceDatabase, $IntfaceUser, $IntfacePassword, $IntfacePort)
  If $IntfaceVendor Then
    $IntfaceTestList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldtestid as col from tbltestmachine where fldvendor=&1", $IntfaceVendor))
  Endif

End

Public Sub InsertSampleForInterface(encid As String, testName As String, sampleNo As String, specType As String)

  Dim res As Result
  Dim rex As Result
  Dim xOptList As String[]
  Dim xopt As String

  Dim sex As String
  Dim xage As Integer
  Dim xnamefir As String
  Dim xnamelast As String
  Dim xdob As Date

  If $IntfaceTestList And If $IntfaceTestList.Exist(testName) Then
    rex = modDatabase.$myConn.Exec("select fldptnamefir,fldptnamelast,fldptsex,fldptbirday from tblpatientinfo where fldpatientval in(select fldpatientval from tblencounter where fldencounterval=&1)", encid)                                 ''
    If rex.Available Then
      xnamefir = rex["fldptnamefir"]
      xnamelast = rex["fldptnamelast"]
      If rex["fldptsex"] = "Male" Then
        sex = "M"
      Else If rex["fldptsex"] = "Female" Then
        sex = "F"
      Else If rex["fldptsex"] = "Other" Then
        sex = "U"
      Endif
      xdob = rex["fldptbirday"]
      xage = DateDiff(rex["fldptbirday"], Now(), gb.Year)
    Endif

    If $IntfaceVendor = "Charly Computers" Then
      If modFixLab.GetLabTestOptionType(testName) = "Fixed Components" Then
        xOptList = modFixLab.GetSubTestArray(testName)
        For Each xopt In xOptList
          res = $machineCon.Create("Analyzer_Order")
          res["SampleNo"] = sampleNo
          res["SampleType"] = specType
          res["LIMSTestParam"] = xopt
          res["UserField1"] = testName

          res["OrderDateTime"] = Now()
          res["PatFirstName"] = xnamefir
          res["PatLastName"] = xnamelast
          res["PatAge"] = xage
          res["PatAgeUnit"] = "Y"
          res["PatGender"] = sex
          res["PatientID"] = encid
          res["PatBirthDate"] = xdob
          res.Update
        Next

      Else
        res = $machineCon.Create("Analyzer_Order")
        res["SampleNo"] = sampleNo
        res["SampleType"] = specType
        res["LIMSTestParam"] = testName
        res["UserField1"] = testName

        res["OrderDateTime"] = Now()
        res["PatFirstName"] = xnamefir
        res["PatLastName"] = xnamelast
        res["PatAge"] = xage
        res["PatAgeUnit"] = "Y"
        res["PatGender"] = sex
        res["PatientID"] = encid
        res["PatBirthDate"] = xdob
        res.Update
      Endif
    Endif

  Endif

End

Private Function GetUserFieldVal(sTest As String, xSampID As String) As String

  Dim res As Result
  Dim xval As String

  res = $machineCon.Exec("select UserField1 from Analyzer_Order where SampleNo=&1 and LIMSTestParam=&2", xSampID, sTest)
  If res.Available Then
    res.MoveFirst
    If res["UserField1"] Then
      xval = res["UserField1"]
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

''use only from command line... connection closes at end
Public Sub SyncInterfacingData(xdebug As Boolean)

  Dim res As Result
  Dim res1 As Result
  Dim abn As Boolean
  Dim xType As String
  Dim xrange As Float[]
  Dim xgo As Boolean
  Dim xusercol As String

  Dim res2 As Result
  Dim xnew As String
  Dim xfinl As String

  If xdebug = True Then
    modBasic.$DebugMode = True
    db.Debug = True
  Endif

  modInterface.GetInterfaceConn()
  If $machineCon.Opened = True Then

    res = $machineCon.Edit("Analyzer_ResultDetail", "IsResultValueRead=&1", False)
    If res.Available Then
      For Each res
        If res["ResultValue"] Then
          If res["ResultValue"] <> "NA" Then
            xgo = False
            xusercol = GetUserFieldVal(res["LIMSTestParam"], res["SampleNo"])

            If xusercol Then
              xType = modFixLab.GetLabTestType(xusercol)
              If xType = "Quantitative" Then
                res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2 and fldstatus=&3", res["SampleNo"], res["LIMSTestParam"], "Sampled")
                If res1.Available Then
                  res1.MoveFirst

                  xnew = ""
                  xfinl = ""
                  If res["ResultValue"] Like "<" & "*" Then
                    xnew = Trim(Replace(res["ResultValue"], "<", ""))
                    xfinl = CStr(CFloat(xnew) - 1)
                  Else If res["ResultValue"] Like ">" & "*" Then
                    xnew = Trim(Replace(res["ResultValue"], ">", ""))
                    xfinl = CStr(CFloat(xnew) + 1)
                  Else
                    If IsNumber(res["ResultValue"]) Then
                      xfinl = res["ResultValue"]
                    Endif
                  Endif
                  If xfinl Then
                    xrange = modLabTest.LabBothLimitValue(res["LIMSTestParam"], res1["fldencounterval"], $IntfaceUnit, res1["fldmethod"])
                    If xrange[0] = xrange[1] Then
                      abn = False
                    Else
                      If CFloat(xfinl) < xrange[0] Or If CFloat(xfinl) > xrange[1] Then
                        abn = True
                      Else
                        abn = False
                      Endif
                    Endif

                    res1["fldreportquali"] = res["ResultValue"]
                    res1["fldreportquanti"] = CFloat(xfinl)
                    res1["fldstatus"] = "Reported"
                    ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                    res1["flduserid_report"] = $IntfaceVendor
                    If modBasic.$LabInterfaceCompDate = "Yes" Then
                      res1["fldtime_report"] = Now()
                    Else
                      res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                    Endif
                    res1["fldcomp_report"] = modBasic.$compID
                    res1["fldsave_report"] = True
                    res1["fldabnormal"] = abn
                    res1["fldtestunit"] = $IntfaceUnit
                    res1["xyz"] = False
                    res1.Update
                    xgo = True
                  Endif
                Endif

              Else
                If modFixLab.GetLabTestOptionType(xusercol) = "Fixed Components" Then
                  res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2", res["SampleNo"], xusercol)
                  If res1.Available Then
                    res1.MoveFirst
                    res2 = modDatabase.$myConn.Edit("tblpatlabsubtest", "fldsubtest=&1 and fldparent=&2 and fldtestid=&3", res["LIMSTestParam"], xusercol, res1["fldid"])
                    If res2.Available Then
                      res2["fldreport"] = res["ResultValue"]
                      res2["fldsave"] = True
                      res2["xyz"] = False
                      res2.Update
                      If res1["fldstatus"] = "Sampled" Then
                        res1["fldreportquali"] = ""
                        res1["fldreportquanti"] = 0
                        res1["fldstatus"] = "Reported"
                        ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                        res1["flduserid_report"] = $IntfaceVendor
                        If modBasic.$LabInterfaceCompDate = "Yes" Then
                          res1["fldtime_report"] = Now()
                        Else
                          res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                        Endif
                        res1["fldcomp_report"] = modBasic.$compID
                        res1["fldsave_report"] = True
                        res1["fldabnormal"] = abn
                        res1["fldtestunit"] = $IntfaceUnit
                        res1["xyz"] = False
                        res1.Update
                      Endif
                      xgo = True
                    Endif
                  Endif

                Else
                  res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2 and fldstatus=&3", res["SampleNo"], res["LIMSTestParam"], "Sampled")
                  If res1.Available Then
                    res1.MoveFirst
                    res1["fldreportquali"] = res["ResultValue"]
                    res1["fldreportquanti"] = 0
                    res1["fldstatus"] = "Reported"
                    ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                    res1["flduserid_report"] = $IntfaceVendor
                    If modBasic.$LabInterfaceCompDate = "Yes" Then
                      res1["fldtime_report"] = Now()
                    Else
                      res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                    Endif
                    res1["fldcomp_report"] = modBasic.$compID
                    res1["fldsave_report"] = True
                    res1["fldabnormal"] = abn
                    res1["fldtestunit"] = $IntfaceUnit
                    res1["xyz"] = False
                    res1.Update
                    xgo = True
                  Endif
                Endif

              Endif

              If xgo = True Then
                res["IsResultValueRead"] = True
                res.Update
                modBasic.PrintErrorString("Data Imported from Machine for " & res["LIMSTestParam"] & " with Samp ID of " & res["SampleNo"])
              Endif
            Endif
          Endif
        Endif
      Next
    Endif

    Try $machineCon.Close()
    If modDatabase.$myConn.Opened = True Then
      Try modDatabase.$myConn.Close()
    Endif
  Endif

End

''daily
Public Sub SyncInterfacingDataDaily(xdebug As Boolean)

  Dim res As Result
  Dim res1 As Result
  Dim abn As Boolean
  Dim xType As String
  Dim xrange As Float[]
  Dim xgo As Boolean
  Dim xusercol As String

  Dim res2 As Result
  Dim xnew As String
  Dim xfinl As String

  If xdebug = True Then
    modBasic.$DebugMode = True
    db.Debug = True
  Endif

  modInterface.GetInterfaceConn()
  If $machineCon.Opened = True Then

    ' res = $machineCon.Edit("Analyzer_ResultDetail", "IsResultValueRead=&1", False)
    res = $machineCon.Edit("Analyzer_ResultDetail", "IsResultValueRead=&1 and ResultTransferDtTm>=&2", False, DateAdd(Now(), gb.Hour, -24))
    If res.Available Then
      For Each res
        If res["ResultValue"] Then
          If res["ResultValue"] <> "NA" Then
            xgo = False
            xusercol = GetUserFieldVal(res["LIMSTestParam"], res["SampleNo"])

            If xusercol Then
              xType = modFixLab.GetLabTestType(xusercol)
              If xType = "Quantitative" Then
                res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2 and fldstatus=&3", res["SampleNo"], res["LIMSTestParam"], "Sampled")
                If res1.Available Then
                  res1.MoveFirst

                  xnew = ""
                  xfinl = ""
                  If res["ResultValue"] Like "<" & "*" Then
                    xnew = Trim(Replace(res["ResultValue"], "<", ""))
                    xfinl = CStr(CFloat(xnew) - 1)
                  Else If res["ResultValue"] Like ">" & "*" Then
                    xnew = Trim(Replace(res["ResultValue"], ">", ""))
                    xfinl = CStr(CFloat(xnew) + 1)
                  Else
                    If IsNumber(res["ResultValue"]) Then
                      xfinl = res["ResultValue"]
                    Endif
                  Endif
                  If xfinl Then
                    xrange = modLabTest.LabBothLimitValue(res["LIMSTestParam"], res1["fldencounterval"], $IntfaceUnit, res1["fldmethod"])
                    If xrange[0] = xrange[1] Then
                      abn = False
                    Else
                      If CFloat(xfinl) < xrange[0] Or If CFloat(xfinl) > xrange[1] Then
                        abn = True
                      Else
                        abn = False
                      Endif
                    Endif

                    res1["fldreportquali"] = res["ResultValue"]
                    res1["fldreportquanti"] = CFloat(xfinl)
                    res1["fldstatus"] = "Reported"
                    ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                    res1["flduserid_report"] = $IntfaceVendor
                    If modBasic.$LabInterfaceCompDate = "Yes" Then
                      res1["fldtime_report"] = Now()
                    Else
                      res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                    Endif
                    res1["fldcomp_report"] = modBasic.$compID
                    res1["fldsave_report"] = True
                    res1["fldabnormal"] = abn
                    res1["fldtestunit"] = $IntfaceUnit
                    res1["xyz"] = False
                    res1.Update
                    xgo = True
                  Endif
                Endif

              Else
                If modFixLab.GetLabTestOptionType(xusercol) = "Fixed Components" Then
                  res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2", res["SampleNo"], xusercol)
                  If res1.Available Then
                    res1.MoveFirst
                    res2 = modDatabase.$myConn.Edit("tblpatlabsubtest", "fldsubtest=&1 and fldparent=&2 and fldtestid=&3", res["LIMSTestParam"], xusercol, res1["fldid"])
                    If res2.Available Then
                      res2["fldreport"] = res["ResultValue"]
                      res2["fldsave"] = True
                      res2["xyz"] = False
                      res2.Update
                      If res1["fldstatus"] = "Sampled" Then
                        res1["fldreportquali"] = ""
                        res1["fldreportquanti"] = 0
                        res1["fldstatus"] = "Reported"
                        ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                        res1["flduserid_report"] = $IntfaceVendor
                        If modBasic.$LabInterfaceCompDate = "Yes" Then
                          res1["fldtime_report"] = Now()
                        Else
                          res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                        Endif
                        res1["fldcomp_report"] = modBasic.$compID
                        res1["fldsave_report"] = True
                        res1["fldabnormal"] = abn
                        res1["fldtestunit"] = $IntfaceUnit
                        res1["xyz"] = False
                        res1.Update
                      Endif
                      xgo = True
                    Endif
                  Endif

                Else
                  res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2 and fldstatus=&3", res["SampleNo"], res["LIMSTestParam"], "Sampled")
                  If res1.Available Then
                    res1.MoveFirst
                    res1["fldreportquali"] = res["ResultValue"]
                    res1["fldreportquanti"] = 0
                    res1["fldstatus"] = "Reported"
                    ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                    res1["flduserid_report"] = $IntfaceVendor
                    If modBasic.$LabInterfaceCompDate = "Yes" Then
                      res1["fldtime_report"] = Now()
                    Else
                      res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                    Endif
                    res1["fldcomp_report"] = modBasic.$compID
                    res1["fldsave_report"] = True
                    res1["fldabnormal"] = abn
                    res1["fldtestunit"] = $IntfaceUnit
                    res1["xyz"] = False
                    res1.Update
                    xgo = True
                  Endif
                Endif

              Endif

              If xgo = True Then
                res["IsResultValueRead"] = True
                res.Update
                modBasic.PrintErrorString("Data Imported from Machine for " & res["LIMSTestParam"] & " with Samp ID of " & res["SampleNo"])
              Endif
            Endif
          Endif
        Endif
      Next
    Endif

    Try $machineCon.Close()
    If modDatabase.$myConn.Opened = True Then
      Try modDatabase.$myConn.Close()
    Endif
  Endif

End

Public Sub SyncInterfacingSelectedData(sampleList As String[])

  Dim xSampId As String
  Dim res As Result
  Dim res1 As Result
  Dim abn As Boolean
  Dim xType As String
  Dim xrange As Float[]
  Dim xgo As Boolean
  Dim xusercol As String

  Dim res2 As Result
  Dim xnew As String
  Dim xfinl As String

  If $machineCon.Opened = True Then
    For Each xSampId In sampleList

      res = $machineCon.Edit("Analyzer_ResultDetail", "IsResultValueRead=&1 and SampleNo=&2", False, xSampId)
      If res.Available Then
        For Each res
          If res["ResultValue"] Then
            If res["ResultValue"] <> "NA" Then
              xgo = False
              xusercol = GetUserFieldVal(res["LIMSTestParam"], res["SampleNo"])

              If xusercol Then
                xType = modFixLab.GetLabTestType(xusercol)
                If xType = "Quantitative" Then
                  res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2 and fldstatus=&3", res["SampleNo"], res["LIMSTestParam"], "Sampled")
                  If res1.Available Then
                    res1.MoveFirst

                    xnew = ""
                    xfinl = ""
                    If res["ResultValue"] Like "<" & "*" Then
                      xnew = Trim(Replace(res["ResultValue"], "<", ""))
                      xfinl = CStr(CFloat(xnew) - 1)
                    Else If res["ResultValue"] Like ">" & "*" Then
                      xnew = Trim(Replace(res["ResultValue"], ">", ""))
                      xfinl = CStr(CFloat(xnew) + 1)
                    Else
                      If IsNumber(res["ResultValue"]) Then
                        xfinl = res["ResultValue"]
                      Endif
                    Endif
                    If xfinl Then
                      xrange = modLabTest.LabBothLimitValue(res["LIMSTestParam"], res1["fldencounterval"], $IntfaceUnit, res1["fldmethod"])
                      If xrange[0] = xrange[1] Then
                        abn = False
                      Else
                        If CFloat(xfinl) < xrange[0] Or If CFloat(xfinl) > xrange[1] Then
                          abn = True
                        Else
                          abn = False
                        Endif
                      Endif

                      res1["fldreportquali"] = res["ResultValue"]
                      res1["fldreportquanti"] = CFloat(xfinl)
                      res1["fldstatus"] = "Reported"
                      ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                      res1["flduserid_report"] = $IntfaceVendor
                      If modBasic.$LabInterfaceCompDate = "Yes" Then
                        res1["fldtime_report"] = Now()
                      Else
                        res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                      Endif
                      res1["fldcomp_report"] = modBasic.$compID
                      res1["fldsave_report"] = True
                      res1["fldabnormal"] = abn
                      res1["fldtestunit"] = $IntfaceUnit
                      res1["xyz"] = False
                      res1.Update
                      xgo = True
                    Endif
                  Endif

                Else
                  If modFixLab.GetLabTestOptionType(xusercol) = "Fixed Components" Then
                    res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2", res["SampleNo"], xusercol)
                    If res1.Available Then
                      res1.MoveFirst
                      res2 = modDatabase.$myConn.Edit("tblpatlabsubtest", "fldsubtest=&1 and fldparent=&2 and fldtestid=&3", res["LIMSTestParam"], xusercol, res1["fldid"])
                      If res2.Available Then
                        res2["fldreport"] = res["ResultValue"]
                        res2["fldsave"] = True
                        res2["xyz"] = False
                        res2.Update
                        If res1["fldstatus"] = "Sampled" Then
                          res1["fldreportquali"] = ""
                          res1["fldreportquanti"] = 0
                          res1["fldstatus"] = "Reported"
                          ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                          res1["flduserid_report"] = $IntfaceVendor
                          If modBasic.$LabInterfaceCompDate = "Yes" Then
                            res1["fldtime_report"] = Now()
                          Else
                            res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                          Endif
                          res1["fldcomp_report"] = modBasic.$compID
                          res1["fldsave_report"] = True
                          res1["fldabnormal"] = abn
                          res1["fldtestunit"] = $IntfaceUnit
                          res1["xyz"] = False
                          res1.Update
                        Endif
                        xgo = True
                      Endif
                    Endif

                  Else
                    res1 = modDatabase.$myConn.Edit("tblpatlabtest", "fldsampleid=&1 and fldtestid=&2 and fldstatus=&3", res["SampleNo"], res["LIMSTestParam"], "Sampled")
                    If res1.Available Then
                      res1.MoveFirst
                      res1["fldreportquali"] = res["ResultValue"]
                      res1["fldreportquanti"] = 0
                      res1["fldstatus"] = "Reported"
                      ' res1["fldtime_start"] = res["ResultTransferDtTm"]
                      res1["flduserid_report"] = $IntfaceVendor
                      If modBasic.$LabInterfaceCompDate = "Yes" Then
                        res1["fldtime_report"] = Now()
                      Else
                        res1["fldtime_report"] = res["ResultAnalysisDtTm"]
                      Endif
                      res1["fldcomp_report"] = modBasic.$compID
                      res1["fldsave_report"] = True
                      res1["fldabnormal"] = abn
                      res1["fldtestunit"] = $IntfaceUnit
                      res1["xyz"] = False
                      res1.Update
                      xgo = True
                    Endif
                  Endif

                Endif

                If xgo = True Then
                  res["IsResultValueRead"] = True
                  res.Update
                Endif
              Endif
            Endif
          Endif
        Next
      Endif

    Next
  Endif

End
