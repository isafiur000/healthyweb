' Gambas class file

Private $xFolder As String

Public Sub _new()

  Dim xFile As String

  WebForm.Debug = True
  modHelpVariable.MakeWorkingDir()

  cmbformat.List = ["HIS", "REP", "Dashboard"]
  cmbtype.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  cmbtype2.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  cmbtype3.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  cmbinterface.List = modApplication.GetNetworkInterfaceList()
  cmbcomp.List = modMisc.CompIDList()

  TabPanel1.Enabled = False
  db.Debug = True
  $xFolder = "/tmp" &/ modHelpVariable.AppName
  If Not Exist($xFolder) Then
    Mkdir $xFolder
  Endif
  xFile = $xFolder &/ modHelpVariable.AppName & ".conf"
  If Not Exist(xFile) Then
    File.Save(xFile, "")
  Endif
  If MMain.$GovtApp = "Yes" Then
    chkird.Value = False
  Endif

  ''for IRD approved
  modHelpVariable.$IRDLevel = "Yes"
  chkird.Value = True
  chkird.Enabled = False
  chkird_Click()

  txthospitalname.SetFocus

End

Public Sub cmbformat_Click()

  If cmbformat.Text = "REP" Then
    chkadmin.Text = "Consultant"
  Else
    chkadmin.Text = "Record"
  Endif

End

''================== FOR IRD ONLY ==============================
Public Sub chkird_Click()

  If chkird.Value = True Then
    lbllocation.Text = "PAN"
  Else If chkird.Value = False Then
    lbllocation.Text = "Location"
  Endif

End

Public Sub txtdepartment_LostFocus()

  If chkird.Value = True Then
    If Len(txtdepartment.Text) <> 9 Then
      txtdepartment.Text = ""
    Endif
  Endif

End

''-=================== main server ================================
Public Sub cmbtype_Click()

  If cmbtype.Text = "sqlite3" Then
    txtserver.Text = User.Home &/ "/html/docs"
    txtuser.Enabled = False
    txtpass.Enabled = False
  Else
    txtserver.Text = ""
    txtuser.Enabled = True
    txtpass.Enabled = True
  Endif

End

Public Sub chkuser_Click()

  If chkuser.Value = True Then
    txtuser.Password = False
  Else If chkuser.Value = False Then
    txtuser.Password = True
  Endif

End

Public Sub chkpass_Click()

  If chkpass.Value = True Then
    txtpass.Password = False
  Else If chkpass.Value = False Then
    txtpass.Password = True
  Endif

End

Public Sub btnnewconn_Click()

  modDatabase.$myConn = modDBApp.OpenConnection(cmbtype.Text, txtserver.Text, "", txtuser.Text, txtpass.text)
  If modDatabase.$myConn.Opened = True Then
    conshow.Value = True
    TabPanel1.Enabled = True
    ' cmbdbclient.List = modDBApp.GetAllDBonServer(modDatabase.$myConn)
    If cmbtype.Text = "mysql" Then
      cmbcollation.List = modDatabase.$myConn.Collations
    Endif
  Else
    conshow.Value = False
  Endif
  If cmbformat.Text = "REP" Then
    cmbengine.List = ["InnoDB", "Columnstore"]
  Else
    cmbengine.Text = "InnoDB"
    cmbengine.Enabled = False
  Endif

  If MMain.$Ayurveda = "Yes" Then
    cmbcollation.Text = "utf8_general_ci"
  Endif

End

''=============== Read server =============================
Public Sub cmbtype2_Click()

  If cmbtype2.Text = "sqlite3" Then
    txtserver2.Text = User.Home &/ "/html/docs"
    txtuser2.Enabled = False
    txtpass2.Enabled = False
  Else
    txtserver2.Text = ""
    txtuser2.Enabled = True
    txtpass2.Enabled = True
  Endif

End

Public Sub chkuser2_Click()

  If chkuser2.Value = True Then
    txtuser2.Password = False
  Else If chkuser2.Value = False Then
    txtuser2.Password = True
  Endif

End

Public Sub chkpass2_Click()

  If chkpass2.Value = True Then
    txtpass2.Password = False
  Else If chkpass2.Value = False Then
    txtpass2.Password = True
  Endif

End

Public Sub btnnewconn2_Click()

  modDatabase.$syConn = modDBApp.OpenConnection(cmbtype2.Text, txtserver2.Text, "", txtuser2.Text, txtpass2.text)
  If modDatabase.$syConn.Opened = True Then
    conshow2.Value = True
  Else
    conshow2.Value = False
  Endif

End

'''====================== Fallback ===========================
Public Sub chkuser3_Click()

  If chkuser3.Value = True Then
    txtuser3.Password = False
  Else If chkuser3.Value = False Then
    txtuser3.Password = True
  Endif

End

Public Sub chkpass3_Click()

  If chkpass3.Value = True Then
    txtpass3.Password = False
  Else If chkpass3.Value = False Then
    txtpass3.Password = True
  Endif

End

Public Sub btnnewconn3_Click()

  modDatabase.$syConn = modDBApp.OpenConnection(cmbtype3.Text, txtserver3.Text, "", txtuser3.Text, txtpass3.text)
  If modDatabase.$syConn.Opened = True Then
    conshow3.Value = True
  Else
    conshow3.Value = False
  Endif

End

''----------------------------- Local FTP --------------------------------------------
Public Sub chklocaluser_Click()

  If chklocaluser.Value = True Then
    txtlocaluser.Password = False
  Else If chklocaluser.Value = False Then
    txtlocaluser.Password = True
  Endif

End

Public Sub chklocalpass_Click()

  If chklocalpass.Value = True Then
    txtlocalpass.Password = False
  Else If chklocalpass.Value = False Then
    txtlocalpass.Password = True
  Endif

End

''---------------------------------- Database setting and saving ----------------------------------------
Private Sub SaveSysSettingsToFile(strSetting As String, strVal As String)

  Dim ConfFile As Settings

  ConfFile = New Settings($xFolder &/ modHelpVariable.AppName & ".conf")
  ConfFile[strSetting] = Trim(strVal)

End

Private Sub UpdateConfFile(dbFile As String)

  Dim xssl As String
  Dim xird As String
  Dim xvat As String
  Dim ftssl As String

  If cmbcomp.Text Then
    SaveSysSettingsToFile("Hospital/Hospital", txthospitalname.Text)
    SaveSysSettingsToFile("Hospital/Address", txtaddress.Text)
    SaveSysSettingsToFile("Hospital/Department", txtdepartment.Text)
    SaveSysSettingsToFile("Hospital/ComputerID", cmbcomp.Text)
    SaveSysSettingsToFile("Hospital/Logo", txtimagpath.Text)
    If chkird.Value = True Then
      xird = "Yes"
    Else
      xird = "No"
    Endif
    SaveSysSettingsToFile("Hospital/IRDCompliance", xird)
    If chkvat.Value = True Then
      xvat = "Yes"
    Else
      xvat = "No"
    Endif
    SaveSysSettingsToFile("Hospital/VATRegistration", xvat)

    SaveSysSettingsToFile("System/Database", dbFile)
    SaveSysSettingsToFile("System/DBCollation", cmbcollation.Text)
    SaveSysSettingsToFile("System/DBEngine", cmbengine.Text)
    SaveSysSettingsToFile("System/NetInterface", cmbinterface.Text)
    If chkssl.Value = True Then
      xssl = "Yes"
    Else
      xssl = "No"
    Endif
    SaveSysSettingsToFile("System/UseOpenSSL", xssl)

    SaveSysSettingsToFile("System/Service", cmbtype.Text)
    SaveSysSettingsToFile("System/Host", txtserver.Text)
    SaveSysSettingsToFile("System/User", txtuser.Text)
    SaveSysSettingsToFile("System/Password", modPassword.EncryptDBPass(txtpass.Text, chkssl.Value))
    SaveSysSettingsToFile("System/Port", txtport.Text)

    SaveSysSettingsToFile("SystemExtra/Service", cmbtype2.Text)
    SaveSysSettingsToFile("SystemExtra/Host", txtserver2.Text)
    SaveSysSettingsToFile("SystemExtra/User", txtuser2.Text)
    SaveSysSettingsToFile("SystemExtra/Password", modPassword.EncryptDBPass(txtpass2.Text, chkssl.Value))
    SaveSysSettingsToFile("SystemExtra/Port", txtport2.Text)

    SaveSysSettingsToFile("SystemFallback/Service", cmbtype3.Text)
    SaveSysSettingsToFile("SystemFallback/Host", txtserver3.Text)
    SaveSysSettingsToFile("SystemFallback/User", txtuser3.Text)
    SaveSysSettingsToFile("SystemFallback/Password", modPassword.EncryptDBPass(txtpass3.Text, chkssl.Value))
    SaveSysSettingsToFile("SystemFallback/Port", txtport3.Text)

    SaveSysSettingsToFile("LocalFTP/Host", txtlocalhost.Text)
    SaveSysSettingsToFile("LocalFTP/Folder", txtlocalfolder.Text)
    SaveSysSettingsToFile("LocalFTP/User", txtlocaluser.Text)
    SaveSysSettingsToFile("LocalFTP/Password", modPassword.EncryptDBPass(txtlocalpass.Text, chkssl.Value))
    If chklocalssl.Value = True Then
      ftssl = "Yes"
    Else
      ftssl = "No"
    Endif
    SaveSysSettingsToFile("LocalFTP/EnableSSL", ftssl)

    Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
  Endif

End

' ' Private Sub SaveSettingToRegistry()
' '
' '   Dim sPass As String
' '   Dim xdir As String
' '   Dim xPath As String
' '   Dim xfile As String
' '
' '   xfile = modHelpVariable.AppName & ".conf"
' '   If chkencrypt.Value = True Then
' '     If System.Exist("7z") Then
' '       xdir = $xFolder
' '       ' modExternal.CreateNewCacheFile(xdir, xfile)
' '       modDevAll.Get7ZCompression($xFolder &/ xfile, modHelpVariable.$CryptZip, xdir &/ xfile & ".7z")
' '       xPath = xdir &/ xfile & ".7z"
' '       ' Kill modHelpVariable.AppDirectory &/ xfile
' '     Else
' '       xPath = $xFolder &/ xfile
' '       modApplSub.InstallSelectedApplication(["p7zip-full"])
' '     Endif
' '   Else
' '     xPath = $xFolder &/ xfile
' '   Endif
' '
' '   If Exist(xPath) Then
' '     sPass = InputPassword("Enter Password for Super User<br> Copy " & xPath & " TO " & modHelpVariable.$appetcFolder, ("Super User"), "")
' '     modPassword.$HostLoginPassword = sPass
' '     If Not Exist(modHelpVariable.$appetcFolder &/ File.Name(xPath)) Then
' '       modExternal.RunRootCmdAsRoot("mv " & xPath & Space(1) & modHelpVariable.$appetcFolder, sPass)
' '     Else
' '       Me.Exec("Toastify({text: 'Setting file already present', duration: 3000}).showToast()")
' '     Endif
' '
' '   Else
' '     Me.Exec("Toastify({text: 'Setting file not found', duration: 3000}).showToast()")
' '   Endif
' '   ' If Exist(xdir) Then
' '   '   modExternal.DeleteFolderRecursive(xdir)
' '   ' Endif
' '
' ' End

'''------------------ create new db ---------------------------------
Public Sub btnhospudate_Click()

  If txthospitalname.Text And If cmbcomp.Text Then
    UpdateConfFile(txtdbcreate.Text)
    btnsave.Enabled = True
    SHowFormLoad()
  Endif

End

Public Sub btnsave_Click()

  Dim xx As String
  Dim xval As String
  ' SaveSettingToRegistry()
  xval = File.Load($xFolder &/ modHelpVariable.AppName & ".conf")
  xx = GetTextArea("Save the content to /etc/" & Application.Name &/ Application.Name & ".conf", xval)

End

Public Sub btndbcreate_Click()

  If Exist(modHelpVariable.$appetcFolder &/ modHelpVariable.AppName & ".conf") Then
    btndbcreate.Text = "Wait.."
    If cmbtype.Text = "odbc" Then
      CreateMSSQLDB()

    Else
      If modDatabase.$myConn.Opened = False Then
        modDatabase.$myConn = modDBApp.OpenConnection(cmbtype.Text, txtserver.Text, "", txtuser.Text, txtpass.text)
        If Not modDatabase.$myConn.Databases.Exist(txtdbcreate.Text) Then
          modDatabase.$myConn.Databases.Add(txtdbcreate.Text)
          Me.Exec("Toastify({text: 'Database creation completed. Wait ....', duration: 3000}).showToast()")
        Endif
      Else If modDatabase.$myConn.Opened = True Then
        If Not modDatabase.$myConn.Databases.Exist(txtdbcreate.Text) Then
          modDatabase.$myConn.Databases.Add(txtdbcreate.Text)
          Me.Exec("Toastify({text: 'Database creation completed. Wait ....', duration: 3000}).showToast()")
        Endif
      Endif
      Try modDatabase.$myConn.Close()
      Wait

    Endif

    CreateDBTables()

  Else
    Me.Exec("Toastify({text: 'Setting file not found', duration: 3000}).showToast()")
  Endif

End

Public Sub btntables_Click()

  If modDatabase.$myConn.Opened = True Then
    Try modDatabase.$myConn.Close()
  Endif
  CreateDBTables()

End

Private Sub CreateDBTables()

  modHelpVariable.SetAppConfigFile()
  modHelpVariable.CreateUserCacheDir()

  modHelpVariable.ConnectionMain()
  If modDatabase.$myConn.Opened = True Then
    db.Debug = True

    If cmbtype.Text = "odbc" Then
    Else

      If cmbengine.Text Then
        modDBTables.$DbEngine = cmbengine.Text
      Endif
      modDBTables.$DbFormat = cmbformat.Text
      If cmbformat.Text = "Dashboard" Then
        modDBGroup.CreateDatabaseForDashboard(modDatabase.$myConn)
      Else If cmbformat.Text = "REP" Then
        modDBGroup.CreateDatabaseForSish(modDatabase.$myConn)
      Else
        modDBGroup.CreateDatabaseForSish(modDatabase.$myConn)
        If chkird.Value = True Then
          modDatabase.CreateIRDTriggerBilling(modDatabase.$myConn)
          modDatabase.CreateIRDTriggerLockEvent(modDatabase.$myConn)
        Endif
      Endif
      Me.Exec("Toastify({text: 'Tables creation completed', duration: 3000}).showToast()")

    Endif

  Else
    Me.Exec("Toastify({text: 'Connection not opened', duration: 3000}).showToast()")
  Endif
  btndbcreate.Text = "Create"

End

'''-=================== back up db ================================
' ' Public Sub btnhospudate2_Click()
' '
' '   UpdateConfFile(txtdbrestore.Text)
' '   btnsave2.Enabled = True
' '
' ' End
' '
' ' Public Sub btnsave2_Click()
' '
' '   SaveSettingToRegistry()
' '
' ' End
' '
' ' Public Sub txtrestore_Click()
' '
' '   Dialog.Filter = ["*.sql", "SQL Files"]
' '   If Dialog.OpenFile() Then Return
' '   txtrestore.Text = Dialog.Path
' '
' ' End
' '
' ' Public Sub btnrestore_Click()
' '
' '   Dim scon As Connection
' '
' '   If Exist(modHelpVariable.$appetcFolder &/ modHelpVariable.AppName & ".conf") Then
' '     If cmbtype.Text Then
' '       scon = modDBApp.OpenConnection(cmbtype.Text, txtserver.Text, "", txtuser.Text, txtpass.text)
' '       If Not scon.Databases.Exist(txtdbrestore.Text) Then
' '         scon.Databases.Add(txtdbrestore.Text)
' '         Message.Info(("Database created. Wait for Table restoration ...."), ("OK"))
' '         Wait
' '       Endif
' '       Try scon.Close()
' '
' '       If txtrestore.Text Then
' '
' '         modDBApp.RestoreBackup(cmbtype.Text, txtserver.Text, txtdbrestore.Text, txtuser.Text, txtpass.Text, Quote(txtrestore.Text))                                                            ''
' '         Wait
' '         Message.Info(("Restore completed"), ("OK"))
' '
' '         If modHelpVariable.$IRDLevel = "Yes" Then
' '           scon = modDBApp.OpenConnection(cmbtype.Text, txtserver.Text, txtdbrestore.Text, txtuser.Text, txtpass.text)
' '           If scon.Opened Then
' '             modHelpVariable.RecordIRDActivity(scon, "Database Restore", "", "RESTORE", "")
' '           Endif
' '         Endif
' '
' '       Endif
' '     Endif
' '   Endif
' '
' ' End

'''-=================== client Access =================================
' ' Public Sub btnhospudate3_Click()
' '
' '   UpdateConfFile(cmbdbclient.Text)
' '   btnsave3.Enabled = True
' '
' ' End
' '
' ' Public Sub btnsave3_Click()
' '
' '   SaveSettingToRegistry()
' '
' ' End
' '
' ' Public Sub btnacess_Click()
' '
' '   Dim res As Result
' '
' '   If chkaccess.Value = True Then
' '     modDatabase.CloseDatabase()
' '     modHelpVariable.SetAppConfigFile()
' '     modHelpVariable.ConnectionMain()
' '     If modDatabase.$myConn.Opened = True Then
' '       res = modDatabase.$myConn.Create("tblmacaccess")
' '       res["fldhostmac"] = modApplication.GetMACAddress()
' '       res["fldhostuser"] = System.User.Name
' '       res["fldhostpass"] = Base64(modPassword.$HostLoginPassword)
' '       res["fldhostip"] = modApplication.GetLocalIP()
' '       res["fldhostname"] = System.Host
' '       res["fldcomp"] = cmbcomp.Text
' '       res["fldcompname"] = "Empty"
' '       res["fldaccess"] = "Inactive"
' '       res["fldiptype"] = "Dynamic"
' '       res["fldcode"] = modGeneral.GetMaxMacAddCode()
' '       res.Update()
' '       Message.Info(("Access requested"), ("OK"))
' '     Else
' '       Message.Warning(("Couldnot connect to database"), ("OK"))
' '     Endif
' '   Endif
' '
' ' End

''================================ ODBC Database (MSSQL) ========================================
Private Sub CreateMSSQLDB()

  Dim arcmd As String[]
  Dim ascmd As String
  Dim xserver As String

  xserver = InputBox("Put Host for " & txtserver.Text & " DSN", "ODBC", "")
  If xserver Then
    arcmd = New String[]
    arcmd.Add("Execute following commands in Terminal and click Proceed")
    arcmd.Add("sqlcmd -S " & xserver & " -U " & txtuser.Text & " -P " & txtpass.Text)
    arcmd.Add("1> CREATE DATABASE " & txtdbcreate.Text)
    arcmd.Add("2> GO")
    arcmd.Add("1> QUIT")
    If Message.Question(arcmd.Join(gb.NewLine), "Quit", "Proceed") = 2 Then
      Message.Info(("Database created. Wait for Table restoration ...."), ("OK"))
      ascmd = "/opt/mssql-tools/bin/sqlcmd -S " & xserver & " -U " & txtuser.Text & " -P " & txtpass.Text & " -d " & txtdbcreate.Text & " -i " & modHelpVariable.AppDirectory &/ "mssql"
      modBasic.DebugString(ascmd)
      Shell ascmd Wait
    Endif
  Endif

End

''============================= INSERT FIRST ENTRY ================
Private Sub SHowFormLoad()

  txtpatno.Value = 1
  txtencid.Value = 1

  pnlexecute.Enabled = True
  pnlexec1.Enabled = True

  txthost.Text = System.Host
  txtip.Text = modApplication.GetLocalIP()
  txtmac.Text = modApplication.GetMACAddress()
  txtcompname.Text = System.User.Name
  txtcomp.Text = cmbcomp.Text

End

Public Sub btnpat_Click()

  Dim res As Result
  Dim rer As Result
  Dim res1 As Result

  Dim sType As String[] = ["Master", "Indoor", "Consult", "Emergency", "LiveBaby", "Delivery"]
  Dim xx As String
  Dim sRange As String[]
  Dim yy As String

  Dim xList As String[] = ["PatientNo", "EncounterID", "InvoiceNo", "ReceiptSaleNo", "InvoiceReturnNo", "ReceiptReturnNo", "DueClearanceNo", "DepositAdjustment", "AdmitFileNo", "BookingNo", "StockNo", "ReferenceNo", "VoucherNo", "LabSampleNo", "RadioSampleNo", "PurchaseRefNo", "JournalNo", "WebPayment", "SSFClaim"]
  Dim xitem As String
  Dim xfiscal As String

  sRange = modLongVar.$FiscalYearFixList
  If MMain.$AutoIDFiscal = True Then
    xfiscal = modDate.GetNepaliFiscalYear(Now())
    For Each xitem In xList
      rer = modDatabase.$myConn.Exec("select fldtype,fldfiscal,fldvalue from tblautoid where fldtype=&1 and fldfiscal=&2", xitem, xfiscal)
      If rer.Available = False Then
        res = modDatabase.$myConn.Create("tblautoid")
        res["fldtype"] = xitem
        res["fldfiscal"] = xfiscal
        If xitem = "PatientNo" And If txtpatno.Value Then
          res["fldvalue"] = txtpatno.Value
        Else If xitem = "EncounterID" And If txtencid.Value Then
          res["fldvalue"] = txtencid.Value
        Else
          res["fldvalue"] = 1
        Endif
        res.Update
      Endif
    Next

  Else
    For Each xitem In xList
      rer = modDatabase.$myConn.Exec("select fldtype,fldvalue from tblautoid where fldtype=&1", xitem)
      If rer.Available = False Then
        res = modDatabase.$myConn.Create("tblautoid")
        res["fldtype"] = xitem
        If xitem = "PatientNo" And If txtpatno.Value Then
          res["fldvalue"] = txtpatno.Value
        Else If xitem = "EncounterID" And If txtencid.Value Then
          res["fldvalue"] = txtencid.Value
        Else
          res["fldvalue"] = 1
        Endif
        res.Update
      Endif
    Next

  Endif

  res1 = modDatabase.$myConn.Create("tblpatsubs")
  res1["fldhospcode"] = txthospcode.Text
  res1.Update

  modHelpVariable.CalenderConnection()
  For Each xx In sType
    For Each yy In sRange
      modAccount.InsertFiscalRangeSelected(xx, yy)
    Next
  Next

  Message.Info(("Information inserted"), "OK")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnadmin_Click()

  Dim rs As Result

  rs = modDatabase.$myConn.Exec("select flduserid from tbluser")
  If rs.Available = False Then
    modAppSupport.AddRecordLoginParam(modDatabase.$myConn, txtaduser.Text, Trim(txtadpass.Text), Trim(txtadroot.Text), txtcomp.Text, chkadmin.Text)             ''
  Endif

End

Public Sub cmdaccess_Click()

  modAppSupport.AddInitialAccessSetup(modDatabase.$myConn, txtmac.Text, txtcompname.Text, txtip.Text, txthost.text, txtcomp.Text)

End
