' Gambas module file

''$RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "") for web
Private $DataRepoPutResponse As String = "affectedRows"
Private $EncryptMode As Boolean = True

Public $RepoService As String
Public $RepoHost As String
Public $RepoURL As String
Public $RepoPort As String
Public $RepoUser As String
Public $RepoPassword As String
Public $RepoDatabase As String
Public $RepoCryptValue As String
Public $RepoUseSSL As Boolean
Public $RepoStartDate As Date

Public $RepoFTPHost As String
Public $RepolFTPFolder As String
Public $RepoFTPUser As String
Public $RepoFTPPassword As String

Public $RepoPACSHost As String
Public $RepolPACSAETtitle As String
Public $RepoPACSPort As String
Public $RepoPACSUser As String
Public $RepoPACSPassword As String

Public $RepoCon As Connection
Public $RepoDataStatus As Boolean
Public $curCon As Connection

''=================== LOCAL UPLOAD ======================
Public Sub ReadLocalRepoConfig()

  Dim xfile As String
  Dim xssl As String

  xfile = modHelpVariable.$appetcFolder &/ "localrepository.conf"
  xssl = modControlSub.ShowSettingValue(xfile, "LocalRepository/UseOpenSSL")
  If xssl = "Yes" Then
    $RepoUseSSL = True
  Else
    $RepoUseSSL = False
  Endif
  $RepoService = modControlSub.ShowSettingValue(xfile, "LocalRepository/Service")
  $RepoHost = modControlSub.ShowSettingValue(xfile, "LocalRepository/Host")
  $RepoURL = modControlSub.ShowSettingValue(xfile, "LocalRepository/URL")
  $RepoUser = modControlSub.ShowSettingValue(xfile, "LocalRepository/User")
  $RepoPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "LocalRepository/Password"), $RepoUseSSL)
  $RepoDatabase = modControlSub.ShowSettingValue(xfile, "LocalRepository/Database")
  $RepoPort = modControlSub.ShowSettingValue(xfile, "LocalRepository/Port")
  $RepoCryptValue = modControlSub.ShowSettingValue(xfile, "LocalRepository/CryptValue")
  If modControlSub.ShowSettingValue(xfile, "Repository/StartDate") Then
    $RepoStartDate = CDate(modControlSub.ShowSettingValue(xfile, "Repository/StartDate"))
  Endif

  $RepoFTPHost = modControlSub.ShowSettingValue(xfile, "LocalRepository/FTPHost")
  $RepolFTPFolder = modControlSub.ShowSettingValue(xfile, "LocalRepository/FTPFolder")
  $RepoFTPUser = modControlSub.ShowSettingValue(xfile, "LocalRepository/FTPUser")
  $RepoFTPPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "LocalRepository/FTPPassword"), $RepoUseSSL)

  $RepoPACSHost = modControlSub.ShowSettingValue(xfile, "LocalRepository/PACSHost")
  $RepolPACSAETtitle = modControlSub.ShowSettingValue(xfile, "LocalRepository/PACSAETitle")
  $RepoPACSPort = modControlSub.ShowSettingValue(xfile, "LocalRepository/PACSPort")
  $RepoPACSUser = modControlSub.ShowSettingValue(xfile, "LocalRepository/PACSUser")
  $RepoPACSPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "LocalRepository/PACSPassword"), $RepoUseSSL)

End

''=================== REMOTE UPLOAD ======================
Private Function GetRepoConfigSettingFIle() As String

  Dim xfile As String

  xfile = Temp() & ".conf"
  If Exist(modHelpVariable.$appetcFolder &/ "sishrepository.conf.7z") Then
    modDevAll.Get7ZExtraction(modHelpVariable.$appetcFolder &/ "sishrepository.conf.7z", modHelpVariable.$CryptRepoZip, xfile)
  Endif
  Return xfile

End

Public Sub ReadRemoteRepoConfig()

  Dim xfile As String
  Dim xssl As String

  xfile = GetRepoConfigSettingFIle()
  xssl = modControlSub.ShowSettingValue(xfile, "Repository/UseOpenSSL")
  If xssl = "Yes" Then
    $RepoUseSSL = True
  Else
    $RepoUseSSL = False
  Endif
  $RepoService = modControlSub.ShowSettingValue(xfile, "Repository/Service")
  $RepoHost = modControlSub.ShowSettingValue(xfile, "Repository/Host")
  $RepoURL = modControlSub.ShowSettingValue(xfile, "Repository/URL")
  $RepoUser = modControlSub.ShowSettingValue(xfile, "Repository/User")
  $RepoPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "Repository/Password"), $RepoUseSSL)
  $RepoDatabase = modControlSub.ShowSettingValue(xfile, "Repository/Database")
  $RepoPort = modControlSub.ShowSettingValue(xfile, "Repository/Port")
  $RepoCryptValue = modControlSub.ShowSettingValue(xfile, "Repository/CryptValue")
  If $RepoCryptValue Then
    modHelpVariable.$CryptRepo = $RepoCryptValue
  Else
    modHelpVariable.$CryptRepo = modHelpVariable.$CryptValue
  Endif
  If modControlSub.ShowSettingValue(xfile, "Repository/StartDate") Then
    $RepoStartDate = CDate(modControlSub.ShowSettingValue(xfile, "Repository/StartDate"))
  Endif

  $RepoFTPHost = modControlSub.ShowSettingValue(xfile, "Repository/FTPHost")
  $RepolFTPFolder = modControlSub.ShowSettingValue(xfile, "Repository/FTPFolder")
  $RepoFTPUser = modControlSub.ShowSettingValue(xfile, "Repository/FTPUser")
  $RepoFTPPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "Repository/FTPPassword"), $RepoUseSSL)

  $RepoPACSHost = modControlSub.ShowSettingValue(xfile, "Repository/PACSHost")
  $RepolPACSAETtitle = modControlSub.ShowSettingValue(xfile, "Repository/PACSAETitle")
  $RepoPACSPort = modControlSub.ShowSettingValue(xfile, "Repository/PACSPort")
  $RepoPACSUser = modControlSub.ShowSettingValue(xfile, "Repository/PACSUser")
  $RepoPACSPassword = modPassword.DecryptDBPass(modControlSub.ShowSettingValue(xfile, "Repository/PACSPassword"), $RepoUseSSL)

  Try Kill xfile

End

''================== DATA UPLOAD ========================
Public Sub ReadRepoConfig()

  If Exist(modHelpVariable.$appetcFolder &/ "sishrepository.conf.7z") Then
    ReadRemoteRepoConfig()
    MMain.$WebReport = "Multiple"
    MMain.$RepoReportMode = True
    MMain.$WebEntry = True

  Else If Exist(modHelpVariable.$appetcFolder &/ "localrepository.conf") Then
    ReadLocalRepoConfig()
    MMain.$WebReport = "Single"
    MMain.$RepoReportMode = False
    MMain.$WebEntry = False

  Endif

End

Public Sub TransferSelectRemoConn(xField As String, xValue As String, xtable As String)

  If Not $RepoCon Then
    ReadRepoConfig()
    If $RepoService Then
      If $RepoService = "http" Then
        If modBasic.$PatRepoDBase = "mysql" Then
          $RepoCon = modDBApp.OpenConnection("mysql", modDatabase.$myConn.Host, "repository", modDatabase.$myConn.User, modDatabase.$myConn.Password)
        Else
          $RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "")
        Endif
      Else
        $RepoCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif
    Else
      If modBasic.$PatRepoDBase = "mysql" Then
        $RepoCon = modDBApp.OpenConnection("mysql", modDatabase.$myConn.Host, "repository", modDatabase.$myConn.User, modDatabase.$myConn.Password)
      Else
        $RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "")
      Endif
    Endif
  Endif

  If $RepoService = "http" Then
    $RepoCon.Delete(xtable)
    modTextDB.InsertJsonToSQLiteTable($RepoCon, xtable, GetRepositoryJson(xtable, xField, xValue))
  Endif
  MMain.InitialAppMode()

End

Public Sub TransferMinRemoConn(patNo As String)

  If Not $RepoCon Then
    ReadRepoConfig()
    If $RepoService Then
      If $RepoService = "http" Then
        If modBasic.$PatRepoDBase = "mysql" Then
          $RepoCon = modDBApp.OpenConnection("mysql", modDatabase.$myConn.Host, "repository", modDatabase.$myConn.User, modDatabase.$myConn.Password)
        Else
          $RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "")
        Endif
      Else
        $RepoCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif
    Else
      If modBasic.$PatRepoDBase = "mysql" Then
        $RepoCon = modDBApp.OpenConnection("mysql", modDatabase.$myConn.Host, "repository", modDatabase.$myConn.User, modDatabase.$myConn.Password)
      Else
        $RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "")
      Endif
    Endif
  Endif

  If $RepoService = "http" Then
    If modRepository.$RepoDataStatus = False Then
      $RepoCon.Delete("tblpatientinfo")
      $RepoCon.Delete("tblencounter")
      modTextDB.InsertJsonToSQLiteTable($RepoCon, "tblpatientinfo", GetRepositoryJson("tblpatientinfo", "fldpatientval", patNo))   ''
      modTextDB.InsertJsonToSQLiteTable($RepoCon, "tblencounter", GetRepositoryJson("tblencounter", "fldpatientval", patNo))
      modRepository.$RepoDataStatus = True
    Endif
  Endif
  MMain.InitialAppMode()

End

Public Sub TransferRemoConn(patNo As String)

  If Not $RepoCon Then
    ReadRepoConfig()
    If $RepoService Then
      If $RepoService = "http" Then
        If modBasic.$PatRepoDBase = "mysql" Then
          $RepoCon = modDBApp.OpenConnection("mysql", modDatabase.$myConn.Host, "repository", modDatabase.$myConn.User, modDatabase.$myConn.Password)
        Else
          $RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "")
        Endif
      Else
        $RepoCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif
    Else
      If modBasic.$PatRepoDBase = "mysql" Then
        $RepoCon = modDBApp.OpenConnection("mysql", modDatabase.$myConn.Host, "repository", modDatabase.$myConn.User, modDatabase.$myConn.Password)
      Else
        $RepoCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppCacheDir, "repository", "", "")
      Endif
    Endif
  Endif

  If $RepoService = "http" Then
    If modBasic.$PatRepoAutoSync = "Enable" Then
      RemotePatientCheckDataToSqlite(patNo, $RepoCon)
    Else
      RemotePatientDataToSqlite(patNo, $RepoCon)
    Endif
  Endif
  If $RepoCon.Opened = True Then
    modDatabase.$myConn = $RepoCon
    modDatabase.$syConn = $RepoCon
  Endif

End

''------------------------ COPY PATIENT DATA ------------------------------------
Public Sub CopyBookingFromRepository(bookno As String)

  Dim res As Result
  Dim res1 As Result
  Dim xfld As ResultField
  Dim xColl As Variant[]
  Dim xval As String

  ReadRepoConfig()
  If $RepoService = "http" Then
    xval = GetRepositoryJson("tblpatientbook", "fldbookingval", bookno)
    Try xColl = JSON.Decode(xval)
    If xColl Then
      res = modDatabase.$myConn.Create("tblpatientbook")
      If xColl[0]["fldhospcode"] = modBasic.$HospCode Then
        For Each xfld In res.Fields
          If xfld.Name = "fldptadmindate" Then
            res["fldptadmindate"] = Now()
          Else
            Select xfld.Type
              Case db.Date
                If xColl[0][xfld.Name] Then
                  res[xfld.Name] = modDate.GetDateFromJSON(xColl[0][xfld.Name])
                Else
                  res[xfld.Name] = ""
                Endif
              Case db.Integer, db.Long, db.Float, db.Serial
                res[xfld.Name] = Val(xColl[0][xfld.Name])
              Case db.Boolean
                res[xfld.Name] = CBool(xColl[0][xfld.Name])
              Case Else
                res[xfld.Name] = xColl[0][xfld.Name]
            End Select
          Endif
        Next
        res.Update
      Else
        Message.Warning(("Hospital Code does not match"), ("OK"))
      Endif
    Endif

  Else
    $RepoCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)

    If $RepoCon.Opened = True Then
      res1 = $RepoCon.Exec("select * from tblpatientbook where fldbookingval=&1", bookno)
      If res1.Available Then
        res = modDatabase.$myConn.Create("tblpatientbook")
        If res1["fldhospcode"] = modBasic.$HospCode Then
          For Each xfld In res.Fields
            If xfld.Name = "fldptadmindate" Then
              res["fldptadmindate"] = Now()
            Else
              res[xfld.Name] = res1[xfld.Name]
            Endif
          Next
          res.Update
        Else
          Message.Warning(("Hospital Code does not match"), ("OK"))
        Endif
      Endif
    Endif

  Endif
  MMain.InitialAppMode()

Catch
  MMain.InitialAppMode()
  modHelpVariable.PrintLog("Database Error Code: " & db.Error & Space(1) & Error.Text)

End

Public Sub CopyPatInfoFromRepository(patno As String)

  Dim res As Result
  Dim res1 As Result
  Dim xfld As ResultField
  Dim xColl As Variant[]
  Dim xval As String
  Dim xbool As Boolean

  Dim yColl As Variant[]
  Dim yval As String
  Dim res2 As Result

  ReadRepoConfig()
  If $RepoService = "http" Then
    xval = GetRepositoryJson("tblpatientinfo", "fldpatientval", patno)
    Try xColl = JSON.Decode(xval)
    If xColl Then
      res = modDatabase.$myConn.Create("tblpatientinfo")
      xbool = CBool(xColl[0]["fldencrypt"])
      For Each xfld In res.Fields
        If xfld.Name = "fldptadmindate" Then
          res[xfld.Name] = Now()
        Else If xfld.Name = "fldptnamefir" Or If xfld.Name = "fldptnamelast" Or If xfld.Name = "fldptcontact" Or If xfld.Name = "fldemail" Then
          res[xfld.Name] = modPassword.DecryptPatData(xColl[0][xfld.Name], xbool)
        Else If xfld.Name = "fldencrypt" Then
          res[xfld.Name] = False
        Else
          Select xfld.Type
            Case db.Date
              If xColl[0][xfld.Name] Then
                res[xfld.Name] = modDate.GetDateFromJSON(xColl[0][xfld.Name])
              Else
                res[xfld.Name] = ""
              Endif
            Case db.Integer, db.Long, db.Float, db.Serial
              res[xfld.Name] = Val(xColl[0][xfld.Name])
            Case db.Boolean
              res[xfld.Name] = CBool(xColl[0][xfld.Name])
            Case Else
              res[xfld.Name] = xColl[0][xfld.Name]
          End Select
        Endif
      Next
      res.Update
    Endif

    yval = GetRepositoryJson("tblpatientpass", "fldpatientval", patno)
    Try yColl = JSON.Decode(yval)
    If yColl Then
      res2 = modDatabase.$myConn.Create("tblpatientpass")
      For Each xfld In res2.Fields
        If xfld.Name = "fldpass" Then
          res2[xfld.Name] = ""
        Else If xfld.Name = "xyz" Then
          res2[xfld.Name] = True
        Else
          Select xfld.Type
            Case db.Date
              If yColl[0][xfld.Name] Then
                res2[xfld.Name] = modDate.GetDateFromJSON(yColl[0][xfld.Name])
              Else
                res2[xfld.Name] = ""
              Endif
            Case db.Integer, db.Long, db.Float, db.Serial
              res2[xfld.Name] = Val(yColl[0][xfld.Name])
            Case db.Boolean
              res2[xfld.Name] = CBool(yColl[0][xfld.Name])
            Case Else
              res2[xfld.Name] = yColl[0][xfld.Name]
          End Select
        Endif
      Next
      res2.Update
    Endif

  Else
    $RepoCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)

    If $RepoCon.Opened = True Then
      res1 = $RepoCon.Exec("select * from tblpatientinfo where fldpatientval=&1", patno)
      If res1.Available Then
        res = modDatabase.$myConn.Create("tblpatientinfo")
        xbool = res1["fldencrypt"]
        For Each xfld In res.Fields
          If xfld.Name = "fldptadmindate" Then
            res[xfld.Name] = Now()
          Else If xfld.Name = "fldptnamefir" Or If xfld.Name = "fldptnamelast" Or If xfld.Name = "fldptcontact" Or If xfld.Name = "fldemail" Then
            res[xfld.Name] = modPassword.DecryptPatData(res1[xfld.Name], xbool)
          Else If xfld.Name = "fldencrypt" Then
            res[xfld.Name] = False
          Else
            res[xfld.Name] = res1[xfld.Name]
          Endif
        Next
        res.Update
      Endif
    Endif
  Endif
  MMain.InitialAppMode()

Catch
  MMain.InitialAppMode()
  modHelpVariable.PrintLog("Database Error Code: " & db.Error & Space(1) & Error.Text)

End

Public Sub CopyPatCodeFromRepository(patcode As String)

  Dim res As Result
  Dim res1 As Result
  Dim xfld As ResultField
  Dim xColl As Variant[]
  Dim xval As String
  Dim xbool As Boolean
  Dim patno As String

  Dim yColl As Variant[]
  Dim yval As String
  Dim res2 As Result

  ReadRepoConfig()
  If $RepoService = "http" Then
    xval = GetRepositoryOrderJson("tblpatientinfo", "fldptcode", patcode, "fldtime", gb.Descent)
    Try xColl = JSON.Decode(xval)
    If xColl Then
      res = modDatabase.$myConn.Create("tblpatientinfo")
      xbool = CBool(xColl[0]["fldencrypt"])
      For Each xfld In res.Fields
        If xfld.Name = "fldptadmindate" Then
          res[xfld.Name] = Now()
        Else If xfld.Name = "fldptnamefir" Or If xfld.Name = "fldptnamelast" Or If xfld.Name = "fldptcontact" Or If xfld.Name = "fldemail" Then
          res[xfld.Name] = modPassword.DecryptPatData(xColl[0][xfld.Name], xbool)
        Else If xfld.Name = "fldencrypt" Then
          res[xfld.Name] = False
        Else
          Select xfld.Type
            Case db.Date
              If xColl[0][xfld.Name] Then
                res[xfld.Name] = modDate.GetDateFromJSON(xColl[0][xfld.Name])
              Else
                res[xfld.Name] = ""
              Endif
            Case db.Integer, db.Long, db.Float, db.Serial
              res[xfld.Name] = Val(xColl[0][xfld.Name])
            Case db.Boolean
              res[xfld.Name] = CBool(xColl[0][xfld.Name])
            Case Else
              res[xfld.Name] = xColl[0][xfld.Name]
          End Select
        Endif
      Next
      res.Update
    Endif

    patno = modPatient.GetPatientNoByHospCode(patcode)

    yval = GetRepositoryJson("tblpatientpass", "fldpatientval", patno)
    Try yColl = JSON.Decode(yval)
    If yColl Then
      res2 = modDatabase.$myConn.Create("tblpatientpass")
      For Each xfld In res2.Fields
        If xfld.Name = "fldpass" Then
          res2[xfld.Name] = ""
        Else If xfld.Name = "xyz" Then
          res2[xfld.Name] = True
        Else
          Select xfld.Type
            Case db.Date
              If yColl[0][xfld.Name] Then
                res2[xfld.Name] = modDate.GetDateFromJSON(yColl[0][xfld.Name])
              Else
                res2[xfld.Name] = ""
              Endif
            Case db.Integer, db.Long, db.Float, db.Serial
              res2[xfld.Name] = Val(yColl[0][xfld.Name])
            Case db.Boolean
              res2[xfld.Name] = CBool(yColl[0][xfld.Name])
            Case Else
              res2[xfld.Name] = yColl[0][xfld.Name]
          End Select
        Endif
      Next
      res2.Update
    Endif

  Else
    $RepoCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)

    If $RepoCon.Opened = True Then
      res1 = $RepoCon.Exec("select * from tblpatientinfo where fldpatientval=&1", patno)
      If res1.Available Then
        res = modDatabase.$myConn.Create("tblpatientinfo")
        xbool = res1["fldencrypt"]
        For Each xfld In res.Fields
          If xfld.Name = "fldptadmindate" Then
            res[xfld.Name] = Now()
          Else If xfld.Name = "fldptnamefir" Or If xfld.Name = "fldptnamelast" Or If xfld.Name = "fldptcontact" Or If xfld.Name = "fldemail" Then
            res[xfld.Name] = modPassword.DecryptPatData(res1[xfld.Name], xbool)
          Else If xfld.Name = "fldencrypt" Then
            res[xfld.Name] = False
          Else
            res[xfld.Name] = res1[xfld.Name]
          Endif
        Next
        res.Update
      Endif
    Endif
  Endif
  MMain.InitialAppMode()

Catch
  MMain.InitialAppMode()
  modHelpVariable.PrintLog("Database Error Code: " & db.Error & Space(1) & Error.Text)

End

Private Sub RemotePatientDataToSqlite(patNo As String, sCon As Connection)

  Dim tbList As String[]
  Dim xtable As String

  Dim xstr1 As String
  Dim xstr2 As String
  Dim rowVar1 As Variant[]
  Dim rowVar2 As Variant[]
  Dim aColl As Collection

  tbList = modDBApp.DBRegularTablesSelField(sCon, ["fldencounterval"])

  If modRepository.$RepoDataStatus = False Then
    sCon.Delete("tblpatientinfo")
    sCon.Delete("tblencounter")
    For Each xtable In tbList
      sCon.Delete(xtable)
    Next

    xstr1 = GetRepositoryJson("tblpatientinfo", "fldpatientval", patNo)
    If xstr1 Then
      rowVar1 = JSON.Decode(xstr1)
      If rowVar1.Count Then
        modTextDB.InsertCollToSQLiteTable(sCon, "tblpatientinfo", rowVar1[0])
      Endif
    Endif

    xstr2 = GetRepositoryJson("tblencounter", "fldpatientval", patNo)
    If xstr2 Then
      rowVar2 = JSON.Decode(xstr2)
      If rowVar2.Count Then
        For Each aColl In rowVar2
          modTextDB.InsertCollToSQLiteTable(sCon, "tblencounter", aColl)

          For Each xtable In tbList
            If xtable = "tblencounter" Then
            Else
              modTextDB.InsertJsonToSQLiteTable(sCon, xtable, GetRepositoryJson(xtable, "fldencounterval", aColl["fldencounterval"]))
            Endif
          Next

        Next
      Endif
    Endif

    modRepository.$RepoDataStatus = True
  Endif

End

Private Sub RemotePatientCheckDataToSqlite(patNo As String, sCon As Connection)

  Dim tbList As String[]
  Dim xtable As String

  Dim xstr1 As String
  Dim xstr2 As String
  Dim rowVar1 As Variant[]
  Dim rowVar2 As Variant[]
  Dim aColl As Collection

  tbList = modDBApp.DBRegularTablesSelField(sCon, ["fldencounterval"])

  If modRepository.$RepoDataStatus = False Then
    If modPatient.SearchPatNo(patNo, sCon) = False Then
      xstr1 = GetRepositoryJson("tblpatientinfo", "fldpatientval", patNo)
      If xstr1 Then
        rowVar1 = JSON.Decode(xstr1)
        If rowVar1.Count Then
          modTextDB.InsertCollToSQLiteTable(sCon, "tblpatientinfo", rowVar1[0])
        Endif
      Endif
    Endif

    xstr2 = GetRepositoryJson("tblencounter", "fldpatientval", patNo)
    If xstr2 Then
      rowVar2 = JSON.Decode(xstr2)
      If rowVar2.Count Then
        For Each aColl In rowVar2
          If modPatient.GetEncounterExist(sCon, aColl["fldencounterval"]) = False Then
            modTextDB.InsertCollToSQLiteTable(sCon, "tblencounter", aColl)

            modTextDB.InsertJsonToSQLiteTable(sCon, "tblpatbilling", GetRepositoryJson("tblpatbilling", "fldencounterval", aColl["fldencounterval"]))
            For Each xtable In tbList
              Select xtable
                Case "tblencounter", "tblpatbilling"
                Case Else
                  modTextDB.InsertJsonToSQLiteTable(sCon, xtable, GetRepositoryJson(xtable, "fldencounterval", aColl["fldencounterval"]))
              End Select
            Next

          Endif
        Next
      Endif
    Endif

    modRepository.$RepoDataStatus = True
  Endif

End

Private Function GetMySQLDate(sDate As Date) As String

  Dim xx As String

  If sDate Then
    xx = Format(sDate, "yyyy-mm-dd hh:nn:ss")
  Else
    xx = "0000-00-00 00:00:00"
  Endif
  Return xx

End

Public Function GetRepositoryJson(sTable As String, xpriKey As String, xVal As Variant, Optional xpage As Integer) As String

  Dim xJson As String

  If xpage Then
    xJson = modXMySQL.GetXMYSQLHTTPRowJson($RepoURL, $RepoUser, $RepoPassword, sTable, "eq", xpriKey, xVal, xpage)
  Else
    xJson = modXMySQL.GetXMYSQLHTTPRowJson($RepoURL, $RepoUser, $RepoPassword, sTable, "eq", xpriKey, xVal)
  Endif
  Return xJson

End

Public Function GetRepositoryJsonMulti(sTable As String, xpriKey As String[], xVal As Variant[], Optional xpage As Integer) As String

  Dim xJson As String

  If xpage Then
    xJson = modXMySQL.GetXMYSQLHTTPJoinJson($RepoURL, $RepoUser, $RepoPassword, sTable, "eq", xpriKey, xVal, xpage)
  Else
    xJson = modXMySQL.GetXMYSQLHTTPJoinJson($RepoURL, $RepoUser, $RepoPassword, sTable, "eq", xpriKey, xVal)
  Endif
  Return xJson

End

Public Function GetRepositoryOrderJson(sTable As String, xpriKey As String, xVal As Variant, xfield As String, xOrder As Integer) As String

  Dim xJson As String

  xJson = modXMySQL.GetXMYSQLHTTPOrderJson($RepoURL, $RepoUser, $RepoPassword, sTable, "eq", xpriKey, xVal, xfield, xOrder)
  Return xJson

End

Private Function GetServerOutputValue(sOutput As String, xParam As String) As Variant

  Dim xColl As Collection
  Dim xval As Variant

  Try xColl = JSON.Decode(sOutput)
  If xColl And If xColl.Count Then
    If xColl[xParam] Then
      xval = xColl[xParam]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Private Function HTTPPUTCollectionVal(sURL As String, xuser As String, xpass As String, sColl As JSONCollection, Optional sKey As String) As String

  Dim xval As String
  Dim xauth As String
  Dim xcontent As String
  Dim arcmd As String

  xcontent = "Content-Type: application/json"
  If System.Exist("curl") Then
    If xuser Then
      If xpass Then
        xauth = xuser & ":" & xpass
        If sKey Then
          arcmd = "curl -u " & xauth & " -d '" & JSON.Encode(sColl) & "' -H " & Quote(xcontent) & "  -X PUT " & sURL & "/" & sKey
        Else
          arcmd = "curl -u " & xauth & " -d '" & JSON.Encode(sColl) & "' -H " & Quote(xcontent) & "  -X PUT " & sURL
        Endif
      Else
        xauth = xuser
        If sKey Then
          arcmd = "curl -A " & xauth & " -d '" & JSON.Encode(sColl) & "' -H " & Quote(xcontent) & "  -X PUT " & sURL & "/" & sKey
        Else
          arcmd = "curl -A " & xauth & " -d '" & JSON.Encode(sColl) & "' -H " & Quote(xcontent) & "  -X PUT " & sURL
        Endif
      Endif
    Else
      If sKey Then
        arcmd = "curl" & " -d '" & JSON.Encode(sColl) & "' -H " & Quote(xcontent) & "  -X PUT " & sURL & "/" & sKey
      Else
        arcmd = "curl" & " -d '" & JSON.Encode(sColl) & "' -H " & Quote(xcontent) & "  -X PUT " & sURL
      Endif
    Endif
    modBasic.DebugAPIString("Execute " & Replace(arcmd, xpass, "***"))
    Shell arcmd To xval
    modBasic.DebugAPIString("Response " & xval)
  Else
    modApplSub.InstallSelectedApplication(["curl"])
  Endif

  Return Trim(xval)

End

Private Sub InsertRepositoryLog(sTable As String, xMacAdd As String)

  Dim xcoll As JSONCollection
  Dim xval As String
  Dim xindex As String

  xindex = modApplication.GetMD5SumString(modString.GetDateString(Now()) & "_" & xMacAdd & "_" & sTable)
  xcoll = New JSONCollection
  xcoll.Add(xindex, "fldindex")
  xcoll.Add(sTable, "fldtable")
  xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
  xcoll.Add(xMacAdd, "fldrepomac")
  xcoll.Add(modBasic.$HospCode, "fldhospcode")

  xval = HTTPPUTCollectionVal($RepoURL & "/" & "tblreposync", $RepoUser, $RepoPassword, xcoll)
  If xval Then
    If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
      modBasic.PrintErrorString("COMPLETED [" & sTable & "] : " & xval)
    Else
      modBasic.PrintErrorString("Error: " & xval)
    Endif
  Endif

End

Private Function GetAllEncTablesRepo() As String[]

  Dim xList As String[]

  xList = modDBApp.DBRegularTablesSelField(modDatabase.$myConn, ["fldencounterval", "xyz"])
  Return xList

End

''==================== Data Repository =======================
Public Sub UploadEncidToRepository(encid As String)

  Dim sCon As Connection
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim resn As Result
  '   Dim idLock As Boolean
  Dim xmac As String
  Dim pp As Integer
  Dim xdtstr As String

  Dim tabLst As String[]
  Dim sTable As String
  Dim hTable As Table
  Dim hField As Field
  Dim xpri As String
  Dim fldList As String[]
  Dim xcoll As JSONCollection
  Dim xval As String
  Dim xlist As String[]
  Dim prival As String
  Dim curFields As String[]

  If modBasic.$HospCode Then

    xmac = modApplication.GetMACAddress()
    xlist = New String[]
    xlist.Add("tblpatientinfo")
    xlist.Insert(GetAllEncTablesRepo())
    If xlist And If xlist.Count Then
      tabLst = xlist.Sort(modMisc.GetFirstLetterOrder(modBasic.$HospCode))
    Endif
    If tabLst.Count Then
      ReadRemoteRepoConfig()
      If Not $curCon Then
        $curCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppDirectory, "current", "", "")
      Endif
      If $RepoService = "http" Then
      Else
        sCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif

      For Each sTable In tabLst
        For Each hTable In modDatabase.$myConn.Tables
          If hTable.Name = sTable Then
            xpri = hTable.PrimaryKey[0]
            curFields = modDBApp.GetFIeldsinTable(hTable.Name, True, $curCon)
            If $RepoService = "http" Then
            Else
              fldList = modDBApp.GetFIeldsinTable(sTable, True, sCon)
            Endif

            If $RepoStartDate Then
              xdtstr = db.Subst(" and " & modMedReports.GetTableTimeField(hTable.Name) & ">&1", $RepoStartDate)
            Else
              xdtstr = ""
            Endif
            If hTable.Name = "tblpatientinfo" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(xyz=&1 or xyz IS &2) and fldpatientval in(select fldpatientval from tblencounter where fldencounterval=&3)" & xdtstr, False, Null, encid)
            Else If hTable.Name = "tblpatexamsubtable" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(xyz=&1 or xyz IS &2) and fldsubexamid in(select fldid from tblpatientsubexam where fldencounterval=&3)" & xdtstr, False, Null, encid)
            Else If hTable.Name = "tblpatlabsubtable" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(xyz=&1 or xyz IS &2) and fldsubtestid in(select fldid from tblpatlabsubtest where fldencounterval=&3)" & xdtstr, False, Null, encid)
            Else If hTable.Name = "tblpatradiosubtable" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(xyz=&1 or xyz IS &2) and fldsubexamid in(select fldid from tblpatradiosubtest where fldencounterval=&3)" & xdtstr, False, Null, encid)
            Else If hTable.Name = "tbltaperdose" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(xyz=&1 or xyz IS &2) and flddose in(select fldid from tblpatdosing where fldencounterval=&3)" & xdtstr, False, Null, encid)

            Else If hTable.Name = "tblpatbilldetail" Then
              res = modDatabase.$myConn.Exec("select * from tblpatbilldetail where fldencounterval=&1 and fldbillno NOT IN(select fldbillno from tblbillrepoload)" & xdtstr, encid)
            Else If hTable.Name = "tblpatbilling" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3) and fldencounterval=&4" & xdtstr, True, False, Null, encid)
            Else If hTable.Name = "tblpatdosing" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave_order=&1 and (xyz=&2 or xyz IS &3) and fldencounterval=&4" & xdtstr, True, False, Null, encid)
            Else If hTable.Name = "tblpatientexam" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3) and fldencounterval=&4" & xdtstr, True, False, Null, encid)
            Else If hTable.Name = "tblpatientsubexam" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3) and fldencounterval=&4" & xdtstr, True, False, Null, encid)
            Else If hTable.Name = "tblpatlabsubtest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3) and fldencounterval=&4" & xdtstr, True, False, Null, encid)
            Else If hTable.Name = "tblpatlabtest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave_report=&1 and flvisible=&2 and (xyz=&3 or xyz IS &4) and fldencounterval=&5" & xdtstr, True, "Visible", False, Null, encid)
            Else If hTable.Name = "tblpatradiosubtest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3) and fldencounterval=&4" & xdtstr, True, False, Null, encid)
            Else If hTable.Name = "tblpatradiotest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave_report=&1 and flvisible=&2 and (xyz=&3 or xyz IS &4) and fldencounterval=&5" & xdtstr, True, "Visible", False, Null, encid)
            Else
              res = modDatabase.$myConn.Edit(hTable.Name, "fldencounterval=&3 and (xyz=&1 or xyz IS &2)" & xdtstr, False, Null, encid)
            Endif
            If res.Available Then
              modBasic.PrintErrorString("Starting Data Transfer to " & sTable & " . . .")

              If $RepoService = "http" Then ''using HTTP Post menthod
                pp = 0
                For Each res
                  prival = ""

                  xcoll = New JSONCollection
                  If hTable.Name = "tblpatientinfo" Then  ''for patient info table
                    If res["fldencrypt"] = True Then   ''if already encrypted
                      For Each hField In hTable.Fields
                        If curFields.Exist(hField.Name) Then
                          If hField.Name = "fldpatientval" Then
                            If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              prival = res[hField.Name] & modBasic.$HospCode
                              xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                            Else
                              prival = res[hField.Name]
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                            xcoll.Add(modPassword.EncryptPatEncryptedRepo(res[hField.Name]), hField.Name)
                          Else If hField.Name = "fldemail" Then
                            If InStr(res[hField.Name], "@") > 0 Then
                              xcoll.Add(modPassword.EncryptPatEncryptedRepo(res[hField.Name]), hField.Name)
                            Endif
                          Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Endif
                        Endif
                      Next
                    Else   ''if not encrypted
                      For Each hField In hTable.Fields
                        If curFields.Exist(hField.Name) Then
                          If hField.Name = "fldpatientval" Then
                            If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              prival = res[hField.Name] & modBasic.$HospCode
                              xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                            Else
                              prival = res[hField.Name]
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                            If $EncryptMode = False Then
                              xcoll.Add(res[hField.Name], hField.Name)
                            Else
                              xcoll.Add(modPassword.EncryptPatRepo(res[hField.Name]), hField.Name)
                            Endif
                          Else If hField.Name = "fldemail" Then
                            If InStr(res[hField.Name], "@") > 0 Then
                              If $EncryptMode = False Then
                                xcoll.Add(res[hField.Name], hField.Name)
                              Else
                                xcoll.Add(modPassword.EncryptPatRepo(res[hField.Name]), hField.Name)
                              Endif
                            Endif
                          Else If hField.Name = "fldencrypt" Then
                            If $EncryptMode = False Then
                              xcoll.Add(False, hField.Name)
                            Else
                              xcoll.Add(True, hField.Name)
                            Endif
                          Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Endif
                        Endif
                      Next
                    Endif

                  Else If hTable.Name = "tblsociallist" Or If hTable.Name = "tblstafflist" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldptcode"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldptcode"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldptcode"]), "fldrepoid")
                            xcoll.Add(res["fldptcode"], "fldptcode")
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Else If hTable.Name = "tblentry" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldstockno"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldstockno"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldstockno"]), "fldrepoid")
                            xcoll.Add(res["fldstockno"], "fldstockno")
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Else If hTable.Name = "tbldepartmentbed" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldbed"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldbed"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldbed"]), "fldrepoid")
                            xcoll.Add(res["fldbed"], "fldbed")
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Else If hTable.Name = "tbluser" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        If hField.Name = "flduserid" Then
                          prival = res["flduserid"] & "@" & modBasic.$HospCode
                          xcoll.Add(res["flduserid"] & "@" & modBasic.$HospCode, hField.Name)
                        Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Endif
                      Endif
                    Next

                  Else   ''for tables other than tblpatientinfo
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldid"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldid"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldid"]), "fldrepoid")
                            xcoll.Add(res["fldid"], "fldid")
                          Case "fldpatientval", "fldencounterval", "fldbabypatno"
                            If res[hField.Name] And If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Case "flduserid", "flduserid_sample", "flduserid_start", "flduserid_report", "flduserid_verify", "flduserid_order", "fldorduserid", "fldfirstuserid", "fldseconduserid", "flddelphysician"
                            If res[hField.Name] Then
                              xcoll.Add(res[hField.Name] & "@" & modBasic.$HospCode, hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Endif
                  xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
                  xcoll.Add(xmac, "fldrepomac")
                  xcoll.Add(modBasic.$HospCode, "fldhospcode")

                  xval = HTTPPUTCollectionVal($RepoURL & "/" & hTable.Name, $RepoUser, $RepoPassword, xcoll)
                  If xval Then
                    If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
                      If hTable.Name = "tblpatbilldetail" Then
                        resn = modDatabase.$myConn.Create("tblbillrepoload")
                        resn["fldbillno"] = res["fldbillno"]
                        resn["fldtime"] = Now()
                        resn.Update
                      Else
                        res["xyz"] = True
                        res.Update
                      Endif
                      modBasic.PrintErrorString("Success [" & hTable.Name & "] : " & xval)
                    Else
                      modBasic.PrintErrorString("Error: " & xval)
                    Endif
                  Endif
                  pp = pp + 1

                Next
                InsertRepositoryLog(hTable.Name, xmac)

              Else ''using remote database connection

                If sCon.Opened Then
                  pp = 0
                  For Each res
                    If hTable.Name = "tblpatientinfo" Then
                      If InStr(res[xpri], modBasic.$HospCode) = 0 Then
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri] & modBasic.$HospCode)
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri] & modBasic.$HospCode)
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Else
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Endif
                    Else
                      If xpri = "fldid" Then
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, "fldrepoid") & " =&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, "fldrepoid=&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Else
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Endif
                    Endif

                    If hTable.Name = "tblpatientinfo" Then  ''for patient info table
                      If res["fldencrypt"] = True Then   ''if already encrypted
                        For Each hField In hTable.Fields
                          If fldList.Exist(hField.Name) Then
                            If hField.Name = "fldpatientval" Then
                              If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                              res1[hField.Name] = modPassword.EncryptPatEncryptedRepo(res[hField.Name])
                            Else If hField.Name = "fldemail" Then
                              If InStr(res[hField.Name], "@") > 0 Then
                                res1[hField.Name] = modPassword.EncryptPatEncryptedRepo(res[hField.Name])
                              Endif
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Endif
                        Next
                      Else   ''if not encrypted
                        For Each hField In hTable.Fields
                          If fldList.Exist(hField.Name) Then
                            If hField.Name = "fldpatientval" Then
                              If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                              If $EncryptMode = False Then
                                res1[hField.Name] = res[hField.Name]
                              Else
                                res1[hField.Name] = modPassword.EncryptPatRepo(res[hField.Name])
                              Endif
                            Else If hField.Name = "fldemail" Then
                              If InStr(res[hField.Name], "@") > 0 Then
                                If $EncryptMode = False Then
                                  res1[hField.Name] = res[hField.Name]
                                Else
                                  res1[hField.Name] = modPassword.EncryptPatRepo(res[hField.Name])
                                Endif
                              Endif
                            Else If hField.Name = "fldencrypt" Then
                              If $EncryptMode = False Then
                                res1[hField.Name] = False
                              Else
                                res1[hField.Name] = True
                              Endif
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Endif
                        Next
                      Endif

                    Else   ''for tables other than tblpatientinfo
                      For Each hField In hTable.Fields
                        If fldList.Exist(hField.Name) Then
                          Select Case hField.Name
                            Case "fldid"
                              res1["fldrepoid"] = modBasic.$HospCode & "-" & CStr(res["fldid"])
                              res1["fldid"] = res["fldid"]
                            Case "fldpatientval", "fldencounterval", "fldbabypatno"
                              If res[hField.Name] And If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Case "flduserid", "flduserid_sample", "flduserid_start", "flduserid_report", "flduserid_verify", "flduserid_order", "fldorduserid", "fldfirstuserid", "fldseconduserid", "flddelphysician"
                              If res[hField.Name] Then
                                res1[hField.Name] = res[hField.Name] & "@" & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Case Else
                              res1[hField.Name] = res[hField.Name]
                          End Select
                        Endif
                      Next

                    Endif
                    res1["fldrepodate"] = Now()
                    res1["fldrepomac"] = xmac
                    res1["fldhospcode"] = modBasic.$HospCode
                    Try res1.Update

                    If hTable.Name = "tblpatbilldetail" Then
                      resn = modDatabase.$myConn.Create("tblbillrepoload")
                      resn["fldbillno"] = res["fldbillno"]
                      resn["fldtime"] = Now()
                      resn.Update
                    Else
                      res["xyz"] = True
                      res.Update
                    Endif
                    pp = pp + 1

                  Next
                Endif

              Endif
              modBasic.PrintErrorString("Data Transfer to " & sTable & " completed")

            Endif

          Endif
        Next
      Next
    Endif

  Endif

End

Public Sub UploadSingleToRepository(sTable As String, sOption As String)

  Dim sCon As Connection
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim resn As Result
  '   Dim idLock As Boolean
  Dim xmac As String
  Dim pp As Integer
  Dim xdtstr As String

  Dim hTable As Table
  Dim hField As Field
  Dim xpri As String
  Dim fldList As String[]
  Dim xcoll As JSONCollection
  Dim xval As String
  Dim prival As String
  Dim curFields As String[]

  If modBasic.$HospCode Then

    xmac = modApplication.GetMACAddress()
    If sTable Then
      ReadRemoteRepoConfig()
      If Not $curCon Then
        $curCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppDirectory, "current", "", "")
      Endif
      If $RepoService = "http" Then
      Else
        sCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif

      For Each hTable In modDatabase.$myConn.Tables
        If hTable.Name = sTable Then
          xpri = hTable.PrimaryKey[0]
          curFields = modDBApp.GetFIeldsinTable(hTable.Name, True, $curCon)
          If $RepoService = "http" Then
          Else
            fldList = modDBApp.GetFIeldsinTable(sTable, True, sCon)
          Endif

          If $RepoStartDate Then
            xdtstr = db.Subst(" and " & modMedReports.GetTableTimeField(hTable.Name) & ">&1", $RepoStartDate)
          Else
            xdtstr = ""
          Endif
          If hTable.Name = "tblpatbilldetail" Then
            res = modDatabase.$myConn.Exec("select * from tblpatbilldetail where fldbillno=&1 and fldbillno NOT IN(select fldbillno from tblbillrepoload)" & xdtstr, sOption)
          Else If hTable.Name = "tblpatbilling" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tbladjustment" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsav=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblbulksale" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblextrareceipt" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblpatdosing" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave_order=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblpatientexam" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblpatientsubexam" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblpatlabsubtest" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblpatlabtest" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&5 and fldsave_report=&1 and flvisible=&2 and (xyz=&3 or xyz IS &4)" & xdtstr, True, "Visible", False, Null, sOption)
          Else If hTable.Name = "tblpatradiosubtest" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tblpatradiotest" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&5 and fldsave_report=&1 and flvisible=&2 and (xyz=&3 or xyz IS &4)" & xdtstr, True, "Visible", False, Null, sOption)
          Else If hTable.Name = "tblpurchase" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsav=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, False, False, Null, sOption)
          Else If hTable.Name = "tblstockreturn" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else If hTable.Name = "tbltransfer" Then
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&4 and fldsav=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null, sOption)
          Else
            res = modDatabase.$myConn.Edit(hTable.Name, xpri & "=&3 and (xyz=&1 or xyz IS &2)" & xdtstr, False, Null, sOption)
          Endif
          If res.Available Then
            modBasic.PrintErrorString("Starting Data Transfer to " & sTable & " . . .")

            If $RepoService = "http" Then ''using HTTP Post menthod
              pp = 0
              For Each res
                prival = ""

                xcoll = New JSONCollection
                If hTable.Name = "tblpatientinfo" Then  ''for patient info table
                  If res["fldencrypt"] = True Then   ''if already encrypted
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        If hField.Name = "fldpatientval" Then
                          If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                            prival = res[hField.Name] & modBasic.$HospCode
                            xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                          Else
                            prival = res[hField.Name]
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                          xcoll.Add(modPassword.EncryptPatEncryptedRepo(res[hField.Name]), hField.Name)
                        Else If hField.Name = "fldemail" Then
                          If InStr(res[hField.Name], "@") > 0 Then
                            xcoll.Add(modPassword.EncryptPatEncryptedRepo(res[hField.Name]), hField.Name)
                          Endif
                        Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Endif
                      Endif
                    Next
                  Else   ''if not encrypted
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        If hField.Name = "fldpatientval" Then
                          If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                            prival = res[hField.Name] & modBasic.$HospCode
                            xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                          Else
                            prival = res[hField.Name]
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                          If $EncryptMode = False Then
                            xcoll.Add(res[hField.Name], hField.Name)
                          Else
                            xcoll.Add(modPassword.EncryptPatRepo(res[hField.Name]), hField.Name)
                          Endif
                        Else If hField.Name = "fldemail" Then
                          If InStr(res[hField.Name], "@") > 0 Then
                            If $EncryptMode = False Then
                              xcoll.Add(res[hField.Name], hField.Name)
                            Else
                              xcoll.Add(modPassword.EncryptPatRepo(res[hField.Name]), hField.Name)
                            Endif
                          Endif
                        Else If hField.Name = "fldencrypt" Then
                          If $EncryptMode = False Then
                            xcoll.Add(False, hField.Name)
                          Else
                            xcoll.Add(True, hField.Name)
                          Endif
                        Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Endif
                      Endif
                    Next
                  Endif

                Else If hTable.Name = "tblsociallist" Or If hTable.Name = "tblstafflist" Then
                  For Each hField In hTable.Fields
                    If curFields.Exist(hField.Name) Then
                      Select Case hField.Name
                        Case "fldptcode"
                          prival = modBasic.$HospCode & "-" & CStr(res["fldptcode"])
                          xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldptcode"]), "fldrepoid")
                          xcoll.Add(res["fldptcode"], "fldptcode")
                        Case Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                      End Select
                    Endif
                  Next

                Else If hTable.Name = "tblentry" Then
                  For Each hField In hTable.Fields
                    If curFields.Exist(hField.Name) Then
                      Select Case hField.Name
                        Case "fldstockno"
                          prival = modBasic.$HospCode & "-" & CStr(res["fldstockno"])
                          xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldstockno"]), "fldrepoid")
                          xcoll.Add(res["fldstockno"], "fldstockno")
                        Case Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                      End Select
                    Endif
                  Next

                Else If hTable.Name = "tbldepartmentbed" Then
                  For Each hField In hTable.Fields
                    If curFields.Exist(hField.Name) Then
                      Select Case hField.Name
                        Case "fldbed"
                          prival = modBasic.$HospCode & "-" & CStr(res["fldbed"])
                          xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldbed"]), "fldrepoid")
                          xcoll.Add(res["fldbed"], "fldbed")
                        Case Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                      End Select
                    Endif
                  Next

                Else If hTable.Name = "tbluser" Then
                  For Each hField In hTable.Fields
                    If curFields.Exist(hField.Name) Then
                      If hField.Name = "flduserid" Then
                        prival = res["flduserid"] & "@" & modBasic.$HospCode
                        xcoll.Add(res["flduserid"] & "@" & modBasic.$HospCode, hField.Name)
                      Else
                        If hField.Type = db.Date Then
                          xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                        Else
                          xcoll.Add(res[hField.Name], hField.Name)
                        Endif
                      Endif
                    Endif
                  Next

                Else   ''for tables other than tblpatientinfo
                  For Each hField In hTable.Fields
                    If curFields.Exist(hField.Name) Then
                      Select Case hField.Name
                        Case "fldid"
                          prival = modBasic.$HospCode & "-" & CStr(res["fldid"])
                          xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldid"]), "fldrepoid")
                          xcoll.Add(res["fldid"], "fldid")
                        Case "fldpatientval", "fldencounterval", "fldbabypatno"
                          If res[hField.Name] And If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                            xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Case "flduserid", "flduserid_sample", "flduserid_start", "flduserid_report", "flduserid_verify", "flduserid_order", "fldorduserid", "fldfirstuserid", "fldseconduserid", "flddelphysician"
                          If res[hField.Name] Then
                            xcoll.Add(res[hField.Name] & "@" & modBasic.$HospCode, hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Case Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                      End Select
                    Endif
                  Next

                Endif
                xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
                xcoll.Add(xmac, "fldrepomac")
                xcoll.Add(modBasic.$HospCode, "fldhospcode")

                xval = HTTPPUTCollectionVal($RepoURL & "/" & hTable.Name, $RepoUser, $RepoPassword, xcoll)
                If xval Then
                  If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
                    If hTable.Name = "tblpatbilldetail" Then
                      resn = modDatabase.$myConn.Create("tblbillrepoload")
                      resn["fldbillno"] = res["fldbillno"]
                      resn["fldtime"] = Now()
                      resn.Update
                    Else
                      res["xyz"] = True
                      res.Update
                    Endif
                    modBasic.PrintErrorString("Success [" & hTable.Name & "] : " & xval)
                  Else
                    modBasic.PrintErrorString("Error: " & xval)
                  Endif
                Endif
                pp = pp + 1

              Next
              InsertRepositoryLog(hTable.Name, xmac)

            Else ''using remote database connection

              If sCon.Opened Then
                pp = 0
                For Each res
                  If hTable.Name = "tblpatientinfo" Then
                    If InStr(res[xpri], modBasic.$HospCode) = 0 Then
                      res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri] & modBasic.$HospCode)
                      If res2.Available Then
                        res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri] & modBasic.$HospCode)
                      Else
                        res1 = sCon.Create(sTable)
                      Endif
                    Else
                      res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                      If res2.Available Then
                        res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                      Else
                        res1 = sCon.Create(sTable)
                      Endif
                    Endif
                  Else If hTable.Name = "tbluser" Then
                    res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri] & "@" & modBasic.$HospCode)
                    If res2.Available Then
                      res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri] & "@" & modBasic.$HospCode)
                    Else
                      res1 = sCon.Create(sTable)
                    Endif
                  Else
                    If xpri = "fldid" Then
                      res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, "fldrepoid") & " =&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                      If res2.Available Then
                        res1 = sCon.Edit(sTable, "fldrepoid=&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                      Else
                        res1 = sCon.Create(sTable)
                      Endif
                    Else
                      res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                      If res2.Available Then
                        res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                      Else
                        res1 = sCon.Create(sTable)
                      Endif
                    Endif
                  Endif

                  If hTable.Name = "tblpatientinfo" Then  ''for patient info table
                    If res["fldencrypt"] = True Then   ''if already encrypted
                      For Each hField In hTable.Fields
                        If fldList.Exist(hField.Name) Then
                          If hField.Name = "fldpatientval" Then
                            If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                            res1[hField.Name] = modPassword.EncryptPatEncryptedRepo(res[hField.Name])
                          Else If hField.Name = "fldemail" Then
                            If InStr(res[hField.Name], "@") > 0 Then
                              res1[hField.Name] = modPassword.EncryptPatEncryptedRepo(res[hField.Name])
                            Endif
                          Else
                            res1[hField.Name] = res[hField.Name]
                          Endif
                        Endif
                      Next
                    Else   ''if not encrypted
                      For Each hField In hTable.Fields
                        If fldList.Exist(hField.Name) Then
                          If hField.Name = "fldpatientval" Then
                            If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                            If $EncryptMode = False Then
                              res1[hField.Name] = res[hField.Name]
                            Else
                              res1[hField.Name] = modPassword.EncryptPatRepo(res[hField.Name])
                            Endif
                          Else If hField.Name = "fldemail" Then
                            If InStr(res[hField.Name], "@") > 0 Then
                              If $EncryptMode = False Then
                                res1[hField.Name] = res[hField.Name]
                              Else
                                res1[hField.Name] = modPassword.EncryptPatRepo(res[hField.Name])
                              Endif
                            Endif
                          Else If hField.Name = "fldencrypt" Then
                            If $EncryptMode = False Then
                              res1[hField.Name] = False
                            Else
                              res1[hField.Name] = True
                            Endif
                          Else
                            res1[hField.Name] = res[hField.Name]
                          Endif
                        Endif
                      Next
                    Endif

                  Else If hTable.Name = "tbluser" Then
                    For Each hField In hTable.Fields
                      If fldList.Exist(hField.Name) Then
                        If hField.Name = "flduserid" Then
                          res1["flduserid"] = res["flduserid"] & "@" & modBasic.$HospCode
                        Else
                          res1[hField.Name] = res[hField.Name]
                        Endif
                      Endif
                    Next

                  Else   ''for tables other than tblpatientinfo
                    For Each hField In hTable.Fields
                      If fldList.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldid"
                            res1["fldrepoid"] = modBasic.$HospCode & "-" & CStr(res["fldid"])
                            res1["fldid"] = res["fldid"]
                          Case "fldpatientval", "fldencounterval", "fldbabypatno"
                            If res[hField.Name] And If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Case "flduserid", "flduserid_sample", "flduserid_start", "flduserid_report", "flduserid_verify", "flduserid_order", "fldorduserid", "fldfirstuserid", "fldseconduserid", "flddelphysician"
                            If res[hField.Name] Then
                              res1[hField.Name] = res[hField.Name] & "@" & modBasic.$HospCode
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Case Else
                            res1[hField.Name] = res[hField.Name]
                        End Select
                      Endif
                    Next

                  Endif
                  res1["fldrepodate"] = Now()
                  res1["fldrepomac"] = xmac
                  res1["fldhospcode"] = modBasic.$HospCode
                  Try res1.Update

                  If hTable.Name = "tblpatbilldetail" Then
                    resn = modDatabase.$myConn.Create("tblbillrepoload")
                    resn["fldbillno"] = res["fldbillno"]
                    resn["fldtime"] = Now()
                    resn.Update
                  Else
                    res["xyz"] = True
                    res.Update
                  Endif
                  pp = pp + 1

                Next
              Endif

            Endif
            modBasic.PrintErrorString("Data Transfer to " & sTable & " completed")

          Endif

        Endif
      Next

    Endif

  Endif

End

Public Sub UploadToRepository(xlist As String[], xdebug As Boolean)

  Dim sCon As Connection
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim resn As Result
  '   Dim idLock As Boolean
  Dim xmac As String
  Dim pp As Integer
  Dim xdtstr As String

  Dim tabLst As String[]
  Dim sTable As String
  Dim hTable As Table
  Dim hField As Field
  Dim xpri As String
  Dim fldList As String[]
  Dim xcoll As JSONCollection
  Dim xval As String
  Dim prival As String
  Dim curFields As String[]

  If modBasic.$HospCode Then

    xmac = modApplication.GetMACAddress()
    If xlist And If xlist.Count Then
      tabLst = xlist.Sort(modMisc.GetFirstLetterOrder(modBasic.$HospCode))
    Endif
    If tabLst.Count Then
      ReadRemoteRepoConfig()
      If Not $curCon Then
        $curCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppDirectory, "current", "", "")
      Endif
      If $RepoService = "http" Then
      Else
        sCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif

      For Each sTable In tabLst
        For Each hTable In modDatabase.$myConn.Tables
          If hTable.Name = sTable Then
            xpri = hTable.PrimaryKey[0]
            curFields = modDBApp.GetFIeldsinTable(hTable.Name, True, $curCon)
            If $RepoService = "http" Then
            Else
              fldList = modDBApp.GetFIeldsinTable(sTable, True, sCon)
            Endif

            If $RepoStartDate Then
              xdtstr = db.Subst(" and " & modMedReports.GetTableTimeField(hTable.Name) & ">&1", $RepoStartDate)
            Else
              xdtstr = ""
            Endif
            If hTable.Name = "tblpatbilldetail" Then
              res = modDatabase.$myConn.Exec("select * from tblpatbilldetail where fldbillno NOT IN(select fldbillno from tblbillrepoload)" & xdtstr)
            Else If hTable.Name = "tblpatbilling" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tbladjustment" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsav=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblbulksale" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblextrareceipt" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblpatdosing" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave_order=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblpatientexam" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblpatientsubexam" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblpatlabsubtest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblpatlabtest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave_report=&1 and flvisible=&2 and (xyz=&3 or xyz IS &4)" & xdtstr, True, "Visible", False, Null)
            Else If hTable.Name = "tblpatradiosubtest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tblpatradiotest" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave_report=&1 and flvisible=&2 and (xyz=&3 or xyz IS &4)" & xdtstr, True, "Visible", False, Null)
            Else If hTable.Name = "tblpurchase" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsav=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, False, False, Null)
            Else If hTable.Name = "tblstockreturn" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsave=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else If hTable.Name = "tbltransfer" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "fldsav=&1 and (xyz=&2 or xyz IS &3)" & xdtstr, True, False, Null)
            Else
              res = modDatabase.$myConn.Edit(hTable.Name, "xyz=&1 or xyz IS &2" & xdtstr, False, Null)
            Endif
            If res.Available Then
              If xdebug = True Then
                modBasic.PrintErrorString("Starting Data Transfer to " & sTable & " . . .")
              Endif

              If $RepoService = "http" Then ''using HTTP Post menthod
                pp = 0
                For Each res
                  prival = ""

                  xcoll = New JSONCollection
                  If hTable.Name = "tblpatientinfo" Then  ''for patient info table
                    If res["fldencrypt"] = True Then   ''if already encrypted
                      For Each hField In hTable.Fields
                        If curFields.Exist(hField.Name) Then
                          If hField.Name = "fldpatientval" Then
                            If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              prival = res[hField.Name] & modBasic.$HospCode
                              xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                            Else
                              prival = res[hField.Name]
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                            xcoll.Add(modPassword.EncryptPatEncryptedRepo(res[hField.Name]), hField.Name)
                          Else If hField.Name = "fldemail" Then
                            If InStr(res[hField.Name], "@") > 0 Then
                              xcoll.Add(modPassword.EncryptPatEncryptedRepo(res[hField.Name]), hField.Name)
                            Endif
                          Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Endif
                        Endif
                      Next
                    Else   ''if not encrypted
                      For Each hField In hTable.Fields
                        If curFields.Exist(hField.Name) Then
                          If hField.Name = "fldpatientval" Then
                            If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              prival = res[hField.Name] & modBasic.$HospCode
                              xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                            Else
                              prival = res[hField.Name]
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                            If $EncryptMode = False Then
                              xcoll.Add(res[hField.Name], hField.Name)
                            Else
                              xcoll.Add(modPassword.EncryptPatRepo(res[hField.Name]), hField.Name)
                            Endif
                          Else If hField.Name = "fldemail" Then
                            If InStr(res[hField.Name], "@") > 0 Then
                              If $EncryptMode = False Then
                                xcoll.Add(res[hField.Name], hField.Name)
                              Else
                                xcoll.Add(modPassword.EncryptPatRepo(res[hField.Name]), hField.Name)
                              Endif
                            Endif
                          Else If hField.Name = "fldencrypt" Then
                            If $EncryptMode = False Then
                              xcoll.Add(False, hField.Name)
                            Else
                              xcoll.Add(True, hField.Name)
                            Endif
                          Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Endif
                        Endif
                      Next
                    Endif

                  Else If hTable.Name = "tblsociallist" Or If hTable.Name = "tblstafflist" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldptcode"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldptcode"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldptcode"]), "fldrepoid")
                            xcoll.Add(res["fldptcode"], "fldptcode")
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Else If hTable.Name = "tblentry" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldstockno"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldstockno"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldstockno"]), "fldrepoid")
                            xcoll.Add(res["fldstockno"], "fldstockno")
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Else If hTable.Name = "tbldepartmentbed" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldbed"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldbed"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldbed"]), "fldrepoid")
                            xcoll.Add(res["fldbed"], "fldbed")
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Else If hTable.Name = "tbluser" Then
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        If hField.Name = "flduserid" Then
                          prival = res["flduserid"] & "@" & modBasic.$HospCode
                          xcoll.Add(res["flduserid"] & "@" & modBasic.$HospCode, hField.Name)
                        Else
                          If hField.Type = db.Date Then
                            xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                          Else
                            xcoll.Add(res[hField.Name], hField.Name)
                          Endif
                        Endif
                      Endif
                    Next

                  Else   ''for tables other than tblpatientinfo
                    For Each hField In hTable.Fields
                      If curFields.Exist(hField.Name) Then
                        Select Case hField.Name
                          Case "fldid"
                            prival = modBasic.$HospCode & "-" & CStr(res["fldid"])
                            xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldid"]), "fldrepoid")
                            xcoll.Add(res["fldid"], "fldid")
                          Case "fldpatientval", "fldencounterval", "fldbabypatno"
                            If res[hField.Name] And If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                              xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Case "flduserid", "flduserid_sample", "flduserid_start", "flduserid_report", "flduserid_verify", "flduserid_order", "fldorduserid", "fldfirstuserid", "fldseconduserid", "flddelphysician"
                            If res[hField.Name] Then
                              xcoll.Add(res[hField.Name] & "@" & modBasic.$HospCode, hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                          Case Else
                            If hField.Type = db.Date Then
                              xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                            Else
                              xcoll.Add(res[hField.Name], hField.Name)
                            Endif
                        End Select
                      Endif
                    Next

                  Endif
                  xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
                  xcoll.Add(xmac, "fldrepomac")
                  xcoll.Add(modBasic.$HospCode, "fldhospcode")

                  xval = HTTPPUTCollectionVal($RepoURL & "/" & hTable.Name, $RepoUser, $RepoPassword, xcoll)
                  If xval Then
                    If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
                      If hTable.Name = "tblpatbilldetail" Then
                        resn = modDatabase.$myConn.Create("tblbillrepoload")
                        resn["fldbillno"] = res["fldbillno"]
                        resn["fldtime"] = Now()
                        resn.Update
                      Else
                        res["xyz"] = True
                        res.Update
                      Endif
                      If xdebug = True Then
                        modBasic.PrintErrorString("Success [" & hTable.Name & "] : " & xval)
                      Endif
                    Else
                      modBasic.PrintErrorString("Error: " & xval)
                    Endif
                  Endif
                  pp = pp + 1

                Next
                InsertRepositoryLog(hTable.Name, xmac)

              Else ''using remote database connection

                If sCon.Opened Then
                  pp = 0
                  For Each res
                    If hTable.Name = "tblpatientinfo" Then
                      If InStr(res[xpri], modBasic.$HospCode) = 0 Then
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri] & modBasic.$HospCode)
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri] & modBasic.$HospCode)
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Else
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Endif
                    Else If hTable.Name = "tbluser" Then
                      res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri] & "@" & modBasic.$HospCode)
                      If res2.Available Then
                        res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri] & "@" & modBasic.$HospCode)
                      Else
                        res1 = sCon.Create(sTable)
                      Endif
                    Else
                      If xpri = "fldid" Then
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, "fldrepoid") & " =&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, "fldrepoid=&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Else
                        res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                        If res2.Available Then
                          res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                        Else
                          res1 = sCon.Create(sTable)
                        Endif
                      Endif
                    Endif

                    If hTable.Name = "tblpatientinfo" Then  ''for patient info table
                      If res["fldencrypt"] = True Then   ''if already encrypted
                        For Each hField In hTable.Fields
                          If fldList.Exist(hField.Name) Then
                            If hField.Name = "fldpatientval" Then
                              If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                              res1[hField.Name] = modPassword.EncryptPatEncryptedRepo(res[hField.Name])
                            Else If hField.Name = "fldemail" Then
                              If InStr(res[hField.Name], "@") > 0 Then
                                res1[hField.Name] = modPassword.EncryptPatEncryptedRepo(res[hField.Name])
                              Endif
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Endif
                        Next
                      Else   ''if not encrypted
                        For Each hField In hTable.Fields
                          If fldList.Exist(hField.Name) Then
                            If hField.Name = "fldpatientval" Then
                              If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Else If hField.Name = "fldptnamefir" Or If hField.Name = "fldptnamelast" Or If hField.Name = "fldptcontact" Then
                              If $EncryptMode = False Then
                                res1[hField.Name] = res[hField.Name]
                              Else
                                res1[hField.Name] = modPassword.EncryptPatRepo(res[hField.Name])
                              Endif
                            Else If hField.Name = "fldemail" Then
                              If InStr(res[hField.Name], "@") > 0 Then
                                If $EncryptMode = False Then
                                  res1[hField.Name] = res[hField.Name]
                                Else
                                  res1[hField.Name] = modPassword.EncryptPatRepo(res[hField.Name])
                                Endif
                              Endif
                            Else If hField.Name = "fldencrypt" Then
                              If $EncryptMode = False Then
                                res1[hField.Name] = False
                              Else
                                res1[hField.Name] = True
                              Endif
                            Else
                              res1[hField.Name] = res[hField.Name]
                            Endif
                          Endif
                        Next
                      Endif

                    Else If hTable.Name = "tbluser" Then
                      For Each hField In hTable.Fields
                        If fldList.Exist(hField.Name) Then
                          If hField.Name = "flduserid" Then
                            res1["flduserid"] = res["flduserid"] & "@" & modBasic.$HospCode
                          Else
                            res1[hField.Name] = res[hField.Name]
                          Endif
                        Endif
                      Next

                    Else   ''for tables other than tblpatientinfo
                      For Each hField In hTable.Fields
                        If fldList.Exist(hField.Name) Then
                          Select Case hField.Name
                            Case "fldid"
                              res1["fldrepoid"] = modBasic.$HospCode & "-" & CStr(res["fldid"])
                              res1["fldid"] = res["fldid"]
                            Case "fldpatientval", "fldencounterval", "fldbabypatno"
                              If res[hField.Name] And If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Case "flduserid", "flduserid_sample", "flduserid_start", "flduserid_report", "flduserid_verify", "flduserid_order", "fldorduserid", "fldfirstuserid", "fldseconduserid", "flddelphysician"
                              If res[hField.Name] Then
                                res1[hField.Name] = res[hField.Name] & "@" & modBasic.$HospCode
                              Else
                                res1[hField.Name] = res[hField.Name]
                              Endif
                            Case Else
                              res1[hField.Name] = res[hField.Name]
                          End Select
                        Endif
                      Next

                    Endif
                    res1["fldrepodate"] = Now()
                    res1["fldrepomac"] = xmac
                    res1["fldhospcode"] = modBasic.$HospCode
                    Try res1.Update

                    If hTable.Name = "tblpatbilldetail" Then
                      resn = modDatabase.$myConn.Create("tblbillrepoload")
                      resn["fldbillno"] = res["fldbillno"]
                      resn["fldtime"] = Now()
                      resn.Update
                    Else
                      res["xyz"] = True
                      res.Update
                    Endif
                    pp = pp + 1

                  Next
                Endif

              Endif
              If xdebug = True Then
                modBasic.PrintErrorString("Data Transfer to " & sTable & " completed")
              Endif

            Endif

          Endif
        Next
      Next
    Endif

  Endif

End

''======================= Image Repository ======================
Public Sub UploadOneReportToRepository(sTable As String, sLongID As Long)

  Dim sCon As Connection
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  '   Dim idLock As Boolean
  Dim xmac As String

  Dim hTable As Table
  Dim hField As Field
  Dim xpri As String
  Dim fldList As String[]
  Dim xcoll As JSONCollection
  Dim xval As String

  Dim ximgPath As String
  Dim sTarget As String
  Dim xdirname As String
  Dim xmsg As String
  Dim prival As String
  Dim curFields As String[]

  If modBasic.$HospCode Then

    xmac = modApplication.GetMACAddress()
    ReadRemoteRepoConfig()
    If Not $curCon Then
      $curCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppDirectory, "current", "", "")
    Endif
    If $RepoService = "http" Then
    Else
      sCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
    Endif

    For Each hTable In modDatabase.$myConn.Tables
      If hTable.Name = sTable Then
        xpri = hTable.PrimaryKey[0]
        curFields = modDBApp.GetFIeldsinTable(hTable.Name, True, $curCon)
        If $RepoService = "http" Then
        Else
          fldList = modDBApp.GetFIeldsinTable(sTable, True, sCon)
        Endif

        If hTable.Name = "tblpatreport" Then
          res = modDatabase.$myConn.Edit(hTable.Name, "fldid=&1 and (fldxyz=&2 or fldxyz IS NULL) and (flvisible=&3 or flvisible IS NULL)", sLongID, False, "Visible")
        Else
          res = modDatabase.$myConn.Edit(hTable.Name, "fldid=&1 and fldxyz=&2 or fldxyz IS NULL", sLongID, False)
        Endif
        If res.Available Then
          modBasic.PrintErrorString("Starting Data Transfer to " & sTable & " . . .")

          ''uploading image to FTP
          If hTable.Name = "tblpatreport" Then
            ximgPath = modImage.GetBlobFileData(res["fldid"])
          Else
            ximgPath = modImage.GetBlobFileDataTable(res["fldid"], hTable.Name)
          Endif
          modBasic.PrintErrorString("Downloaded Image with ID " & res["fldid"] & " . . . ")
          If Exist(ximgPath) Then
            If File.Ext(ximgPath) Then
              sTarget = modString.GetNowString() & "." & File.Ext(ximgPath)
            Else
              sTarget = modString.GetNowString()
            Endif
            xdirname = modString.GetDateString(Date())
            xmsg = modDevAll.SendFileToFTP($RepoFTPHost, $RepolFTPFolder &/ modBasic.$HospCode &/ xdirname, $RepoFTPUser, $RepoFTPPassword, sTarget, ximgPath)
            modBasic.PrintErrorString("Uploaded Image with ID " & res["fldid"] & " . . . ")
            If Trim(xmsg) Then
              Try Print xmsg
            Else

              ''uploading data to database
              If $RepoService = "http" Then ''using HTTP Post menthod

                xcoll = New JSONCollection
                For Each hField In hTable.Fields
                  If curFields.Exist(hField.Name) Then
                    Select Case hField.Name
                      Case "fldid"
                        prival = modBasic.$HospCode & "-" & CStr(res["fldid"])
                        xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldid"]), "fldrepoid")
                        xcoll.Add(res["fldid"], "fldid")
                      Case "fldpatientval", "fldencounterval"
                        If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                          xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                        Else
                          xcoll.Add(res[hField.Name], hField.Name)
                        Endif
                      Case "flduserid"
                        If res[hField.Name] Then
                          xcoll.Add(res[hField.Name] & "@" & modBasic.$HospCode, hField.Name)
                        Else
                          xcoll.Add(res[hField.Name], hField.Name)
                        Endif
                      Case "fldpic"
                        xcoll.Add("", hField.Name)
                      Case "fldlink"
                        xcoll.Add(modBasic.$HospCode &/ xdirname &/ sTarget, hField.Name)
                      Case Else
                        If hField.Type = db.Date Then
                          xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                        Else
                          xcoll.Add(res[hField.Name], hField.Name)
                        Endif
                    End Select
                  Endif
                Next

                xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
                xcoll.Add(xmac, "fldrepomac")
                xcoll.Add(modBasic.$HospCode, "fldhospcode")

                xval = HTTPPUTCollectionVal($RepoURL & "/" & hTable.Name, $RepoUser, $RepoPassword, xcoll)
                If xval Then
                  If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
                    res["fldxyz"] = True
                    res.Update
                    modBasic.PrintErrorString("Success [" & hTable.Name & "] : " & xval)
                  Else
                    modBasic.PrintErrorString("Error: " & xval)
                  Endif
                Endif
                InsertRepositoryLog(hTable.Name, xmac)

              Else ''using remote database connection

                If sCon.Opened Then

                  If xpri = "fldid" Then
                    res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, "fldrepoid") & " =&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                    If res2.Available Then
                      res1 = sCon.Edit(sTable, "fldrepoid=&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                    Else
                      res1 = sCon.Create(sTable)
                    Endif
                  Else
                    res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                    If res2.Available Then
                      res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                    Else
                      res1 = sCon.Create(sTable)
                    Endif
                  Endif

                  For Each hField In hTable.Fields
                    If fldList.Exist(hField.Name) Then
                      Select Case hField.Name
                        Case "fldid"
                          res1["fldrepoid"] = modBasic.$HospCode & "-" & CStr(res["fldid"])
                          res1["fldid"] = res["fldid"]
                        Case "fldpatientval", "fldencounterval"
                          If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                            res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                          Else
                            res1[hField.Name] = res[hField.Name]
                          Endif
                        Case "flduserid"
                          If res[hField.Name] Then
                            res1[hField.Name] = res[hField.Name] & "@" & modBasic.$HospCode
                          Else
                            res1[hField.Name] = res[hField.Name]
                          Endif
                        Case "fldpic"
                          res1[hField.Name] = ""
                        Case "fldlink"
                          res1[hField.Name] = modBasic.$HospCode &/ xdirname &/ sTarget
                        Case Else
                          res1[hField.Name] = res[hField.Name]
                      End Select
                    Endif
                  Next

                  res1["fldrepodate"] = Now()
                  res1["fldrepomac"] = xmac
                  res1["fldhospcode"] = modBasic.$HospCode
                  Try res1.Update

                  res["fldxyz"] = True
                  res.Update

                Endif

              Endif

            Endif
          Endif
          modBasic.PrintErrorString("Data Transfer to " & sTable & " completed")

        Endif

        Break
      Endif
    Next

  Endif

End

Public Sub UploadImageEncToRepository(encid As String)

  Dim sCon As Connection
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  '   Dim idLock As Boolean
  Dim xmac As String
  Dim pp As Integer

  Dim tabLst As String[]
  Dim sTable As String
  Dim hTable As Table
  Dim hField As Field
  Dim xpri As String
  Dim fldList As String[]
  Dim xcoll As JSONCollection
  Dim xval As String

  Dim ximgPath As String
  Dim sTarget As String
  Dim xdirname As String
  Dim xmsg As String
  Dim prival As String
  Dim curFields As String[]

  If modBasic.$HospCode Then

    xmac = modApplication.GetMACAddress()
    tabLst = ["tblpatimagedata", "tblpatserialimage", "tblpatreport"]
    If tabLst.Count Then
      ReadRemoteRepoConfig()
      If Not $curCon Then
        $curCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppDirectory, "current", "", "")
      Endif
      If $RepoService = "http" Then
      Else
        sCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif

      For Each sTable In tabLst
        For Each hTable In modDatabase.$myConn.Tables
          If hTable.Name = sTable Then
            xpri = hTable.PrimaryKey[0]
            curFields = modDBApp.GetFIeldsinTable(hTable.Name, True, $curCon)
            If $RepoService = "http" Then
            Else
              fldList = modDBApp.GetFIeldsinTable(sTable, True, sCon)
            Endif

            If hTable.Name = "tblpatreport" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(fldxyz=&1 or fldxyz IS NULL) and (flvisible=&2 or flvisible IS NULL) and fldencounterval=&3", False, "Visible", encid)
            Else
              res = modDatabase.$myConn.Edit(hTable.Name, "(fldxyz=&1 or fldxyz IS NULL) and fldencounterval=&2", False, encid)
            Endif
            If res.Available Then
              modBasic.PrintErrorString("Starting Data Transfer to " & sTable & " . . .")
              For Each res
                prival = ""

                ''uploading image to FTP
                If hTable.Name = "tblpatreport" Then
                  ximgPath = modImage.GetBlobFileData(res["fldid"])
                Else
                  ximgPath = modImage.GetBlobFileDataTable(res["fldid"], hTable.Name)
                Endif
                modBasic.PrintErrorString("Downloaded Image with ID " & res["fldid"] & " . . . ")
                If Exist(ximgPath) Then
                  If File.Ext(ximgPath) Then
                    sTarget = modString.GetNowString() & "." & File.Ext(ximgPath)
                  Else
                    sTarget = modString.GetNowString()
                  Endif
                  xdirname = modString.GetDateString(Date())
                  xmsg = modDevAll.SendFileToFTP($RepoFTPHost, $RepolFTPFolder &/ modBasic.$HospCode &/ xdirname, $RepoFTPUser, $RepoFTPPassword, sTarget, ximgPath)
                  modBasic.PrintErrorString("Uploaded Image with ID " & res["fldid"] & " . . . ")
                  If Trim(xmsg) Then
                    Try Print xmsg
                  Else

                    ''uploading data to database
                    If $RepoService = "http" Then ''using HTTP Post menthod
                      pp = 0

                      xcoll = New JSONCollection
                      For Each hField In hTable.Fields
                        If curFields.Exist(hField.Name) Then
                          Select Case hField.Name
                            Case "fldid"
                              prival = modBasic.$HospCode & "-" & CStr(res["fldid"])
                              xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldid"]), "fldrepoid")
                              xcoll.Add(res["fldid"], "fldid")
                            Case "fldpatientval", "fldencounterval"
                              If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                              Else
                                xcoll.Add(res[hField.Name], hField.Name)
                              Endif
                            Case "flduserid"
                              If res[hField.Name] Then
                                xcoll.Add(res[hField.Name] & "@" & modBasic.$HospCode, hField.Name)
                              Else
                                xcoll.Add(res[hField.Name], hField.Name)
                              Endif
                            Case "fldpic"
                              xcoll.Add("", hField.Name)
                            Case "fldlink"
                              xcoll.Add(modBasic.$HospCode &/ xdirname &/ sTarget, hField.Name)
                            Case Else
                              If hField.Type = db.Date Then
                                xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                              Else
                                xcoll.Add(res[hField.Name], hField.Name)
                              Endif
                          End Select
                        Endif
                      Next

                      xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
                      xcoll.Add(xmac, "fldrepomac")
                      xcoll.Add(modBasic.$HospCode, "fldhospcode")

                      xval = HTTPPUTCollectionVal($RepoURL & "/" & hTable.Name, $RepoUser, $RepoPassword, xcoll)
                      If xval Then
                        If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
                          res["fldxyz"] = True
                          res.Update
                          modBasic.PrintErrorString("Success [" & hTable.Name & "] : " & xval)
                        Else
                          modBasic.PrintErrorString("Error: " & xval)
                        Endif
                      Endif
                      pp = pp + 1

                      InsertRepositoryLog(hTable.Name, xmac)

                    Else ''using remote database connection

                      If sCon.Opened Then
                        pp = 0

                        If xpri = "fldid" Then
                          res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, "fldrepoid") & " =&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                          If res2.Available Then
                            res1 = sCon.Edit(sTable, "fldrepoid=&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                          Else
                            res1 = sCon.Create(sTable)
                          Endif
                        Else
                          res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                          If res2.Available Then
                            res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                          Else
                            res1 = sCon.Create(sTable)
                          Endif
                        Endif

                        For Each hField In hTable.Fields
                          If fldList.Exist(hField.Name) Then
                            Select Case hField.Name
                              Case "fldid"
                                res1["fldrepoid"] = modBasic.$HospCode & "-" & CStr(res["fldid"])
                                res1["fldid"] = res["fldid"]
                              Case "fldpatientval", "fldencounterval"
                                If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                  res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                                Else
                                  res1[hField.Name] = res[hField.Name]
                                Endif
                              Case "flduserid"
                                If res[hField.Name] Then
                                  res1[hField.Name] = res[hField.Name] & "@" & modBasic.$HospCode
                                Else
                                  res1[hField.Name] = res[hField.Name]
                                Endif
                              Case "fldpic"
                                res1[hField.Name] = ""
                              Case "fldlink"
                                res1[hField.Name] = modBasic.$HospCode &/ xdirname &/ sTarget
                              Case Else
                                res1[hField.Name] = res[hField.Name]
                            End Select
                          Endif
                        Next

                        res1["fldrepodate"] = Now()
                        res1["fldrepomac"] = xmac
                        res1["fldhospcode"] = modBasic.$HospCode
                        Try res1.Update

                        res["fldxyz"] = True
                        res.Update
                        pp = pp + 1

                      Endif

                    Endif

                  Endif
                Endif
                modBasic.PrintErrorString("Data Transfer to " & sTable & " completed")

              Next
            Endif

          Endif
        Next
      Next
    Endif

  Endif

End

Public Sub UploadImageToRepository(xdebug As Boolean)

  Dim sCon As Connection
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  '   Dim idLock As Boolean
  Dim xmac As String
  Dim pp As Integer

  Dim tabLst As String[]
  Dim sTable As String
  Dim hTable As Table
  Dim hField As Field
  Dim xpri As String
  Dim fldList As String[]
  Dim xcoll As JSONCollection
  Dim xval As String

  Dim ximgPath As String
  Dim sTarget As String
  Dim xdirname As String
  Dim xmsg As String
  Dim prival As String
  Dim curFields As String[]

  If modBasic.$HospCode Then

    xmac = modApplication.GetMACAddress()
    tabLst = modDBApp.DBRegularTablesSelField(modDatabase.$myConn, ["fldxyz"])
    If tabLst.Count Then
      ReadRemoteRepoConfig()
      If Not $curCon Then
        $curCon = modDBApp.OpenConnection("sqlite3", modHelpVariable.AppDirectory, "current", "", "")
      Endif
      If $RepoService = "http" Then
      Else
        sCon = modDBApp.OpenConnection($RepoService, $RepoHost, $RepoDatabase, $RepoUser, $RepoPassword, $RepoPort)
      Endif

      For Each sTable In tabLst
        For Each hTable In modDatabase.$myConn.Tables
          If hTable.Name = sTable Then
            xpri = hTable.PrimaryKey[0]
            curFields = modDBApp.GetFIeldsinTable(hTable.Name, True, $curCon)
            If $RepoService = "http" Then
            Else
              fldList = modDBApp.GetFIeldsinTable(sTable, True, sCon)
            Endif

            If hTable.Name = "tblpatreport" Then
              res = modDatabase.$myConn.Edit(hTable.Name, "(fldxyz=&1 or fldxyz IS NULL) and (flvisible=&2 or flvisible IS NULL)", False, "Visible")
            Else
              res = modDatabase.$myConn.Edit(hTable.Name, "fldxyz=&1 or fldxyz IS NULL", False)
            Endif
            If res.Available Then
              If xdebug = True Then
                modBasic.PrintErrorString("Starting Data Transfer to " & sTable & " . . .")
              Endif
              For Each res
                prival = ""

                ''uploading image to FTP
                If hTable.Name = "tblpatreport" Then
                  ximgPath = modImage.GetBlobFileData(res["fldid"])
                Else
                  ximgPath = modImage.GetBlobFileDataTable(res["fldid"], hTable.Name)
                Endif
                If xdebug = True Then
                  modBasic.PrintErrorString("Downloaded Image with ID " & res["fldid"] & " . . . ")
                Endif
                If Exist(ximgPath) Then
                  If File.Ext(ximgPath) Then
                    sTarget = modString.GetNowString() & "." & File.Ext(ximgPath)
                  Else
                    sTarget = modString.GetNowString()
                  Endif
                  xdirname = modString.GetDateString(Date())
                  xmsg = modDevAll.SendFileToFTP($RepoFTPHost, $RepolFTPFolder &/ modBasic.$HospCode &/ xdirname, $RepoFTPUser, $RepoFTPPassword, sTarget, ximgPath)
                  If xdebug = True Then
                    modBasic.PrintErrorString("Uploaded Image with ID " & res["fldid"] & " . . . ")
                  Endif
                  If Trim(xmsg) Then
                    Try Print xmsg
                  Else

                    ''uploading data to database
                    If $RepoService = "http" Then ''using HTTP Post menthod
                      pp = 0

                      xcoll = New JSONCollection
                      For Each hField In hTable.Fields
                        If curFields.Exist(hField.Name) Then
                          Select Case hField.Name
                            Case "fldid"
                              prival = modBasic.$HospCode & "-" & CStr(res["fldid"])
                              xcoll.Add(modBasic.$HospCode & "-" & CStr(res["fldid"]), "fldrepoid")
                              xcoll.Add(res["fldid"], "fldid")
                            Case "fldpatientval", "fldencounterval"
                              If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                xcoll.Add(res[hField.Name] & modBasic.$HospCode, hField.Name)
                              Else
                                xcoll.Add(res[hField.Name], hField.Name)
                              Endif
                            Case "flduserid"
                              If res[hField.Name] Then
                                xcoll.Add(res[hField.Name] & "@" & modBasic.$HospCode, hField.Name)
                              Else
                                xcoll.Add(res[hField.Name], hField.Name)
                              Endif
                            Case "fldpic"
                              xcoll.Add("", hField.Name)
                            Case "fldlink"
                              xcoll.Add(modBasic.$HospCode &/ xdirname &/ sTarget, hField.Name)
                            Case Else
                              If hField.Type = db.Date Then
                                xcoll.Add(GetMySQLDate(res[hField.Name]), hField.Name)
                              Else
                                xcoll.Add(res[hField.Name], hField.Name)
                              Endif
                          End Select
                        Endif
                      Next

                      xcoll.Add(GetMySQLDate(Now()), "fldrepodate")
                      xcoll.Add(xmac, "fldrepomac")
                      xcoll.Add(modBasic.$HospCode, "fldhospcode")

                      xval = HTTPPUTCollectionVal($RepoURL & "/" & hTable.Name, $RepoUser, $RepoPassword, xcoll)
                      If xval Then
                        If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
                          res["fldxyz"] = True
                          res.Update
                          If xdebug = True Then
                            modBasic.PrintErrorString("Success [" & hTable.Name & "] : " & xval)
                          Endif
                        Else
                          modBasic.PrintErrorString("Error: " & xval)
                        Endif
                      Endif
                      pp = pp + 1

                      InsertRepositoryLog(hTable.Name, xmac)

                    Else ''using remote database connection

                      If sCon.Opened Then
                        pp = 0

                        If xpri = "fldid" Then
                          res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, "fldrepoid") & " =&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                          If res2.Available Then
                            res1 = sCon.Edit(sTable, "fldrepoid=&1", modBasic.$HospCode & "-" & CStr(res["fldid"]))
                          Else
                            res1 = sCon.Create(sTable)
                          Endif
                        Else
                          res2 = sCon.Exec(Subst("select *from &1 where &2", sTable, xpri) & " =&1", res[xpri])
                          If res2.Available Then
                            res1 = sCon.Edit(sTable, xpri & "=&1", res[xpri])
                          Else
                            res1 = sCon.Create(sTable)
                          Endif
                        Endif

                        For Each hField In hTable.Fields
                          If fldList.Exist(hField.Name) Then
                            Select Case hField.Name
                              Case "fldid"
                                res1["fldrepoid"] = modBasic.$HospCode & "-" & CStr(res["fldid"])
                                res1["fldid"] = res["fldid"]
                              Case "fldpatientval", "fldencounterval"
                                If InStr(res[hField.Name], modBasic.$HospCode) = 0 Then
                                  res1[hField.Name] = res[hField.Name] & modBasic.$HospCode
                                Else
                                  res1[hField.Name] = res[hField.Name]
                                Endif
                              Case "flduserid"
                                If res[hField.Name] Then
                                  res1[hField.Name] = res[hField.Name] & "@" & modBasic.$HospCode
                                Else
                                  res1[hField.Name] = res[hField.Name]
                                Endif
                              Case "fldpic"
                                res1[hField.Name] = ""
                              Case "fldlink"
                                res1[hField.Name] = modBasic.$HospCode &/ xdirname &/ sTarget
                              Case Else
                                res1[hField.Name] = res[hField.Name]
                            End Select
                          Endif
                        Next

                        res1["fldrepodate"] = Now()
                        res1["fldrepomac"] = xmac
                        res1["fldhospcode"] = modBasic.$HospCode
                        Try res1.Update

                        res["fldxyz"] = True
                        res.Update
                        pp = pp + 1

                      Endif

                    Endif

                  Endif
                Endif
                If xdebug = True Then
                  modBasic.PrintErrorString("Data Transfer to " & sTable & " completed")
                Endif

              Next
            Endif

          Endif
        Next
      Next
    Endif

  Endif

End

''====================== PACS Repository ===============================
Public Sub UploadPACSToRepository(xHost As String, xModality As String)

  Dim xOption As Collection
  Dim xJson As Variant[]
  Dim xVar As Variant
  Dim xUid As String
  Dim encid As String

  modPACS.GetPacsSetting(xHost)
  ReadRemoteRepoConfig()
  xOption = New Collection
  If xModality Then
    ' xOption.Add(xModality, "Modality")
    xOption.Add(xModality, "ModalitiesInStudy")
  Endif
  xJson = modPACS.GetOrthancQueryJSON("Study", xOption)
  If xJson Then
    For Each xVar In xJson
      encid = xVar["PatientMainDicomTags"]["PatientID"]
      If modPatient.GetEncounterExist(modDatabase.$myConn, encid) = True Then

        xUid = xVar["ID"]
        If xUid Then
          UploadOrthancStudy(xUid)
          ' UploadOrthancStudyArchive(xUid)
        Endif

      Endif
    Next

    modBasic.PrintErrorString("DICOM Transfer completed")
  Endif

End

Public Sub UploadOrthancStudy(studyUID As String)

  Dim res As Result
  Dim res1 As Result
  Dim xdir As String
  Dim xfinal As String

  res = modDatabase.$myConn.Exec("select fldhash from tblpacsupload where fldhash=&1", studyUID)
  If res.Available = False Then
    xdir = File.Dir(Temp())
    xfinal = xdir &/ modString.GetNowString()
    modPACS.DicomStudyDownload(xdir, "Orthanc", "Orthanc", "", studyUID)
    modBasic.PrintErrorString("Downloading . . . Study ID: " & studyUID)
    If Exist(xdir &/ studyUID) Then
      modDevAll.GetZipExtract(xdir &/ studyUID, xfinal)
      If Exist(xfinal) Then
        modPACS.UploadDicomFolder($RepoPACSHost, $RepoPACSPort, xfinal, $RepoPACSUser, $RepoPACSPassword)
        res1 = modDatabase.$myConn.Create("tblpacsupload")
        res1["fldhash"] = studyUID
        res1["fldsave"] = True
        res1.Update
        modBasic.PrintErrorString("Uploaded completed. Study ID: " & studyUID)
      Endif
    Endif
  Endif

End

Public Sub UploadOrthancStudyArchive(studyUID As String)

  Dim res As Result
  Dim res1 As Result
  Dim xdir As String

  res = modDatabase.$myConn.Exec("select fldhash from tblpacsupload where fldhash=&1", studyUID)
  If res.Available = False Then
    xdir = File.Dir(Temp())
    modPACS.DicomStudyDownload(xdir, "Orthanc", "Orthanc", "", studyUID)
    modBasic.PrintErrorString("Downloading . . . Study ID: " & studyUID)
    If Exist(xdir &/ studyUID) Then
      modPACS.UploadDicomArchive($RepoPACSHost, $RepoPACSPort, xdir &/ studyUID, $RepoPACSUser, $RepoPACSPassword, "Disable")
      res1 = modDatabase.$myConn.Create("tblpacsupload")
      res1["fldhash"] = studyUID
      res1["fldsave"] = True
      res1.Update
      modBasic.PrintErrorString("Uploaded completed. Study ID: " & studyUID)
    Endif
  Endif

End

''---------------- Upload Log ---------------------
Public Sub InsertLogToRemoteServer()

  Dim xcoll As JSONCollection
  Dim xval As String

  ReadRemoteRepoConfig()
  If $RepoService = "http" Then
    xcoll = New JSONCollection
    xcoll.Add(GetMySQLDate(Now()), "fldtime")
    xcoll.Add(CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"], "fldhostmac")
    xcoll.Add(modHelpVariable.$MACAddress, "fldhostip")
    xcoll.Add(modHelpVariable.$SysMainHost, "fldhostname")
    xcoll.Add(CGI["HTTP_USER_AGENT"], "fldhostuser")
    xcoll.Add(modHelpVariable.$HospitalName, "fldhospname")
    xcoll.Add(modHelpVariable.$HospitalAddress, "fldhospadd")
    xcoll.Add(modSettings.ShowLogValues("LogIn/Default"), "flddepartment")
    xcoll.Add(modSettings.ShowLogValues("LogIn/User"), "fldappuser")
    xcoll.Add(Application.Name & "-" & Application.Version, "fldcategory")

    xval = HTTPPUTCollectionVal($RepoURL & "/" & "tblapplog", $RepoUser, $RepoPassword, xcoll)
    If xval Then
      If GetServerOutputValue(xval, $DataRepoPutResponse) > 0 Then
        modBasic.PrintErrorString("Log Inserted")
      Else
        modBasic.PrintErrorString("Error: " & xval)
      Endif
    Endif
  Endif

End
