' Gambas class file

Private $IMUUser As String
Private $IMUPass As String
Private $IMUURL As String
Private $IMUMessage As String

Private $sSerial As Long
Private $xLocation As Variant[]
Private $sYear As String

Private $PatName As String
Private $PatAge As Integer
Private $PatAgeUnit As String '' or integer
Private $PatEthnic As Integer
Private $PatSex As String
Private $PatProvince As Integer
Private $PatDistrict As Integer
Private $PatMunicipal As Integer
Private $PatWardNo As String
Private $PatContact As String
Private $PatOccupation As Integer
Private $PatRegdDate As String
Private $SampleID As String
Private $TestType As String
Private $Payment As String
Private $Specimen As String
Private $SampleDate As String
Private $Symptom As String
Private $LabRecvDate As String
Private $LabTestDate As String
Private $LabTestTime As String
Private $LabResult As String

Private $tblpatbilling As String
Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

Public Sub _new(sSerial As Long, LocationJson As Variant[], sYear As String)

  $sSerial = sSerial
  $xLocation = LocationJson
  $sYear = sYear
  $IMUUser = Trim(UnBase64(modSettings.ShowSettingFromFIle("IMUAPI/UserName")))
  $IMUPass = Trim(UnBase64(modSettings.ShowSettingFromFIle("IMUAPI/Password")))
  $IMUURL = Trim(modSettings.ShowSettingFromFIle("IMUAPI/URL"))
  $IMUMessage = ""
  LoadTableNames()
  ExecuteAPI()

End

Private Sub LoadTableNames()

  Dim res As Result

  If $sYear = "Current" Then
    $tblpatbilling = "tblpatbilling"
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatbilling,fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", $sYear, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif

End

Private Sub ExecuteAPI()

  Dim res As Result
  Dim res1 As Result
  Dim xdisc As Float
  Dim xdistrict As String
  Dim xmunicipal As String
  Dim xAgeStr As Integer[]
  Dim xethn As String

  Dim distSource As String
  Dim muniSource As String

  distSource = GetSettingHMISVal("CovidDemography", "District")
  muniSource = GetSettingHMISVal("CovidDemography", "Municipality")

  res = modDatabase.$myConn.Exec("select fldencounterval,fldtestid,fldgroupid,fldsampleid,fldsampletype,fldtime_sample,fldtime_report,fldreportquali from " & $tblpatlabtest & " where fldid=&1", $sSerial)                   ''
  If res.Available Then
    res1 = modDatabase.$myConn.Exec("select flddiscper from " & $tblpatbilling & " where fldid=&1", res["fldgroupid"])
    If res1.Available Then
      xdisc = res1["flddiscper"]
    Endif
    If distSource Then
      xdistrict = modPatPatho.GetDemographicValue(res["fldencounterval"], distSource)
    Else
      xdistrict = modPatient.GetPatDistrictByEnc(res["fldencounterval"])
    Endif
    If muniSource Then
      xmunicipal = modPatPatho.GetDemographicValue(res["fldencounterval"], muniSource)
    Else
      xmunicipal = modPatient.GetPatFirAddressByEnc(res["fldencounterval"])
    Endif
    xAgeStr = GetAgeStringIMU(modPatient.GetPatientBirthDay(res["fldencounterval"]))

    $PatName = modPatient.GetPatientFirstNameEnc(res["fldencounterval"]) & Space(1) & modPatient.GetPatientLastNameEnc(res["fldencounterval"])
    If xAgeStr Then
      $PatAge = xAgeStr[0]
      $PatAgeUnit = CStr(xAgeStr[1])  '' or integer
    Endif
    xethn = modPatient.GetPatientEthnicity(res["fldencounterval"])
    If xethn Then
      $PatEthnic = CInt(xethn)
    Else
      $PatEthnic = 0
    Endif
    $PatSex = PatientSex(modPatient.GetPatientSex(res["fldencounterval"]))
    $PatProvince = GetProvinceID(xdistrict)
    $PatDistrict = GetDistrictID(xdistrict)
    $PatMunicipal = GetMunicipalID(xmunicipal)
    $PatWardNo = modPatient.GetPatWardAddressByEnc(res["fldencounterval"])
    $PatContact = modPatient.GetPatientContactByEnc(res["fldencounterval"])
    $PatOccupation = 0
    $PatRegdDate = Format(modPatient.GetRecordDate(res["fldencounterval"]), "yyyy-mm-dd hh:nn:ss")
    $SampleID = res["fldsampleid"]
    $TestType = GetTestName(res["fldtestid"])
    $Payment = GetPaymentType(xdisc)
    $Specimen = GetTestSpecimen(res["fldsampletype"])
    $SampleDate = Format(res["fldtime_sample"], "yyyy-mm-dd")
    $Symptom = "0"
    $LabRecvDate = Format(res["fldtime_sample"], "yyyy-mm-dd")
    $LabTestDate = Format(res["fldtime_report"], "yyyy-mm-dd")
    $LabTestTime = Format(res["fldtime_report"], "hh:nn:ss")
    $LabResult = GetTestResult(res["fldreportquali"])
    If $PatMunicipal And If $PatDistrict Then
      If $PatName And If $TestType And If $LabResult Then
        UploadIMUDData()
      Else
        Message.Warning("Incomplete Data", ("OK"))
      Endif
    Else
      Message.Warning("District and/or Municipality incorrect", ("OK"))
    Endif
  Endif

End

Private Sub UploadIMUDData()

  Dim data As Collection
  Dim xfinal As Variant[]
  Dim xurl As String
  Dim xauth As String
  Dim xcontent As String
  Dim xcmd As String

  xfinal = New Variant[]
  data = New Collection
  data.Add($PatName, "name")
  data.Add($PatAge, "age")
  data.Add($PatAgeUnit, "age_unit")
  data.Add($PatSex, "sex")
  data.Add($PatEthnic, "caste")
  data.Add($PatProvince, "province_id")
  data.Add($PatDistrict, "district_id")
  data.Add($PatMunicipal, "municipality_id")
  data.Add($PatWardNo, "ward")
  data.Add("", "tole")
  data.Add($PatContact, "emergency_contact_one")
  data.Add($PatOccupation, "occupation")
  data.Add($PatRegdDate, "registered_at")
  data.Add($TestType, "service_for")
  data.Add($Payment, "service_type")
  data.Add($Specimen, "sample_type")
  data.Add($SampleDate, "sample_collected_date")
  data.Add($Symptom, "infection_type")
  data.Add($SampleID, "lab_id")
  data.Add($LabRecvDate, "lab_received_date")
  data.Add($LabTestDate, "lab_test_date")
  data.Add($LabTestTime, "lab_test_time")
  data.Add($LabResult, "lab_result")
  data.Add("", "imu_swab_id")
  data.Add("", "is_infected_covid_before")
  data.Add("", "is_received_vaccine")
  xfinal.Add(data)

  xurl = Trim($IMUURL)  ''"http://survey.aamakomaya.com/api/v1/ext/cases" ''
  xauth = $IMUUser & ":" & $IMUPass    ''"rc.app:rc"  ''
  xcontent = "Content-Type: application/json"

  xcmd = "curl -u " & xauth & "  --request POST " & xurl & " --data-raw '" & JSON.Encode(xfinal) & "'"
  modBasic.DebugAPIString("Execute " & Replace(xcmd, xauth, "***"))
  Shell xcmd To $IMUMessage
  modBasic.DebugAPIString("Response: " & $IMUMessage)

End

Public Function IMUOutput() As String

  Dim xx As String

  xx = $IMUMessage
  If xx Then
    Return xx
  Endif

End

''---------------- Functions ---------------
Private Function PatientSex(xsex As String) As String

  Dim xval As String

  If xsex = "Male" Then
    xval = "1"
  Else If xsex = "Female" Then
    xval = "2"
  Else If xsex = "Other" Then
    xval = "3"
  Else
    xval = ""
  Endif
  Return xval

End

Private Function GetProvinceID(sDistrict As String) As Integer

  Dim xval As String
  Dim xColl As Collection
  Dim distID As Integer

  For Each xColl In $xLocation
    If xColl["district_name"] = sDistrict Then
      xval = xColl["province_id"]
      Break
    Endif
  Next
  If xval Then
    distID = CInt(xval)
  Else
    distID = 0
    Message.Warning("Incorrect District", ("OK"))
  Endif
  Return distID

End

Private Function GetDistrictID(sDistrict As String) As Integer

  Dim xval As String
  Dim xColl As Collection
  Dim distID As Integer

  For Each xColl In $xLocation
    If xColl["district_name"] = sDistrict Then
      xval = xColl["district_id"]
      Break
    Endif
  Next
  If xval Then
    distID = CInt(xval)
  Else
    distID = 0
    Message.Warning("Incorrect District", ("OK"))
  Endif
  Return distID

End

Private Function GetMunicipalID(sMunicipal As String) As Integer

  Dim xval As Integer
  Dim xColl As Collection

  For Each xColl In $xLocation
    If xColl["municipality_name"] = sMunicipal Then
      xval = xColl["id"]
      Break
    Endif
  Next
  Return xval

End

Private Function GetAgeStringIMU(dtfir As Date) As Integer[]

  Dim dtnow As Date
  Dim xdiff As Integer
  Dim xval As Float
  Dim txtyear As Integer
  Dim xx As Integer[]

  xx = New Integer[]
  dtnow = Now()
  If dtfir And If dtnow Then
    xdiff = DateDiff(dtfir, dtnow, gb.Minute)
    If xdiff < (60 * 24) Then
      xval = xdiff / 60
      txtyear = Fix(xval)
      xx.Add(1)
      xx.Add(2)

    Else If xdiff >= (60 * 24) And If xdiff < 60 * 24 * 30 Then
      xval = xdiff / (60 * 24)
      txtyear = Fix(xval)
      xx.Add(txtyear)
      xx.Add(2)

    Else If xdiff >= (60 * 24 * 30) And If xdiff < (60 * 24 * 365) Then
      xval = xdiff / (60 * 24 * 30)
      txtyear = Fix(xval)
      xx.Add(txtyear)
      xx.Add(1)

    Else If xdiff >= (60 * 24 * 365) Then
      xval = xdiff / (60 * 24 * 365)
      txtyear = Fix(xval)
      xx.Add(txtyear)
      xx.Add(0)

    Endif
  Endif

  Return xx

End

Private Function GetPaymentType(xdisc As Float) As String

  Dim xval As String

  If xdisc = 100 Then
    xval = "2"
  Else
    xval = "1"
  Endif
  Return xval

End

Private Function GetTestName(sTestName As String) As String

  Dim xname As String
  Dim xval As String

  xname = GetSettingReturn("CovidTestName", ["PCR Swab Collection", "Anitgen Test"], sTestName)
  If xname = "PCR Swab Collection" Then
    xval = "1"
  Else If xname = "Anitgen Test" Then
    xval = "2"
  Else
    xval = ""
  Endif
  Return xval

End

Private Function GetTestSpecimen(sSpecimen As String) As String

  Dim xname As String
  Dim xval As String

  xname = GetSettingReturn("CovidSpecimen", ["Nasopharyngeal", "Oropharyngeal", "Both Types"], sSpecimen)
  If xname = "Nasopharyngeal" Then
    xval = "1"
  Else If xname = "Oropharyngeal" Then
    xval = "2"
  Else If xname = "Both Types" Then
    xval = "1, 2"
  Else
    xval = ""
  Endif
  Return xval

End

Private Function GetTestResult(sResult As String) As Integer

  Dim xname As String
  Dim xval As Integer

  xname = GetSettingReturn("CovidResult", ["Positive", "Negative"], sResult)
  If xname = "Positive" Then
    xval = 3
  Else If xname = "Negative" Then
    xval = 4
  Else
    xval = 0
  Endif
  Return xval

End

Private Function GetSettingReturn(sHead As String, sList As String[], aItem As String) As String

  Dim xDeptList As String[]
  Dim aType As String
  Dim xval As String

  For Each aType In sList
    xDeptList = modHMISReport.GetDBHMISettingList(sHead, aType)

    If xDeptList.Exist(aItem) = True Then
      xval = aType
      Break
    Endif

  Next

  Return xval

End

Private Function GetSettingHMISVal(sHead As String, aType As String) As String

  Dim xval As String

  xval = modHMISReport.GetDBHMISettingValue(sHead, aType)

  Return xval

End
