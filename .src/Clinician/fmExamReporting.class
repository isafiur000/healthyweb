' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $rData1 As Result
Private $aMyFields1 As String[]

Private $PatientNum As String
Private $sTatus As String
Private $UserRestrict As String[]

Private $billModeTest As String
Private $billModeRadio As String
Private $billModePharmacy As String
Private $billModeProcedure As String
Private $billModeEquipment As String
Private $billModeService As String
Private $billModeOthers As String

Public Sub _new(encid As String)

  Dim def As String

  If encid Then
    txtencid.Text = encid
  Endif

  ''PATIENT PROFILE
  cmbpatheightunit.List = ["cm", "inch", "foot"]
  $UserRestrict = modBasic.$ClinicDisableCompo
  If MMain.$SISHAppMode = "HIS" Then
    txtbedno.ReadOnly = True
  Endif

  def = modSettings.ShowSettingFromFIle("Examination/Format")
  If def Then
    If def = "Category" Then
      rbcateg.Value = True
    Else If def = "Group" Then
      rbgroup.Value = True
    Else If def = "Department" Then
      rbdepart.Value = True
    Endif
  Else
    rbdepart.Value = True
  Endif

  If txtencid.Text Then
    GetEncounterValue()
  Endif
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtencid.SetFocus
  Endif

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

''====================== PATIENT PROFILE =================================
Public Sub txtencid_Activate()

  GetEncounterValue()

End

Public Sub btnencidsearch_Click()

  If Not txtencid.Text Then
    txtencid.Text = PatSearch("Encounter")
  Endif

End

Public Sub mnusearmulti_Click()

  If Not txtencid.Text Then
    txtencid.Text = GetEncid()
  Endif

End

Public Sub btnwebcam_Click()

  If txtencid.Text Then
    GetEncounterValue()
  Else
    txtencid.Text = QRScanValue("")
  Endif

End

Private Sub GetEncounterValue()

  Dim res As Result
  Dim xallow As Boolean

  If Not txtpatientname.Text Then
    If Not txtencid.Text Then Return
    If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
      txtencid.SetFocus
      Return
    Endif

    ' If modPatientSub.LockEncounterDesk(Trim(txtencid.Text)) = False Then
    '   txtencid.Text = ""
    '   Message.Warning(("Encounter Locked"), ("OK"))
    '   ' Balloon.Delay = modBasic.$BalloonDelay
    '   txtencid.SetFocus
    ' Endif

    dtdob.Tag = ""
    If txtencid.Text Then
      If txtencid.Text = modBasic.$EncIdPrefix Then
      Else
        modSettings.SaveValuesToLog("LastValue/Encounter", Trim(txtencid.Text))
      Endif
      res = modDatabase.$myConn.Exec("select fldpatientval,flduserid from tblencounter where fldencounterval=&1", Trim(txtencid.Text))
      If res.Available = False Then
        modLinkDB.CheckEncDataRemote(Trim(txtencid.Text))
        txtencid.SetFocus
      Else
        If modBasic.$LockToOwnConsultant = "Yes" Then
          If res["flduserid"] = modBasic.$lbluser Then
            xallow = True
          Else
            xallow = False
          Endif
        Else
          xallow = True
        Endif
        If xallow = True Then
          txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
          If txtpatientname.Text Then
            txtgender.Text = modPatient.GetPatientSex(Trim(txtencid.Text))
            txtpatientaddress.Text = modPatient.GetPatientAddressByEnc(Trim(txtencid.Text))
            dtdob.Tag = modPatient.GetPatientBirthDay(Trim(txtencid.Text))
            modDateSub.GetAgeControlFromDate(dtdob.Tag, txtpatage, cmbpatageunit)

            $PatientNum = modPatient.GetPatientNoByEnc(Trim(txtencid.Text))
            $sTatus = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
            txtnow.Text = $sTatus
            txtbedno.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), $sTatus)
            txtpatdoa.Text = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(Trim(txtencid.Text)), gb.GeneralDate)
            txtpatweight.Value = modClinic.GetBodyWeight(Trim(txtencid.Text))
            btnconsult.Tag = modPatient.GetAttendingConsultant(Trim(txtencid.Text))
            btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
            modClinSub.GetPatientHeight(Trim(txtencid.Text), txtpatheight, cmbpatheightunit)
            modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
            Wait
            If modPatientSub.AllowEncIDHistory(Trim(txtencid.Text), modDatabase.$myConn) = True Then
              BlockDCButton()
              RestrictUserAccessPat()
              modImage.ShowPhotoSplash("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)))
              If rbcateg.Value = True Then
                rbcateg_Click()
              Else If rbgroup.Value = True Then
                rbgroup_Click()
              Else If rbdepart.Value = True Then
                rbdepart_Click()
              Endif
              BasicInfoPatient()
              txtencid.ReadOnly = True
              cmbexamname.SetFocus
            Else
              Me.Enabled = False
            Endif
          Else
            Message.Warning(("Encounter ID not found"), ("OK"))
            ' Balloon.Delay = modBasic.$BalloonDelay
            txtencid.SetFocus
          Endif
        Else
          Message.Warning("Not authorized", ("OK"))
        Endif
      Endif
    Endif
  Endif

End

Private Sub BlockDCButton()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  tlbtnaddheight.Enabled = xx
  tlbtnaddbed.Enabled = xx
  tlbtnadwt.Enabled = xx
  dtdob.Enabled = xx
  btnpic.Enabled = xx
  btnselectuser.Enabled = xx

End

Private Sub RestrictUserAccessPat()

  If $UserRestrict.Exist("Bed Assignment") Then
    tlbtnaddbed.Visible = False
  Endif
  If $UserRestrict.Exist("Body Weight") Then
    tlbtnadwt.Visible = False
  Endif
  If $UserRestrict.Exist("Body Height") Then
    tlbtnaddheight.Visible = False
  Endif

End

''------- Basic Parameters
Public Sub btnpic_Click()

  Dim hForm As FmPersonImage

  If txtencid.Text Then
    hForm = New FmPersonImage("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)), False)
    hForm.ShowModal
  Endif

End

Public Sub tlbtnaddheight_Click()

  If txtencid.Text Then
    If txtpatheight.Value Then
      If cmbpatheightunit.Text Then
        modClinSub.UpdatePatientHeight(Trim(txtencid.Text), txtpatheight.Value, cmbpatheightunit.Text)
        tlbtnaddheight.Enabled = False
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Public Sub tlbtnadwt_Click()

  If txtencid.Text Then
    If txtpatweight.Value Then
      modClinSub.AddGeneralParametersQuanti(Trim(txtencid.Text), "Body Weight", txtpatweight.Value)
      tlbtnadwt.Enabled = False
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub dtdob_Click()

  Dim dtdate As Date

  If txtencid.Text Then
    dtdate = GetDateValue("Date of Birth of " & txtpatientname.Text, "DOBirth", dtdob.Tag)
    If dtdate Then
      modPatientSub.UpdatePatDOB(Trim(txtencid.Text), dtdate)
      modDateSub.GetAgeControlFromDate(dtdate, txtpatage, cmbpatageunit)
      dtdob.Tag = dtdate
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
    Endif
  Endif

End

''------------Hospital related parameters
Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  If txtencid.Text Then
    xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$IPConsultUserList)
    If xMedUser And If xMedUser.Count Then
      btnconsult.Tag = xMedUser[0]
      btnconsult.Text = xMedUser[1]
    Else
      btnconsult.Tag = ""
      btnconsult.Text = ""
    Endif
    If btnconsult.Tag Then
      modPatientSub.UpdateAttendingConsultant(Trim(txtencid.Text), btnconsult.Tag)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub btnsms_Click()

  Dim xval As String

  If btnconsult.Tag Then
    xval = modDevice.SendSMSToInpatDoc(Trim(txtencid.Text), modGeneral.GetUserContact(btnconsult.Tag))
    If xval Then
      Message.Info(xval, ("OK"))
    Endif
  Endif

End

Public Sub tlbtnaddbed_Click()

  Dim xadmitId As String

  If txtencid.Text Then
    If txtnow.Text = "Admitted" Then
      txtbedno.Text = GetBedNumber(Trim(txtencid.Text))

    Else
      If modBasic.$WardAdmission = "Yes" Then
        If Message.Question(("Patient getting admitted. Are you sure?"), ("No"), ("Yes")) = 2 Then
          xadmitId = modPatientSub.GetPatientAdmission(Trim(txtencid.Text))
          txtnow.Text = "Admitted"
          txtbedno.Text = ""
          Me.Exec("Toastify({text: 'Patient Admitted', duration: 3000}).showToast()")
          ' Balloon.Delay = modBasic.$BalloonDelay
        Endif
      Endif

    Endif
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub tlbtnpayment_Click()

  If txtencid.Text Then
    modNonMedical.CurrentPayStatusMsg(Trim(txtencid.Text))
  Endif

End

Public Sub btnprofile_Click()

  Dim hForm As FmMinProfile

  hForm = New FmMinProfile(Trim(txtencid.Text))
  hForm.ShowModal()

End

''============================== MAIN FORM ================================
Public Sub mnulastenc_Click()

  txtencid.Text = modSettings.ShowLogValues("LastValue/Encounter")

End

Private Sub BasicInfoPatient()

  If txtencid.Text Then
    modRepository.$RepoDataStatus = False
    modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
    GetDefaultBillingmodes()
    ButtonControl()
  Endif

End

Private Sub GetDefaultBillingmodes()

  Dim xpackage As String

  Select $sTatus
    Case "Admitted", "Discharged", "LAMA", "Death", "Refer", "Absconder"
      $billModeTest = modNonMedical.GetAutoIPBillingPack("Test", Trim(txtencid.Text))
      $billModeRadio = modNonMedical.GetAutoIPBillingPack("Radio", Trim(txtencid.Text))
      $billModePharmacy = modNonMedical.GetAutoIPBillingPack("Pharmacy", Trim(txtencid.Text))
      $billModeEquipment = modNonMedical.GetAutoIPBillingPack("Equipment", Trim(txtencid.Text))
      $billModeProcedure = modNonMedical.GetAutoIPBillingPack("Procedure", Trim(txtencid.Text))
      $billModeService = modNonMedical.GetAutoIPBillingPack("Service", Trim(txtencid.Text))
      $billModeOthers = modNonMedical.GetAutoIPBillingPack("Others", Trim(txtencid.Text))
    Case Else
      xpackage = modNonMedical.DefaultBillingScheme(Trim(txtencid.Text), modBasic.$compID)
      $billModeTest = xpackage
      $billModeRadio = xpackage
      $billModePharmacy = xpackage
      $billModeEquipment = xpackage
      $billModeProcedure = xpackage
      $billModeService = xpackage
      $billModeOthers = xpackage
  End Select

End

Private Sub ButtonControl()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  TreeView1.Enabled = xx
  GridView1.Enabled = xx
  If $UserRestrict Then
    UserAccessRestrict()
  Endif

End

Private Sub UserAccessRestrict()

  If $UserRestrict.Exist("Bed Assignment") Then
    tlbtnaddbed.Enabled = False
  Endif
  If $UserRestrict.Exist("Body Weight") Then
    tlbtnadwt.Enabled = False
  Endif
  If $UserRestrict.Exist("Body Height") Then
    tlbtnaddheight.Enabled = False
  Endif
  If $UserRestrict.Exist("Complete Examination") Then
    TreeView1.Enabled = False
    GridView1.Enabled = False
  Endif

End

Public Sub btnblankform_Click()

End

''----------------------------------------- Exam list ---------------------------------------------------
Public Sub rbcateg_Click()

  cmbexamname.Text = ""
  modSettings.SaveSettingsToFile("Examination/Format", "Category")
  cmbexamname.List = GetExamCategoryAll()

End

Public Sub rbgroup_Click()

  cmbexamname.Text = ""
  modSettings.SaveSettingsToFile("Examination/Format", "Group")
  cmbexamname.List = GetExamCategoryAll()

End

Public Sub rbdepart_Click()

  cmbexamname.Text = ""
  modSettings.SaveSettingsToFile("Examination/Format", "Department")
  cmbexamname.List = GetExamCategoryAll()

End

Private Function GetExamCategoryAll() As String[]

  Dim xxx As String[]

  If rbcateg.Value = True Then
    xxx = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldcategory) as col from tblexam where fldstatus=&1", "Active"))
  Else If rbgroup.Value = True Then
    xxx = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldgroupname) as col from tblgroupexam where fldcomp=&1 or fldcomp=&2", modBasic.$compID, "%"))
  Else If rbdepart.Value = True Then
    xxx = ["Triage Examinations", "Essential Examinations", "Physician Examinations", "Nursing Examinations", "Discharge Examinations"]
  Endif

  Return xxx

End

Public Sub btnshowexam_Click()

  If cmbexamname.Text Then
    ShowOrderTree()
    FillLabtable(cmbexamname.Text)
  Endif

End

Private Sub ShowOrderTree()

  If cmbexamname.Text Then
    If rbcateg.Value = True Then
      $rData1 = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption,fldsysconst from tblexam where fldcategory=&1 and fldstatus=&2", cmbexamname.Text, "Active")
    Else If rbgroup.Value = True Then
      $rData1 = modDatabase.$myConn.Exec("select tblgroupexam.fldexamid as fldexamid,tblexam.fldtype as fldtype,tblexam.fldoption as fldoption,tblexam.fldsysconst as fldsysconst from tblgroupexam inner join tblexam on tblgroupexam.fldexamid=tblexam.fldexamid where tblgroupexam.fldgroupname=&1 and (tblgroupexam.fldcomp=&2 or tblgroupexam.fldcomp=&3)", cmbexamname.Text, modBasic.$compID, "%")                      '
    Else If rbdepart.Value = True Then
      $rData1 = modDatabase.$myConn.Exec("select tblcompexam.fldexamid as fldexamid,tblexam.fldtype as fldtype,tblexam.fldoption as fldoption,tblexam.fldsysconst as fldsysconst from tblcompexam inner join tblexam on tblcompexam.fldexamid=tblexam.fldexamid where tblcompexam.fldcategory=&1 and (tblcompexam.fldcomp=&2 or tblcompexam.fldcomp=&3)", cmbexamname.Text, modBasic.$compID, "%")                      '
    Endif
    $aMyFields1 = New String[]
    modGridView.ReadSmallData(TreeView1, $rData1, $aMyFields1)

    With TreeView1
      .Columns[0].Expand = True
      .Columns[1].Hidden = True
      .Columns[2].Hidden = True
      .Columns[3].Hidden = True

      .Columns[0].Text = "Test Name"
    End With

  Endif

End

Public Sub TreeView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData1[$aMyFields1[Column]]

End

Public Sub TreeView1_Select()

  If TreeView1.Selection.Count Then
    $rData1.MoveTo(TreeView1.Selection[0])
    If cmbexamname.Text Then
      modExamOption.AddExamSelection(Trim(txtencid.Text), $rData1["fldexamid"], $rData1["fldtype"], $rData1["fldoption"], $rData1["fldsysconst"], cmbexamname.Text)
      FillLabtable(cmbexamname.Text)
    Endif
  Endif

End

''---------------------------------------- Patient data -----------------------------------------------------
Public Sub FillLabtable(sParam As String)

  If chkallexam.Value = True Then
    $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldid,fldtime,fldencounterval,fldrepquali,flduserid,fldcomp from tblpatientexam where fldencounterval=&1 and fldsave=&2", Trim(txtencid.Text), True)
  Else If chkallexam.Value = False
    $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldid,fldtime,fldencounterval,fldrepquali,flduserid,fldcomp from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldsave=&3", Trim(txtencid.Text), sParam, True)                                  ''
  Endif

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Expand = True
    .Columns[1].Expand = True
    .Columns[2].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Expand = True
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Expand = True
    .Columns[8].Expand = True
    .Columns[9].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    .Columns[2].Text = "Examination"
    .Columns[4].Text = "Observation"
    .Columns[6].Text = "ReportTime"
    .Columns[9].Text = "UserID"
    .Columns[10].Text = "Location"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData[$aMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rData["fldid"], False)
  Else If Column = 6 Then
    Data.Text = modReportVar.GetDateTimeReport($rData["fldtime"], gb.GeneralDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btnpreedit_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If cmbexamname.Text Then
      modExamOption.UpdateExamSelection($rData["fldid"], $rData["fldencounterval"], $rData["fldtype"], $rData["fldhead"], $rData["fldrepquali"])
      FillLabtable(cmbexamname.Text)
    Endif
  Endif

End

Public Sub btnpreflag_Click()

  Dim xx As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If cmbexamname.Text Then
      xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rData["fldabnormal"]), True)
      If xx Then
        modClinSub.UpdateExamFlag($rData["fldid"], xx)
        FillLabtable(cmbexamname.Text)
      Endif
    Endif
  Endif

End

Public Sub mnuimage_Click()

  Dim hForm As FmTestImage

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmTestImage("IMAGE", Trim(txtencid.Text), $rData["fldid"], $rData["fldhead"], "Examination", "")
    hForm.ShowModal
  Endif

End

Public Sub btnpredel_Click()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If chkallexam.Value = False Then
      If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
        res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rData["fldid"])
        If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
          res["fldsave"] = False
          res["flduserid"] = modBasic.$lbluser
          res.Update
          If cmbexamname.Text Then
            FillLabtable(cmbexamname.Text)
          Endif
        Else
          Message.Warning("Authorization with " & res["flduserid"], ("OK"))
        Endif
      Endif
    Endif
  Endif

End

Public Sub btnfullrep_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "EXAMINATION", txtpatientname.Text & "(" & txtencid.Text & ")")

End

Public Sub btnrefresh_Click()

  If cmbexamname.Text Then
    FillLabtable(cmbexamname.Text)
  Endif

End

Public Sub btnrepo_Click()

  Dim xPath As String

  If txtencid.Text Then
    If cmbexamname.Text Then
      xPath = modCHTMLPatient.ShowPatientExaminationReportAll(Trim(txtencid.Text), cmbexamname.Text)
    Endif
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

''--------------- Menu ----------------
Public Sub mnuexam_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatientExaminationgReport(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuradio_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatRadioReportbyEncID(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnudiagno_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatientLaboratoryReport(Trim(txtencid.Text), MMain.$defUnit)
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnudrugdosing_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowNursingDosing(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnucompreport_Click()

  If txtencid.Text Then
    modPatReports.GetSelectedPatientValues(Trim(txtencid.Text), MMain.$defUnit)
  Endif

End

''---------------- Forms --------------------
Public Sub btnpacs_Click()

  Dim hForm As FmPacsFind

  If txtencid.Text Then
    hForm = New FmPacsFind(Trim(txtencid.Text), "Visit")
    hForm.ShowModal
  Endif

End

Public Sub btnlabs_Click()

  Dim hForm As FmTestList

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Test") = True Then
      hForm = New FmTestList(Trim(txtencid.Text), $billModeTest)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnpharm_Click()

  Dim hForm As FmMedOrder

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Pharmacy") = True Then
      hForm = New FmMedOrder(Trim(txtencid.Text), $sTatus, $billModePharmacy)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnradio_Click()

  Dim hForm As FmRadioList

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Radio") = True Then
      hForm = New FmRadioList(Trim(txtencid.Text), $billModeRadio)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btngenservice_Click()

  Dim hForm As FmMiniService

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Service") = True Then
      hForm = New FmMiniService(Trim(txtencid.Text), $billModeService, $billModeProcedure, $billModeOthers)
      hForm.ShowModal
    Endif
  Endif

End
