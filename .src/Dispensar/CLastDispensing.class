' Gambas class file

Private xmedicine As String
Private $PatientNum As String
Private $xNHISCode As String
Private sPackage As String

Private xLastDate As Date
Private xLastQty As Float
Private xLastDays As Integer

Public Sub _new(xitem As String, xPatientNum As String, xPatientCode As String, xPackage As String)

  xmedicine = xitem
  $PatientNum = xPatientNum
  $xNHISCode = xPatientCode
  sPackage = xPackage

  CalculateValues()

End

Private Sub CalculateValues()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result

  If modBasic.$SalesHistoryAlert Then
    res = modDatabase.$myConn.Limit(2).Exec("select fldtime,flddays,(fldqtydisp-fldqtyret) as qty from tblpatdosing where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and flditem in(select fldbrandid from tblmedbrand where flddrug=&2) and fldsave_order=&3 and flddisctype like &4 and fldtime IS NOT NULL and fldqtydisp>fldqtyret ORDER BY fldtime DESC", $PatientNum, modMedConstant.GetDrugFromStockID(xmedicine), True, sPackage)
    If res.Available Then
      res.MoveFirst
      Select modBasic.$SalesHistoryAlert
        Case "Patient No", "Patient Code", "Data Repo"
          xLastDate = res["fldtime"]
          xLastQty = res["qty"]
          If res["flddays"] Then
            xLastDays = res["flddays"]
          Else
            xLastDays = 0
          Endif
      End Select

    Else
      Select modBasic.$SalesHistoryAlert
        Case "Patient Code", "Data Repo"
          If $xNHISCode Then
            res1 = modDatabase.$myConn.Limit(2).Exec("select fldtime,flddays,(fldqtydisp-fldqtyret) as qty from tblpatdosing where fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptcode=&1)) and flditem in(select fldbrandid from tblmedbrand where flddrug=&2) and fldsave_order=&3 and flddisctype like &4 and fldtime IS NOT NULL and fldqtydisp>fldqtyret ORDER BY fldtime DESC", $xNHISCode, modMedConstant.GetDrugFromStockID(xmedicine), True, sPackage)
            If res1.Available Then
              res1.MoveFirst
              xLastDate = res1["fldtime"]
              xLastQty = res1["qty"]
              If res1["flddays"] Then
                xLastDays = res1["flddays"]
              Else
                xLastDays = 0
              Endif
            Endif
          Endif
      End Select

    Endif

    If Not xLastDate Then
      If modBasic.$SalesHistoryAlert = "Data Repo" Then
        If modDatabase.$repoConn.Opened = True Then

          res2 = modDatabase.$repoConn.Limit(2).Exec("select fldtime,flddays,(fldqtydisp-fldqtyret) as qty from tblpatdosing where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and flditem in(select fldbrandid from tblmedbrand where flddrug=&2) and fldsave_order=&3 and flddisctype like &4 and fldtime IS NOT NULL and fldqtydisp>fldqtyret ORDER BY fldtime DESC", $PatientNum, modMedConstant.GetDrugFromStockID(xmedicine), True, sPackage)
          If res2.Available Then
            res2.MoveFirst
            xLastDate = res2["fldtime"]
            xLastQty = res2["qty"]
            If res2["flddays"] Then
              xLastDays = res2["flddays"]
            Else
              xLastDays = 0
            Endif
          Endif

        Endif
      Endif
    Endif

  Endif

End

Public Function GetLastDate() As Date

  Return xLastDate

End

Public Function GetLastQty() As Float

  Return xLastQty

End

Public Function GetLastDays() As Integer

  Return xLastDays

End
