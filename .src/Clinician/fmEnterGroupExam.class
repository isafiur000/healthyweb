' Gambas class file

''controls
Private aWebRowAll As New Object[50]
Private aWideRowAll As New Object[50]
Private aWebFrame As New Object[50]
Private aWebPanel As New Object[50]
Private aIndexLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aHTMLText As New Object[50]
Private aLineText As New Object[50]
Private aValueBox As New Object[50]
Private aUnitText As New Object[50]
Private aNullCheck As New Object[50]
Private aQuantiBox As New Object[50]
Private sButtonPlus As New Object[50]
Private sButtonMinus As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aQuantiUnit As New Object[50]
Private aClinBox As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aTextArea As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGridView As New Object[50]
Private aListBox As New Object[50]
Private aGenTextArea As New Object[50]
Private aCalcBox As New Object[50]
Private aCalcUnit As New Object[50]
Private aCalcNull As New Object[50]
Private aButtonBox As New Object[50]
Private aHelpButton As New Object[50]
Private aWebSpace As New Object[50]

Private aWebBottom As New Object[50]
Private aValSlider As New Object[50]

''other variables
Private $encid As String
Private $sTable As String
Private $sType As String
Private $idList As String[]
''Arrays
Private $xType As String[]
Private $xOption As String[]
Private $xitem As String[]
Private $xOpList As String[]
Private $xSysCons As String[]
Private $xCritVal As Float[]

Private AppFactor As Float
' Private $ItemList As String[]
' Private $ItemListFlag As String[]
Private $compPhysiExamVar As Variant[]

Private $enableControl As Boolean
Private $viewSlider As Boolean

''----------------------------------------- create controls -----------------------------------------
Public Sub _new(encid As String, sTable As String, sType As String)

  Dim xoption As String

  $encid = encid
  $sTable = sTable
  $sType = sType
  modGeneralMain.GetOpenModalForm(Me)

  If $sType = "Group" Then
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldgroupname) as col from tblgroupexam where fldcomp=&1 or fldcomp=&2", modBasic.$compID, "%"))                           ''
  Else If $sType = "Scales" Then
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldcategory) as col from tblexam where fldoption=&1", "Clinical Scale"))
  Else If $sType = "All" Then
    $compPhysiExamVar = GetPhysicianExamVariant()
    cmbcategory.List = modString.GetListFromVariant($compPhysiExamVar, "fldgroupname", True)
    ' $ItemList = modBasic.$ClinFindingCompGrouped
    ' $ItemListFlag = modBasic.$ClinFindingCompFlag
    ' GetItemListData()
  Endif

  xoption = modSettings.ShowSettingFromFIle("EntrySetting/AutoDisplayOptions")
  If xoption = "Yes" Then
    chkautoption.Value = True
  Else If xoption = "No" Then
    chkautoption.Value = False
  Endif
  If cmbcategory.List.Exist("Flagged") = True Then
    cmbcategory.Text = "Flagged"
  Else
    If cmbcategory.List.Count = 1 Then
      cmbcategory.Text = cmbcategory.List[0]
    Endif
  Endif

  AppFactor = 1.25
  If modBasic.$ClinSliderValue = "Enable" Then
    $viewSlider = True
  Else
    $viewSlider = False
  Endif

End

Private Function GetPhysicianExamVariant() As Variant[]

  Dim sColl As Collection
  Dim aVar As Variant[]

  aVar = New Variant[]
  For Each sColl In modFixPatho.$ExaminationCompVar
    If sColl["fldcategory"] = "Physician Examinations" Then
      aVar.Add(sColl)
    Endif
  Next

  Return aVar

End

Public Sub btnshowall_Click()

  GetSelectedRow()

End

Private Sub GetSelectedRow()

  ' ' lblitem.Text = ListBox1.Text
  If cmbcategory.Text Then
    Try $idList.Clear()
    Frame1.DeleteChildren()

    If $sType = "Group" Then
      $idList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldexamid from tblgroupexam where fldgroupname=&1", cmbcategory.Text))
    Else If $sType = "Scales" Then
      $idList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldexamid from tblexam where fldcategory=&1 and fldoption=&2", cmbcategory.Text, "Clinical Scale"))
    Else If $sType = "All" Then
      $idList = modString.GetListFromCompareVariant($compPhysiExamVar, "fldexamid", "fldgroupname", cmbcategory.Text, True)
      ' $idList = GetListExams()
    Endif

    If $idList.Count Then
      LoadFormData()
    Endif

  Endif

End

Private Sub LoadFormData()

  Dim idx As String
  Dim i As Integer
  Dim res As Result
  Dim sColl As Collection

  Dim xType As String
  Dim xOption As String
  Dim xitem As String
  Dim xopList As String[]
  Dim xSysCons As String
  Dim xcritval As Float

  $xType = New String[]
  $xOption = New String[]
  $xitem = New String[]
  $xOpList = New String[]
  $xSysCons = New String[]
  $xCritVal = New Float[]

  For Each idx In $idList
    If $sType = "All" Then
      For Each sColl In $compPhysiExamVar
        If sColl["fldexamid"] = idx And If sColl["fldgroupname"] = cmbcategory.Text Then
          xitem = sColl["fldexamid"]
          xSysCons = sColl["fldsysconst"]
          xType = sColl["fldtype"]
          xOption = sColl["fldtanswertype"]
          Break
        Endif
      Next
      If xType = "Sys Constant" Then
        res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption,fldsysconst,fldcritical from tblexam where fldsysconst=&1", xSysCons)
        If res.Available Then
          res.MoveFirst
          xType = res["fldtype"]
          xOption = res["fldoption"]
          If res["fldoption"] = "Clinical Scale" Then
            xopList = modAllExam.GetCLinicalScaleOptions("Exam", xitem)
          Else
            xopList = modAllExam.SelectExamOptionList("Exam", xitem)
          Endif
          If res["fldcritical"] Then
            xcritval = res["fldcritical"]
          Endif
        Endif
      Endif

    Else
      res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption,fldsysconst,fldcritical from tblexam where fldexamid=&1", idx)
      If res.Available Then
        xitem = res["fldexamid"]
        xSysCons = res["fldsysconst"]
        xType = res["fldtype"]
        xOption = res["fldoption"]
        If res["fldoption"] = "Clinical Scale" Then
          xopList = modAllExam.GetCLinicalScaleOptions("Exam", xitem)
        Else
          xopList = modAllExam.SelectExamOptionList("Exam", xitem)
        Endif
        If res["fldcritical"] Then
          xcritval = res["fldcritical"]
        Endif
      Endif

    Endif

    $xitem.Add(xitem)
    If xType Then
      $xType.Add(xType)
    Else
      $xType.Add("__")
    Endif
    If xOption Then
      $xOption.Add(xOption)
    Else
      $xOption.Add("__")
    Endif
    If xopList And If xopList.Count Then
      $xOpList.Add(xopList.Join(";"))
    Else
      $xOpList.Add("__")
    Endif
    If xSysCons Then
      $xSysCons.Add(xSysCons)
    Else
      $xSysCons.Add("__")
    Endif
    If xcritval Then
      $xCritVal.Add(xcritval)
    Else
      $xCritVal.Add(0)
    Endif
  Next

  For i = 0 To $xitem.Count - 1
    If i < 49 Then

      aWebRowAll[i] = New WebContainer(Frame1)

      ''Create controls
      aWebFrame[i] = New WebContainer(aWebRowAll[i])
      aIndexLabel[i] = New WebLabel(aWebFrame[i])
      aNameLabel[i] = New WebHtml(aWebFrame[i])

      If $xType[i] = "Quantitative" Then
        aWebPanel[i] = New WebContainer(aWebRowAll[i])
        aAbnormCheck[i] = New WebCheckBox(aWebPanel[i])

        aQuantiBox[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroup"
        sButtonPlus[i] = New WebButton(aWebPanel[i]) As "PlusGroup"
        sButtonMinus[i] = New WebButton(aWebPanel[i]) As "MinusGroup"
        aQuantiUnit[i] = New WebLabel(aWebPanel[i])
        aQuantiMin[i] = New WebValueBox(aWebPanel[i])
        aQuantiMax[i] = New WebValueBox(aWebPanel[i])
        aHelpButton[i] = New WebButton(aWebPanel[i]) As "ButtonBoxgroup"
        aWideRowAll[i] = New WebContainer(Frame1)
        aWebBottom[i] = New WebContainer(Frame1)
        aValSlider[i] = New WebSlider(aWebBottom[i]) As "SliderGroup"
      Else
        Select $xOption[i]
          Case "Sys Constant", "Multiple Selection", "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale"
            aWebPanel[i] = New WebContainer(aWebRowAll[i])
            aAbnormCheck[i] = New WebCheckBox(aWebPanel[i])
            Select $xOption[i]
              Case "Sys Constant"
                aGenTextArea[i] = New WebTextArea(aWebPanel[i])
              Case "Multiple Selection"
                aListBox[i] = New WebListBox(aWebPanel[i])
              Case "Date Time", "BS Date"
                aDateBox[i] = New WebDateBox(aWebPanel[i])
                aBSDate[i] = New WebButton(aWebPanel[i]) As "BSButton"
              Case "Single Selection"
                aComboBox[i] = New WebComboBox(aWebPanel[i])
              Case "Dichotomous"
                aDichoValue[i] = New DichotomousValue(aWebPanel[i])
              Case "Quantitative"
                aValueBox[i] = New WebValueBox(aWebPanel[i])
                aUnitText[i] = New WebTextBox(aWebPanel[i])
                aNullCheck[i] = New WebCheckBox(aWebPanel[i]) As "NullCheckBox"
              Case "Qualitative"
                aLineText[i] = New WebTextBox(aWebPanel[i])
              Case "Clinical Scale"
                aTextArea[i] = New WebTextArea(aWebPanel[i])
                aClinBox[i] = New WebValueBox(aWebPanel[i])
              Case "ImageValue"
                aButtonBox[i] = New WebButtonBox(aWebPanel[i]) As "ImageBoxGroup"
              Case "Calculated"
                aCalcBox[i] = New WebValueBox(aWebPanel[i]) As "CalcGroup"
                aCalcUnit[i] = New WebTextBox(aWebPanel[i]) As "CalcUnitGroup"
                aCalcNull[i] = New WebCheckBox(aWebPanel[i]) As "CalcCheckBox"
            End Select
            aHelpButton[i] = New WebButton(aWebPanel[i]) As "ButtonBoxgroup"
            aWideRowAll[i] = New WebContainer(Frame1)

          Case Else
            aWebPanel[i] = New WebContainer(aWebRowAll[i])
            aWideRowAll[i] = New WebContainer(Frame1)
            aAbnormCheck[i] = New WebCheckBox(aWideRowAll[i])
            Select $xOption[i]
              Case "Text Table"
                aGridView[i] = New WebTable(aWideRowAll[i])
              Case "Left and Right"
                aLeftRight[i] = New LeftRightTextArea(aWideRowAll[i])
              Case "RichText Area"
                aHTMLText[i] = New WebTextHTML(aWideRowAll[i])
              Case Else
                aGenTextArea[i] = New WebTextArea(aWideRowAll[i])
            End Select
            aHelpButton[i] = New WebButton(aWideRowAll[i]) As "ButtonBoxgroup"
        End Select
      Endif

      aWebSpace[i] = New WebSeparator(Frame1)
    Endif
  Next
  $enableControl = False
  DIsplayTextForm()
  $enableControl = True

End

Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim xlimit As Float[]
  Dim asx As String[]
  Dim xcrit As Float
  Dim aCrlower As Float
  Dim aCrupper As Float

  For i = 0 To $xitem.Count - 1
    If i < 49 Then

      If $xType[i] = "Quantitative" Then
        With aWebRowAll[i]
          .Arrangement = Arrange.Row
        End With
        With aWideRowAll[i]
          .Visible = False
        End With
      Else
        Select $xOption[i]
          Case "Sys Constant", "Multiple Selection", "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale", "Calculated", "ImageValue"
            With aWebRowAll[i]
              .Arrangement = Arrange.Row
            End With
            With aWideRowAll[i]
              .Visible = False
            End With
          Case Else
            With aWebRowAll[i]
              .Arrangement = Arrange.Horizontal
            End With
            With aWideRowAll[i]
              .Arrangement = Arrange.Horizontal
            End With
        End Select
      Endif

      With aWebFrame[i]
        .Arrangement = Arrange.Horizontal
        .Class = "size-tablet less-container-margin"
      End With

      ''create index label
      With aIndexLabel[i]
        .Width = "10%"
        .Height = "2em"
        .Text = i + 1
        .Visible = False
        .Tag = i
      End With
      ''create Name Label
      With aNameLabel[i]
        .Expand = True
        .Font = "bold"
        .Text = "<p>" & $xitem[i] & "</p>"
        .Tag = i
      End With

      If $xType[i] = "Quantitative" Then
        With aWebPanel[i]
          .Arrangement = Arrange.Horizontal
          .Class = "size-tablet less-container-margin"
        End With
      Else
        Select $xOption[i]
          Case "Sys Constant", "Multiple Selection", "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale", "Calculated", "ImageValue"
            With aWebPanel[i]
              .Arrangement = Arrange.Horizontal
              .Class = "size-tablet less-container-margin"
            End With
          Case Else
            With aWebPanel[i]
              .Visible = False
            End With
        End Select
      Endif

      If $xType[i] = "Quantitative" Then
        xlimit = modClinic.GetBothQuantiExamVal($xitem[i], $encid)
        xcrit = $xCritVal[i]
        If xcrit Then
          aCrlower = xlimit[0] - xcrit * (xlimit[1] - xlimit[0])
          aCrupper = xlimit[1] + xcrit * (xlimit[1] - xlimit[0])
          If aCrupper = 0 Then
            aCrupper = 500
          Endif
        Else
          aCrlower = 0
          aCrupper = 500
        Endif
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .Width = "6em"
          .Height = "2em"
          .Text = "Flag"
          .Enabled = False
          .Tag = i

          If modBasic.$ClinFlagAbnormExam = "Disable" Then
            .Visible = False
          Else
            .Visible = True
          Endif
        End With

        ''create observation entry
        With aQuantiBox[i]
          .Width = "5em"
          .Height = "2em"
          .Tag = i
        End With
        With sButtonPlus[i]
          .Class = "transparent-control"
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/add"
          .Tag = i
        End With
        With sButtonMinus[i]
          .Class = "transparent-control"
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/remove"
          .Tag = i
        End With
        With aQuantiUnit[i]
          .Height = "2em"
          .Border = True
          .Expand = True
          .Text = ""
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .Width = "4em"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .Width = "4em"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With

        With aWebBottom[i]
          .Arrangement = Arrange.Horizontal
          .Class = "less-container-margin"
          .Visible = $viewSlider
        End With

        With aValSlider[i]
          .Expand = True
          .Height = "1em"
          .Tag = i
        End With
        aValSlider[i].MinValue = aCrlower
        aValSlider[i].MaxValue = aCrupper

      Else
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .Width = "6em"
          .Height = "2em"
          .Text = "Flag"
          .Tag = i

          If modBasic.$ClinFlagAbnormExam = "Disable" Then
            .Visible = False
          Else
            .Visible = True
          Endif
        End With

        ''create observation entry
        If $xOption[i] = "Multiple Selection" Then
          With aListBox[i]
            .Width = "75%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Mode = Select.Multiple
            ' .ScrollBar = Scroll.Both
            .Tag = i
          End With

        Else If $xOption[i] = "Single Selection" Then
          With aComboBox[i]
            .Width = "75%"
            .Height = "2em"
            .ReadOnly = False
            .List = Split($xOpList[i], ";")
            .Tag = i
          End With

        Else If $xOption[i] = "Dichotomous" Then
          With aDichoValue[i]
            .Width = "75%"
            .Height = "2em"
            .List = Split($xOpList[i], ";")
            .Tag = i
          End With

        Else If $xOption[i] = "Date Time" Then
          With aDateBox[i]
            .Width = "65%"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "10%"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $xOption[i] = "BS Date" Then
          With aDateBox[i]
            .Width = "65%"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "10%"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $xOption[i] = "Clinical Scale" Then
          With aTextArea[i]
            .Width = "55%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With
          With aClinBox[i]
            .Width = "20%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "Quantitative" Then
          With aValueBox[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
          End With
          With aUnitText[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
          End With
          With aNullCheck[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            .Value = False
            .Text = "Null"
          End With

        Else If $xOption[i] = "ImageValue" Then
          With aButtonBox[i]
            .Expand = True
            .Height = "2em"
            .Border = True
            .Text = ""
            .Tag = i
          End With

        Else If $xOption[i] = "Calculated" Then
          If $xSysCons[i] Then
            asx = modString.SplitValueText($xSysCons[i])
          Else
            asx = ["", ""]
          Endif
          With aCalcBox[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            If asx[0] Then
              .Value = CFloat(asx[0])
            Endif
          End With
          With aCalcUnit[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            .Text = asx[1]
          End With
          With aCalcNull[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            .Value = False
            .Text = "Null"
          End With

        Else If $xOption[i] = "Qualitative" Then
          With aLineText[i]
            .Width = "75%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "Text Table" Then
          ' DisplayAgegrid(Split($xOpList[i], ";"), "", aGridView[i])
          With aGridView[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 4) & "em"
            .Mode = Select.Multiple
            .Tag = i
          End With

        Else If $xOption[i] = "Left and Right" Then
          With aLeftRight[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 4) & "em"
            .Tag = i
          End With

        Else If $xOption[i] = "RichText Area" Then
          With aHTMLText[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 4) & "em"
            ' .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Else
          With aGenTextArea[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 2) & "em"
            .Wrap = True
            .Tag = i
          End With

        Endif
      Endif

      ''create help button
      With aHelpButton[i]
        .Class = "toolButton"
        .Width = "2em" ''5 * AppFactor
        .Height = "2em"
        .Text = ""
        .image = "icon:/small/info"
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With

      With aWebSpace[i]
        .Height = "1em"
      End With

    Endif
  Next

End

Public Sub PlusGroup_Click()

  Dim i As Integer

  i = Last.Tag
  aQuantiBox[i].Value = aQuantiBox[i].Value + 1

End

Public Sub MinusGroup_Click()

  Dim i As Integer

  i = Last.Tag
  aQuantiBox[i].Value = aQuantiBox[i].Value - 1

End

Public Sub BSButton_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBox[j].Value))
  If xx Then
    aDateBox[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub chkautoption_Click()

  modSettings.EnterCheckSetting(chkautoption, "EntrySetting/AutoDisplayOptions")

End

Public Sub btnrefresh_Click()

  If cmbcategory.Text Then
    modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
    Frame1.DeleteChildren()
    LoadFormData()
  Endif

End

Private Function GetCalculateValue(sLine As String) As Float

  Dim i As Integer
  Dim xval As Float

  If sLine Then
    For i = 0 To $xitem.Count - 1
      If aValueBox[i] Then
        If (String.InStr(sLine, $xitem[i]) > 0) Then                                   ''
          sLine = Replace(sLine, "{" & $xitem[i] & "}", CStr(aValueBox[i].Value))
        Endif
      Endif
    Next
    If (String.InStr(sLine, "$Calc[") > 0) Then
      sLine = modReportVar.GetReportCalculation(sLine)
    Endif
    xval = CFloat(sLine)

  Else
    xval = 0
  Endif

  Return xval

End

Public Sub ImageBoxGroup_Click()

End

Public Sub btnBrChange_Click()

  Me.Close()

End

Public Sub btnBrOK_Click()

  FillGenExams($sTable)
  btnBrOK.Enabled = False
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub SliderGroup_Change()

  Dim j As Integer

  j = Last.Tag
  If aQuantiBox[j] Then
    If $enableControl = True Then
      aQuantiBox[j].Value = aValSlider[j].Value
    Endif
  Endif

End

Public Sub QuantiGroup_Change()

  Dim j As Integer

  j = Last.Tag

  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif

  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Private Sub FillGenExams(sTable As String)

  Dim i As Integer
  ' Dim xval As String

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      If $xType[i] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modClinSub.AddQuantiData($encid, "", $xitem[i], $xOption[i], aQuantiBox[i].Value, aAbnormCheck[i].Value, sTable, $xSysCons[i])
        Endif
      Else
        If $xOption[i] = "Multiple Selection" Then
          If aListBox[i].Count Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aListBox[i].List.Join(gb.NewLine), aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Text Table" Then
          ' xval = GetTableData(Split($xOpList[i]), aGridView[i])
          ' If xval Then
          '   modClinSub.AddQualiData($encid, "", $xitem[i],$xOption[i], modString.GetTableFormatFromText(xval), aAbnormCheck[i].Value, sTable, $xSysCons[i])
          ' Endif
        Else If $xOption[i] = "Single Selection" Then
          If aComboBox[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aComboBox[i].Text, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aDichoValue[i].Value, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aLeftRight[i].DataText, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Date Time" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "BS Date" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Quantitative" Then
          If aValueBox[i].Value Or If aNullCheck[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "ImageValue" Then
          If aButtonBox[i].Text Then

          Endif
        Else If $xOption[i] = "Calculated" Then
          If aCalcBox[i].Value Or If aCalcNull[i].Value Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], CStr(aCalcBox[i].Value) & Space(1) & aCalcUnit[i].Text, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Qualitative" Then
          If aLineText[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aLineText[i].Text, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else If $xOption[i] = "Clinical Scale" Then
          If aTextArea[i].Text Then
            modClinSub.AddClinicExam($encid, "", $xitem[i], $xOption[i], aTextArea[i].Text, aClinBox[i].Value, aAbnormCheck[i].Value, sTable, $xSysCons[i], "Regular")
          Endif
        Else If $xOption[i] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aHTMLText[i].RichText, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Else
          If aGenTextArea[i].Text Then
            modClinSub.AddQualiData($encid, "", $xitem[i], $xOption[i], aGenTextArea[i].Text, aAbnormCheck[i].Value, sTable, $xSysCons[i])
          Endif
        Endif
      Endif
    Endif
  Next

End

Private Sub SetQualitativeAbnormal(i As Integer)

  If $xOption[i] = "Single Selection" Then
    If aComboBox[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $xitem[i], aComboBox[i].Text, $xOption[i])
    Endif
  Else If $xOption[i] = "Dichotomous" Then
    If aDichoValue[i].Value Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $xitem[i], aDichoValue[i].Value, $xOption[i])
    Endif
  Else If $xOption[i] = "Left and Right" Then
    If aLeftRight[i].DataText Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $xitem[i], aLeftRight[i].DataText, $xOption[i])
    Endif
  Else If $xOption[i] = "Qualitative" Then
    If aLineText[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $xitem[i], aLineText[i].Text, $xOption[i])
    Endif
  Else If $xOption[i] = "No Selection" Then
    If aGenTextArea[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $xitem[i], aGenTextArea[i].Text, $xOption[i])
    Endif
  Endif

End

''-----------------------------help options  --------------------------------------
Public Sub ButtonBoxgroup_Click()

  Dim j As Integer

  j = Last.Tag
  OpenOption(j)
  If $xType[j] = "Quantitative" Then
  Else
    SetQualitativeAbnormal(j)
  Endif

End

Private Sub OpenOption(j As Integer)

  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String
  Dim xopt As String[]
  Dim xflot As Variant[]

  If $xType[j] = "Quantitative" Then
    xflot = GetQuantiValues("Exam", $encid, $xitem[j], 0, 0, aQuantiBox[j].Value)
    If xflot Then
      aQuantiBox[j].Value = xflot[0]
    Endif

  Else
    If $xOpList[j] Then
      xopt = Split($xOpList[j], ";")

      If $xOption[j] = "Single Selection" Then
        sVal = SubChoose(xopt, "Single Selection", $xitem[j])
        If sVal Then
          aComboBox[j].Text = sVal.Join(";")
        Endif

      Else If $xOption[j] = "Dichotomous" Then

      Else If $xOption[j] = "Multiple Selection" Then
        sVal = SubChoose(xopt, "Multiple Selection", $xitem[j])
        If sVal Then
          aListBox[j].List = sVal
        Endif

      Else If $xOption[j] = "Text Table" Then
        ' xval = TableEntry(xopt, $xitem[j], "")
        ' If xval Then
        '   DisplayAgegrid(Split($xOpList[j], ";"), xval, aGridView[j])
        ' Endif

      Else If $xOption[j] = "Clinical Scale" Then
        sVal = SubChoose(xopt, "Clinical Scale", $xitem[j])
        If sVal Then
          aClinBox[j].Value = sVal[0]
          aTextArea[j].Text = sVal[1]
        Endif

      Else If $xOption[j] = "Date Time" Then
        aDateBox[j].Value = Now()

      Else If $xOption[j] = "BS Date" Then
        aDateBox[j].Value = Now()

      Else If $xOption[j] = "Visual Input" Then
        sPath = modImage.DisplayVisualData(cmbcategory.Text, "", $xitem[j], $xOption[j])
        If sPath Then
          xval = CVisualValue(cmbcategory.Text, sPath, aGenTextArea[j].Text)
          If xval Then
            aGenTextArea[j].Text = xval
          Endif
        Endif

      Endif
    Endif

  Endif

End

Public Sub ComboGroup_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

Public Sub DichoText_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

' Public Sub ComboGroup_GotFocus()
'
'   Dim j As Integer
'
'   j = Last.Tag
'   If modBasic.$TabletModeEnable = "Yes" Then
'     If Not aComboBox[j].Text Then
'       aComboBox[j].Popup
'     Endif
'   Endif
'
' End
'
' Public Sub ComboGroup_KeyRelease()
'
'   Dim j As Integer
'
'   j = Last.Tag
'   modFillContainer.AutoFillComboBox(aComboBox[j])
'
' End
'
' Private Sub OpenAutoOptions(j As Integer)
'
'   If chkautoption.Value = True Then
'     OpenOption(j - 1)
'   Endif
'
' End
'

''======================= For GridView (copied from TextTable)=================
' Private Sub DisplayAgegrid(sColumns As String[], sTable As String, GridView1 As GridView)
'
'   Dim $ageFile As String[]
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'   Dim Column As Integer
'
'   GridView1.Clear
'   GridView1.Columns.Count = sColumns.Count
'   GridView1.Count = Split(sTable, gb.NewLine).Count - 1
'
'   Row = 0
'   $ageFile = Split(sTable, gb.NewLine)
'   For Each sline In $ageFile
'     sCol = Split(sline, ";")
'     If sline = $ageFile[0] Then
'     Else
'       For Column = 0 To sCol.Count - 1
'         GridView1[Row - 1, Column].Text = sCol[Column]
'       Next
'     Endif
'     Row = Row + 1
'   Next
'
'   For Column = 0 To sColumns.Count - 1
'     GridView1.Columns[Column].Text = sColumns[Column]
'     ' Try GridView1.Columns.Width = CInt(Floor(Frame1.Width / sCol.Count))
'   Next
'
' End
'
' Private Function GetTableData(sColumns As String[], GridView1 As GridView) As String
'
'   Dim Row As Integer
'   Dim Column As Integer
'   Dim sCol As String[]
'   Dim sRow As String[]
'   Dim xval As String
'
'   sRow = New String[]
'   sRow.Add(sColumns.Join(";"))
'   For Row = 0 To GridView1.Count - 1
'     sCol = New String[]
'     For Column = 0 To GridView1.Columns.Count - 1
'       sCol.Add(GridView1[Row, Column].Text)
'     Next
'     sRow.Add(sCol.Join(";"))
'   Next
'   xval = sRow.Join(gb.NewLine)
'   Return xval
'
' End

Public Sub WebForm_Open()

  Dim xoption As String

  xoption = modSettings.ShowSettingFromFIle("EntrySetting/AutoDisplayOptions")
  If xoption = "Yes" Then
    chkautoption.Value = True
  Else If xoption = "No" Then
    chkautoption.Value = False
  Endif

End

''======================= For All Exams ==============
' Private Function GetItemListData()
'
'   Dim xcategory As String[]
'   Dim xx As String
'   Dim asx As String[]
'   Dim xval As String[]
'
'   xcategory = New String[]
'   xcategory.Add("Flagged")
'   xval = New String[]
'   For Each xx In $ItemList
'     If xx Then
'       asx = Split(xx, "|")
'
'       If asx[0] Then
'         If xcategory.Count = 0 Then
'           xcategory.Add(asx[0])
'         Else
'           If xcategory.Exist(asx[0]) = False Then
'             xcategory.Add(asx[0])
'           Endif
'         Endif
'       Endif
'
'     Endif
'   Next
'   cmbcategory.List = xcategory
'
' End

' Private Function GetListExams() As String[]
'
'   Dim xval As String[]
'   Dim xx As String
'   Dim asx As String[]
'
'   xval = New String[]
'   If cmbcategory.Text = "Flagged" Then
'     For Each xx In $ItemListFlag
'       If xx Then
'         asx = Split(xx, "|")
'         If xval.Count = 0 Then
'           xval.Add(asx[1])
'         Else
'           If xval.Exist(asx[1]) = False Then
'             xval.Add(asx[1])
'           Endif
'         Endif
'       Endif
'     Next
'
'   Else
'     For Each xx In $ItemList
'       If xx Then
'         asx = Split(xx, "|")
'         If asx[0] = cmbcategory.Text Then
'           If xval.Count = 0 Then
'             xval.Add(asx[1])
'           Else
'             If xval.Exist(asx[1]) = False Then
'               xval.Add(asx[1])
'             Endif
'           Endif
'         Endif
'       Endif
'     Next
'
'   Endif
'
'   Return xval
'
' End

Public Sub btnfill_Click()

  Dim j As Integer
  Dim res As Result

  For j = 0 To $xitem.Count - 1
    If j < 49 Then
      res = modDatabase.$myConn.Exec("select flddetail from tblexam where fldexamid=&1", $xitem[j])
      If res.Available Then

        For Each res
          If aHTMLText[j] Then
            If Not aHTMLText[j].Text Then
              aHTMLText[j].RichText = res["flddetail"]
            Endif
          Else If aGenTextArea[j] Then
            If Not aGenTextArea[j].Text Then
              aGenTextArea[j].Text = res["flddetail"]
            Endif
          Else If aComboBox[j] Then
            If Not aComboBox[j].Text Then
              aComboBox[j].Text = res["flddetail"]
            Endif
          Else If aDichoValue[j] Then
            If Not aDichoValue[j].Value Then
              aDichoValue[j].Value = res["flddetail"]
            Endif
          Else If aLineText[j] Then
            If Not aLineText[j].Text Then
              aLineText[j].Text = res["flddetail"]
            Endif
          Endif
        Next

      Endif
    Endif
  Next

End

''-------------- icons
Public Sub btnpanexam_Click()

End

Public Sub btnexecexam_Click()

End

Public Sub btnattexam_Click()

End
