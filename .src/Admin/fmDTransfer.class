' Gambas class file

Private $fromCon As Connection
Private $toCon As Connection

Public Sub _new()

  cmbtypeA.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  cmbtypeB.List = ["sqlite3", "mysql", "postgresql", "odbc"]

End

Private Sub FillDefaultDB(cmbserver As WebComboBox, txtserver As WebTextBox, txtdbase As WebTextBox, txtuser As WebTextBox, txtpass As WebTextBox)

  cmbserver.Text = modDatabase.$myConn.Type
  txtserver.Text = modDatabase.$myConn.Host
  txtdbase.Text = modDatabase.$myConn.Name
  txtuser.Text = modDatabase.$myConn.User
  txtpass.Text = modDatabase.$myConn.Password

End

Public Sub chkcurA_Click()

  FillDefaultDB(cmbtypeA, txtserverA, txtdbA, txtuserA, txtpassA)

End

Public Sub chkcurB_Click()

  FillDefaultDB(cmbtypeB, txtserverB, txtdbB, txtuserB, txtpassB)

End

Public Sub btnconA_Click()

  $fromCon = modDBApp.OpenConnection(cmbtypeA.Text, txtserverA.Text, txtdbA.Text, txtuserA.Text, txtpassA.Text)
  If $fromCon.Opened = True Then
    conA.Value = True
    ActivateFrameForBoth()
    Me.Exec("Toastify({text: 'Connected', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnconB_Click()

  $toCon = modDBApp.OpenConnection(cmbtypeB.Text, txtserverB.Text, txtdbB.Text, txtuserB.Text, txtpassB.Text)
  If $toCon.Opened = True Then
    conB.Value = True
    ActivateFrameForBoth()
    Me.Exec("Toastify({text: 'Connected', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Private Sub ActivateFrameForBoth()

  If conA.Value And If conB.Value Then
    TabPanel1.Enabled = True
    FillTableList()
  Else
    TabPanel1.Enabled = False
  Endif

End

''----------------------------------- functions ---------------------------------------------------
Public Sub chkalltab_Click()

  If chkalltab.Value = True Then
    cmbtable.Enabled = False
  Else
    cmbtable.Enabled = True
  Endif

End

Public Sub btnaddfield_Click()

  cmbfield.Clear
  If chkaltdata.Value Then
    cmbfield.List = modDBApp.GetFIeldsinTable(cmbtable.Text, True, $toCon)
  Endif

End

Public Sub FillTableList()

  Dim hTable As Table

  cmbtable.Clear
  For Each hTable In $fromCon.Tables
    If hTable.System = True Then
    Else If hTable.Name = "tblkey" Then
    Else If hTable.Name = "tblnewkey" Then
    Else
      cmbtable.Add(hTable.Name)
    Endif
  Next

End

Public Sub chkaltdata_Click()

  If chkaltdata.Value = True Then
    cmbfield.Enabled = True
    txtpreadd.Enabled = True
    txtpostadd.Enabled = True
  Else If chkaltdata.Value = False Then
    cmbfield.Enabled = False
    txtpreadd.Enabled = False
    txtpostadd.Enabled = False
  Endif

End

Public Sub btntransfer_Click()

  Dim res As Result
  Dim rs As Result
  Dim hField As Field
  Dim tbls As String[]
  Dim tbl As String
  Dim hTable As Table
  Dim fldList As String[]

  tbls = New String[]
  If chkalltab.Value = True Then
    For Each hTable In $fromCon.Tables
      tbls.Add(hTable.Name)
    Next
  Else
    If cmbtable.Text Then
      tbls.Add(cmbtable.Text)
    Endif
  Endif

  For Each tbl In tbls
    For Each hTable In $toCon.Tables
      If hTable.Name = tbl Then

        cmbtable.Text = tbl
        fldList = modDBApp.GetFIeldsinTable(tbl, False, $fromCon)
        rs = $fromCon.Exec(Subst("select *from &1", tbl))
        For Each rs
          res = $toCon.Create(hTable.Name)
          For Each hField In hTable.Fields
            If fldList.Exist(hField.Name) = True Then

              If hField.Type = db.Serial Then
              Else If hField.Type = db.String Then
                If chkaltdata.Value Then
                  If hField.Name = cmbfield.Text Then
                    res[hField.Name] = Replace(rs[hField.Name], txtpreadd.Text, txtpostadd.Text)
                  Else
                    res[hField.Name] = rs[hField.Name]
                  Endif
                Else
                  res[hField.Name] = rs[hField.Name]
                Endif
              Else
                res[hField.Name] = rs[hField.Name]
              Endif

            Endif
          Next
          If chkignore.Value = True Then
            Try res.Update()
          Else
            res.Update()
          Endif
        Next

      Endif
    Next
  Next

  Me.Exec("Toastify({text: 'Data Transfer Complete', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

Catch

  Message.Warning(("Database Error Code: ") & db.Error & "<br>" & Error.Text, ("OK"))

End

Public Sub btncompare_Click()

  Dim xPath As String

  xPath = modCHTMLDB.CompareTwoDBReport($fromCon, $toCon, chkdiff.Value, chktablength.Value)
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btncompprimary_Click()

  Dim xPath As String

  xPath = modCHTMLDB.CompareTwoDBPrimaryReport($fromCon, $toCon, chkdiff.Value)
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btncompindex_Click()

  Dim xPath As String

  xPath = modCHTMLDB.CompareDBIndexReport($fromCon, $toCon, chkdiff.Value)
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btncollation_Click()

  Dim xPath As String

  xPath = modCHTMLDB.CompareTwoDBCollationReport($fromCon, $toCon, chkdiff.Value)
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

''------------------------------------ compare Query --------------------------
Public Sub txtsql_KeyPress()

  modGeneralMain.InsertTexEditortData(txtsql)

End

Public Sub Button1_Click()

  If txtsql Then
    CompareTwoDBQueryReport($fromCon, $toCon, txtsql.Text)
  Endif

End

Private Sub CompareTwoDBQueryReport(conn1 As Connection, conn2 As Connection, sQuery As String)                                                 ''

  Dim ref As ResultField
  Dim res1 As Result
  Dim xxx As String
  Dim xx As String[]
  Dim xpath As String

  Dim res2 As Result
  Dim yyy As String
  Dim yy As String[]
  Dim ypath As String

  xxx = ""
  res1 = conn1.Exec("SELECT " & sQuery)
  If res1.Available Then
    For Each res1
      xx = New String[]
      For Each ref In res1.Fields
        xx.Add(res1[ref.Name])
      Next
      xxx = xxx & xx.Join(";") & gb.NewLine
      Wait
    Next
  Endif
  xpath = Temp() & "." & conn1.Name
  File.Save(xpath, xxx)

  yyy = ""
  res2 = conn2.Exec("SELECT " & sQuery)
  If res2.Available Then
    For Each res2
      yy = New String[]
      For Each ref In res2.Fields
        yy.Add(res2[ref.Name])
      Next
      yyy = yyy & yy.Join(";") & gb.NewLine
    Next
  Endif
  ypath = Temp() & "." & conn2.Name
  File.Save(ypath, yyy)

  If System.Exist("meld") Then
    ' Exec ["meld", xpath, ypath]
  Else
    modApplSub.InstallSelectedApplication(["meld"])
  Endif

End
