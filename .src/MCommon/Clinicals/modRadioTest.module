' Gambas module file

''--------------------------------- patient procedures ---------------------------
Public Function GetEncounterFromRadioSerial(txtserial As Long) As String

  Dim encid As String

  encid = modMedReports.GetPatientEncFromID("tblpatradiotest", txtserial)
  Return encid

End

Public Function GetRadionameFromTestID(id As Long, Optional encid As String) As String

  Dim res As Result
  Dim xx As String

  If encid Then
    res = modDatabase.$myConn.Exec("select fldtestid from tblpatradiotest where fldid=&1 and fldencounterval=&2", id, encid)
  Else
    res = modDatabase.$myConn.Exec("select fldtestid from tblpatradiotest where fldid=&1", id)
  Endif
  If res.Available Then
    If res["fldtestid"] Then
      xx = res["fldtestid"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetRadioSelFieldType(sField As String) As String[]

  Dim res As Result
  Dim sql As String
  Dim xx As String[]

  sql = Subst("select distinct(&1) as col from tblpatradiotest", sField)
  res = modDatabase.$myConn.Exec(sql)
  xx = modControlSub.GetDirectFillresult(res)

  Return xx

End

Public Function PaientAllRadioNameArray(encid As String) As String[]

  Dim res As Result
  Dim xx As String[]

  res = modDatabase.$myConn.Exec("select distinct(fldtestid) as col from tblpatradiotest where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and flvisible=&4", encid, "Reported", "Verified", "Visible")
  xx = modControlSub.GetDirectFillresult(res)
  If xx Then
    xx.Sort()
  Endif
  Return xx

End

Public Sub GetQualiRadioListByPatient(encid As String) As String[]

  Dim sql As String
  Dim res As Result
  Dim xxx As String[]

  sql = "select distinct(fldtestid) as col from tblpatradiotest where fldencounterval=&1 and fldtest_type=&2 and flvisible=&3 and (fldstatus=&4 or fldstatus=&5)"
  res = modDatabase.$myConn.Exec(sql, encid, "Qualitative", "Visible", "Reported", "Verified")
  xxx = modControlSub.GetDirectFillresult(res)

  Return xxx

End

Public Sub GetQuantiRadioListByPatient(encid As String) As String[]

  Dim sql As String
  Dim res As Result
  Dim xxx As String[]

  sql = "select distinct(fldtestid) as col from tblpatradiotest where fldencounterval=&1 and fldtest_type=&2 and flvisible=&3 and (fldstatus=&4 or fldstatus=&5)"
  res = modDatabase.$myConn.Exec(sql, encid, "Quantitative", "Visible", "Reported", "Verified")
  xxx = modControlSub.GetDirectFillresult(res)

  Return xxx

End

''-----------------------------------------unit----------------------
Public Function RadioTestUnit(strTest As String, encid As String, Optional sMethod As String) As String

  Dim ssl As String
  Dim rs As Result
  Dim LabUnit As String
  Dim sqstr As String

  If Not sMethod Or If sMethod = "Regular" Then
    sqstr = ""
  Else
    sqstr = " and fldmethod=&6"
  Endif

  ssl = "select fldunit as unit from tblradiolimit where fldexamid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)" & sqstr
  rs = modDatabase.$medConn.Exec(ssl, strTest, modPatient.GetPatientSex(encid), "Both Sex", modPatient.GetAgeGroupFIxed(encid, Now()), "All Age", sMethod)
  If rs.Available = True Then
    rs.MoveFirst
    If rs["unit"] Then
      LabUnit = rs["unit"]
    Else
      LabUnit = ""
    Endif
  Else
    LabUnit = ""
  Endif

  Return LabUnit

End

Public Function GetTestRadioUnit(encid As String, id As Long) As String

  Dim res As Result
  Dim sql As String
  Dim LabUnit As String

  sql = "select fldencounterval,fldtestid,fldreportquanti,fldmethod from tblpatradiotest where fldid=&1 and fldtest_type=&2 and fldencounterval=&3"
  res = modDatabase.$myConn.Exec(sql, id, "Quantitative", encid)
  If res.Available = True Then
    If res["fldmethod"] Then
      LabUnit = RadioTestUnit(res["fldtestid"], res["fldencounterval"], res["fldmethod"])
    Else
      LabUnit = RadioTestUnit(res["fldtestid"], res["fldencounterval"])
    Endif
  Else
    LabUnit = ""
  Endif

  Return LabUnit

End

''---------------------------- limits---------------------------------------------------
Public Function RadioNormalValue(strTest As String, encid As String, Optional sMethod As String) As Float

  Dim ssl As String
  Dim rs As Result
  Dim NormalLimit As Float
  Dim sqstr As String

  If Not sMethod Or If sMethod = "Regular" Then
    sqstr = ""
  Else
    sqstr = " and fldmethod=&6"
  Endif

  ssl = "select fldnormal as normal from tblradiolimit where fldexamid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)" & sqstr
  rs = modDatabase.$medConn.Exec(ssl, strTest, modPatient.GetPatientSex(encid), "Both Sex", modPatient.GetAgeGroupFIxed(encid, Now()), "All Age", sMethod)
  If rs.Available = True Then
    rs.MoveFirst
    If rs["normal"] Then
      NormalLimit = rs["normal"]
    Else
      NormalLimit = 0
    Endif
  Else
    NormalLimit = 0
  Endif

  Return NormalLimit

End

Public Function GetMaxQuantiRadioVal(txtexam As String, encid As String, Optional sMethod As String) As Float

  Dim res As Result
  Dim xx As Float
  Dim sqstr As String

  If Not sMethod Or If sMethod = "Regular" Then
    sqstr = ""
  Else
    sqstr = " and fldmethod=&6"
  Endif

  res = modDatabase.$medConn.Exec("select fldhigh from tblradiolimit where fldexamid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)" & sqstr, txtexam, modPatient.GetPatientSex(encid), "Both Sex", modPatient.GetAgeGroupFIxed(encid, Now()), "All Age", sMethod)                                                               ''
  If res.Available = True Then
    res.MoveFirst
    If res["fldhigh"] Then
      xx = res["fldhigh"]
    Else
      xx = 0
    Endif
  Else
    xx = 0
  Endif

  Return xx

End

Public Function GetMinQuantiRadioVal(txtexam As String, encid As String, Optional sMethod As String) As Float

  Dim res As Result
  Dim xx As Float
  Dim sqstr As String

  If Not sMethod Or If sMethod = "Regular" Then
    sqstr = ""
  Else
    sqstr = " and fldmethod=&6"
  Endif

  res = modDatabase.$medConn.Exec("select fldlow from tblradiolimit where fldexamid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)" & sqstr, txtexam, modPatient.GetPatientSex(encid), "Both Sex", modPatient.GetAgeGroupFIxed(encid, Now()), "All Age", sMethod)                                                               ''
  If res.Available = True Then
    res.MoveFirst
    If res["fldlow"] Then
      xx = res["fldlow"]
    Else
      xx = 0
    Endif
  Else
    xx = 0
  Endif

  Return xx

End

Public Function GetRadioTestUpperLimits(id As Long) As Float

  Dim res As Result
  Dim sql As String
  Dim UpLimit As Float

  sql = "select fldencounterval,fldtestid,fldreportquanti,fldmethod from tblpatradiotest where fldid=&1 and fldtest_type=&2"
  res = modDatabase.$myConn.Exec(sql, id, "Quantitative")
  If res.Available = True Then
    If res["fldmethod"] Then
      UpLimit = GetMaxQuantiRadioVal(res["fldtestid"], res["fldencounterval"], res["fldmethod"])
    Else
      UpLimit = GetMaxQuantiRadioVal(res["fldtestid"], res["fldencounterval"])
    Endif
  Else
    UpLimit = 0
  Endif

  Return UpLimit

End

Public Function GettRadioTestLowerLimits(id As Long) As Float

  Dim res As Result
  Dim sql As String
  Dim LwLimit As Float

  sql = "select fldencounterval,fldtestid,fldreportquanti,fldmethod from tblpatradiotest where fldid=&1 and fldtest_type=&2"
  res = modDatabase.$myConn.Exec(sql, id, "Quantitative")
  If res.Available = True Then
    If res["fldmethod"] Then
      LwLimit = GetMinQuantiRadioVal(res["fldtestid"], res["fldencounterval"], res["fldmethod"])
    Else
      LwLimit = GetMinQuantiRadioVal(res["fldtestid"], res["fldencounterval"])
    Endif
  Else
    LwLimit = 0
  Endif

  Return LwLimit

End

Public Function GetRadioQualiTestTextReference(txttest As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldanswer from tblradiooption where fldexamid=&1 and fldanswertype=&2 ORDER BY fldindex", txttest, "Text Reference")
  If res.Available = True Then
    If res["fldanswer"] Then
      xx = res["fldanswer"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetRadioTestLimitSrting(id As Long, Optional encid As String) As String

  Dim xx As String
  Dim res As Result
  Dim xmax As Float
  Dim xmin As Float

  If encid Then
    res = modDatabase.$myConn.Exec("select fldencounterval,fldtest_type from tblpatradiotest where fldid=&1 and fldencounterval=&2", id, encid)
  Else
    res = modDatabase.$myConn.Exec("select fldencounterval,fldtest_type from tblpatradiotest where fldid=&1", id)
  Endif
  If res["fldtest_type"] = "Quantitative" Then
    xmax = GetRadioTestUpperLimits(id)
    xmin = GettRadioTestLowerLimits(id)
    If xmin < xmax Then
      If modBasic.$QuantiUnitEnable = "Disable" Then
        xx = CStr(xmin) & "  -  " & CStr(xmax)
      Else
        xx = CStr(xmin) & "  -  " & CStr(xmax) & Space(1) & GetTestRadioUnit(res["fldencounterval"], id)
      Endif
    Else
      xx = ""
    Endif
  Else
    xx = GetRadioQualiTestTextReference(GetRadionameFromTestID(id, res["fldencounterval"]))   ''only for text reference
  Endif

  Return xx

End

''------------------------------------------- value ------------------------------
Public Function GetRadioTestValue(id As Long) As Float

  Dim res As Result
  Dim sql As String
  Dim LabVal As Float

  sql = "select fldencounterval,fldtestid,fldreportquanti from tblpatradiotest where fldid=&1 and fldtest_type=&2"
  res = modDatabase.$myConn.Exec(sql, id, "Quantitative")
  If res.Available = True Then
    If res["fldreportquanti"] Then
      LabVal = res["fldreportquanti"]
    Else
      LabVal = 0
    Endif
  Else
    LabVal = 0
  Endif

  Return LabVal

End

Public Function RadioTestInterpretByTestID(labid As Long) As String

  Dim sql As String
  Dim res As Result
  Dim xx As String

  sql = "select fldcomment,fldmax,fldmin from tblradiocomment where fldexamid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)"
  res = modDatabase.$medConn.Exec(sql, GetRadionameFromTestID(labid), modPatient.GetPatientSex(GetEncounterFromRadioSerial(labid)), "Both Sex", modPatient.GetAgeGroupFIxed(GetEncounterFromRadioSerial(labid), Now()), "All Age")
  If res.Available = True Then
    For Each res
      If res["fldcomment"] Then
        If GetRadioTestValue(labid) >= res["fldmin"] And If GetRadioTestValue(labid) <= res["fldmax"] Then
          xx = res["fldcomment"]
          Break
        Endif
      Else
        xx = ""
      Endif
    Next
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetRadiobTestValueSubString(id As Variant, fullView As Boolean) As Variant

  Dim res As Result
  Dim res1 As Result
  Dim sql As String
  Dim xx As Variant
  Dim xquali As String[]
  Dim xcaption As String
  Dim xType As String

  If MMain.$WebEntry = True Then  ''remoteoptimized
    sql = "select fldid,fldencounterval,fldtestid,fldreportquali,fldreportquanti,fldtest_type,fldabnormal,fldhospcode from tblpatradiotest where fldrepoid=&1"
  Else
    sql = "select fldid,fldencounterval,fldtestid,fldreportquali,fldreportquanti,fldtest_type,fldabnormal from tblpatradiotest where fldid=&1"
  Endif
  res = modDatabase.$myConn.Exec(sql, id)
  If res.Available = True Then
    xcaption = modFixRadio.GetRadiotestCaption(res["fldtestid"])
    If modBasic.$SuperUser = False And If xcaption = "$Encryption" Then
      xx = "****"
    Else

      If res["fldtest_type"] = "Quantitative" Then
        If modBasic.$QuantiUnitEnable = "Disable" Then
          xx = CStr(res["fldreportquanti"])
        Else
          xx = CStr(res["fldreportquanti"]) & Space(1) & RadioTestUnit(res["fldtestid"], res["fldencounterval"])
        Endif

      Else
        If res["fldreportquali"] Then
          xType = modAllExam.GetVariableOptionType("Radio", res["fldtestid"])
          If xType = "Clinical Scale" Then
            If modBasic.$ShowScaleMedFormat = "GroupWise" Then
              xx = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
            Else
              xx = res["fldreportquanti"]
            Endif
          Else If xType = "Left and Right" Then
            xx = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
          Else If xType = "Left/Right Components" Then
            xx = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
          Else
            xx = res["fldreportquali"]
          Endif
        Else
          xx = ""
        Endif

        xquali = New String[]
        If fullView = True Then
          If MMain.$WebEntry = True Then  ''remoteoptimized
            res1 = modDatabase.$myConn.Exec("select fldsubtest,fldreport,fldid,fldtestid,fldtanswertype,fldindex,fldhospcode from tblpatradiosubtest where fldtestid=&1 and fldencounterval=&2 and fldhospcode=&3", res["fldid"], res["fldencounterval"], res["fldhospcode"])
            If res1.Available = True Then
              For Each res1
                If xType = "Left/Right Components" Then
                  xquali.Add(modString.GetLeftRightTableValue(res1["fldreport"], res1["fldsubtest"]))
                Else
                  If res1["fldtanswertype"] = "Multiple Selection" Or If res1["fldtanswertype"] = "Single Column" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioTableReportString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"], res1["fldhospcode"]) & gb.NewLine)
                  Else If res1["fldtanswertype"] = "Text Table" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioTableReportString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"], res1["fldhospcode"]) & gb.NewLine)
                  Else If res1["fldtanswertype"] = "Dual Columns" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioDualTableString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"], res1["fldhospcode"]) & gb.NewLine)
                  Else If res1["fldtanswertype"] = "Triple Columns" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioTriTableString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"], res1["fldhospcode"]) & gb.NewLine)
                  Else
                    If res1["fldreport"] Then
                      xquali.Add(res1["fldsubtest"] & " : " & res1["fldreport"])
                    Endif
                  Endif
                Endif
              Next
              If xquali.Count Then
                If xType = "Left/Right Components" Then
                  xx = xx & modString.GetLeftRightTableHeader(True) & xquali.Join(gb.NewLine)
                Else
                  xx = xx & gb.NewLine & xquali.Join(gb.NewLine)
                Endif
              Endif
            Endif

          Else
            res1 = modDatabase.$myConn.Exec("select fldsubtest,fldreport,fldid,fldtestid,fldtanswertype,fldindex from tblpatradiosubtest where fldtestid=&1 and fldencounterval=&2", res["fldid"], res["fldencounterval"])
            If res1.Available = True Then
              For Each res1
                If xType = "Left/Right Components" Then
                  xquali.Add(modString.GetLeftRightTableValue(res1["fldreport"], res1["fldsubtest"]))
                Else
                  If res1["fldtanswertype"] = "Multiple Selection" Or If res1["fldtanswertype"] = "Single Column" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioTableReportString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"]) & gb.NewLine)
                  Else If res1["fldtanswertype"] = "Text Table" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioTableReportString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"]) & gb.NewLine)
                  Else If res1["fldtanswertype"] = "Dual Columns" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioDualTableString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"]) & gb.NewLine)
                  Else If res1["fldtanswertype"] = "Triple Columns" Then
                    xquali.Add(res1["fldsubtest"] & " : " & gb.NewLine & GetSubRadioTriTableString(res1["fldtestid"], res1["fldid"], False, res1["fldindex"]) & gb.NewLine)
                  Else
                    If res1["fldreport"] Then
                      xquali.Add(res1["fldsubtest"] & " : " & res1["fldreport"])
                    Endif
                  Endif
                Endif
              Next
              If xquali.Count Then
                If xType = "Left/Right Components" Then
                  xx = xx & modString.GetLeftRightTableHeader(True) & xquali.Join(gb.NewLine)
                Else
                  xx = xx & gb.NewLine & xquali.Join(gb.NewLine)
                Endif
              Endif
            Endif

          Endif
        Endif

      Endif

    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetRadioValuePosition(encid As String, sExam As String, sType As String) As String[]

  Dim res As Result
  Dim sql As String
  Dim xx As String[]
  Dim xcaption As String

  xx = New String[]
  xcaption = modFixRadio.GetRadiotestCaption(sExam)
  If modBasic.$SuperUser = False And If xcaption = "$Encryption" Then
    xx.Add("****")
    xx.Add("****")
    xx.Add("****")
  Else

    If MMain.$WebEntry = True Then ''remoteoptimized
      sql = "select fldrepoid,fldtime_report,flduserid_report from tblpatradiotest where fldencounterval=&1 and fldtestid=&2 and (fldstatus=&3 or fldstatus=&4) and flvisible=&5"
    Else
      sql = "select fldid,fldtime_report,flduserid_report from tblpatradiotest where fldencounterval=&1 and fldtestid=&2 and (fldstatus=&3 or fldstatus=&4) and flvisible=&5"
    Endif
    res = modDatabase.$syConn.Exec(sql, encid, sExam, "Reported", "Verified", "Visible")
    If res.Available Then
      If sType = "FitsrVal" Then
        res.MoveFirst
      Else If sType = "LastVal" Then
        res.MoveLast
      Endif
      xx.Add(modReportVar.GetDateTimeReport(res["fldtime_report"], gb.GeneralDate))
      If MMain.$WebEntry = True Then ''remoteoptimized
        xx.Add(modRadioTest.GetRadiobTestValueSubString(res["fldrepoid"], True))
      Else
        xx.Add(modRadioTest.GetRadiobTestValueSubString(res["fldid"], True))
      Endif
      xx.Add(res["flduserid_report"])
    Else
      xx.Add("")
      xx.Add("")
      xx.Add("")
    Endif
  Endif
  Return xx

End

Public Function GetRadioTestValueString(id As Long, sReport As Boolean, Optional encid As String) As String

  Dim xx As String
  Dim res As Result
  Dim xval As String
  Dim xcaption As String
  Dim xType As String

  If encid Then
    res = modDatabase.$myConn.Exec("select fldtestid,fldreportquali,fldreportquanti,fldtest_type,fldabnormal from tblpatradiotest where fldid=&1 and fldencounterval=&2", id, encid)
  Else
    res = modDatabase.$myConn.Exec("select fldtestid,fldreportquali,fldreportquanti,fldtest_type,fldabnormal from tblpatradiotest where fldid=&1", id)
  Endif
  If res.Available = True Then
    xcaption = modFixRadio.GetRadiotestCaption(res["fldtestid"])
    If modBasic.$SuperUser = False And If xcaption = "$Encryption" Then
      xx = "****"
    Else

      If res["fldtest_type"] = "Quantitative" Then
        If res["fldreportquanti"] Then
          xval = modReportVar.GetLocaleNumberFormat(res["fldreportquanti"], 0) & Space(1) & GetTestRadioUnit(encid, id)
        Else
          xval = ""
        Endif

      Else
        If res["fldreportquali"] Then
          xType = modAllExam.GetVariableOptionType("Radio", res["fldtestid"])
          If xType = "Clinical Scale" Then
            If modBasic.$ShowScaleMedFormat = "GroupWise" Then
              If sReport = True Then
                xval = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
              Else
                xval = Trim(res["fldreportquali"])
              Endif
            Else
              xval = CStr(res["fldreportquanti"])
            Endif
          Else If xType = "Left and Right" Then
            If sReport = True Then
              xval = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
            Else
              xval = Trim(res["fldreportquali"])
            Endif
          Else If xType = "Left/Right Components" Then
            If sReport = True Then
              xval = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
            Else
              xval = Trim(res["fldreportquali"])
            Endif
          Else
            xval = Trim(res["fldreportquali"])
          Endif
        Else
          xval = ""
        Endif

      Endif

      If xval And If sReport = True Then
        If res["fldabnormal"] = True And If modBasic.$AbnFormat Then
          xx = modString.GetAbnormalFormattedString(xval)
        Else
          xx = xval
        Endif
      Else
        xx = xval
      Endif

    Endif
  Else
    xx = ""
  Endif
  Return xx

End

''for print view only
Public Function GetRadioTestValueGridString(encid As String, sIndex As Variant, flag As Boolean) As String

  Dim xx As String
  Dim res As Result
  Dim sql As String
  Dim xval As String
  Dim xType As String

  If MMain.$WebEntry = True Then ''remoteoptimized
    sql = "select fldencounterval,fldreportquali,fldreportquanti,fldtest_type,fldabnormal,fldtestid from tblpatradiotest where fldrepoid=&1 and fldencounterval=&2"
  Else
    sql = "select fldencounterval,fldreportquali,fldreportquanti,fldtest_type,fldabnormal,fldtestid from tblpatradiotest where fldid=&1 and fldencounterval=&2"
  Endif
  res = modDatabase.$myConn.Exec(sql, sIndex, encid)
  If res.Available = True Then
    If res["fldtest_type"] = "Quantitative" Then
      If res["fldreportquanti"] Then
        If modBasic.$QuantiUnitEnable = "Disable" Then
          xx = modReportVar.GetLocaleNumberFormat(res["fldreportquanti"], 0)
        Else
          xx = modReportVar.GetLocaleNumberFormat(res["fldreportquanti"], 0) & Space(1) & GetTestRadioUnit(res["fldencounterval"], sIndex)
        Endif
      Else
        xx = ""
      Endif

    Else
      If res["fldreportquali"] Then
        xType = modAllExam.GetVariableOptionType("Radio", res["fldtestid"])
        If xType = "Clinical Scale" Then
          If modBasic.$ShowScaleMedFormat = "GroupWise" Then
            xx = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
          Else
            xx = CStr(res["fldreportquali"])
          Endif
        Else If xType = "Left and Right" Then
          xx = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
        Else If xType = "Left/Right Components" Then
          xx = modString.GetJSONToDualHTMLTable(Trim(res["fldreportquali"]))
        Else
          xx = Trim(res["fldreportquali"])
        Endif
      Else
        xx = ""
      Endif

    Endif

    If xx And If flag = True Then
      If res["fldabnormal"] = True And If modBasic.$AbnFormat Then
        xval = modString.GetAbnormalFormattedString(xx)
      Else
        xval = xx
      Endif
    Else
      xval = xx
    Endif

  Else
    xval = ""
  Endif
  Return xval

End

Public Function GetRadioSubTestQuali(encid As String, sExamName As String, pttestid As Long) As String

  Dim res As Result
  Dim xx As String[]
  Dim xquali As String
  Dim xType As String
  Dim xtable As String

  xx = New String[]
  res = modDatabase.$myConn.Exec("select fldsubtest,fldreport,fldid,fldtestid,fldtanswertype,fldindex from tblpatradiosubtest where fldtestid=&1 and fldsave=&2 and fldencounterval=&3", pttestid, True, encid)
  If res.Available = True Then
    xType = modFixRadio.GetRadioTestOption(sExamName)
    For Each res
      If xType = "Left/Right Components" Then
        xx.Add(modString.GetLeftRightTableValue(res["fldreport"], res["fldsubtest"]))
      Else
        xquali = ""
        If res["fldtanswertype"] = "Multiple Selection" Or If res["fldtanswertype"] = "Single Column" Then
          xquali = gb.NewLine & GetSubRadioTableReportString(res["fldtestid"], res["fldid"], True, res["fldindex"])
        Else If res["fldtanswertype"] = "Text Table" Then
          xquali = gb.NewLine & GetSubRadioTableReportString(res["fldtestid"], res["fldid"], True, res["fldindex"])
        Else If res["fldtanswertype"] = "Dual Columns" Then
          xquali = gb.NewLine & GetSubRadioDualTableString(res["fldtestid"], res["fldid"], True, res["fldindex"])
        Else If res["fldtanswertype"] = "Triple Columns" Then
          xquali = gb.NewLine & GetSubRadioTriTableString(res["fldtestid"], res["fldid"], True, res["fldindex"])
        Else
          xquali = Trim(res["fldreport"])
        Endif
        If res["fldsubtest"] Then
          xx.Add(res["fldsubtest"] & " : " & xquali)
        Endif
      Endif
    Next

    If xx.Count Then
      If xType = "Left/Right Components" Then
        xtable = modString.GetLeftRightTableHeader(True) & xx.Join(gb.NewLine)
      Else
        xtable = modString.GetHTMLListFormat(xx)
      Endif
    Else
      xtable = ""
    Endif

  Endif

  Return xtable

End

Public Function GetSubRadioTableReportString(testid As Long, subtestid As Long, sTable As Boolean, sIndex As String, Optional sHospCode As String) As String

  Dim res As Result
  Dim xx As String[]
  Dim xstr As String[]
  Dim xval As String

  If sHospCode Then
    If sIndex Then
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3,fldcolm4 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldindex=&3 and fldhospcode=&4", testid, subtestid, sIndex, sHospCode)
    Else
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3,fldcolm4 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldhospcode=&3", testid, subtestid, sHospCode)
    Endif
  Else
    If sIndex Then
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3,fldcolm4 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldindex=&3", testid, subtestid, sIndex)
    Else
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3,fldcolm4 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2", testid, subtestid)
    Endif
  Endif

  If res.Available Then
    If sTable = True
      xval = modRepoTemplete.HTMLTableSyntax()
      For Each res
        If res["fldvalue"] And If res["fldvalue"] = "Cancelled" Then
        Else
          xstr = New String[]
          xval = xval & "<tr>" & gb.NewLine
          xstr.Add("<td>" & res["fldvariable"] & "</td>" & gb.NewLine)
          If res["fldvalue"] Then
            xstr.Add("<td>" & res["fldvalue"] & "</td>" & gb.NewLine)
          Else
            xstr.Add("<td>" & "</td>" & gb.NewLine)
          Endif
          If res["fldcolm2"] Then
            xstr.Add("<td>" & res["fldcolm2"] & "</td>" & gb.NewLine)
          Else
            xstr.Add("<td>" & "</td>" & gb.NewLine)
          Endif
          If res["fldcolm3"] Then
            xstr.Add("<td>" & res["fldcolm3"] & "</td>" & gb.NewLine)
          Else
            xstr.Add("<td>" & "</td>" & gb.NewLine)
          Endif
          If res["fldcolm4"] Then
            xstr.Add("<td>" & res["fldcolm4"] & "</td>" & gb.NewLine)
          Else
            xstr.Add("<td>" & "</td>" & gb.NewLine)
          Endif
          xval = xval & xstr.Join(gb.NewLine)

          xval = xval & "</tr>" & gb.NewLine
        Endif
      Next
      xval = xval & "</table>" & gb.NewLine

    Else
      xx = New String[]
      For Each res
        If res["fldvalue"] And If res["fldvalue"] = "Cancelled" Then
        Else
          xstr = New String[]
          xstr.Add(res["fldvariable"])
          If res["fldvalue"] Then
            xstr.Add(res["fldvalue"])
          Endif
          If res["fldcolm2"] Then
            xstr.Add(res["fldcolm2"])
          Endif
          If res["fldcolm3"] Then
            xstr.Add(res["fldcolm3"])
          Endif
          If res["fldcolm4"] Then
            xstr.Add(res["fldcolm4"])
          Endif
          xx.Add(xstr.Join(" : "))
        Endif
      Next
      xval = xx.Join(gb.NewLine)
    Endif

  Else
    xval = ""
  Endif
  Return xval

End

Private Function GetRadioColumnTableHeaders(testid As Long, subtestid As Long, sIndex As String, Optional sHospCode As String) As String[]

  Dim sDefault As String
  Dim asx As String[]
  Dim aCols As String[]
  Dim rsh As Result

  If sHospCode Then
    If sIndex Then
      rsh = modDatabase.$myConn.Exec("select fldparent,fldsubtest from tblpatradiosubtest where fldtestid=&1 and fldid=&2 and fldindex=&3 and fldhospcode=&4", testid, subtestid, sIndex, sHospCode)
    Else
      rsh = modDatabase.$myConn.Exec("select fldparent,fldsubtest from tblpatradiosubtest where fldtestid=&1 and fldid=&2 and fldindex IS &3 and fldhospcode=&4", testid, subtestid, Null, sHospCode)
    Endif
  Else
    If sIndex Then
      rsh = modDatabase.$myConn.Exec("select fldparent,fldsubtest from tblpatradiosubtest where fldtestid=&1 and fldid=&2 and fldindex=&3", testid, subtestid, sIndex)
    Else
      rsh = modDatabase.$myConn.Exec("select fldparent,fldsubtest from tblpatradiosubtest where fldtestid=&1 and fldid=&2 and fldindex IS &3", testid, subtestid, Null)
    Endif
  Endif

  If rsh.Available Then
    rsh.MoveFirst
    sDefault = modAllExam.GetESubxamDefaultValue("Radio", rsh["fldparent"], rsh["fldsubtest"])
    asx = Split(sDefault, ":")
    If asx.Count = 2 Then
      If asx[0] = "Columns" Then
        aCols = Split(asx[1], ";")
        Return aCols
      Endif
    Endif
  Endif

End

Public Function GetSubRadioTriTableString(testid As Long, subtestid As Long, sTable As Boolean, sIndex As String, Optional sHospCode As String) As String

  Dim aCols As String[]
  Dim res As Result
  Dim xx As String
  Dim aa As String
  Dim bb As String
  Dim cc As String

  If sHospCode Then
    If sIndex Then
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldindex=&3 and fldhospcode=&4", testid, subtestid, sIndex, sHospCode)
    Else
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldhospcode=&3", testid, subtestid, sHospCode)
    Endif
  Else
    If sIndex Then
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldindex=&3", testid, subtestid, sIndex)
    Else
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2,fldcolm3 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2", testid, subtestid)
    Endif
  Endif

  If res.Available Then
    If sHospCode Then
      aCols = GetRadioColumnTableHeaders(testid, subtestid, sIndex, sHospCode)
    Else
      aCols = GetRadioColumnTableHeaders(testid, subtestid, sIndex)
    Endif

    If sTable = True Then
      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine
      xx = xx & "<td class='reportmid_table_h'>PARAMETER</td>" & gb.NewLine
      If aCols And If aCols.Count >= 3 Then
        xx = xx & "<td class='reportmid_table_h'>" & aCols[0] & "</td>" & gb.NewLine
        xx = xx & "<td class='reportmid_table_h'>" & aCols[1] & "</td>" & gb.NewLine
        xx = xx & "<td class='reportmid_table_h'>" & aCols[2] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td class='reportmid_table_h'>COLUMN-I</td>" & gb.NewLine
        xx = xx & "<td class='reportmid_table_h'>COLUMN-II</td>" & gb.NewLine
        xx = xx & "<td class='reportmid_table_h'>COLUMN-III</td>" & gb.NewLine
      Endif
      xx = xx & "</tr>" & gb.NewLine
      For Each res
        If res["fldvalue"] And If res["fldvalue"] = "Cancelled" Then
        Else
          If res["fldvalue"] Then
            aa = res["fldvalue"]
          Else
            aa = ""
          Endif
          If res["fldcolm2"] Then
            bb = res["fldcolm2"]
          Else
            bb = ""
          Endif
          If res["fldcolm3"] Then
            cc = res["fldcolm3"]
          Else
            cc = ""
          Endif
          xx = xx & "<tr>" & gb.NewLine
          xx = xx & "<td>" & res["fldvariable"] & "</td>" & gb.NewLine
          xx = xx & "<td>" & aa & "</td>" & gb.NewLine
          xx = xx & "<td>" & bb & "</td>" & gb.NewLine
          xx = xx & "<td>" & cc & "</td>" & gb.NewLine
          xx = xx & "</tr>" & gb.NewLine
        Endif
      Next
      xx = xx & "</table>" & gb.NewLine

    Else
      xx = ""
      For Each res
        If res["fldvalue"] And If res["fldvalue"] = "Cancelled" Then
        Else
          If res["fldvalue"] Then
            aa = res["fldvalue"]
          Else
            aa = ""
          Endif
          If res["fldcolm2"] Then
            bb = res["fldcolm2"]
          Else
            bb = ""
          Endif
          If res["fldcolm3"] Then
            cc = res["fldcolm3"]
          Else
            cc = ""
          Endif
          If aCols And If aCols.Count >= 3 Then
            xx = xx & res["fldvariable"] & " [" & aCols[0] & ": " & aa & "][" & aCols[1] & ": " & bb & "][" & aCols[2] & ": " & cc & "]" & gb.NewLine
          Else
            xx = xx & res["fldvariable"] & " [COLUMN-I: " & aa & "][COLUMN-II: " & bb & "][COLUMN-III: " & cc & "]" & gb.NewLine
          Endif
        Endif
      Next
    Endif

  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetSubRadioDualTableString(testid As Long, subtestid As Long, sTable As Boolean, sIndex As String, Optional sHospCode As String) As String

  Dim aCols As String[]
  Dim res As Result
  Dim xx As String
  Dim aa As String
  Dim bb As String

  If sHospCode Then
    If sIndex Then
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldindex=&3 and fldhospcode=&4", testid, subtestid, sIndex, sHospCode)
    Else
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldhospcode=&3", testid, subtestid, sHospCode)
    Endif
  Else
    If sIndex Then
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2 and fldindex=&3", testid, subtestid, sIndex)
    Else
      res = modDatabase.$myConn.Exec("select fldvariable,fldvalue,fldcolm2 from tblpatradiosubtable where fldexamid=&1 and fldsubexamid=&2", testid, subtestid)
    Endif
  Endif

  If res.Available Then
    If sHospCode Then
      aCols = GetRadioColumnTableHeaders(testid, subtestid, sIndex, sHospCode)
    Else
      aCols = GetRadioColumnTableHeaders(testid, subtestid, sIndex)
    Endif

    If sTable = True Then
      xx = modRepoTemplete.HTMLTableSyntax()
      xx = xx & "<tr>" & gb.NewLine
      xx = xx & "<td class='reportmid_table_h'>PARAMETER</td>" & gb.NewLine
      If aCols And If aCols.Count >= 2 Then
        xx = xx & "<td class='reportmid_table_h'>" & aCols[0] & "</td>" & gb.NewLine
        xx = xx & "<td class='reportmid_table_h'>" & aCols[1] & "</td>" & gb.NewLine
      Else
        xx = xx & "<td class='reportmid_table_h'>LEFT</td>" & gb.NewLine
        xx = xx & "<td class='reportmid_table_h'>RIGHT</td>" & gb.NewLine
      Endif
      xx = xx & "</tr>" & gb.NewLine
      For Each res
        If res["fldvalue"] And If res["fldvalue"] = "Cancelled" Then
        Else
          If res["fldvalue"] Then
            aa = res["fldvalue"]
          Else
            aa = ""
          Endif
          If res["fldcolm2"] Then
            bb = res["fldcolm2"]
          Else
            bb = ""
          Endif
          xx = xx & "<tr>" & gb.NewLine
          xx = xx & "<td>" & res["fldvariable"] & "</td>" & gb.NewLine
          xx = xx & "<td>" & aa & "</td>" & gb.NewLine
          xx = xx & "<td>" & bb & "</td>" & gb.NewLine
          xx = xx & "</tr>" & gb.NewLine
        Endif
      Next
      xx = xx & "</table>" & gb.NewLine

    Else
      xx = ""
      For Each res
        If res["fldvalue"] And If res["fldvalue"] = "Cancelled" Then
        Else
          If res["fldvalue"] Then
            aa = res["fldvalue"]
          Else
            aa = ""
          Endif
          If res["fldcolm2"] Then
            bb = res["fldcolm2"]
          Else
            bb = ""
          Endif
          If aCols And If aCols.Count >= 2 Then
            xx = xx & res["fldvariable"] & " [" & aCols[0] & ": " & aa & "][" & aCols[1] & ": " & bb & "]" & gb.NewLine
          Else
            xx = xx & res["fldvariable"] & " [LEFT: " & aa & "][RIGHT: " & bb & "]" & gb.NewLine
          Endif
        Endif
      Next
    Endif

  Else
    xx = ""
  Endif
  Return xx

End

''------------------------ Position wise ----------------
Public Function GetCurrRadioValuePos(sPos As String, encid As String, strExam As String) As Variant

  Dim sql As String
  Dim res As Result
  Dim xx As Variant
  Dim xType As String
  Dim xcaption As String

  xcaption = modFixRadio.GetRadiotestCaption(strExam)
  If modBasic.$SuperUser = False And If xcaption = "$Encryption" Then
    xx = ""
  Else

    sql = "select fldtestid,fldtest_type,fldreportquali,fldreportquanti from tblpatradiotest where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid=&4 and fldreportquali IS NOT &5"
    res = modDatabase.$myConn.Exec(sql, encid, "Reported", "Verified", strExam, Null)
    If res.Available = True Then
      If sPos = "First" Then
        res.MoveFirst
      Else
        res.MoveLast
      Endif

      If res["fldtest_type"] = "Quantitative" Then
        If res["fldreportquanti"] Then
          xx = res["fldreportquanti"]
        Else
          xx = 0
        Endif
      Else
        If res["fldreportquali"] Then
          xType = modAllExam.GetVariableOptionType("Radio", res["fldtestid"])
          If xType = "Clinical Scale" Then
            xx = CStr(res["fldreportquanti"])
          Else
            xx = Trim(res["fldreportquali"])
          Endif
        Else
          xx = ""
        Endif
      Endif

    Else
      xx = ""
    Endif
  Endif

  Return xx

End

''only for last quantitative test (used for calculation)
Public Function GetCurrRadioValueSysConst(encid As String, xSysConst As String, sPos As String) As String

  Dim xx As String
  Dim res As Result
  Dim xcaption As String
  Dim xType As String

  res = modDatabase.$myConn.Exec("select fldtestid,fldtest_type,fldreportquali,fldreportquanti from tblpatradiotest where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldexamid from tblradio where fldsysconst=&4) and fldreportquali IS NOT &5", encid, "Reported", "Verified", xSysConst, Null)
  If res.Available Then
    xcaption = modFixRadio.GetRadiotestCaption(res["fldtestid"])
    If modBasic.$SuperUser = False And If xcaption = "$Encryption" Then
      xx = ""
    Else
      If sPos = "First" Then
        res.MoveFirst
      Else
        res.MoveLast
      Endif
      If res["fldtest_type"] = "Quantitative" Then
        If res["fldreportquanti"] Then
          xx = CStr(res["fldreportquanti"])
        Else
          xx = ""
        Endif
      Else
        If res["fldreportquali"] Then
          xType = modAllExam.GetVariableOptionType("Radio", res["fldtestid"])
          If xType = "Clinical Scale" Then
            xx = CStr(res["fldreportquanti"])
          Else
            xx = Trim(res["fldreportquali"])
          Endif
        Else
          xx = ""
        Endif
      Endif
    Endif

  Else
    xx = ""
  Endif

  Return xx

End
