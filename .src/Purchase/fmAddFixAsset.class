' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $RepoStr As String

Public Sub _new()

  Dim xlocat As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      pnlocat.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif
    pnlbuttons.Visible = False

  Else
    pnlocat.Visible = False
  Endif

  cmbsupplier.List = modSupplier.FillVendorNameCombo("Active")
  cmbpayment.List = ["Cash Payment", "Credit Payment"]
  cmbcondition.List = ["Working", "Broken", "Removed"]
  cmbitem.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditemname as col from tblassetsname"))
  dtpurchase.Value = Now()

  xlocat = modSettings.ShowSettingFromFIle("FixedAssetsForm/LocationList")
  If xlocat Then
    cmbtarget.List = modString.GetStringArrayFromFile(xlocat, True)
  Endif
  cmbitem.SetFocus

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub cmblocation_Click()

  cmbvalue.Clear()
  If cmblocation.Text Then
    cmbvalue.List = modDataRepo.GetRepoValueListType(cmblocation.Text)
  Endif

End

Public Sub mnuactivity_Menu()

  mnuhide.Popup(mnuactivity)

End

Public Sub txtsearch_Change()

  cmbitem.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditemname as col from tblassetsname where lower(flditemname) like &1", LCase(txtsearch.Text) & "%"))

End

Public Sub cmbitem_Select()

  Dim res As Result

  ClearTxtData()
  txtname.Text = cmbitem.Text
  res = modDatabase.$myConn.Exec("select flditemname,fldledger,fldgroup from tblassetsname where flditemname=&1", cmbitem.Text)
  If res.Available Then
    res.MoveLast
    txtname.Text = res["flditemname"]
    txtcategory.Text = res["fldgroup"]
    txtledger.Text = res["fldledger"]
    If txtcategory.Text Then
      txtcategory.ReadOnly = True
    Endif
    If txtledger.Text Then
      txtledger.ReadOnly = True
    Endif
  Endif
  ShowGridData(cmbitem.Text)

End

Public Sub btncategory_Click()

  Dim hForm As FmAddVarThree

  hForm = New FmAddVarThree("flditemname", "fldledger", "tblassetsname", "fldgroup", "")
  hForm.ShowModal
  cmbitem.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditemname as col from tblassetsname"))

End

Public Sub btnlocation_Click()

  ' Dim xpath As String
  '
  ' If Dialog.OpenFile() Then Return
  ' xpath = Dialog.Path
  ' If Exist(xpath) Then
  '   modSettings.SaveSettingsToFile("FixedAssetsForm/LocationList", xpath)
  '   cmblocation.List = modString.GetStringArrayFromFile(xpath, True)
  ' Endif

End

Public Sub dtnepurchas_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtpurchase.Value))
  If xx Then
    dtpurchase.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneprepair_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(Date()))
  If xx Then
    dtrepair.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Private Sub ClearTxtData()

  txtname.Text = ""
  txtcategory.Text = ""
  txtledger.Text = ""
  cmbsupplier.Text = ""
  txtinvoice.Text = ""
  txtspecs.Text = ""
  txtmfg.Text = ""
  txtmodel.Text = ""
  txtserial.Text = ""
  cmbcondition.Text = ""
  cmbtarget.Text = ""
  txtcode.Text = ""
  txtremarks.Text = ""
  dtpurchase.Value = Now()
  dtrepair.Value = Now()
  cmbpayment.Text = ""
  txtqty.Value = 0
  txtrate.Value = 0
  txtunit.Text = ""
  txtdiscper.Value = 0
  txtdiscamt.Value = 0
  txttaxper.Value = 0
  txttaxamt.Value = 0
  txtexpense.Value = 0
  txtotalamt.Value = 0
  txtcategory.ReadOnly = False
  txtledger.ReadOnly = False

End

Public Sub btnadd_Click()

  Dim res As Result
  Dim xIntVal As String

  If btnadd.Text = "Add" Then
    btnadd.Text = "Save"
    ClearTxtData()

  Else If btnadd.Text = "Save" Then
    If txtname.Text And If txtcategory.Text And If txtqty.Value And If cmbtarget.Text Then
      res = modDatabase.$myConn.Create("tblassetsentry")
      res["flditemname"] = txtname.Text
      res["fldgroup"] = txtcategory.Text
      res["fldspecs"] = Trim(txtspecs.Text)
      res["fldcode"] = Trim(txtcode.Text)
      res["fldmanufacturer"] = Trim(txtmfg.Text)
      res["fldsuppname"] = Trim(cmbsupplier.Text)
      res["fldmodel"] = Trim(txtmodel.Text)
      res["fldserial"] = Trim(txtserial.Text)

      res["fldledger"] = Trim(txtledger.Text)
      res["fldbillno"] = Trim(txtinvoice.Text)
      res["fldpayment"] = cmbpayment.Text
      res["fldpurdate"] = dtpurchase.Value
      res["flditemrate"] = txtrate.Value
      res["fldtaxamt"] = txttaxamt.Value
      res["flddiscamt"] = txtdiscamt.Value
      res["fldqty"] = txtqty.Value
      res["fldunit"] = Trim(txtunit.Text)
      res["fldexpense"] = txtexpense.Value
      res["fldditemamt"] = txtotalamt.Value
      res["fldcomp"] = cmbtarget.Text
      res["fldcondition"] = Trim(cmbcondition.Text)
      res["fldrepairdate"] = dtrepair.Value
      res["fldcomment"] = txtremarks.Text
      res["flduserid"] = modBasic.$lbluser
      res["xyz"] = False
      If MMain.$WebEntry = True Then
        xIntVal = modString.GetDateString(Now())
        res["fldid"] = CLong(xIntVal)
        res["fldrepoid"] = modMisc.GetWebIndexStr(xIntVal)
        res["fldrepodate"] = Now()
        res["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
        res["fldhospcode"] = modBasic.$HospCode
      Endif
      res.Update
      ShowGridData(cmbitem.Text)
      btnadd.Text = "Add"
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif

  Endif

End

Private Function GetUpdateGo() As Boolean

  Dim xbool As Boolean

  If cmbcondition.Text = "Removed" Then
    If Message.Question(("Are you sure to <b>remove</b> this item ?"), ("NO"), ("YES")) = 2 Then
      xbool = True
    Else
      xbool = False
    Endif
  Else
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      xbool = True
    Else
      xbool = False
    Endif
  Endif

  Return xbool

End

Public Sub btnedit_Click()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If txtname.Text And If txtcategory.Text And If txtqty.Value And If cmbtarget.Text Then
      If GetUpdateGo() = True Then
        res = modDatabase.$myConn.Edit("tblassetsentry", "fldid=&1", $rData["fldid"])
        res["flditemname"] = txtname.Text
        res["fldgroup"] = txtcategory.Text
        res["fldspecs"] = Trim(txtspecs.Text)
        res["fldcode"] = Trim(txtcode.Text)
        res["fldmanufacturer"] = Trim(txtmfg.Text)
        res["fldsuppname"] = Trim(cmbsupplier.Text)
        res["fldmodel"] = Trim(txtmodel.Text)
        res["fldserial"] = Trim(txtserial.Text)
        res["fldledger"] = Trim(txtledger.Text)
        res["fldbillno"] = Trim(txtinvoice.Text)
        res["fldpayment"] = cmbpayment.Text
        res["fldpurdate"] = dtpurchase.Value
        res["flditemrate"] = txtrate.Value
        res["fldtaxamt"] = txttaxamt.Value
        res["flddiscamt"] = txtdiscamt.Value
        res["fldqty"] = txtqty.Value
        res["fldunit"] = Trim(txtunit.Text)
        res["fldexpense"] = txtexpense.Value
        res["fldditemamt"] = txtotalamt.Value
        res["fldcomp"] = cmbtarget.Text
        res["fldcondition"] = Trim(cmbcondition.Text)
        res["fldrepairdate"] = dtrepair.Value
        res["fldcomment"] = txtremarks.Text
        res["flduserid"] = modBasic.$lbluser
        res["xyz"] = False
        res.Update
        ShowGridData(cmbitem.Text)
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Private Sub ShowGridData(sItem As String)

  Dim sql As String
  Dim xFldLst As String[]

  xFldLst = [modDataRepo.SerialField(), "flditemname", "fldmanufacturer", "fldledger", "fldmodel", "fldqty", "fldditemamt", "fldcomp", "fldcondition", "fldpurdate"]
  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  If modBasic.$ViewLockAssets = "User" Then
    sql = "select " & xFldLst.Join(",") & " from tblassetsentry where flditemname like &1 and flduserid=&2 and fldcondition<>&3" & $RepoStr
    $rData = modDatabase.$myConn.Exec(sql, sItem, modBasic.$lbluser, "Removed")
  Else If modBasic.$ViewLockAssets = "Location" Then
    sql = "select " & xFldLst.Join(",") & " from tblassetsentry where flditemname like &1 and fldcomp=&2 and fldcondition<>&3" & $RepoStr
    $rData = modDatabase.$myConn.Exec(sql, sItem, modBasic.$compID, "Removed")
  Else
    sql = "select " & xFldLst.Join(",") & " from tblassetsentry where flditemname like &1 and fldcondition<>&2" & $RepoStr
    $rData = modDatabase.$myConn.Exec(sql, sItem, "Removed")
  Endif
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Particulars"
    .Columns[2].Text = "Manufacturer"
    .Columns[3].Text = "Ledger"
    .Columns[4].Text = "Model"
    .Columns[5].Text = "QTY"
    .Columns[6].Text = "Total"
    .Columns[7].Text = "Location"
    .Columns[8].Text = "Condition"
    .Columns[9].Text = "Date"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 9 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub GridView1_Select()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If MMain.$WebEntry = True Then
      res = modDatabase.$myConn.Exec("select flditemname,fldgroup,fldspecs,fldcode,fldmanufacturer,fldsuppname,fldmodel,fldserial,fldledger,fldpurdate,fldbillno,flditemrate,fldtaxamt,flddiscamt,fldqty,fldunit,fldditemamt,fldcomp,fldcondition,fldrepairdate,fldcomment,fldpayment,fldexpense from tblassetsentry where fldrepoid=&1", $rData["fldrepoid"])
    Else
      res = modDatabase.$myConn.Exec("select flditemname,fldgroup,fldspecs,fldcode,fldmanufacturer,fldsuppname,fldmodel,fldserial,fldledger,fldpurdate,fldbillno,flditemrate,fldtaxamt,flddiscamt,fldqty,fldunit,fldditemamt,fldcomp,fldcondition,fldrepairdate,fldcomment,fldpayment,fldexpense from tblassetsentry where fldid=&1", $rData["fldid"])                                                      ''
    Endif
    If res.Available Then
      txtname.Text = res["flditemname"]
      txtcategory.Text = res["fldgroup"]
      txtspecs.Text = res["fldspecs"]
      txtcode.Text = res["fldcode"]
      txtmfg.Text = res["fldmanufacturer"]
      cmbsupplier.Text = res["fldsuppname"]
      txtmodel.Text = res["fldmodel"]
      txtserial.Text = res["fldserial"]
      txtledger.Text = res["fldledger"]
      txtinvoice.Text = res["fldbillno"]
      dtpurchase.Value = res["fldpurdate"]
      txtrate.Value = res["flditemrate"]
      txttaxamt.Value = res["fldtaxamt"]
      txtdiscamt.Value = res["flddiscamt"]
      txtqty.Value = res["fldqty"]
      txtunit.Text = res["fldunit"]
      txtotalamt.Value = res["fldditemamt"]
      cmbtarget.Text = res["fldcomp"]
      cmbcondition.Text = res["fldcondition"]
      dtrepair.Value = res["fldrepairdate"]
      txtremarks.Text = res["fldcomment"]
      cmbpayment.Text = res["fldpayment"]
      txtexpense.Value = res["fldexpense"]
      btnadd.Text = "Add"
    Endif
  Endif

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "FIXED ASSETS", modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))

End

Public Sub btnselgroup_Click()

  Dim xitem As String
  Dim xpath As String
  Dim xList As String[]

  xlist = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldgroup) as col from tblassetsentry"))
  xitem = InputCombo(("Select Item Group"), "Fixed Assets", xlist, "", True)
  If xitem Then
    xpath = modHTMLFixAsset.FixedAssetsReport("Category", xitem, cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnrepoitem_Click()

  Dim xpath As String
  Dim xdate As Date[]

  xdate = DoubleDates("Select Dates", "Fixed Assets", [Now(), Now()])
  If xdate Then
    xpath = modHTMLFixAsset.FixedAssetsReportDate("Category", xdate[0], xdate[1], cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnsellocation_Click()

  Dim xitem As String
  Dim xpath As String
  Dim xList As String[]

  xlist = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldcomp) as col from tblassetsentry"))
  xitem = InputCombo(("Select Item Location"), "Fixed Assets", xlist, "", True)
  If xitem Then
    xpath = modHTMLFixAsset.FixedAssetsReport("Location", xitem, cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnrepolocation_Click()

  Dim xpath As String
  Dim xdate As Date[]

  xdate = DoubleDates("Select Dates", "Fixed Assets", [Now(), Now()])
  If xdate Then
    xpath = modHTMLFixAsset.FixedAssetsReportDate("Location", xdate[0], xdate[1], cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnselinvoice_Click()

  Dim xitem As String
  Dim xpath As String

  xitem = InputBox(("Put Invoice Number"), "Fixed Assets", "")
  If xitem Then
    xpath = modHTMLFixAsset.FixedAssetsReport("Invoice", xitem, cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btninvoice_Click()

  Dim xpath As String
  Dim xdate As Date[]

  xdate = DoubleDates("Select Dates", "Fixed Assets", [Now(), Now()])
  If xdate Then
    xpath = modHTMLFixAsset.FixedAssetsReportDate("Invoice", xdate[0], xdate[1], cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnudelete_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblassetsentry", "fldid=&1", $rData["fldid"])
      ShowGridData(cmbitem.Text)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information deleted", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub mnuqrcode_Click()

  Dim res As Result
  Dim xlist As String[]
  Dim xstrqr As String
  Dim xpath As String
  Dim strAll As String
  Dim stPath As String

  xpath = modSettings.ShowSettingFromFIle("FixedAssets/QRTemplete")
  If xpath And If Exist(xpath) Then
    If GridView1.Selection.Count Then
      $rData.MoveTo(GridView1.Selection[0])
      res = modDatabase.$myConn.Exec("select flditemname,fldgroup,fldspecs,fldcode,fldmanufacturer,fldsuppname,fldmodel,fldserial,fldledger,fldpurdate,fldcomp,fldcondition,fldrepairdate from tblassetsentry where fldid=&1", $rData["fldid"])                                                      ''
      If res.Available Then
        xlist = New String[]
        xlist.Add("GROUP: " & res["fldgroup"])
        xlist.Add("NAME: " & res["flditemname"])
        xlist.Add("CODE: " & res["fldcode"])
        xlist.Add("MFG: " & res["fldmanufacturer"])
        xlist.Add("MODEL: " & res["fldmodel"])
        xlist.Add("SERIAL: " & res["fldserial"])
        xlist.Add("LEDGER: " & res["fldledger"])
        xlist.Add("PURDATE: " & modReportVar.GetDateTimeReport(res["fldpurdate"], gb.MediumDate))
        xlist.Add("LOCATION: " & res["fldcomp"])
        xlist.Add("STATUS: " & res["fldcondition"])
        xlist.Add("REPAIR: " & modReportVar.GetDateTimeReport(res["fldrepairdate"], gb.MediumDate))
      Endif
      If xlist Then
        xstrqr = modDevAll.MakeQRCode(xlist.Join(gb.NewLine))
      Endif
      If xstrqr Then
        strAll = File.Load(xpath)
        strAll = Replace(strAll, "{FixedAssetQRPath}", xstrqr)
        stPath = Temp() & ".html"
        File.Save(stPath, strAll)
        modPrint.PrintPopUp("", stPath, "LabelSize")
      Endif

    Endif
  Endif

End

Public Sub mnudocs_Click()

  Dim hForm As FmOfficeDocs

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmOfficeDocs("FixedAssets", CStr($rData["fldid"]), False, "")
    hForm.ShowModal
  Endif

End

Public Sub txtdiscper_Change()

  If btnadd.Text = "Save" Then
    txtdiscamt.Value = Round((txtdiscper.Value / 100) * (txtqty.Value * txtrate.Value))
  Endif

End

Public Sub txttaxper_Change()

  If btnadd.Text = "Save" Then
    txttaxamt.Value = Round((txttaxper.Value / 100) * ((txtqty.Value * txtrate.Value) - txtdiscamt.Value))
  Endif

End

Public Sub txtqty_Change()

  If btnadd.Text = "Save" Then
    txtotalamt.Value = (txtqty.Value * txtrate.Value) - txtdiscamt.Value + txttaxamt.Value + txtexpense.Value
  Endif

End

Public Sub txtrate_Change()

  If btnadd.Text = "Save" Then
    txtotalamt.Value = (txtqty.Value * txtrate.Value) - txtdiscamt.Value + txttaxamt.Value + txtexpense.Value
  Endif

End

Public Sub txtdiscamt_Change()

  If btnadd.Text = "Save" Then
    txtotalamt.Value = (txtqty.Value * txtrate.Value) - txtdiscamt.Value + txttaxamt.Value + txtexpense.Value
  Endif

End

Public Sub txttaxamt_Change()

  If btnadd.Text = "Save" Then
    txtotalamt.Value = (txtqty.Value * txtrate.Value) - txtdiscamt.Value + txttaxamt.Value + txtexpense.Value
  Endif

End

Public Sub txtexpense_Change()

  If btnadd.Text = "Save" Then
    txtotalamt.Value = (txtqty.Value * txtrate.Value) - txtdiscamt.Value + txttaxamt.Value + txtexpense.Value
  Endif

End

Public Sub txtotalamt_Change()

  If btnadd.Text = "Save" Then
    txtotalamt.Value = (txtqty.Value * txtrate.Value) - txtdiscamt.Value + txttaxamt.Value + txtexpense.Value
  Endif

End

' Public Sub cmbsupplier_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbsupplier)
'   modFillContainer.RestrictComboToContent(cmbsupplier)
'
' End
'
' Public Sub cmbpayment_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbpayment)
'   modFillContainer.RestrictComboToContent(cmbpayment)
'
' End
'
' Public Sub cmbcondition_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbcondition)
'   modFillContainer.RestrictComboToContent(cmbcondition)
'
' End
