' Gambas class file

''PATIENT PROFILE
Private $UserRestrictPat As String[]

''MAIN FORM
Private $sTatus As String
Private $PopDiagno As Boolean
Private $UserRestrict As String[]
Private $PatientNum As String

Private $billModeTest As String
Private $billModeRadio As String
Private $billModePharmacy As String
Private $billModeProcedure As String
Private $billModeEquipment As String
Private $billModeService As String
Private $billModeOthers As String

Private $rData3 As Result
Private $aMyFields3 As String[]
Private $rData5 As Result
Private $aMyFields5 As String[]

Private $rPreDelData As Result
Private $aPreDelMyFields As String[]
Private $rOnDelData As Result
Private $aOnDelMyFields As String[]
Private $rPostDelData As Result
Private $aPostDelMyFields As String[]
Private $rBabyExData As Result
Private $aBabyExMyFields As String[]

Private $rPreDataData As Result
Private $aPreDataMyFields As String[]
Private $rOnDataData As Result
Private $aOnDataMyFields As String[]
Private $rPostDataData As Result
Private $aPostDataMyFields As String[]
Private $rBabyDataData As Result
Private $aBabyDataMyFields As String[]

Private $rData2 As Result
Private $aMyFields2 As String[]
Private $Category As String = "HMIS 3.61"
Private $sDepart As String = "Departmental"
Private $reference As String
Private $DELExams As String = "DELIVERY"

Public Sub _new(encid As String)

  Dim xlocat As String

  If encid Then
    txtencid.Text = encid
  Endif

  ''PATIENT PROFILE
  cmbpatheightunit.List = ["cm", "inch", "foot"]
  $UserRestrictPat = modBasic.$ClinicDisableCompo
  If MMain.$SISHAppMode = "HIS" Then
    txtbedno.ReadOnly = True
  Endif

  ''MAIN FORM
  cmbpatageunit.List = ["Hours", "Days", "Months", "Years"]
  cmbattentype.List = ["SBA trained ANM", "Skilled Health Professional", "Other Health Professional", "Home Attendant"]
  cmbpresent.List = ["Cephalic", "Breech", "Face", "Cord", "Shoulder"]
  cmbdelbaby.List = ["Live Baby", "Fresh Still Birth", "Macerated Still Birth"]
  cmbdeltype.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldelivery"))
  cmbcomplicat.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldelcomplication"))
  cmbdeformity.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldeldeformity"))
  cmblabour.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldellabour"))
  FillCustomFormMenu()
  FillCustomMenu()

  xlocat = modSettings.ShowSettingFromFIle("DeliveryForm/NurseList")
  If xlocat Then
    cmbnurse.List = modString.GetStringArrayFromFile(xlocat, True)
  Endif
  dtdelivery.Value = Now()
  $UserRestrict = modBasic.$ClinicDisableCompo

  $PopDiagno = False
  rbsingle.Value = True

  If $UserRestrictPat Then
    RestrictUserAccessPat()
  Endif
  If $UserRestrict Then
    UserAccessRestrict()
  Endif
  Setreference()
  ' txtdelicomment.DictionaryPath = modBasic.$dictPathList

  If txtencid.Text Then
    GetEncounterValue()
  Endif
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtencid.SetFocus
  Endif

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

''====================== PATIENT PROFILE =================================
Public Sub txtencid_Activate()

  GetEncounterValue()

End

Public Sub btnencidsearch_Click()

  If Not txtencid.Text Then
    txtencid.Text = PatSearch("Encounter")
  Endif

End

Public Sub mnusearmulti_Click()

  If Not txtencid.Text Then
    txtencid.Text = GetEncid()
  Endif

End

Public Sub btnwebcam_Click()

  If txtencid.Text Then
    GetEncounterValue()
  Else
    txtencid.Text = QRScanValue("")
  Endif

End

Private Sub GetEncounterValue()

  Dim res As Result
  Dim xallow As Boolean

  If Not txtpatientname.Text Then
    If Not txtencid.Text Then Return
    If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
      txtencid.SetFocus
      Return
    Endif

    ' If modPatientSub.LockEncounterDesk(Trim(txtencid.Text)) = False Then
    '   txtencid.Text = ""
    '   Message.Warning(("Encounter Locked"), ("OK"))
    '   ' Balloon.Delay = modBasic.$BalloonDelay
    '   txtencid.SetFocus
    ' Endif

    dtdob.Tag = ""
    If txtencid.Text Then
      If txtencid.Text = modBasic.$EncIdPrefix Then
      Else
        modSettings.SaveValuesToLog("LastValue/Encounter", Trim(txtencid.Text))
      Endif
      res = modDatabase.$myConn.Exec("select fldpatientval,flduserid from tblencounter where fldencounterval=&1", Trim(txtencid.Text))
      If res.Available = False Then
        modLinkDB.CheckEncDataRemote(Trim(txtencid.Text))
        txtencid.SetFocus
      Else
        If modBasic.$LockToOwnConsultant = "Yes" Then
          If res["flduserid"] = modBasic.$lbluser Then
            xallow = True
          Else
            xallow = False
          Endif
        Else
          xallow = True
        Endif
        If xallow = True Then
          txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
          If txtpatientname.Text Then
            txtgender.Text = modPatient.GetPatientSex(Trim(txtencid.Text))
            txtpatientaddress.Text = modPatient.GetPatientAddressByEnc(Trim(txtencid.Text))
            dtdob.Tag = modPatient.GetPatientBirthDay(Trim(txtencid.Text))
            modDateSub.GetAgeControlFromDate(dtdob.Tag, txtpatage, cmbpatageunit)

            $PatientNum = modPatient.GetPatientNoByEnc(Trim(txtencid.Text))
            $sTatus = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
            txtnow.Text = $sTatus
            txtbedno.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), $sTatus)
            txtpatdoa.Text = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(Trim(txtencid.Text)), gb.GeneralDate)
            txtpatweight.Value = modClinic.GetBodyWeight(Trim(txtencid.Text))
            btnconsult.Tag = modPatient.GetAttendingConsultant(Trim(txtencid.Text))
            btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
            modClinSub.GetPatientHeight(Trim(txtencid.Text), txtpatheight, cmbpatheightunit)
            modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
            UpdateTriage()
            Wait
            If modPatientSub.AllowEncIDHistory(Trim(txtencid.Text), modDatabase.$myConn) = True Then
              BlockDCButton()
              modImage.ShowPhotoSplash("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)))
              ''MAIN FORM
              BasicInfoPatient()
              txtencid.ReadOnly = True
            Else
              Me.Enabled = False
            Endif
          Else
            Message.Warning(("Encounter ID not found"), ("OK"))
            ' Balloon.Delay = modBasic.$BalloonDelay
            txtencid.SetFocus
          Endif
        Else
          Message.Warning("Not authorized", ("OK"))
        Endif
      Endif
    Endif
  Endif

End

Public Sub UpdateTriage()

  txtcolor.Background = modPatient.GetPatientColor(Trim(txtencid.Text))

End

Private Sub BlockDCButton()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  tlbtnaddheight.Enabled = xx
  tlbtnaddbed.Enabled = xx
  tlbtnadwt.Enabled = xx
  dtdob.Enabled = xx
  btnpic.Enabled = xx
  btnselectuser.Enabled = xx

End

Private Sub RestrictUserAccessPat()

  If $UserRestrictPat.Exist("Bed Assignment") Then
    tlbtnaddbed.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Weight") Then
    tlbtnadwt.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Height") Then
    tlbtnaddheight.Visible = False
  Endif

End

''------- Basic Parameters
Public Sub btnpic_Click()

  Dim hForm As FmPersonImage

  If txtencid.Text Then
    hForm = New FmPersonImage("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)), False)
    hForm.ShowModal
  Endif

End

Public Sub tlbtnaddheight_Click()

  If txtencid.Text Then
    If txtpatheight.Value Then
      If cmbpatheightunit.Text Then
        modClinSub.UpdatePatientHeight(Trim(txtencid.Text), txtpatheight.Value, cmbpatheightunit.Text)
        tlbtnaddheight.Enabled = False
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Public Sub tlbtnadwt_Click()

  If txtencid.Text Then
    If txtpatweight.Value Then
      modClinSub.AddGeneralParametersQuanti(Trim(txtencid.Text), "Body Weight", txtpatweight.Value)
      tlbtnadwt.Enabled = False
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub dtdob_Click()

  Dim dtdate As Date

  If txtencid.Text Then
    dtdate = GetDateValue("Date of Birth of " & txtpatientname.Text, "DOBirth", dtdob.Tag)
    If dtdate Then
      modPatientSub.UpdatePatDOB(Trim(txtencid.Text), dtdate)
      modDateSub.GetAgeControlFromDate(dtdate, txtpatage, cmbpatageunit)
      dtdob.Tag = dtdate
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
    Endif
  Endif

End

''------------Hospital related parameters
Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  If txtencid.Text Then
    xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$IPConsultUserList)
    If xMedUser And If xMedUser.Count Then
      btnconsult.Tag = xMedUser[0]
      btnconsult.Text = xMedUser[1]
    Else
      btnconsult.Tag = ""
      btnconsult.Text = ""
    Endif
    If btnconsult.Tag Then
      modPatientSub.UpdateAttendingConsultant(Trim(txtencid.Text), btnconsult.Tag)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub btnsms_Click()

  Dim xval As String

  If btnconsult.Tag Then
    xval = modDevice.SendSMSToInpatDoc(Trim(txtencid.Text), modGeneral.GetUserContact(btnconsult.Tag))
    If xval Then
      Message.Info(xval, ("OK"))
    Endif
  Endif

End

Public Sub tlbtnaddbed_Click()

  Dim xadmitId As String

  If txtencid.Text Then
    If txtnow.Text = "Admitted" Then
      txtbedno.Text = GetBedNumber(Trim(txtencid.Text))

    Else
      If modBasic.$WardAdmission = "Yes" Then
        If Message.Question(("Patient getting admitted. Are you sure?"), ("No"), ("Yes")) = 2 Then
          xadmitId = modPatientSub.GetPatientAdmission(Trim(txtencid.Text))
          txtnow.Text = "Admitted"
          txtbedno.Text = ""
          Me.Exec("Toastify({text: 'Patient Admitted', duration: 3000}).showToast()")
          ' Balloon.Delay = modBasic.$BalloonDelay
        Endif
      Endif

    Endif
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub tlbtnpayment_Click()

  If txtencid.Text Then
    modNonMedical.CurrentPayStatusMsg(Trim(txtencid.Text))
  Endif

End

Public Sub btnprofile_Click()

  Dim hForm As FmMinProfile

  hForm = New FmMinProfile(Trim(txtencid.Text))
  hForm.ShowModal()

End

''============================== MAIN FORM ================================
Private Sub BasicInfoPatient()

  If txtencid.Text Then
    GetDefaultBillingmodes()
    ButtonControl()
    If txtgender.Text = "Female" Then
      TabPanel1.Enabled = True
      mnurequest.Enabled = True
      mnuexam.Enabled = True
      NewDeliveryGrid()
    Else
      TabPanel1.Enabled = False
      mnurequest.Enabled = False
      mnuexam.Enabled = False
    Endif
    txtencid.ReadOnly = True

    modPatientSub.PopUpPatientForm(Trim(txtencid.Text), Me.Tag)
  Endif

End

Private Sub GetDefaultBillingmodes()

  Dim xpackage As String

  Select $sTatus
    Case "Admitted", "Discharged", "LAMA", "Death", "Refer", "Absconder"
      $billModeTest = modNonMedical.GetAutoIPBillingPack("Test", Trim(txtencid.Text))
      $billModeRadio = modNonMedical.GetAutoIPBillingPack("Radio", Trim(txtencid.Text))
      $billModePharmacy = modNonMedical.GetAutoIPBillingPack("Pharmacy", Trim(txtencid.Text))
      $billModeEquipment = modNonMedical.GetAutoIPBillingPack("Equipment", Trim(txtencid.Text))
      $billModeProcedure = modNonMedical.GetAutoIPBillingPack("Procedure", Trim(txtencid.Text))
      $billModeService = modNonMedical.GetAutoIPBillingPack("Service", Trim(txtencid.Text))
      $billModeOthers = modNonMedical.GetAutoIPBillingPack("Others", Trim(txtencid.Text))
    Case Else
      xpackage = modNonMedical.DefaultBillingScheme(Trim(txtencid.Text), modBasic.$compID)
      $billModeTest = xpackage
      $billModeRadio = xpackage
      $billModePharmacy = xpackage
      $billModeEquipment = xpackage
      $billModeProcedure = xpackage
      $billModeService = xpackage
      $billModeOthers = xpackage
  End Select

End

Public Sub mnulastenc_Click()

  txtencid.Text = modSettings.ShowLogValues("LastValue/Encounter")

End

Public Sub mnubtnbaby_Menu()

  If txtencid.Text Then
    mnubabyreport.Popup(mnubtnbaby)
  Endif

End

Private Sub ButtonControl()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  ''delivery addition
  btnaddbaby.Enabled = xx
  btneditbaby.Enabled = xx
  btnnewregist.Enabled = xx
  btnnewgender.Enabled = xx
  GridView3.Enabled = xx
  'predelivery
  btnpreflag.Enabled = xx
  btnpreedit.Enabled = xx
  btnpredel.Enabled = xx
  lstpredel.Enabled = xx
  grdpredel.Enabled = xx
  ''on delivery
  btnonflag.Enabled = xx
  btnonedit.Enabled = xx
  btnondel.Enabled = xx
  lstondel.Enabled = xx
  grdondel.Enabled = xx
  ''post delivery
  btnpostflag.Enabled = xx
  btnpostedit.Enabled = xx
  btnpostdel.Enabled = xx
  lstpostdel.Enabled = xx
  grdpostdel.Enabled = xx
  ''new born
  btnbabydob.Enabled = xx
  btnbabyflag.Enabled = xx
  btnbabyedit.Enabled = xx
  btnbabydel.Enabled = xx
  lstbabyexam.Enabled = xx
  grdbabyexam.Enabled = xx
  ''item used
  btnaddmed.Enabled = xx
  btndoserecord.Enabled = xx
  btnmedstatus.Enabled = xx
  btnivinfusion.Enabled = xx
  GridView5.Enabled = xx
  ''lab req
  mnulabrequest.Enabled = xx
  ''radio req
  mnuradioreq.Enabled = xx
  ''consult
  mnuconsreq.Enabled = xx
  ''monitoring
  mnumonitor.Enabled = xx
  ''plan proced
  mnumajor.Enabled = xx
  ''provisional diagnosis
  mnudiagnosis.Enabled = xx
  ''demographics
  mnudemog.Enabled = xx
  ''vital
  mnuessen.Enabled = xx
  ''event timing
  mnutiming.Enabled = xx

End

Private Sub UserAccessRestrict()

  If $UserRestrict.Exist("Delivery Addition") Then
    btnaddbaby.Visible = False
    btneditbaby.Visible = False
    btnnewregist.Visible = False
    btnnewgender.Visible = False
  Endif
  If $UserRestrict.Exist("Pre Delivery Examination") Then
    lstpredel.Enabled = False
    btnpreflag.Visible = False
    btnpreedit.Visible = False
    btnpredel.Visible = False
  Endif
  If $UserRestrict.Exist("On Delivery Examination") Then
    lstondel.Enabled = False
    btnonflag.Visible = False
    btnonedit.Visible = False
    btnondel.Visible = False
  Endif
  If $UserRestrict.Exist("Post Delivery Examination") Then
    lstpostdel.Enabled = False
    btnpostflag.Visible = False
    btnpostedit.Visible = False
    btnpostdel.Visible = False

  Endif
  If $UserRestrict.Exist("Newborn Examination") Then
    lstbabyexam.Enabled = False
    btnbabydob.Visible = False
    btnbabyflag.Visible = False
    btnbabyedit.Visible = False
    btnbabydel.Visible = False
  Endif

  If $UserRestrict.Exist("Pharmacy Request") Then
    btnaddmed.Visible = False
  Endif
  If $UserRestrict.Exist("Laboratory Request") Then
    mnulabrequest.Visible = False
  Endif
  If $UserRestrict.Exist("Radiology Request") Then
    mnuradioreq.Visible = False
  Endif
  If $UserRestrict.Exist("Consultation Plan") Then
    mnuconsreq.Visible = False
  Endif
  If $UserRestrict.Exist("Monitoring Plan") Then
    mnumonitor.Visible = False
  Endif
  If $UserRestrict.Exist("Procedure Plan") Then
    mnumajor.Visible = False
  Endif

  If $UserRestrict.Exist("Provisional Diagnosis") Then
    mnudiagnosis.Visible = False
  Endif
  If $UserRestrict.Exist("Demographics") Then
    mnudemog.Visible = False
  Endif
  If $UserRestrict.Exist("Essential Examinations") Then
    mnuessen.Visible = False
  Endif
  If $UserRestrict.Exist("Event Timing") Then
    mnutiming.Visible = False
  Endif

  If $UserRestrict.Exist("Medicine Dosing") Then
    btndoserecord.Visible = False
    btnmedstatus.Visible = False
  Endif
  If $UserRestrict.Exist("IV Infusion") Then
    btnivinfusion.Visible = False
  Endif

End

Public Sub btnblankform_Click()

  Me.Parent.DeleteChildren()
  modGeneralMain.LoadDeliveryForm()

End

''============================= CUSTOM MENUS ================
Private Sub FillCustomMenu()

  Dim xform1 As String
  Dim xform2 As String
  Dim xform3 As String
  Dim xform4 As String
  Dim xform5 As String
  Dim xform6 As String
  Dim xform7 As String
  Dim xform8 As String
  Dim xform9 As String
  Dim xform10 As String

  xform1 = modSettings.ShowSettingFromFIle("CustomReport1/Name")
  xform2 = modSettings.ShowSettingFromFIle("CustomReport2/Name")
  xform3 = modSettings.ShowSettingFromFIle("CustomReport3/Name")
  xform4 = modSettings.ShowSettingFromFIle("CustomReport4/Name")
  xform5 = modSettings.ShowSettingFromFIle("CustomReport5/Name")
  xform6 = modSettings.ShowSettingFromFIle("CustomReport6/Name")
  xform7 = modSettings.ShowSettingFromFIle("CustomReport7/Name")
  xform8 = modSettings.ShowSettingFromFIle("CustomReport8/Name")
  xform9 = modSettings.ShowSettingFromFIle("CustomReport9/Name")
  xform10 = modSettings.ShowSettingFromFIle("CustomReport10/Name")

  If xform1 Then
    mnucust1.Title = xform1
    mnucust1.Tag = "CustomReport1"
    mnucust1.Visible = True
  Endif

  If xform2 Then
    mnucust2.Title = xform2
    mnucust2.Tag = "CustomReport2"
    mnucust2.Visible = True
  Endif

  If xform3 Then
    mnucust3.Title = xform3
    mnucust3.Tag = "CustomReport3"
    mnucust3.Visible = True
  Endif

  If xform4 Then
    mnucust4.Title = xform4
    mnucust4.Tag = "CustomReport4"
    mnucust4.Visible = True
  Endif

  If xform5 Then
    mnucust5.Title = xform5
    mnucust5.Tag = "CustomReport5"
    mnucust5.Visible = True
  Endif

  If xform6 Then
    mnucust6.Title = xform6
    mnucust6.Tag = "CustomReport6"
    mnucust6.Visible = True
  Endif

  If xform7 Then
    mnucust7.Title = xform7
    mnucust7.Tag = "CustomReport7"
    mnucust7.Visible = True
  Endif

  If xform8 Then
    mnucust8.Text = xform8
    mnucust8.Tag = "CustomReport8"
    mnucust8.Visible = True
  Endif

  If xform9 Then
    mnucust9.Title = xform9
    mnucust9.Tag = "CustomReport9"
    mnucust9.Visible = True
  Endif

  If xform10 Then
    mnucust10.Title = xform10
    mnucust10.Tag = "CustomReport10"
    mnucust10.Visible = True
  Endif

End

Private Sub FillCustomFormMenu()

  Dim xform1 As String
  Dim xform2 As String
  Dim xform3 As String
  Dim xform4 As String
  Dim xform5 As String
  Dim xform6 As String
  Dim xform7 As String
  Dim xform8 As String
  Dim xform9 As String
  Dim xform10 As String

  xform1 = modSettings.ShowSettingForReport("CustomForm1/Form_Name")
  xform2 = modSettings.ShowSettingForReport("CustomForm2/Form_Name")
  xform3 = modSettings.ShowSettingForReport("CustomForm3/Form_Name")
  xform4 = modSettings.ShowSettingForReport("CustomForm4/Form_Name")
  xform5 = modSettings.ShowSettingForReport("CustomForm5/Form_Name")
  xform6 = modSettings.ShowSettingForReport("CustomForm6/Form_Name")
  xform7 = modSettings.ShowSettingForReport("CustomForm7/Form_Name")
  xform8 = modSettings.ShowSettingForReport("CustomForm8/Form_Name")
  xform9 = modSettings.ShowSettingForReport("CustomForm9/Form_Name")
  xform10 = modSettings.ShowSettingForReport("CustomForm10/Form_Name")

  If xform1 Then
    mnucustform1.Title = xform1
    mnucustform1.Tag = "CustomForm1"
    mnucustform1.Visible = True
  Endif

  If xform2 Then
    mnucustform2.Title = xform2
    mnucustform2.Tag = "CustomForm2"
    mnucustform2.Visible = True
  Endif

  If xform3 Then
    mnucustform3.Title = xform3
    mnucustform3.Tag = "CustomForm3"
    mnucustform3.Visible = True
  Endif

  If xform4 Then
    mnucustform4.Title = xform4
    mnucustform4.Tag = "CustomForm4"
    mnucustform4.Visible = True
  Endif

  If xform5 Then
    mnucustform5.Title = xform5
    mnucustform5.Tag = "CustomForm5"
    mnucustform5.Visible = True
  Endif

  If xform6 Then
    mnucustform6.Title = xform6
    mnucustform6.Tag = "CustomForm6"
    mnucustform6.Visible = True
  Endif

  If xform7 Then
    mnucustform7.Title = xform7
    mnucustform7.Tag = "CustomForm7"
    mnucustform7.Visible = True
  Endif

  If xform8 Then
    mnucustform8.Title = xform8
    mnucustform8.Tag = "CustomForm8"
    mnucustform8.Visible = True
  Endif

  If xform9 Then
    mnucustform9.Title = xform9
    mnucustform9.Tag = "CustomForm9"
    mnucustform9.Visible = True
  Endif

  If xform10 Then
    mnucustform10.Title = xform10
    mnucustform10.Tag = "CustomForm10"
    mnucustform10.Visible = True
  Endif

End

Public Sub mnucust1_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust1.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust2_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust2.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust3_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust3.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust4_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust4.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust5_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust5.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust6_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust6.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust7_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust7.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust8_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust8.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust9_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust9.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucust10_Click()

  Dim hCls As CReportCustom

  If txtencid.Text Then
    hCls = New CReportCustom(Trim(txtencid.Text), mnucust10.Tag, "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub mnucustform1_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform1.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform1.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform2_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform2.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform2.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform3_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform3.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform3.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform4_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform4.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform4.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform5_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform5.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform5.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform6_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform6.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform6.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform7_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform7.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform7.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform8_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform8.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform8.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform9_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform9.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform9.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

Public Sub mnucustform10_Click()

  Dim xx As String[]
  Dim yy As String[]
  Dim hForm As FmMultiChart

  If txtencid.Text Then
    xx = Split(modSettings.ShowSettingForReport(mnucustform10.Tag & "/" & "Form_Exam"), ";")
    yy = Split(modSettings.ShowSettingForReport(mnucustform10.Tag & "/" & "Form_Test"), ";")
    hForm = New FmMultiChart(Trim(txtencid.Text), xx, yy, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    hForm.ShowModal
  Endif

End

''============================ MAIN MENUS =========================
Public Sub mnulabrequest_Click()

  Dim hForm As FmTestList

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Test") = True Then
      hForm = New FmTestList(Trim(txtencid.Text), $billModeTest)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnuradioreq_Click()

  Dim hForm As FmRadioList

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Radio") = True Then
      hForm = New FmRadioList(Trim(txtencid.Text), $billModeRadio)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnuconsreq_Click()

  Dim hForm As FmMiniConsult

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Service") = True Then
      hForm = New FmMiniConsult(Trim(txtencid.Text), $billModeService)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnumajor_Click()

  Dim hForm As FmMajorProced

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Procedure") = True Then
      hForm = New FmMajorProced(Trim(txtencid.Text), $billModeProcedure)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnumonitor_Click()

  Dim hForm As FmReqVital

  If txtencid.Text Then
    hForm = New FmReqVital(Trim(txtencid.Text), "Delivery")
    hForm.ShowModal
  Endif

End

Public Sub mnudiagnosis_Click()

  Dim sName As String[]

  If txtencid.Text Then
    sName = DiagnoObstetrics(Trim(txtencid.Text), True)
    If sName Then
      modPatientGeneral.AddPatientFindings("Provisional Diagnosis", Trim(txtencid.Text), sName[0], sName[1], sName[1])
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub mnudemog_Click()

  Dim hForm As FmPatdemograph

  If txtencid.Text Then
    hForm = New FmPatdemograph(Trim(txtencid.Text), "Clinical")
    hForm.ShowModal
  Endif

End

Public Sub mnumaternal_Click()

  Dim hForm As FmMaternalMobile

  If txtencid.Text Then
    hForm = New FmMaternalMobile(Trim(txtencid.Text))
    hForm.ShowModal
  Endif

End

Public Sub mnuvaccination_Click()

  Dim hForm As FmVaccine

  If txtencid.Text Then
    hForm = New FmVaccine(Trim(txtencid.Text))
    hForm.ShowModal
  Endif

End

Public Sub mnuessen_Click()

  Dim hForm As FmVital

  If txtencid.Text
    hForm = New FmVital(Trim(txtencid.Text))
    hForm.ShowModal
    txtcolor.Background = modPatient.GetPatientColor(Trim(txtencid.Text))
  Endif

End

Public Sub mnutiming_Click()

  Dim hForm As FmEventTime

  If txtgender.Text = "Female" Then
    hForm = New FmEventTime(Trim(txtencid.Text), "Delivery")
    hForm.ShowModal
  Endif

End

''--------------- Reports -------------------
Public Sub mnulabrepo_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatientLaboratoryReport(Trim(txtencid.Text), modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnuradiorepo_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowPatRadioReportbyEncID(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnurepoall_Click()

  Dim xPath As String

  If txtencid.Text Then
    xPath = modCHTMLPatient.ShowDeliveryReportFull(Trim(txtencid.Text))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnucomplate_Click()

  If txtencid.Text Then
    modPatReports.GetSelectedPatientValues(Trim(txtencid.Text), modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
  Endif

End

''---- History --------------
Public Sub mnuhistory_Click()

  Dim res As Result
  Dim hForm As FRequest
  Dim xpatno As String

  If txtencid.Text Then
    xpatno = $PatientNum
    If modPatientSub.GetPatPassCheck(modDatabase.$myConn, xpatno) = True Then
      res = modDatabase.$myConn.Exec("select fldencounterval,fldregdate,fldadmission,fldcurrlocat,flduserid,flddisctype from tblencounter where fldpatientval=&1 ORDER BY fldregdate", xpatno)
      hForm = New FRequest(res, "Patient Encounters", "PatientEncounters", False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnuallhist_Click()

  Dim xPath As String
  Dim xpatno As String

  Dim xList As String[]
  Dim xvarList As Variant[]
  Dim examlist As String[]
  Dim lablist As String[]
  Dim radiolist As String[]

  If txtencid.Text Then
    xpatno = $PatientNum
    xList = SelectMedBody("")
    Wait
    If xList Then
      If xList.Exist("Selected Investigations") Then
        xvarList = ListViewMulti(Trim(txtencid.Text))
        If xvarList Then
          examlist = xvarList[0]
          lablist = xvarList[1]
          radiolist = xvarList[2]
        Endif
      Endif
    Endif

    xPath = modPatReports.ShowAllEncounterReport(Trim(txtencid.Text), xList, examlist, lablist, radiolist, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
  Endif

End

'---File menus ----
Public Sub mnuregister_Click()

  If Not txtencid.Text Or If txtencid.Text = modBasic.$EncIdPrefix Then
    If modBasic.$regF1Clinic = "Yes" Or If modBasic.$regF1Clinic = "Partial" Then
      txtencid.Text = RegistrationNewForm()
    Else If modBasic.$regF1Clinic = "Full" Then
      txtencid.Text = RegistrationForm(False)
    Endif
  Endif

End

''========================== MAIN TABS =============================
Public Sub TabPanel1_Click()

  If txtgender.Text = "Female" Then
    If TabPanel1.Index = 0 Then
      NewDeliveryGrid()
    Else If TabPanel1.Index = 1 Then
      PreDeliveryTree()
      FillPreDelivery()
    Else If TabPanel1.Index = 2 Then
      OnDeliveryTree()
      FillonDelivery()
    Else If TabPanel1.Index = 3 Then
      PostDeliveryTree()
      FillPostDelivery()
    Else If TabPanel1.Index = 4 Then
      BabyExaminationTree()
      cmbbabyencid.List = GetEncListConfinement(Trim(txtencid.Text))
    Else If TabPanel1.Index = 5 Then
      FillDosingGrid("Current")
    Else If TabPanel1.Index = 6 Then
      LoadTreeData3()
      ShowClinicTable3()
    Endif
  Endif

End

Private Function GetEncListConfinement(encid As String) As String[]

  Dim res As Result
  Dim xxx As String[]

  res = modDatabase.$myConn.Exec("select fldencounterval from tblencounter where fldpatientval in(select fldbabypatno from tblconfinement where fldencounterval=&1)", encid)
  xxx = modControlSub.GetDirectFillresult(res)
  Return xxx

End

' Public Sub Form_KeyRelease()
'
'   If Key.Code = Key["O"] And If Key.Control Then
'     btnwebcam_Click()
'   Else If Key.Code = Key["F"] And If Key.Control Then
'   Else If Key.Code = Key["X"] And If Key.Control Then
'     Me.Close()
'   Else If Key.Code = Key.F1 Then
'     TabPanel1.Index = 0
'   Else If Key.Code = Key.F2 Then
'     TabPanel1.Index = 1
'   Else If Key.Code = Key.F3 Then
'     TabPanel1.Index = 2
'   Else If Key.Code = Key.F4 Then
'     TabPanel1.Index = 3
'   Else If Key.Code = Key.F5 Then
'     TabPanel1.Index = 4
'   Else If Key.Code = Key.F6 Then
'     TabPanel1.Index = 5
'   Else
'     modGeneralmain.GoToNextControlTab()
'   Endif
'
' End

''=========================== NEW DELIVERY ==================
Public Sub btnaddnurse_Click()

  Dim xpath As String

  ' If Dialog.OpenFile() Then Return
  ' xpath = Dialog.Path
  If Exist(xpath) Then
    modSettings.SaveSettingsToFile("DeliveryForm/NurseList", xpath)
    cmbnurse.List = modString.GetStringArrayFromFile(xpath, True)
  Endif

End

Public Sub txtdelwt_Change()

  If txtdelwt.Value > 6000 Then
    Message.Warning("Incorrect weight", "OK")
    txtdelwt.Value = 0
  Endif

End

Public Sub btndeltype_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tbldelivery")
  hForm.ShowModal
  cmbdeltype.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldelivery"))

End

Public Sub btncomplicat_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tbldelcomplication")
  hForm.ShowModal
  cmbcomplicat.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldelcomplication"))

End

Public Sub btndeformity_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tbldeldeformity")
  hForm.ShowModal
  cmbdeformity.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldeldeformity"))

End

Public Sub btnlabour_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tbldellabour")
  hForm.ShowModal
  cmblabour.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tbldellabour"))

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtdelivery.Value))
  If xx Then
    dtdelivery.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

' Public Sub cmbdeltype_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbdeltype)
'   modFillContainer.RestrictComboToContent(cmbdeltype)
'
' End
'
' Public Sub cmbdelbaby_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbdelbaby)
'   modFillContainer.RestrictComboToContent(cmbdelbaby)
'
' End

' Public Sub cmbdelbaby_Click()
'
'   If cmbdelbaby.Text = "Live Baby" Then
'     Panel2.Enabled = True
'   Else
'     Panel2.Enabled = False
'   Endif
'
' End

Public Sub btnselectphysician_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Delivery Physician"), modBasic.$IPConsultUserList)
  If xMedUser And If xMedUser.Count Then
    btnphysician.Tag = xMedUser[0]
    btnphysician.Text = xMedUser[1]
  Else
    btnphysician.Tag = ""
    btnphysician.Text = ""
  Endif

End

Public Sub btnaddbaby_Click()

  Dim res As Result
  Dim res2 As Result
  Dim xIntVal As String
  Dim obsref As String

  If txtencid.Text And If cmbdeltype.Text And If cmbdelbaby.Text Then
    If cmbattentype.Text Then
      If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
        If dtdelivery.Value > Now() Then
          Message.Warning("Incorrect Date and Time", ("OK"))
        Else

          obsref = modPatient.GetLastObstReference($PatientNum)
          If obsref Then
            modDatabase.$myConn.Begin
            res = modDatabase.$myConn.Create("tblconfinement")
            res["fldencounterval"] = Trim(txtencid.Text)
            res["flddeltime"] = dtdelivery.Value
            res["fldpresent"] = cmbpresent.Text
            res["flddeltype"] = cmbdeltype.Text
            res["flddelresult"] = cmbdelbaby.Text
            res["flddelphysician"] = btnphysician.Tag
            res["flddelnurse"] = cmbnurse.Text
            res["fldcomplication"] = cmbcomplicat.Text
            res["flddeformity"] = cmbdeformity.Text
            res["fldlabour"] = cmblabour.Text
            res["fldbloodloss"] = txtdelblloss.Value
            res["flddelwt"] = txtdelwt.Value
            res["fldbabypatno"] = ""
            res["fldcomment"] = txtdelicomment.RichText
            res["flddelassist"] = cmbattentype.Text
            If cmbattentype.Text = "Home Attendant" Then
              res["flddelspot"] = "Home"
            Else
              res["flddelspot"] = "This facility"
            Endif
            res["flduserid"] = modBasic.$lbluser
            res["fldtime"] = Now()
            res["fldcomp"] = modBasic.$compID
            res["fldsave"] = True
            res["fldreference"] = obsref
            res["flduptime"] = ""
            res["xyz"] = False
            If MMain.$WebEntry = True Then
              xIntVal = modString.GetDateString(Now())
              res["fldid"] = CLong(xIntVal)
              res["fldrepoid"] = modMisc.GetWebIndexStr(xIntVal)
              res["fldrepodate"] = Now()
              res["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
              res["fldhospcode"] = modBasic.$HospCode
            Endif
            res.Update
            res2 = modDatabase.$myConn.Edit("tblobstetrics", "flddelref=&1", obsref)
            If res2.Available Then
              res2.MoveLast
              res2["fldgestation"] = DateDiff(res2["fldlast"], dtdelivery.Value, gb.Day)
              res2.Update
            Endif
            modClinSub.AddGeneralParametersQuali(Trim(txtencid.Text), "Pregnancy Status", "Breast feeding")
            modDatabase.$myConn.Commit
            NewDeliveryGrid()
            Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

          Else
            mnudiagnosis_Click()
          Endif

        Endif
      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub rbsingle_Click()

  NewDeliveryGrid()

End

Public Sub rbmultiple_Click()

  NewDeliveryGrid()

End

Private Sub NewDeliveryGrid()

  Dim sql As String

  sql = "select fldid,flddeltime,flddeltype,flddelresult,flddelwt,flddelphysician,fldbabypatno,flddeltime,fldbabypatno,fldcomment,fldid from tblconfinement where fldencounterval=&1"
  $rData3 = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text))
  $aMyFields3 = New String[]
  modGridView.ReadSmallData(GridView3, $rData3, $aMyFields3)

  If $rData3.Available Then
    If rbsingle.Value Then
      btnaddbaby.Enabled = False
    Else
      btnaddbaby.Enabled = True
    Endif
  Else
    btnaddbaby.Enabled = True
  Endif

  With GridView3
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(120 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Hidden = True
    .Columns[8].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True

    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "DelMode"
    .Columns[3].Text = "DelResult"
    .Columns[4].Text = "Weigh(Gm)"
    .Columns[5].Text = "Consultant"
    .Columns[6].Text = "PatNo"
    .Columns[8].Text = "Gender"

  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData3.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.GeneralDate)
  Else If Column = 5 Then
    Data.Text = modGeneral.GetUserFullName($rData3[$aMyFields3[Column]])
  Else If Column = 8 Then
    Data.Text = modPatient.PatientGenderByPatNo($rData3[$aMyFields3[Column]])
  Else
    Data.Text = $rData3[$aMyFields3[Column]]
  Endif

End

Public Sub btneditbaby_Click()

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim xbool As Boolean = False
  Dim obsref As String

  If GridView3.Selection.Count Then
    If txtencid.Text And If cmbdeltype.Text And If cmbdelbaby.Text Then
      If dtdelivery.Value > Now() Then
        Message.Warning("Incorrect Date and Time", ("OK"))
      Else
        $rData3.MoveTo(GridView3.Selection[0])

        modDatabase.$myConn.Begin
        res = modDatabase.$myConn.Edit("tblconfinement", "fldid=&1", $rData3["fldid"])
        If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
          obsref = res["fldreference"]
          res["flddeltime"] = dtdelivery.Value
          res["fldpresent"] = cmbpresent.Text
          res["flddeltype"] = cmbdeltype.Text
          res["flddelresult"] = cmbdelbaby.Text
          res["flddelphysician"] = btnphysician.Tag
          res["flddelnurse"] = cmbnurse.Text
          res["fldcomplication"] = cmbcomplicat.Text
          res["flddeformity"] = cmbdeformity.Text
          res["fldlabour"] = cmblabour.Text
          res["fldbloodloss"] = txtdelblloss.Value
          res["flddelwt"] = txtdelwt.Value
          res["fldcomment"] = txtdelicomment.RichText
          res["flddelassist"] = cmbattentype.Text
          res["flduptime"] = Now()
          res["flduserid"] = modBasic.$lbluser
          res["xyz"] = False
          res.Update
          If $rData3["fldbabypatno"] Then
            res1 = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1", $rData3["fldbabypatno"])
            res1["fldptbirday"] = dtdelivery.Value
            res1["xyz"] = False
            res1.Update
          Endif
          res2 = modDatabase.$myConn.Edit("tblobstetrics", "flddelref=&1", obsref)
          If res2.Available Then
            res2.MoveLast
            res2["fldencounterval"] = Trim(txtencid.Text)
            res2["fldgestation"] = DateDiff(res2["fldlast"], dtdelivery.Value, gb.Day)
            res2.Update
          Endif
          xbool = True
          modDatabase.$myConn.Commit
        Else
          modDatabase.$myConn.Rollback
          Message.Warning("Authorization with " & res["flduserid"], ("OK"))
        Endif

        If xbool = True Then
          NewDeliveryGrid()
          Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
        Endif

      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub GridView3_Select()

  ShowRowDelivered()

End

Private Sub ShowRowDelivered()

  Dim res As Result

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    res = modDatabase.$myConn.Exec("select flddeltime,fldpresent,flddeltype,flddelresult,fldcomplication,flddeformity,fldlabour,fldbloodloss,flddelwt,flddelphysician,flddelnurse,fldcomment,flddelassist from tblconfinement where fldid=&1", $rData3["fldid"])
    If res.Available Then
      dtdelivery.Value = res["flddeltime"]
      cmbpresent.Text = res["fldpresent"]
      If modBasic.$AppSelect2JS = "Enable" Then
        ' modJavaScript.UpdateSelect2Combo(cmbdeltype, res["flddeltype"])
      Endif
      cmbdeltype.Text = res["flddeltype"]
      If modBasic.$AppSelect2JS = "Enable" Then
        ' modJavaScript.UpdateSelect2Combo(cmbdelbaby, res["flddelresult"])
      Endif
      cmbdelbaby.Text = res["flddelresult"]
      btnphysician.Tag = res["flddelphysician"]
      btnphysician.Text = modGeneral.GetUserFullName(btnphysician.Tag)
      cmbnurse.Text = res["flddelnurse"]
      If modBasic.$AppSelect2JS = "Enable" Then
        ' modJavaScript.UpdateSelect2Combo(cmbattentype, res["flddelassist"])
      Endif
      cmbattentype.Text = res["flddelassist"]
      cmbcomplicat.Text = res["fldcomplication"]
      cmbdeformity.Text = res["flddeformity"]
      If modBasic.$AppSelect2JS = "Enable" Then
        ' modJavaScript.UpdateSelect2Combo(cmblabour, res["fldlabour"])
      Endif
      cmblabour.Text = res["fldlabour"]
      txtdelblloss.Value = res["fldbloodloss"]
      txtdelwt.Value = res["flddelwt"]
      txtdelicomment.RichText = res["fldcomment"]

    Endif
  Endif

End

Public Sub btnnewregist_Click()

  Dim xstr As String
  Dim xx As String
  Dim res As Result
  Dim sex As String

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    If $rData3["flddelresult"] = "Live Baby" Then
      If Not $rData3["fldbabypatno"] Then

        xstr = "<b>Mother Name</b> : " & txtpatientname.Text
        xstr = xstr & "<br>" & "<b>Delivery Date</b> : " & modReportVar.GetDateTimeReport($rData3["flddeltime"], gb.GeneralDate)
        xstr = xstr & "<br>" & "<b>Delivery Type</b> : " & $rData3["flddeltype"]
        xstr = xstr & "<br>" & "<b>Delivery Weight</b> : " & CStr($rData3["flddelwt"]) & " GRAMS"
        xstr = xstr & "<br>" & "<b>Select Gender of Baby</b>"
        sex = InputCombo(xstr, txtencid.Text, ["Male", "Female", "Other"], "", True)
        If sex Then
          xx = AddBabyDetail(sex, $rData3["flddeltime"])
          If xx Then
            res = modDatabase.$myConn.Edit("tblconfinement", "fldid=&1", $rData3["fldid"])
            res["fldbabypatno"] = xx
            res["fldbabyref"] = modBillLock.GetHMISRegVal("LiveBaby")
            res["xyz"] = False
            res.Update
            NewDeliveryGrid()
          Endif
        Endif

      Endif
    Endif
  Endif

End

Public Sub btnnewgender_Click()

  Dim sex As String
  Dim res As Result

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    If $rData3["fldbabypatno"] Then
      sex = InputCombo("Gender of Baby", txtencid.Text, ["Female", "Male", "Other"], modPatient.PatientGenderByPatNo($rData3["fldbabypatno"]), True)
      If sex Then
        res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1", $rData3["fldbabypatno"])
        res["fldptsex"] = sex
        res["xyz"] = False
        res.Update
        NewDeliveryGrid()
      Endif
    Endif
  Endif

End

Private Function AddBabyDetail(sex As String, dob As Date) As String

  Dim $patno As String
  Dim $benc As String
  Dim sql As String
  Dim rs1 As Result
  Dim rs2 As Result
  Dim res As Result
  Dim res1 As Result
  Dim idLock As Boolean
  Dim xdisc As String

  If $PatientNum Then
    sql = "select fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptguardian,fldemail,fldrelation,fldptcode,fldencrypt from tblpatientinfo where fldpatientval=&1"                                                 ''
    rs1 = modDatabase.$myConn.Exec(sql, $PatientNum)
    rs2 = modDatabase.$myConn.Exec("select flddisctype,fldcashcredit,fldbillingmode from tblencounter where fldencounterval=&1", Trim(txtencid.Text))

    idLock = modBillLock.LockTableForID("Registration")
    If idLock = True Then
      modDatabase.$myConn.Begin

      $patNo = modBillLock.PatientNoValue()
      If $patNo Then
        res = modDatabase.$myConn.Create("tblpatientinfo")
        res["fldpatientval"] = $patNo
        If modBasic.$SuperUser = True Then
          res["fldptnamefir"] = "I/O " & modPassword.DecryptPatData(rs1["fldptnamefir"], rs1["fldencrypt"])
          res["fldptnamelast"] = modPassword.DecryptPatData(rs1["fldptnamelast"], rs1["fldencrypt"])
        Else
          res["fldptnamefir"] = "I/O " & rs1["fldptnamefir"]
          res["fldptnamelast"] = rs1["fldptnamelast"]
        Endif
        res["fldethniccode"] = rs1["fldethniccode"]
        res["fldptaddvill"] = rs1["fldptaddvill"]
        res["fldptaddward"] = rs1["fldptaddward"]
        res["fldptadddist"] = rs1["fldptadddist"]
        res["fldptsex"] = sex
        res["fldptcontact"] = ""
        res["fldptguardian"] = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
        res["fldrelation"] = "Mother"
        res["fldptbirday"] = dob
        res["fldptadmindate"] = Now()
        res["fldemail"] = ""
        res["fldptcode"] = rs1["fldptcode"]
        res["flddiscount"] = ""
        res["fldadmitfile"] = ""
        res["fldcomment"] = ""
        res["fldencrypt"] = modBasic.$PatInfoEncrypt
        res["fldpassword"] = ""

        res["flduserid"] = modBasic.$lbluser
        res["fldtime"] = Now()
        res["fldupuser"] = ""
        res["flduptime"] = ""
        res["xyz"] = False
        If MMain.$WebEntry = True Then
          res["fldrepodate"] = Now()
          res["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
          res["fldhospcode"] = modBasic.$HospCode
        Endif
        res.Update()

        $benc = modBillLock.EncounterIDValue()
        If $benc Then
          xdisc = modNonMedical.GetOffspringPackage(rs2["flddisctype"])
          res1 = modDatabase.$myConn.Create("tblencounter")
          res1["fldencounterval"] = $benc
          res1["fldpatientval"] = $patNo
          If modBasic.$RegistNewbornLocat Then
            res1["fldadmitlocat"] = modBasic.$RegistNewbornLocat
          Else
            res1["fldadmitlocat"] = "Birthing"
          Endif
          If xdisc Then
            res1["flddisctype"] = xdisc
          Else
            res1["flddisctype"] = rs2["flddisctype"]
          Endif
          res1["fldbillingmode"] = rs2["fldbillingmode"]
          res1["fldadmission"] = "Recorded"
          res1["fldregdate"] = Now()
          res1["fldcomp"] = modBasic.$compID
          res1["fldvisit"] = "NEW"
          res1["fldfollow"] = "New"

          res1["fldcurrlocat"] = modBasic.$RegistNewbornLocat
          res1["flddoa"] = ""
          res1["flddod"] = ""
          res1["fldheight"] = ""
          res1["flduserid"] = ""
          res1["fldcashdeposit"] = 0
          res1["fldcashcredit"] = 0
          res1["fldcharity"] = 0
          res1["fldvalidity"] = DateAdd(Now(), gb.Year, 1)
          res1["fldfollowdate"] = ""
          res1["fldreferto"] = ""

          res1["fldregistid"] = modPatient.GetPatientHMISRegVal($patNo)
          res1["fldadmitid"] = ""
          res1["xyz"] = False
          If MMain.$WebEntry = True Then
            res1["fldrepodate"] = Now()
            res1["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
            res1["fldhospcode"] = modBasic.$HospCode
          Endif
          res1.Update()
          modPatientSub.EnterPatientImpDate($benc, "Recorded", "")
        Endif  '' if baby encid exist

      Else
        modDatabase.$myConn.Rollback
        modBillLock.ReleaseLockTable("Registration")
      Endif '' if baby pat no exist

      modDatabase.$myConn.Commit
      modBillLock.ReleaseLockTable("Registration")
    Endif
  Endif   ''mother patno

  Return $patNo

Catch
  modDatabase.$myConn.Rollback
  $patNo = ""
  If idLock = True Then
    modBillLock.ReleaseLockTable("Registration")
  Endif
  modHelpVariable.CreateErrorReport()

End

Public Sub mnudeathreport_Click()

  Dim hCls As CReportCustom

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    If $rData3["flddeltype"] = "Live Baby" Then
    Else
      hCls = New CReportCustom(Trim(txtencid.Text), "Death Certificate", "ReportSize", MMain.$defUnit)
      hCls.Preview()
    Endif
  Endif

End

Public Sub mnueditcomm_Click()

  Dim xx As Variant[]
  Dim res As Result

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    xx = GetQualiValues(Trim(txtencid.Text), $rData3["fldcomment"], "Exam")
    If xx Then
      res = modDatabase.$myConn.Edit("tblconfinement", "fldid=&1", $rData3["fldid"])
      res["fldcomment"] = xx[0]
      res["xyz"] = False
      res.Update
      NewDeliveryGrid()
    Endif
  Endif

End

Public Sub mnudeldelivery_Click()

  If GridView3.Selection.Count Then
    $rData3.MoveTo(GridView3.Selection[0])
    If Message.Question("Do you want to delete this delivery record ?", ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblconfinement", "fldid=&1 and fldbabypatno IS NULL", $rData3["fldid"])
      NewDeliveryGrid()
    Endif
  Endif

End

'''====================== COMMON FOR PRE/ON/POST DELIVERY ====================
Private Function GetDeliveryExamCategory(sCateg As String) As String

  Dim xx As String

  If sCateg = "Pre Delivery Exam" Then
    xx = "Pre Delivery"
  Else If sCateg = "On Delivery Exam" Then
    xx = "On Delivery"
  Else If sCateg = "Post Delivery Exam" Then
    xx = "Post Delivery"
  Else If sCateg = "Baby Examination" Then
    xx = "Baby Examination"
  Endif
  Return xx

End

''---------------- Tree View List -----------------
Private Sub GetTreeListResult(sType As String) As Result

  Dim res As Result

  res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldsysconst,fldexamid,fldtanswertype from tbldeptexam where flddept=&1", sType)
  Return res

End

Private Sub ResizeTreeView(TreeView1 As WebTable)

  With TreeView1
    ' .Columns[0].Width = 300 * modBasic.$AppWidthRatio
    .Columns[1].Hidden = True
    .Columns[2].Hidden = True
    .Columns[3].Hidden = True
    .Columns[4].Hidden = True
  End With

End

''pre-del
Private Sub PreDeliveryTree()

  $rPreDelData = GetTreeListResult("Pre Delivery")
  $aPreDelMyFields = New String[]
  modGridView.ReadSmallData(lstpredel, $rPreDelData, $aPreDelMyFields)
  ResizeTreeView(lstpredel)

End

Public Sub lstpredel_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rPreDelData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rPreDelData[$aPreDelMyFields[Column]]

End

''on-del
Private Sub OnDeliveryTree()

  $rOnDelData = GetTreeListResult("On Delivery")
  $aOnDelMyFields = New String[]
  modGridView.ReadSmallData(lstondel, $rOnDelData, $aOnDelMyFields)
  ResizeTreeView(lstondel)

End

Public Sub lstondel_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rOnDelData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rOnDelData[$aOnDelMyFields[Column]]

End

''post-del
Private Sub PostDeliveryTree()

  $rPostDelData = GetTreeListResult("Post Delivery")
  $aPostDelMyFields = New String[]
  modGridView.ReadSmallData(lstpostdel, $rPostDelData, $aPostDelMyFields)
  ResizeTreeView(lstpostdel)

End

Public Sub lstpostdel_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rPostDelData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rPostDelData[$aPostDelMyFields[Column]]

End

''baby-exam
Private Sub BabyExaminationTree()

  $rBabyExData = GetTreeListResult("Baby Examination")
  $aBabyExMyFields = New String[]
  modGridView.ReadSmallData(lstbabyexam, $rBabyExData, $aBabyExMyFields)
  ResizeTreeView(lstbabyexam)

End

Public Sub lstbabyexam_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rBabyExData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rBabyExData[$aBabyExMyFields[Column]]

End

''------------------Data GridView ----------------
Private Sub ResizeDataGridView(GridView1 As WebTable)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Hidden = True
    .Columns[7].Hidden = True
    .Columns[8].Hidden = True
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True
    .Columns[2].Text = "Examination"
    .Columns[4].Text = "Observation"
    .Columns[5].Text = "ReportTime"
  End With

End

''Pred-del
Private Sub FillPreDelivery()

  $rPreDataData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldsave,fldencounterval,fldrepquali,fldsysconst,fldid from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldsave=&3", Trim(txtencid.Text), "Pre Delivery Exam", True)
  $aPreDataMyFields = New String[]
  modGridView.ReadSmallData(grdpredel, $rPreDataData, $aPreDataMyFields)
  ResizeDataGridView(grdpredel)

End

Public Sub grdpredel_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rPreDataData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rPreDataData[$aPreDataMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rPreDataData[$aPreDataMyFields[Column]], False)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rPreDataData[$aPreDataMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rPreDataData[$aPreDataMyFields[Column]]
  Endif

End

''On-deliv
Private Sub FillonDelivery()

  $rOnDataData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldsave,fldencounterval,fldrepquali,fldsysconst,fldid from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldsave=&3", Trim(txtencid.Text), "On Delivery Exam", True)
  $aOnDataMyFields = New String[]
  modGridView.ReadSmallData(grdondel, $rOnDataData, $aOnDataMyFields)
  ResizeDataGridView(grdondel)

End

Public Sub grdondel_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rOnDataData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rOnDataData[$aOnDataMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rOnDataData[$aOnDataMyFields[Column]], False)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rOnDataData[$aOnDataMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rOnDataData[$aOnDataMyFields[Column]]
  Endif

End

''post-del
Private Sub FillPostDelivery()

  $rPostDataData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldsave,fldencounterval,fldrepquali,fldsysconst,fldid from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldsave=&3", Trim(txtencid.Text), "Post Delivery Exam", True)
  $aPostDataMyFields = New String[]
  modGridView.ReadSmallData(grdpostdel, $rPostDataData, $aPostDataMyFields)
  ResizeDataGridView(grdpostdel)

End

Public Sub grdpostdel_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rPostDataData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rPostDataData[$aPostDataMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rPostDataData[$aPostDataMyFields[Column]], False)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rPostDataData[$aPostDataMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rPostDataData[$aPostDataMyFields[Column]]
  Endif

End

''baby-exam
Private Sub FillBabyExam()

  $rBabyDataData = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldsave,fldencounterval,fldrepquali,fldsysconst,fldid from tblpatientexam where fldencounterval=&1 and fldinput=&2 and fldsave=&3", Trim(cmbbabyencid.Text), "Baby Examination", True)
  $aBabyDataMyFields = New String[]
  modGridView.ReadSmallData(grdbabyexam, $rBabyDataData, $aBabyDataMyFields)
  ResizeDataGridView(grdbabyexam)

End

Public Sub grdbabyexam_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rBabyDataData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rBabyDataData[$aBabyDataMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(cmbbabyencid.Text), $rBabyDataData[$aBabyDataMyFields[Column]], False)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rBabyDataData[$aBabyDataMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rBabyDataData[$aBabyDataMyFields[Column]]
  Endif

End

''---------------- SHow Option Button ---------------
Public Sub lstpredel_Select()

  If lstpredel.Selection.Count Then
    $rPreDelData.MoveTo(lstpredel.Selection[0])
    AddDeliverySelection(Trim(txtencid.Text), $rPreDelData["fldexamid"], $rPreDelData["fldsysconst"], $rPreDelData["fldtype"], "Pre Delivery Exam", $rPreDelData["fldtanswertype"])
    FillPreDelivery()
  Endif

End

Public Sub lstondel_Select()

  If lstondel.Selection.Count Then
    $rOnDelData.MoveTo(lstondel.Selection[0])
    AddDeliverySelection(Trim(txtencid.Text), $rOnDelData["fldexamid"], $rOnDelData["fldsysconst"], $rOnDelData["fldtype"], "On Delivery Exam", $rOnDelData["fldtanswertype"])
    FillonDelivery()
  Endif

End

Public Sub lstpostdel_Select()

  If lstpostdel.Selection.Count Then
    $rPostDelData.MoveTo(lstpostdel.Selection[0])
    AddDeliverySelection(Trim(txtencid.Text), $rPostDelData["fldexamid"], $rPostDelData["fldsysconst"], $rPostDelData["fldtype"], "Post Delivery Exam", $rPostDelData["fldtanswertype"])
    FillPostDelivery()
  Endif

End

Public Sub lstbabyexam_Select()

  If cmbbabyencid.Text Then
    If lstbabyexam.Selection.Count Then
      $rBabyExData.MoveTo(lstbabyexam.Selection[0])
      AddDeliverySelection(Trim(cmbbabyencid.Text), $rBabyExData["fldexamid"], $rBabyExData["fldsysconst"], $rBabyExData["fldtype"], "Baby Examination", $rBabyExData["fldtanswertype"])
      FillBabyExam()
    Endif
  Endif

End

Private Sub AddDeliverySelection(encid As String, sExamLabel As String, sysConst As String, sType As String, xcategory As String, OptionType As String)

  Dim sName As String
  Dim xquantival As Variant[]
  Dim yqualival As Variant[]
  Dim lftrtval As Variant[]
  Dim xlimit As Float[]
  Dim opt As String[]
  Dim sVal As String[]
  Dim xdate As Date
  Dim xval As String
  Dim xdefval As Float
  Dim xstrval As String

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  If sysConst Then
    cForm = New CFindExam(sysConst)
    examtype = cForm.GetExamMode()
    sExam = cForm.GetExamName()
    sOptName = cForm.GetExamOption()
    sDefault = cForm.GetExamDefault()
  Endif

  If sExam Then
    sName = sExam
  Else
    sName = sExamLabel
  Endif

  If sType = "Quantitative" Then
    xdefval = 0
    If sysConst Then
      If OptionType = "Sys Constant" And If sOptName = "Calculated" Then
        If sDefault Then
          xdefval = modReportVar.GetCalcValueFloat(sDefault, encid)
        Endif
      Else If OptionType = "Calculated" Then
        xdefval = modReportVar.GetCalcValueFloat(sysConst, encid)
      Else If OptionType = "CopyValue" Then
        xdefval = modReportVar.GetLastQuantiParamValue(examtype, sExam, encid)
      Endif
      xlimit = modClinic.GetBothQuantiExamVal(sExam, encid)
    Else
      xlimit = [0, 0]
    Endif
    xquantival = GetQuantiValues(examtype, encid, sName, xlimit[0], xlimit[1], xdefval)
    If xquantival Then
      modClinSub.AddQuantiData(encid, "", sExamLabel, OptionType, xquantival[0], xquantival[1], xcategory, sysConst)
    Endif

  Else
    If sysConst Then
      xstrval = ""
      If OptionType = "Sys Constant" Then
        If sOptName = "Calculated" Then
          If sDefault Then
            xstrval = modReportVar.GetCalcValueVariant(sDefault, encid)
          Endif
          yqualival = GetQualiValues(sName, xstrval, examtype)
        Else
          yqualival = modExamOption.GetQualiExamOptionDirectValue(sExam, "", examtype, sOptName)
        Endif
      Else If OptionType = "Calculated" Then
        xstrval = modReportVar.GetCalcValueVariant(sysConst, encid)
        yqualival = GetQualiValues(sName, xstrval, examtype)
      Else If OptionType = "CopyValue" Then
        xstrval = modReportVar.GetLastQualiParamValue(examtype, sExam, encid)
        yqualival = GetQualiValues(sName, xstrval, examtype)
      Endif

    Else
      If OptionType = "Date Time" Then
        xdate = GetDateValue(("Select Date Time"), sName, "")
        If xdate Then
          yqualival = [modDate.DateStringForExam(xdate), False]
        Endif

      Else If OptionType = "BS Date" Then
        xdate = GetDateValue(("Select Date Time"), sName, "")
        If xdate Then
          yqualival = [modDate.ConvertToLocaldate(xdate), False]
        Endif

      Else If OptionType = "Qualitative" Then
        yqualival = GetQualiString(sName, "", "Exam")

      Else If OptionType = "Left and Right" Then
        lftrtval = CLeftRight(sName, "", modFixClinic.GetLeftRightMainHeader("Exam", sName))
        If lftrtval Then
          yqualival = [lftrtval[0], lftrtval[1]]
        Endif

      Else If OptionType = "Single Selection" Or If OptionType = "Dichotomous" Or If OptionType = "Multiple Selection" Then
        opt = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tbldeptexamoption where fldexamid=&1 and flddept=&2 and fldtanswertype=&3 ORDER BY fldindex", sExamLabel, GetDeliveryExamCategory(xcategory), OptionType))
        If opt.Count Then
          sVal = SubChoose(opt, OptionType, sExamLabel)
          If sVal Then
            yqualival = [sVal.Join(gb.NewLine), False]
          Endif
        Else
          If OptionType = "Dichotomous" Then
            sVal = SubChoose(["Yes", "No"], OptionType, sExamLabel)
            If sVal Then
              yqualival = [sVal.Join(gb.NewLine), False]
            Endif
          Else
            yqualival = GetQualiValues(sName, "", "Exam")
          Endif
        Endif

      Else If OptionType = "Text Table" Then
        opt = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tbldeptexamoption where fldexamid=&1 and flddept=&2 and fldtanswertype=&3 ORDER BY fldindex", sExamLabel, GetDeliveryExamCategory(xcategory), OptionType))
        If opt.Count Then
          xval = TableEntry(opt, sExamLabel, "")
          If xval Then
            yqualival = [modString.GetTableFormatFromText(xval), False]
          Endif
        Else
          yqualival = GetQualiValues(sName, "", "Exam")
        Endif

      Else If OptionType = "RichText Area" Then
        yqualival = GetQualiRich(sName, "", "Exam")

      Else
        yqualival = GetQualiValues(sName, "", "Exam")
      Endif
    Endif

    If yqualival Then
      If yqualival.Count = 3 And If yqualival[2] Then
        modClinSub.AddClinicExam(encid, "", sExamLabel, OptionType, yqualival[0], CFloat(yqualival[2]), yqualival[1], xcategory, sysConst, "Regular")
      Else
        modClinSub.AddClinicExam(encid, "", sExamLabel, OptionType, yqualival[0], 0, yqualival[1], xcategory, sysConst, "Regular")
      Endif
    Endif
  Endif ''quali or quanti

End

''====================== BABY EXAMINATION ====================
Public Sub btnbabyencid_Click()

  Dim res As Result

  If cmbbabyencid.Text Then
    txtbabypatno.Text = modPatient.GetPatientNoByEnc(cmbbabyencid.Text)
    If txtbabypatno.Text Then
      res = modDatabase.$myConn.Exec("select fldptbirday,fldptsex from tblpatientinfo where fldpatientval=&1", Trim(txtbabypatno.Text))
      If res.Available Then
        dtbabydob.Value = res["fldptbirday"]
        cmbbabysex.Text = res["fldptsex"]
        modDateSub.GetAgeControlFromDate(dtbabydob.Value, txtbabyage, txtbabyageunit)
      Endif
    Endif
    btnbabyconsult.Tag = modPatient.GetAttendingConsultant(cmbbabyencid.Text)
    btnbabyconsult.Text = modGeneral.GetUserFullName(btnbabyconsult.Tag)
    FillBabyExam()
  Endif

End

Public Sub btnbabyguard_Click()

  Dim xList As String[]
  Dim res As Result

  If txtbabypatno.Text Then
    xList = InputDoubleText("Select Baby Guardian", ["Relation", "Guardian"], ["Father", ""])
    If xList Then
      If xList[0] And If xList[1] Then
        res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1", Trim(txtbabypatno.Text))
        res["fldrelation"] = xList[0]
        res["fldptguardian"] = xList[1]
        res.Update
      Endif
    Endif
  Endif

End

Public Sub btnbabydob_Click()

  Dim res As Result

  If cmbbabyencid.Text Then
    If dtbabydob.Value Then
      If dtbabydob.Value > Now() Then
        Message.Warning("Incorrect Date and Time", ("OK"))
      Else

        modDatabase.$myConn.Begin
        res = modDatabase.$myConn.Edit("tblconfinement", "fldbabypatno=&1", Trim(txtbabypatno.Text))
        res["flddeltime"] = dtbabydob.Value
        res["xyz"] = False
        res.Update
        modPatientSub.UpdatePatDOB(Trim(cmbbabyencid.Text), dtbabydob.Value)
        modDatabase.$myConn.Commit

        modDateSub.GetAgeControlFromDate(dtbabydob.Value, txtbabyage, txtbabyageunit)
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub btnipform_Click()

  Dim hForm As FmPatientMain

  If cmbbabyencid.Text Then
    Me.Parent.DeleteChildren()
    hForm = New FmPatientMain(cmbbabyencid.Text, fmOfficer.Workspace1)
  Endif

End

Public Sub btnbirthreport_Click()

  Dim hCls As CReportCustom

  If cmbbabyencid.Text Then
    hCls = New CReportCustom(cmbbabyencid.Text, "Birth Report", "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

Public Sub btntransbaby_Click()

  Dim hCls As CReportCustom

  If cmbbabyencid.Text Then
    hCls = New CReportCustom(cmbbabyencid.Text, "Baby Report", "ReportSize", MMain.$defUnit)
    hCls.Preview()
  Endif

End

''Baby Reports
Public Sub mnubabytransition_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowBedTransitionReport(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabysymptom_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientSymptomReport(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyinput_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientInputReport(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyexam_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientExaminationgReport(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabylab_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientLaboratoryReport(Trim(cmbbabyencid.Text), modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyradio_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatRadioReportbyEncID(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabydiagno_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.GetProvisionalDiagnosis(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyhistory_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientHistoryReport(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabynote_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientNoteReport(Trim(cmbbabyencid.Text), "Inpatient Notes")
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabydisch_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientNoteReport(Trim(cmbbabyencid.Text), "Discharge Notes")
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabydosing_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowNursingDosing(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyprogress_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientPlanningReport(Trim(cmbbabyencid.Text), "IP Monitoring")
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyplan_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.ShowPatientPlanningReport(Trim(cmbbabyencid.Text), "Clinician Plan")
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyexpense_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, Trim(cmbbabyencid.Text), "Complete")
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabyreturn_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.PatientMedicationForReturn(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabynurse_Click()

  Dim xPath As String

  If cmbbabyencid.Text Then
    xPath = modCHTMLPatient.NursingCheckReport(Trim(cmbbabyencid.Text))
    modControlSub.OpenHTMLPreview(Trim(cmbbabyencid.Text), xPath, "ReportSize")
  Endif

End

Public Sub mnubabycomplete_Click()

  If cmbbabyencid.Text Then
    modPatReports.GetSelectedPatientValues(Trim(cmbbabyencid.Text), modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
  Endif

End

''----------- Edit GridViews--------------------
Private Function GetGridColValFromColText(sType As String, sExam As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldtanswertype from tbldeptexam where flddept=&1 and fldexamid=&2", sType, sExam)
  If res.Available Then
    If res["fldtanswertype"] Then
      xx = res["fldtanswertype"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

''pre-del
Public Sub btnpreflag_Click()

  Dim xx As String

  If grdpredel.Selection.Count Then
    $rPreDataData.MoveTo(grdpredel.Selection[0])
    xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rPreDataData["fldabnormal"]), True)
    If xx Then
      modClinSub.UpdateExamFlag($rPreDataData["fldid"], xx)
      FillPreDelivery()
    Endif
  Endif

End

Public Sub btnpreedit_Click()

  Dim xopt As String

  If grdpredel.Selection.Count Then
    $rPreDataData.MoveTo(grdpredel.Selection[0])
    xopt = GetGridColValFromColText("Pre Delivery", $rPreDataData["fldhead"])
    If xopt = "Fixed Components" Then
      modExamOption.EnterDeptFixedComponents(Trim(txtencid.Text), "Pre Delivery", $rPreDataData["fldid"], $rPreDataData["fldhead"], modClinic.GetExamValueString(Trim(txtencid.Text), $rPreDataData["fldid"], False))
    Else
      modExamOption.UpdateExamSelectionLabel($rPreDataData["fldid"], $rPreDataData["fldencounterval"], $rPreDataData["fldhead"], $rPreDataData["fldtype"], $rPreDataData["fldsysconst"], $rPreDataData["fldrepquali"], xopt)
    Endif
    FillPreDelivery()
  Endif

End

Public Sub btnpredel_Click()

  Dim res As Result

  If grdpredel.Selection.Count Then
    $rPreDataData.MoveTo(grdpredel.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rPreDataData["fldid"])
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        FillPreDelivery()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

Public Sub btnpreexpo_Click()

  modCHTMLReport.ExportGridToHTML(grdpredel, "PRE DELIVERY", "",, Trim(txtencid.Text))

End

''on-del
Public Sub btnonflag_Click()

  Dim xx As String

  If grdondel.Selection.Count Then
    $rOnDataData.MoveTo(grdondel.Selection[0])
    xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rOnDataData["fldabnormal"]), True)
    If xx Then
      modClinSub.UpdateExamFlag($rOnDataData["fldid"], xx)
      FillonDelivery()
    Endif
  Endif

End

Public Sub btnonedit_Click()

  Dim xopt As String

  If grdondel.Selection.Count Then
    $rOnDataData.MoveTo(grdondel.Selection[0])
    xopt = GetGridColValFromColText("On Delivery", $rOnDataData["fldhead"])
    If xopt = "Fixed Components" Then
      modExamOption.EnterDeptFixedComponents(Trim(txtencid.Text), "On Delivery", $rOnDataData["fldid"], $rOnDataData["fldhead"], modClinic.GetExamValueString(Trim(txtencid.Text), $rOnDataData["fldid"], False))
    Else
      modExamOption.UpdateExamSelectionLabel($rOnDataData["fldid"], $rOnDataData["fldencounterval"], $rOnDataData["fldhead"], $rOnDataData["fldtype"], $rOnDataData["fldsysconst"], $rOnDataData["fldrepquali"], xopt)
    Endif
    FillonDelivery()
  Endif

End

Public Sub btnondel_Click()

  Dim res As Result

  If grdondel.Selection.Count Then
    $rOnDataData.MoveTo(grdondel.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rOnDataData["fldid"])
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        FillonDelivery()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

Public Sub btnondelreport_Click()

  modCHTMLReport.ExportGridToHTML(grdondel, "ON DELIVERY", "",, Trim(txtencid.Text))

End

''post-del
Public Sub btnpostflag_Click()

  Dim xx As String

  If grdpostdel.Selection.Count Then
    $rPostDataData.MoveTo(grdpostdel.Selection[0])
    xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rPostDataData["fldabnormal"]), True)
    If xx Then
      modClinSub.UpdateExamFlag($rPostDataData["fldid"], xx)
      FillPostDelivery()
    Endif
  Endif

End

Public Sub btnpostedit_Click()

  Dim xopt As String

  If grdpostdel.Selection.Count Then
    $rPostDataData.MoveTo(grdpostdel.Selection[0])
    xopt = GetGridColValFromColText("Post Delivery", $rPostDataData["fldhead"])
    If xopt = "Fixed Components" Then
      modExamOption.EnterDeptFixedComponents(Trim(txtencid.Text), "Post Delivery", $rPostDataData["fldid"], $rPostDataData["fldhead"], modClinic.GetExamValueString(Trim(txtencid.Text), $rPostDataData["fldid"], False))
    Else
      modExamOption.UpdateExamSelectionLabel($rPostDataData["fldid"], $rPostDataData["fldencounterval"], $rPostDataData["fldhead"], $rPostDataData["fldtype"], $rPostDataData["fldsysconst"], $rPostDataData["fldrepquali"], xopt)
    Endif
    FillPostDelivery()
  Endif

End

Public Sub btnpostdel_Click()

  Dim res As Result

  If grdpostdel.Selection.Count Then
    $rPostDataData.MoveTo(grdpostdel.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rPostDataData["fldid"])
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        FillPostDelivery()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

Public Sub btnpostreport_Click()

  modCHTMLReport.ExportGridToHTML(grdpostdel, "POST DELIVERY", "",, Trim(txtencid.text))

End

''baby-exam
Public Sub btnbabyflag_Click()

  Dim xx As String

  If grdbabyexam.Selection.Count Then
    $rBabyDataData.MoveTo(grdbabyexam.Selection[0])
    xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rBabyDataData["fldabnormal"]), True)
    If xx Then
      modClinSub.UpdateExamFlag($rBabyDataData["fldid"], xx)
      FillBabyExam()
    Endif
  Endif

End

Public Sub btnbabyedit_Click()

  Dim xopt As String

  If grdbabyexam.Selection.Count Then
    $rBabyDataData.MoveTo(grdbabyexam.Selection[0])
    xopt = GetGridColValFromColText("Baby Examination", $rBabyDataData["fldhead"])
    If xopt = "Fixed Components" Then
      modExamOption.EnterDeptFixedComponents(Trim(cmbbabyencid.Text), "Baby Examination", $rBabyDataData["fldid"], $rBabyDataData["fldhead"], modClinic.GetExamValueString(Trim(cmbbabyencid.Text), $rBabyDataData["fldid"], False))
    Else
      modExamOption.UpdateExamSelectionLabel($rBabyDataData["fldid"], $rBabyDataData["fldencounterval"], $rBabyDataData["fldhead"], $rBabyDataData["fldtype"], $rBabyDataData["fldsysconst"], $rBabyDataData["fldrepquali"], xopt)
    Endif

    FillBabyExam()
  Endif

End

Public Sub btnbabydel_Click()

  Dim res As Result

  If grdbabyexam.Selection.Count Then
    $rBabyDataData.MoveTo(grdbabyexam.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rBabyDataData["fldid"])
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        FillBabyExam()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

Public Sub btnrepobaby_Click()

  If cmbbabyencid Then
    modCHTMLReport.ExportGridToHTML(grdbabyexam, "BABY EXAMINATION", "",, Trim(cmbbabyencid.text))
  Endif

End

''============================= PHARMACY ======================
Public Sub btnshowallmed_Click()

  If txtencid.Text Then
    If btnshowallmed.Value = True Then
      FillDosingGrid("All")
    Else If btnshowallmed.Value = False Then
      FillDosingGrid("Current")
    Endif
  Endif

End

Private Sub FillDosingGrid(strType As String)

  Dim sql As String

  If strType = "Current" Then
    sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,(fldqtydisp-fldqtyret) as qty,fldlabel,fldcurval from tblpatdosing where fldencounterval=&1 and fldcomp_order=&2 and fldsave_order=&3 and flditemtype=&4"                                                   ''
    $rData5 = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), modBasic.$compID, True, "Medicines")
  Else If strType = "All" Then
    sql = "select fldid,fldstarttime,fldroute,flditem,flddose,fldfreq,flddays,(fldqtydisp-fldqtyret) as qty,fldlabel,fldcurval from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and flditemtype=&3"                                                   ''
    $rData5 = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), True, "Medicines")
  Endif
  $aMyFields5 = New String[]
  modGridView.ReadSmallData(GridView5, $rData5, $aMyFields5)

  With GridView5
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(40 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(40 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Hidden = True
    .Columns[9].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "StartDate"
    .Columns[2].Text = "Route"
    .Columns[3].Text = "Particulars"
    .Columns[4].Text = "Dose"
    .Columns[5].Text = "Freq"
    .Columns[6].Text = "Days"
    .Columns[7].Text = "QTY"
    .Columns[9].Text = "Status"
  End With

End

Public Sub GridView5_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData5.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData5[$aMyFields5[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData5[$aMyFields5[Column]]
  Endif

End

Public Sub btnaddmed_Click()

  Dim hForm As FmMedOrder

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Pharmacy") = True Then
      If modBasic.$MedRequestForm = "Separate" Then
      Else
        hForm = New FmMedOrder(Trim(txtencid.Text), txtnow.Text, $billModePharmacy)
        hForm.ShowModal
      Endif
      FillDosingGrid("Current")
    Endif
  Endif

End

Public Sub btndoserecord_Click()

  Dim hForm As FmDosecount

  If txtencid.Text Then
    hForm = New FmDosecount(Trim(txtencid.Text))
    hForm.ShowModal
    FillDosingGrid("Current")
  Endif

End

Public Sub btnivinfusion_Click()

  Dim hForm As FmIVInfusion

  If txtencid.Text Then
    hForm = New FmIVInfusion(Trim(txtencid.Text))
    hForm.ShowModal
    FillDosingGrid("Current")
  Endif

End

Public Sub btnmedexpo_Click()

  modCHTMLReport.ExportGridToHTML(GridView5, "ITEMS USED: " & "Delivery", modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))

End

Public Sub btnmedstatus_Click()

  Dim xx As String[] = ["Continue", "Completed", "Discontinue", "Hold", "Change", "ReWrite", "Cancelled", "Wasted"]
  Dim res As Result
  Dim xval As String

  If GridView5.Selection.Count Then
    $rData5.MoveTo(GridView5.Selection[0])
    xval = InputCombo($rData5["flditem"], ("Select Current Status"), xx, $rData5["fldcurval"], True)
    If xval Then
      res = modDatabase.$myConn.Edit("tblpatdosing", "fldid=&1", $rData5["fldid"])
      res["fldcurval"] = xval
      res["xyz"] = False
      res.Update()
      FillDosingGrid("Current")
    Endif
  Endif

End

''================== HMIS 3.61 examination (complications) ====================
Private Sub Setreference()

  Dim sList As String[]

  $reference = modSettings.ShowSettingFromFIle($Category & "/RecommendedExam")
  If Not $reference Then
    sList = modMedicine.FillClinicalReference($Category)
    If sList And If sList.Count Then
      $reference = sList[0]
    Endif
  Endif

End

Private Sub LoadTreeData3()

  Dim str3 As String
  Dim res3 As Result

  str3 = "select distinct(flditem) from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and fldclass=&4 ORDER BY flditemid"
  res3 = modDatabase.$myConn.Exec(str3, $Category, $DELExams, $reference, $sDepart)
  grdtreecompl.List = modControlSub.GetDirectFillresult(res3)

End

Private Sub ShowSelectedVar3()

  Dim res As Result
  Dim sList As String[]
  Dim hForm As FmEnterMultiExam

  sList = New String[]
  res = modDatabase.$myConn.Exec("select fldheadcode from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldcategory=&3 and flditem=&4 and fldreferencee=&5 ORDER BY fldheadid", $sDepart, $Category, $DELExams, grdtreecompl.Text, $reference)
  If res.Available Then
    For Each res
      sList.Add(res!fldheadcode)
    Next
    hForm = New FmEnterMultiExam(grdtreecompl.Text, Trim(txtencid.Text), "On Delivery", sList, $Category)
    hForm.ShowModal
    ShowClinicTable3()
  Endif

End

Public Sub grdtreecompl_Select()

  ShowSelectedVar3()

End

Private Sub ShowClinicTable3()

  If txtencid.Text Then
    If MMain.$WebEntry = True Then
      $rData2 = modDatabase.$myConn.Exec("select fldrepoid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and fldclass=&6 and fldreferencee=&7)", "On Delivery", Trim(txtencid.Text), True, $Category, $DELExams, $sDepart, $reference)
    Else
      $rData2 = modDatabase.$myConn.Exec("select fldid,fldtype,fldhead,fldabnormal,fldid,fldtime,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and fldclass=&6 and fldreferencee=&7)", "On Delivery", Trim(txtencid.Text), True, $Category, $DELExams, $sDepart, $reference)               ''
    Endif
    $aMyFields2 = New String[]
    modGridView.ReadSmallData(grdcompl, $rData2, $aMyFields2)

    With grdcompl
      .Columns[0].Hidden = True
      .Columns[1].Hidden = True
      .Columns[2].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
      .Columns[5].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      .Columns[6].Hidden = True
      .Columns[7].Hidden = True
      .Columns[8].Hidden = True
      .Columns[9].Hidden = True

      .Columns[2].Text = "Examination"
      .Columns[4].Text = "Observation"
      .Columns[5].Text = "Time"
    End With
  Endif

End

Public Sub grdcompl_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData2[$aMyFields2[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rData2[$aMyFields2[Column]], False)
  Else If Column = 5 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub btncomponentscompl_Click()

  Dim yqualival As Variant[]
  Dim xquantival As Variant[]
  Dim rsn As Result
  Dim xdate As Date

  Dim opt As String[]
  Dim xval As String
  Dim sTable As String[]
  Dim sName As String

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  If grdcompl.Selection.Count Then
    $rData2.MoveTo(grdcompl.Selection[0])
    If $rData2["fldtype"] = "Qualitative" Then
      rsn = modDatabase.$myConn.Exec("select fldhead,fldtesttype,fldtanswertype,fldsysconst from tblstructexam where fldheadcode=&1", $rData2["fldserialval"])

      If rsn.Available And If rsn["fldsysconst"] Then
        cForm = New CFindExam(rsn["fldsysconst"])
        examtype = cForm.GetExamMode()
        sExam = cForm.GetExamName()
        sOptName = cForm.GetExamOption()
        sDefault = cForm.GetExamDefault()
      Else
        examtype = "Exam"
      Endif

      If sExam Then
        sName = sExam
      Else
        sName = $rData2["fldhead"]
      Endif

      If rsn["fldtanswertype"] = "Left and Right" Then
        yqualival = CLeftRight($rData2["fldhead"], $rData2["fldrepquali"], modFixClinic.GetLeftRightMainHeader("Exam", $rData2["fldhead"]))
        If yqualival Then
          modClinSub.UpdateClinicQualiData($rData2["fldid"], yqualival[0], yqualival[1])
        Endif

      Else If rsn["fldtanswertype"] = "Date Time" Then
        xdate = GetDateValue($rData2["fldhead"], ("Select Date Time"), Val($rData2["fldrepquali"]))
        If xdate Then
          modClinSub.UpdateClinicQualiData($rData2["fldid"], modDate.DateStringForExam(xdate), False)
        Endif

      Else If rsn["fldtanswertype"] = "BS Date" Then
        xdate = GetDateValue($rData2["fldhead"], ("Select Date Time"), modDate.ConvertToEnglishdate($rData2["fldrepquali"]))
        If xdate Then
          modClinSub.UpdateClinicQualiData($rData2["fldid"], modDate.ConvertToLocaldate(xdate), False)
        Endif

      Else If rsn["fldtanswertype"] = "Text Table" Then
        sTable = modString.ConverTableRichTextToGrid(modClinic.GetExamValueString(Trim(txtencid.Text), $rData2["fldid"]))
        opt = Split(sTable[0], ";")
        xval = TableEntry(opt, $rData2["fldhead"], sTable[1])
        If xval Then
          modClinSub.UpdateClinicQualiData($rData2["fldid"], modString.GetTableFormatFromText(xval), False)
        Endif

      Else If rsn["fldtanswertype"] = "Qualitative" Then
        yqualival = GetQualiString($rData2["fldhead"], $rData2["fldrepquali"], "Exam")
        If yqualival Then
          modClinSub.UpdateClinicQualiData($rData2["fldid"], yqualival[0], yqualival[1])
        Endif

      Else If rsn["fldtanswertype"] = "Fixed Components" Then

      Else
        If sOptName = "Clinical Scale" Then
          yqualival = modExamOption.GetClinScalePopUp(examtype, sName)
          If yqualival Then
            modClinSub.UpdateQualiQuantiData($rData2["fldid"], yqualival[1], CFloat(yqualival[0]), False)
          Endif
        Else If sOptName = "RichText Area" Then
          yqualival = GetQualiRich(sName, $rData2["fldrepquali"], examtype)
          If yqualival Then
            modClinSub.UpdateClinicQualiData($rData2["fldid"], yqualival[0], yqualival[1], yqualival[2])
          Endif
        Else
          yqualival = GetQualiValues(sName, $rData2["fldrepquali"], examtype)
          If yqualival Then
            modClinSub.UpdateClinicQualiData($rData2["fldid"], yqualival[0], yqualival[1], yqualival[2])
          Endif
        Endif
      Endif

    Else If $rData2["fldtype"] = "Quantitative" Then
      xquantival = GetQuantiValues(examtype, Trim(txtencid.Text), sName, 0, 0, $rData2["fldrepquanti"])
      If xquantival Then
        modClinSub.UpdateQuantiData($rData2["fldid"], xquantival[0], xquantival[1])
      Endif
    Endif
    ShowClinicTable3()

  Endif

End

Public Sub btneditflagcompl_Click()

  Dim abc As String

  If grdcompl.Selection.Count Then
    $rData2.MoveTo(grdcompl.Selection[0])
    abc = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rData2["fldabnormal"]), True)
    If abc Then
      modClinSub.UpdateExamFlag($rData2["fldid"], abc)
      ShowClinicTable3()
    Endif
  Endif

End

Public Sub btndeletecompl_Click()

  Dim res As Result

  If grdcompl.Selection.Count Then
    $rData2.MoveTo(grdcompl.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      If MMain.$WebEntry = True Then
        res = modDatabase.$myConn.Edit("tblpatientexam", "fldrepoid=&1", $rData2["fldrepoid"])
      Else
        res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rData2["fldid"])
      Endif
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        ShowClinicTable3()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

Public Sub btnrepocompl_Click()

  Dim xPath As String

  If txtencid.text Then
    xPath = modCHTMLPatient.ShowRecomExaminationpatient(Trim(txtencid.text), $Category, $DELExams, $sDepart, $reference)
    modControlSub.OpenHTMLPreview(Trim(txtencid.text), xPath, "ReportSize")
  Endif

End

''------------ summary icons
Public Sub btndatasumm_Click()

End

Public Sub btnpansumm_Click()

  txtdelicomment.RichText = txtdelicomment.RichText & Space(1) & modFillContainer.GetExtraTextArea("Delivery Note", txtdelicomment.Text)

End

Public Sub btnexecsumm_Click()

  txtdelicomment.RichText = txtdelicomment.RichText & modString.TextToHTML(modCloudAI.GetPatCloudAIResponse(Trim(txtencid.Text), txtdelicomment.Text))

End

Public Sub btnattsumm_Click()

  txtdelicomment.RichText = txtdelicomment.RichText & DictionaryVIew(modBasic.$dictadvPath)

End
