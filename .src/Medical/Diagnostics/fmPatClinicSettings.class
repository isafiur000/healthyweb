' Gambas class file

Public Sub _new()

  cmbtype.List = ["Qualitative", "Quantitative"]
  cmbclass.List = ["Departmental", "Physician Examinations"]
  cmbsubclass.List = modMedicine.FillClinicalSubClass("%")
  cmboption.List = modMedicine.FillClinSepOptionCombo()
  cmbtable.List = ["tblstructexam", "tblstructexamoption"]
  cmbconstant.List = modSysCons.GetAllSysConstantsList()
  cmbsubclass.SetFocus

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Private Sub BlankAllBox()

  txtid.Text = ""
  cmbtype.Text = ""
  cmboption.Text = ""
  txthead.Text = ""
  txtitem.Text = ""
  txtexamcode.Text = ""
  txtinfo.Text = ""
  cmbconstant.Text = ""
  cmbclass.Text = ""
  chkunique.Value = False
  chkleftright.Value = False
  txtdefault.RichText = ""

End

Public Sub cmbsubclass_Click()

  cmbreference.List = modMedicine.FillClinicalReference(cmbsubclass.Text)
  cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$medConn.Exec("select distinct(fldcategory) as col from tblstructexam where fldsubclass=&1", cmbsubclass.Text))                                   ''
  BlankAllBox()

End

Private Sub FillClinGrid()

  If cmbsubclass.Text And If cmbreference.Text And If cmbcategory.Text Then
    FillClinicalTreeInput(ColumnView1, cmbsubclass.Text, cmbcategory.Text, cmbreference.Text)
  Endif

End

Public Sub btnshow_Click()

  FillClinGrid()

End

' Public Sub cmbclass_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbclass)
'   modFillContainer.RestrictComboToContent(cmbclass)
'
' End

' Public Sub cmbtype_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbtype)
'   modFillContainer.RestrictComboToContent(cmbtype)
'
' End
'
' Public Sub cmboption_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmboption)
'   modFillContainer.RestrictComboToContent(cmboption)
'
' End
'
' Public Sub cmbconstant_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbconstant)
'   modFillContainer.RestrictComboToContent(cmbconstant)
'
' End

''---------------------------------------------- button ------------------------------
Public Sub btnfinscode_Click()

  Dim res1 As Result

  res1 = modDatabase.$medConn.Exec("select fldheadcode from tblstructexam where fldheadcode=&1", Trim(txtexamcode.Text))
  If res1.Available = False Then
    Message.Info(("Code available"), ("OK"))
  Else
    Message.Warning(("Code already used"), ("OK"))
  Endif

End

Private Function GetItemIDForCurr(sItem As String) As Integer

  Dim res As Result
  Dim res1 As Result
  Dim xval As Integer

  res = modDatabase.$medConn.Exec("select flditemid from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, sItem)
  If res.Available Then
    res.MoveFirst
    xval = res["flditemid"]
  Else
    res1 = modDatabase.$medConn.Exec("select MAX(flditemid) as col from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text)
    If res1.Available Then
      If res1["col"] Then
        xval = res1["col"] + 1
      Else
        xval = 1
      Endif
    Else
      xval = 1
    Endif
  Endif
  Return xval

End

Private Function GetHeadIDForCurr(sItem As String) As Integer

  Dim res As Result
  Dim xval As Integer

  res = modDatabase.$medConn.Exec("select MAX(fldheadid) as col from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, sItem)
  If res.Available Then
    If res["col"] Then
      xval = res["col"] + 1
    Else
      xval = 1
    Endif
  Else
    xval = 1
  Endif
  Return xval

End

Public Sub btnBrOK_Click()

  Dim res As Result
  Dim res1 As Result

  If cmbclass.Text And If cmbsubclass.Text And If cmbcategory.Text And If txtitem.text And If txthead.Text And If cmbtype.Text And If cmbreference.Text And If txtexamcode.Text Then
    res1 = modDatabase.$medConn.Exec("select fldheadcode from tblstructexam where fldheadcode=&1", Trim(txtexamcode.Text))
    If res1.Available = False Then
      res = modDatabase.$medConn.Create("tblstructexam")
      res["fldheadcode"] = Trim(txtexamcode.Text)
      res["fldclass"] = Trim(cmbclass.Text)
      res["fldsubclass"] = Trim(cmbsubclass.Text)
      res["fldcategory"] = Trim(cmbcategory.Text)
      res["flditemid"] = GetItemIDForCurr(Trim(txtitem.text))
      res["flditem"] = Trim(txtitem.text)
      If chkleftright.Value = True Then
        res["flditemoption"] = "Left/Right Components"
      Else
        res["flditemoption"] = ""
      Endif
      res["fldheadid"] = GetHeadIDForCurr(Trim(txtitem.text))
      res["fldhead"] = Trim(txthead.Text)
      res["fldsysconst"] = cmbconstant.Text
      res["fldtesttype"] = cmbtype.text
      res["fldtanswertype"] = cmboption.Text
      res["fldreferencee"] = cmbreference.Text
      res["fldclininfo"] = txtinfo.Text
      res["fldunique"] = chkunique.Value
      res["fldlock"] = False
      res["flddefault"] = txtdefault.RichText
      res.Update()
      FillClinGrid()
      cmbsubclass.List = modMedicine.FillClinicalSubClass("%")
      txthead.Text = ""
      txtexamcode.Text = ""
      cmbconstant.Text = ""
      cmbtype.Text = ""
      cmboption.Text = ""
    Else
      Message.Warning(("Code already used"), ("OK"))
    Endif
  Endif

End

Public Sub btnoption_Click()

  Dim hForm As FmPatClinSettingoptions
  Dim hForm1 As FmVisualInput

  If cmbtype.Text = "Qualitative" Then
    Select cmboption.Text
      Case "Single Selection", "Multiple Selection", "Text Table", "Dichotomous", "Fixed Components", "Left/Right Components"
        hform = New FmPatClinSettingoptions(txtexamcode.Text, txthead.Text, cmboption.Text)
        hform.ShowModal
      Case "Visual Input", "ImageValue"
        hForm1 = New FmVisualInput(cmbsubclass.Text, txtexamcode.Text, "", cmboption.Text)
        hForm1.ShowModal
    End Select
  Endif

End

Public Sub btnedit_Click()

  Dim res As Result
  Dim res1 As Result

  If txtid.Text Then
    If cmbclass.Text And If cmbsubclass.Text And If cmbcategory.Text And If txtitem.text And If txthead.Text And If cmbtype.Text And If cmbreference.Text And If txtexamcode.Text Then

      res = modDatabase.$medConn.Edit("tblstructexam", "fldheadcode=&1", txtid.Text)
      If res["fldlock"] = True Then
        Message.Warning("Information Locked", ("OK"))
      Else
        res["fldheadcode"] = Trim(txtexamcode.Text)
        res["fldclass"] = Trim(cmbclass.Text)
        res["fldsubclass"] = Trim(cmbsubclass.Text)
        res["fldcategory"] = Trim(cmbcategory.Text)
        res["flditem"] = Trim(txtitem.text)
        If chkleftright.Value = True Then
          res["flditemoption"] = "Left/Right Components"
        Else
          res["flditemoption"] = ""
        Endif
        res["fldhead"] = Trim(txthead.Text)
        res["fldsysconst"] = cmbconstant.Text
        res["fldtesttype"] = cmbtype.text
        res["fldtanswertype"] = cmboption.Text
        res["fldreferencee"] = cmbreference.Text
        res["fldclininfo"] = txtinfo.Text
        res["fldunique"] = chkunique.Value
        res["flddefault"] = txtdefault.RichText
        res.Update()

        res1 = modDatabase.$medConn.Edit("tblstructexamoption", "fldheadcode=&1", txtid.Text)
        If res1.Available Then
          For Each res1
            res1["fldhead"] = Trim(txthead.Text)
            res1["fldheadcode"] = Trim(txtexamcode.Text)
            res1["fldtanswertype"] = cmboption.Text
            res1.Update
          Next
        Endif
        FillClinGrid()
        Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
        ' Balloon.Delay = modBasic.$BalloonDelay

      Endif

    Endif
  Endif

End

Public Sub ColumnView1_Select()

  Dim res As Result

  If ColumnView1.Selection.Count Then
    If ColumnView1.Current.Image = "icons/coll2.png" Then
      txtitem.Text = ColumnView1.Current.Text
      ' modFillContainer.ExpandClickTreeView(ColumnView1)

    Else If ColumnView1.Current.Image = "icons/coll3.png" Then
      txtid.Text = modFillContainer.GetTextFromTreeKey(ColumnView1.Current.Key)
      res = modDatabase.$myConn.Exec("select fldheadcode,fldclass,flditemid,flditem,flditemoption,fldheadid,fldhead,fldsysconst,fldtesttype,fldtanswertype,fldclininfo,fldunique,flddefault from tblstructexam where fldheadcode=&1 and fldsubclass=&2 and fldcategory=&3 and fldreferencee=&4", txtid.Text, cmbsubclass.Text, cmbcategory.Text, cmbreference.Text)
      If res.Available Then
        txtexamcode.Text = res["fldheadcode"]
        cmbclass.Text = res["fldclass"]
        txtitem.text = res["flditem"]
        If res["flditemoption"] = "Left/Right Components" Then
          chkleftright.Value = True
        Else
          chkleftright.Value = False
        Endif
        txthead.Text = res["fldhead"]
        cmbconstant.Text = res["fldsysconst"]
        cmbtype.text = res["fldtesttype"]
        cmboption.Text = res["fldtanswertype"]
        txtinfo.Text = res["fldclininfo"]
        If res["fldunique"] Then
          chkunique.Value = res["fldunique"]
        Else
          chkunique.Value = False
        Endif
        txtdefault.RichText = res["flddefault"]
      Endif

    Endif
  Endif

End

Public Sub btndelete_Click()

  If txtid.Text Then
    modDatabase.$medConn.Delete("tblstructexam", "fldheadcode=&1 and fldlock=&2", txtid.Text, False)
    FillClinGrid()
    Me.Exec("Toastify({text: 'Information deleted', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
    BlankAllBox()
  Endif

End

''------------------ Tree view -------------------------
Private Sub FillClinicalTreeInput(TreeView1 As WebTree, xsubClass As String, xCategory As String, ref As String, LeftRight As Boolean)

  Dim str3 As String
  Dim str4 As String

  Dim res3 As Result
  Dim k As Integer
  Dim res4 As Result
  Dim l As Integer

  Dim pic2 As String
  Dim pic3 As String

  pic2 = "icons/coll2.png"
  pic3 = "icons/coll3.png"

  TreeView1.Clear
  TreeView1.Columns.Count = 8
  With TreeView1
    .Columns[0].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Hidden = True
    .Columns[5].Hidden = True
    .Columns[6].Hidden = True
    .Columns[7].Hidden = True

    .Columns[0].Text = "Examination"
    .Columns[1].Text = "DataType"
    .Columns[2].Text = "Option"
    .Columns[3].Text = "Constant"
  End With

  ' $pic2List = New String[]
  ' $pic3List = New String[]
  If LeftRight = True Then
    str3 = "select distinct(flditem) from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditemoption=&4 ORDER BY flditemid"
  Else
    str3 = "select distinct(flditem) from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditemoption IS NULL ORDER BY flditemid"
  Endif
  res3 = modDatabase.$medConn.Exec(str3, xsubClass, xCategory, ref, "Left/Right Components")
  If res3.Available Then
    res3.MoveFirst
    For k = 1 To res3.Count
      ' $pic2List.Add(CStr(k) & "@" & res3["flditem"])
      TreeView1.Add(CStr(k) & "@" & res3["flditem"], res3["flditem"], pic2)

      If LeftRight = True Then
        str4 = "select fldheadcode,fldhead,fldtesttype,fldtanswertype,fldsysconst,fldclass,fldclininfo,flditemid,fldheadid from tblstructexam where fldsubclass=&1 and fldcategory=&2 and flditem=&3 and fldreferencee=&4 and flditemoption=&5 ORDER BY fldheadid"
      Else
        str4 = "select fldheadcode,fldhead,fldtesttype,fldtanswertype,fldsysconst,fldclass,fldclininfo,flditemid,fldheadid from tblstructexam where fldsubclass=&1 and fldcategory=&2 and flditem=&3 and fldreferencee=&4 and flditemoption IS NULL ORDER BY fldheadid"
      Endif
      res4 = modDatabase.$medConn.Exec(str4, xsubClass, xCategory, res3["flditem"], ref, "Left/Right Components")
      If res4.Available Then
        res4.MoveFirst
        For l = 1 To res4.Count
          ' $pic3List.Add(CStr(k) & "@" & res3["flditem"] & "#" & CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"])
          TreeView1.Add(CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"], res4["fldhead"], pic3, CStr(k) & "@" & res3["flditem"])
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][1] = res4["fldtesttype"]
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][2] = res4["fldtanswertype"]
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][3] = res4["fldsysconst"]
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][4] = res4["fldclass"]
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][5] = res4["fldclininfo"]
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][6] = res4["flditemid"]
          TreeView1[CStr(k) & "@" & CStr(l) & "@" & res4["fldheadcode"]][7] = res4["fldheadid"]
          res4.MoveNext
        Next
      Endif

      res3.MoveNext
    Next
  Endif

End

Public Sub btnupload_Click()

  Dim xdelim As String

  If Trim(txtdelim.Text) Then
    xdelim = Trim(txtdelim.Text)
  Else
    xdelim = ";"
  Endif

  If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
    modTextDB.ImportCSVToCurrentDB(modDatabase.$medConn, cmbtable.Text, txtcsv.Text, xdelim)
    Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

' Public Sub btnup_Click()
'
'   Dim Row As Integer
'   Dim res As Result
'   Dim res1 As Result
'
'   Dim scurrKey As String
'   Dim scurval As Integer
'   Dim sprevKey As String
'   Dim sprevval As Integer
'
'   Dim sList As String[]
'   Dim asx As String[]
'
'   If ColumnView1.Selection.Count > 0 Then
'     If ColumnView1.Current.Picture = Picture["icons/coll2.png"] Then
'       scurrKey = ColumnView1.Current.Key
'       scurval = GetItemIndex(modFillContainer.GetTextFromTreeKey(scurrKey))
'
'       Row = $pic2List.Find(ColumnView1.Current.Key)
'       If Row > 0 Then
'         sprevKey = $pic2List[Row - 1]
'         sprevval = GetItemIndex(modFillContainer.GetTextFromTreeKey(sprevKey))
'
'         res = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey(scurrKey))
'         If res.Available Then
'           For Each res
'             res["flditemid"] = sprevval
'             res.Update
'           Next
'         Endif
'
'         res1 = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey(sprevKey))
'         If res1.Available Then
'           For Each res1
'             res1["flditemid"] = scurval
'             res1.Update
'           Next
'         Endif
'       Endif
'
'     Else If ColumnView1.Current.Picture = Picture["icons/coll3.png"] Then
'       scurrKey = ColumnView1.Current.Key
'       scurval = CInt(ColumnView1[scurrKey][7])
'
'       sList = modString.SelectStringArrayToText($secText & "#", $pic3List)
'       Row = sList.Find($secText & "#" & ColumnView1.Current.Key)
'       If Row > 0 Then
'         asx = Split(sList[Row - 1], "#")
'         sprevKey = asx[1]
'         sprevval = CInt(ColumnView1[sprevKey][7])
'
'         res = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4 and fldheadcode=&5", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey($secText), modFillContainer.GetTextFromTreeKey(scurrKey))
'         If res.Available Then
'           For Each res
'             res["fldheadid"] = sprevval
'             res.Update
'           Next
'         Endif
'
'         res1 = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4 and fldheadcode=&5", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey($secText), modFillContainer.GetTextFromTreeKey(sprevKey))
'         If res1.Available Then
'           For Each res1
'             res1["fldheadid"] = scurval
'             res1.Update
'           Next
'         Endif
'       Endif
'
'     Endif
'     FillClinGrid()
'     $firText = ""
'     $secText = ""
'   Endif
'
' End
'
' Public Sub btndown_Click()
'
'   Dim Row As Integer
'   Dim res As Result
'   Dim res1 As Result
'
'   Dim scurrKey As String
'   Dim scurval As Integer
'   Dim sprevKey As String
'   Dim sprevval As Integer
'
'   Dim sList As String[]
'   Dim asx As String[]
'
'   If ColumnView1.Selection.Count > 0 Then
'     If ColumnView1.Current.Picture = Picture["icons/coll2.png"] Then
'       scurrKey = ColumnView1.Current.Key
'       scurval = GetItemIndex(modFillContainer.GetTextFromTreeKey(scurrKey))
'
'       Row = $pic2List.Find(ColumnView1.Current.Key)
'       If Row < $pic2List.Count - 1 Then
'         sprevKey = $pic2List[Row + 1]
'         sprevval = GetItemIndex(modFillContainer.GetTextFromTreeKey(sprevKey))
'
'         res = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey(scurrKey))
'         If res.Available Then
'           For Each res
'             res["flditemid"] = sprevval
'             res.Update
'           Next
'         Endif
'
'         res1 = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey(sprevKey))
'         If res1.Available Then
'           For Each res1
'             res1["flditemid"] = scurval
'             res1.Update
'           Next
'         Endif
'       Endif
'
'     Else If ColumnView1.Current.Picture = Picture["icons/coll3.png"] Then
'       scurrKey = ColumnView1.Current.Key
'       scurval = CInt(ColumnView1[scurrKey][7])
'
'       sList = modString.SelectStringArrayToText($secText & "#", $pic3List)
'       Row = sList.Find($secText & "#" & ColumnView1.Current.Key)
'       If Row < sList.Count - 1 Then
'         asx = Split(sList[Row + 1], "#")
'         sprevKey = asx[1]
'         sprevval = CInt(ColumnView1[sprevKey][7])
'
'         res = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4 and fldheadcode=&5", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey($secText), modFillContainer.GetTextFromTreeKey(scurrKey))
'         If res.Available Then
'           For Each res
'             res["fldheadid"] = sprevval
'             res.Update
'           Next
'         Endif
'
'         res1 = modDatabase.$medConn.Edit("tblstructexam", "fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and flditem=&4 and fldheadcode=&5", cmbsubclass.Text, cmbcategory.Text, cmbreference.Text, modFillContainer.GetTextFromTreeKey($secText), modFillContainer.GetTextFromTreeKey(sprevKey))
'         If res1.Available Then
'           For Each res1
'             res1["fldheadid"] = scurval
'             res1.Update
'           Next
'         Endif
'       Endif
'
'     Endif
'     FillClinGrid()
'     $firText = ""
'     $secText = ""
'   Endif
'
' End

' Private Function GetItemIndex(sItem As String) As Integer
'
'   Dim res As Result
'   Dim xx As Integer
'
'   res = modDatabase.$medConn.Exec("select flditemid from tblstructexam where fldsubclass=&1 and fldcategory=&2 and flditem=&3 and fldreferencee=&4", cmbsubclass.Text, cmbcategory.Text, sItem, cmbreference.Text)
'   If res.Available Then
'     res.MoveFirst
'     xx = res["flditemid"]
'   Endif
'   Return xx
'
' End

Public Sub btnvarlist_Click()

  Dim xList As String[] = ["General Param", "Patient Param", "Encounter Param", "Obstetrics Param", "Consultation Param", "Delivery Param", "Procedure Param", "Clinical Param", "Examination"]
  Dim xval As String
  Dim yList As Variant[]
  Dim yvar As Variant
  Dim xFinal As String[]

  xFinal = New String[]
  For Each xval In xList
    yList = modReportVar.GetReportVarCollection(xval)
    For Each yvar In yList
      xFinal.Add(xval & "@" & yvar[0])
    Next
  Next

  If xFinal.Count Then
    cmbconstant.Text = GridViewGroup("Select Variable", xFinal, False)
  Endif

End

Public Sub chkleftright_Click()

  If chkleftright.Value = True Then
    cmbtype.Text = "Qualitative"
    cmbtype.Enabled = False
  Else If chkleftright.Value = False Then
    cmbtype.Text = ""
    cmbtype.Enabled = True
  Endif

End
