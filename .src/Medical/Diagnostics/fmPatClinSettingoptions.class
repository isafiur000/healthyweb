' Gambas class file

Private $sCode As String
Private $rData As Result
Private $aMyFields As String[]

Public Sub _new(scode As String, sHead As String, sOptionType As String)

  $sCode = scode
  lblhead.Text = sHead
  lbloption.Text = sOptionType
  ShowOptionSetting()

End

Private Function GetIndexIDForCurr(sItem As String) As Integer

  Dim res As Result
  Dim xval As Integer

  res = modDatabase.$medConn.Exec("select MAX(fldindex) as col from tblstructexamoption where fldheadcode=&1", sItem)
  If res.Available Then
    If res["col"] Then
      xval = res["col"] + 1
    Else
      xval = 1
    Endif
  Else
    xval = 1
  Endif
  Return xval

End

Public Sub btnBrOK_Click()

  Dim res As Result

  If txtoption.Text Then
    res = modDatabase.$medConn.Create("tblstructexamoption")
    res["fldhead"] = lblhead.Text
    res["fldheadcode"] = $sCode
    res["fldtanswertype"] = lbloption.Text
    res["fldanswer"] = Trim(txtoption.text)
    res["fldindex"] = GetIndexIDForCurr($sCode)
    res["fldlock"] = False
    res.Update()
    Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
    ShowOptionSetting()
    txtoption.Text = ""
  Endif
  txtoption.SetFocus

End

Public Sub ShowOptionSetting()

  Dim sql As String

  sql = "select fldid,fldanswer,fldindex from tblstructexamoption where fldheadcode=&1 ORDER BY fldindex"
  $rData = modDatabase.$medConn.Exec(sql, $sCode)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(400 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData[$aMyFields[Column]]

End

Public Sub btndel_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modDatabase.$medConn.Delete("tblstructexamoption", "fldid=&1 and fldlock=&2", $rData["fldid"], False)
    ShowOptionSetting()
    Me.Exec("Toastify({text: 'Information deleted', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

' Public Sub btnup_Click()
'
'   Dim Row As Integer
'   Dim res As Result
'   Dim res1 As Result
'   Dim scurr As Integer
'   Dim sprev As Integer
'
'   Row = GridView1.Row
'   scurr = GridView1[Row, 2].Text
'   If Row > 0 Then
'     sprev = GridView1[Row - 1, 2].Text
'     res = modDatabase.$medConn.Edit("tblstructexamoption", "fldid=&1", GridView1[Row, 0].Text)
'     If res.Available Then
'       res["fldindex"] = sprev
'       res.Update
'     Endif
'
'     res1 = modDatabase.$medConn.Edit("tblstructexamoption", "fldid=&1", GridView1[Row - 1, 0].Text)
'     If res1.Available Then
'       res1["fldindex"] = scurr
'       res1.Update
'     Endif
'     ShowOptionSetting()
'     GridView1.Row = Row - 1
'   Endif
'
' End
'
' Public Sub btndown_Click()
'
'   Dim Row As Integer
'   Dim res As Result
'   Dim res1 As Result
'   Dim scurr As Integer
'   Dim snext As Integer
'
'   Row = GridView1.Row
'   scurr = GridView1[Row, 2].Text
'   If Row < GridView1.Count - 1 Then
'     snext = GridView1[Row + 1, 2].Text
'     res = modDatabase.$medConn.Edit("tblstructexamoption", "fldid=&1", GridView1[Row, 0].Text)
'     If res.Available Then
'       res["fldindex"] = snext
'       res.Update
'     Endif
'
'     res1 = modDatabase.$medConn.Edit("tblstructexamoption", "fldid=&1", GridView1[Row + 1, 0].Text)
'     If res1.Available Then
'       res1["fldindex"] = scurr
'       res1.Update
'     Endif
'     ShowOptionSetting()
'     GridView1.Row = Row + 1
'   Endif
'
' End
'
' Public Sub btnqueall_Click()
'
'   Dim res As Result
'   Dim Row As Integer
'
'   For Row = 0 To GridView1.Count - 1
'     res = modDatabase.$medConn.Edit("tblstructexamoption", "fldid=&1", GridView1[Row, 0].Text)
'     res["fldindex"] = Row
'     res.Update
'   Next
'   ShowOptionSetting()
'   Balloon.Info(("Rows order corrected"), btnqueall)
'   Balloon.Delay = modBasic.$BalloonDelay
'
' End

Public Sub btnclose_Click()

  Me.Close()

End
