' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $Manual As Boolean

Public Sub _new()

  cmbward.List = modBasic.$IPDDepartmentsAll

  rbnew.Value = True
  chksearch.Value = True
  dtsearch.Value = Date()
  dtcurrent.Value = Now()

  If modBasic.$SuperUser = True Then
    btndelete.Visible = True
  Endif

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtcurrent.Value))
  If xx Then
    dtcurrent.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub chksearch_Click()

  btnsearch.Enabled = chksearch.Value

End

Private Sub GetBlankData()

  txtcentral.Value = 0
  txtperiphers.Value = 0
  txturinary.Value = 0
  txtall.Value = 0

End

Public Sub btnsearch_Click()

  If cmbward.Text Then
    ShowDataInputDate(dtsearch.Value)
    btnupload.Visible = True
  Endif

End

Public Sub btnrefresh_Click()

  If cmbward.Text Then
    ShowDataInputDate(dtcurrent.Value)
    btnupload.Visible = False
  Endif

End

Private Sub ShowDataInputDate(dtdate As Date)

  Dim sql As String
  Dim xstr As String

  If rbnew.Value = True Then
    xstr = db.Subst(" and dhis=&1", False)
  Else If rbsaved.Value = True Then
    xstr = db.Subst(" and dhis=&1", True)
  Else
    xstr = ""
  Endif

  If chksearch.Value = True Then
    sql = "select fldid,fldward,flddate,flddate,fldcentral,fldperipheral,fldurinary,fldtotal,fldsave from tblhaidenominators where fldward=&1 and fldweight=&2 and flddate>=&3 and flddate<=&4" & xstr
  Else
    sql = "select fldid,fldward,flddate,flddate,fldcentral,fldperipheral,fldurinary,fldtotal,fldsave from tblhaidenominators where fldward=&1 and fldweight=&2" & xstr
  Endif
  $rData = modDatabase.$myConn.Exec(sql, cmbward.Text, "Adult", modDate.StartSqlDate(dtdate), modDate.EndSqlDate(dtdate))
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Ward"
    .Columns[2].Text = "Date"
    .Columns[3].Text = "Time"
    .Columns[4].Text = "Central"
    .Columns[5].Text = "Peripheral"
    .Columns[6].Text = "Urinary"
    .Columns[7].Text = "Total"
    .Columns[8].Text = "Manual"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumDate)
  Else If Column = 3 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.MediumTime)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btnadd_Click()

  Dim res As Result

  If cmbward.Text Then
    If cmbward.Text = "%" Then
      Message.Warning("Select Ward name from the List", "OK")
    Else
      If txtall.Value Then
        res = modDatabase.$myConn.Create("tblhaidenominators")
        res["flddate"] = dtcurrent.Value
        res["fldward"] = cmbward.Text
        res["fldweight"] = "Adult"
        res["fldcentral"] = txtcentral.Value
        res["fldperipheral"] = txtperiphers.Value
        res["fldurinary"] = txturinary.Value
        res["fldtotal"] = txtall.Value
        res["flduserid"] = modBasic.$lbluser
        res["fldtime"] = Now()
        res["fldsave"] = $Manual
        res["dhis"] = False
        res.Update
        Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
        GetBlankData()
        ShowDataInputDate(dtcurrent.Value)
      Endif
    Endif
  Endif

End

Public Sub btndelete_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modDatabase.$myConn.Delete("tblhaidenominators", "fldid=&1", $rData["fldid"])
    ShowDataInputDate(dtcurrent.Value)
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End

''-------------------- Calculation -------------------
Public Sub btncalc_Click()

  If cmbward.Text Then
    txtcentral.Value = GetDeviceUserNumber("Central Line Catheter")
    txtperiphers.Value = GetDeviceUserNumber("Peripheral Line Catheter")
    txturinary.Value = GetDeviceUserNumber("Urinary Catheter")
    txtall.Value = GetWardPatientNumber()
    $Manual = False
  Endif

End

Private Function GetDeviceUserNumber(sCategory As String) As Integer

  Dim sql As String
  Dim res As Result
  Dim xval As Integer
  Dim xfir As Date
  Dim xlast As Date

  xfir = DateAdd(dtcurrent.Value, gb.Minute, -5)
  xlast = DateAdd(dtcurrent.Value, gb.Minute, 5)
  sql = "select count(fldencounterval) as xcnt from tbldepartmentbed where flddept like &1 and fldencounterval in(select fldencounterval from tblpatevents where fldtype=&2 and fldfirsttime<&3 and (fldsecondtime>&4 or fldsecondtime IS NULL) and flditem in(select flditem from tblevents where fldcategory like &5))"                     ''
  res = modDatabase.$myConn.Exec(sql, cmbward.Text, "Devices", xfir, xlast, sCategory)
  If res.Available Then
    If res["xcnt"] Then
      xval = res["xcnt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif

  Return xval

End

Private Function GetWardPatientNumber() As Integer

  Dim sql As String
  Dim res As Result
  Dim xval As Integer

  sql = "select count(fldencounterval) as xcnt from tbldepartmentbed where flddept like &1"
  res = modDatabase.$myConn.Exec(sql, cmbward.Text)
  If res.Available Then
    If res["xcnt"] Then
      xval = res["xcnt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif

  Return xval

End

Public Sub txtcentral_Change()

  $Manual = True

End

Public Sub txtperiphers_Change()

  $Manual = True

End

Public Sub txturinary_Change()

  $Manual = True

End

Public Sub txtall_Change()

  $Manual = True

End

''----------------- API ---------------------------
Public Sub btnupload_Click()

  Dim xDepart As String

  If cmbward.Text Then
    If rbnew.Value = True Then
      For Each $rData
        xDepart = modGeneral.GetDepartCaption($rData["fldward"])
        If xDepart Then
          ' UploadSelectedHAI("Denominators:Adult", $rData["fldid"], xDepart)
          UploadSelectedNewHAI("Denominators:Adult", $rData["fldid"], xDepart)
        Endif
      Next
      ShowDataInputDate(dtsearch.Value)
    Endif
  Endif

End

Private Function UploadSelectedNewHAI(sChapter As String, xid As Long, sDepart As String) As Variant[]

  Dim res As Result
  Dim refld As ResultField
  Dim aVar As Variant[]
  Dim xArr As String[]
  Dim aColl As Collection

  Dim xVar As Variant[]
  Dim hCApi As CFindAPI
  Dim xdate As Date
  Dim xmsg As String
  Dim res1 As Result
  Dim xdeptcode As String

  xVar = New Variant[]
  aVar = modHAITags.GetHAINewTags(sChapter)
  xdeptcode = modHAITags.GetHAINewDeptCode(sDepart)
  If xdeptcode Then
    res = modDatabase.$myConn.Exec("select fldward,flddate,fldcentral,fldperipheral,fldurinary,fldtotal,fldsave from tblhaidenominators where fldid=&1", xid)
    If res.Available Then

      xdate = res["flddate"]
      For Each refld In res.Fields
        For Each xArr In aVar
          If refld.Name = xArr[0] Then

            aColl = New Collection
            aColl.Add(xArr[0], "_comment")
            aColl.Add(xArr[2], "dataElement")
            If xArr[1] = "Time" Then
              aColl.Add(Format(res[refld.Name], "hh:nn"), "value")
              ' Else If xArr[1] = "Boolean" Then
              '   aColl.Add(res[refld.Name], "value")
            Else
              aColl.Add(res[refld.Name], "value")
            Endif
            aColl.Add(xdeptcode, "categoryOptionCombo")
            xVar.Add(aColl)

          Endif
        Next
      Next

      hCApi = New CFindAPI(sChapter, xVar, Format(xdate, "yyyymmdd"))
      xmsg = hCApi.GetAPIOutput()

      If xmsg = "SUCCESS" Then
        res1 = modDatabase.$myConn.Edit("tblhaidenominators", "fldid=&1", xid)
        res1["dhis"] = True
        res1.Update
        Me.Exec("Toastify({text: 'Upload completed', duration: 3000}).showToast()")
      Else
        Message.Warning(xmsg)
      Endif
    Endif

  Else
    Message.Warning("Department not mapped in DHIS2", ("OK"))
  Endif

End

Private Function UploadSelectedHAI(sChapter As String, xid As Long, sDepart As String) As Variant[]

  Dim res As Result
  Dim refld As ResultField
  Dim aVar As Variant[]
  Dim xArr As String[]
  Dim aColl As Collection

  Dim xVar As Variant[]
  Dim hCApi As CFindAPI
  Dim xdate As Date
  Dim xmsg As String
  Dim res1 As Result

  xVar = New Variant[]
  aVar = modHAITags.GetHAITags(sChapter)
  res = modDatabase.$myConn.Exec("select fldward,flddate,fldcentral,fldperipheral,fldurinary,fldtotal,fldsave from tblhaidenominators where fldid=&1", xid)
  If res.Available Then

    xdate = res["flddate"]
    For Each refld In res.Fields
      For Each xArr In aVar
        If refld.Name = xArr[0] Then

          aColl = New Collection
          aColl.Add(xArr[0], "_comment")
          aColl.Add(xArr[2], "dataElement")
          If xArr[1] = "Time" Then
            aColl.Add(Format(res[refld.Name], "hh:nn"), "value")
          Else If xArr[1] = "Department" Then
            aColl.Add(sDepart, "value")
            ' Else If xArr[1] = "Boolean" Then
            '   aColl.Add(res[refld.Name], "value")
          Else
            aColl.Add(res[refld.Name], "value")
          Endif
          xVar.Add(aColl)

        Endif
      Next
    Next

    hCApi = New CFindAPI(sChapter, xVar, Format(xdate, "yyyymmdd"))
    xmsg = hCApi.GetAPIOutput()

    If xmsg = "SUCCESS" Then
      res1 = modDatabase.$myConn.Edit("tblhaidenominators", "fldid=&1", xid)
      res1["dhis"] = True
      res1.Update
      Me.Exec("Toastify({text: 'Upload completed', duration: 3000}).showToast()")
    Else
      Message.Warning(xmsg)
    Endif
  Endif

End
