' Gambas class file

Private $rData As Result
Private $aMyFields As String[]

Private $rData1 As Result
Private $aMyFields1 As String[]

Public Sub _new()

  If modHelpVariable.$LogInCategory = "Clinician" Then
    cmbtarget.Text = modBasic.$compID
    cmbtarget.Enabled = False
  Else
    cmbtarget.List = modBasic.$AllCompPerList
    cmbtarget.Enabled = True
  Endif
  cmbcategory.List = ["Triage Examinations", "Essential Examinations", "Physician Examinations", "Nursing Examinations", "Discharge Examinations"]                         ''

End

Public Sub cmbtarget_Click()

  lblcomp.Text = modGeneral.GetCompNameFromCompID(cmbtarget.Text)

End

Public Sub btnexport_Click()

  If cmbcategory.Text Then
    If TabPanel1.Index = 0 Then
      modCHTMLReport.ExportGridToHTML(grdsymp, UCase("Presenting Complaints"), lblcomp.Text & "[" & cmbtarget.Text & "]")
    Else If TabPanel1.Index = 1 Then
      modCHTMLReport.ExportGridToHTML(GridView1, UCase(cmbcategory.Text), lblcomp.Text & "[" & cmbtarget.Text & "]")
    Endif
  Endif

End

Private Function GetFlagValue(sBool As Boolean) As String

  Dim sVal As String

  If sBool = True Then
    sVal = "Flagged"
  Else If sBool = False Then
    sVal = "Unflagged"
  Endif
  Return sVal

End

''======================= Examination ==============================
Public Sub btnaddall_Click()

  Dim hForm As FmSelectList

  If cmbcategory.Text And If cmbtarget.Text Then
    hForm = New FmSelectList(("Select Examinations for the selected department"), cmbcategory.Text, cmbtarget.Text)
    hForm.ShowModal
    FillFindingGrid(cmbcategory.Text)
  Endif

End

Public Sub btnrefresh_Click()

  If cmbcategory.Text And If cmbtarget.Text Then
    FillFindingGrid(cmbcategory.Text)
  Endif

End

Private Sub FillFindingGrid(sType As String)

  Dim sql As String

  If cmbtarget.Text Then
    sql = "select fldid,fldtype,fldflag,fldexamid,fldflag from tblcompexam where fldcomp=&1 and fldcategory=&2"
    $rData = modDatabase.$myConn.Exec(sql, cmbtarget.Text, sType)
    $aMyFields = New String[]
    modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

    With GridView1
      .Columns[0].Hidden = True
      .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[2].Width = CStr(20 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Hidden = True

      .Columns[1].Text = "Type"
      .Columns[3].Text = "Exam Name"
    End With
  Endif

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData[$aMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btnexamflag_Click()

  Dim xval As String
  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xval = InputCombo("Alter Flag", $rData["fldexamid"], ["Flagged", "Unflagged"], GetFlagValue($rData["fldflag"]), True)
    If xval Then
      res = modDatabase.$myConn.Edit("tblcompexam", "fldid=&1", $rData["fldid"])
      If xval = "Flagged" Then
        res["fldflag"] = True
      Else If xval = "Unflagged" Then
        res["fldflag"] = False
      Endif
      res.Update
      FillFindingGrid(cmbcategory.Text)
    Endif
  Endif

End

Public Sub mnudel_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If cmbcategory.Text Then
      modDatabase.$myConn.Delete("tblcompexam", "fldid=&1", $rData["fldid"])
      FillFindingGrid(cmbcategory.Text)
      Me.Exec("Toastify({text: 'Information deleted', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub btnupload_Click()

  Dim xdelim As String

  If Trim(txtdelim.Text) Then
    xdelim = Trim(txtdelim.Text)
  Else
    xdelim = ";"
  Endif

  If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
    If cmbtarget.Text Then
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcompexam", txtcsv.Text, xdelim, "fldcomp", cmbtarget.Text)
    Else
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcompexam", txtcsv.Text, xdelim)
    Endif
    Me.Exec("Toastify({text: 'Data Upload completed', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

''================================ Symptom ========================
Public Sub btnrefreshsymp_Click()

  FillComplaintGrid()

End

Public Sub btnaddsymp_Click()

  Dim hForm As FmSelectList

  If cmbtarget.Text Then
    hForm = New FmSelectList(("Select Complaints for the selected department"), "Complaints List", cmbtarget.Text)
    hForm.ShowModal
    FillComplaintGrid()
  Endif

End

Private Sub FillComplaintGrid()

  Dim sql As String

  If cmbtarget.Text Then
    sql = "select fldid,fldtype,fldflag,fldsymptom,fldflag from tblcomplaints where fldcomp=&1 ORDER BY fldsymptom"
    $rData1 = modDatabase.$myConn.Exec(sql, cmbtarget.Text)
    $aMyFields1 = New String[]
    modGridView.ReadSmallData(grdsymp, $rData1, $aMyFields1)

    With grdsymp
      .Columns[0].Hidden = True
      .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
      .Columns[2].Width = CStr(20 * modBasic.$AppWidthRatio) & "px"
      .Columns[3].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
      .Columns[4].Hidden = True

      .Columns[1].Text = "Type"
      .Columns[3].Text = "Symptom"
    End With
  Endif

End

Public Sub grdsymp_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData1[$aMyFields1[Column]]), "75%", "75%")
    Data.Text = ""
  Else
    Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

Public Sub btnsympflag_Click()

  Dim xval As String
  Dim res As Result

  If grdsymp.Selection.Count Then
    $rData1.MoveTo(grdsymp.Selection[0])
    xval = InputCombo("Alter Flag", $rData1["fldsymptom"], ["Flagged", "Unflagged"], GetFlagValue($rData1["fldflag"]), True)
    If xval Then
      res = modDatabase.$myConn.Edit("tblcomplaints", "fldid=&1", $rData1["fldid"])
      If xval = "Flagged" Then
        res["fldflag"] = True
      Else If xval = "Unflagged" Then
        res["fldflag"] = False
      Endif
      res.Update
      FillComplaintGrid()
    Endif
  Endif

End

Public Sub mnudelcomplain_Click()

  If grdsymp.Selection.Count Then
    $rData1.MoveTo(grdsymp.Selection[0])
    modDatabase.$myConn.Delete("tblcomplaints", "fldid=&1", $rData1["fldid"])
    FillComplaintGrid()
    Me.Exec("Toastify({text: 'Information deleted', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnuploadsymp_Click()

  Dim xdelim As String

  If Trim(txtdelimsymp.Text) Then
    xdelim = Trim(txtdelimsymp.Text)
  Else
    xdelim = ";"
  Endif

  If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then
    If cmbtarget.Text Then
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcomplaints", txtcsvsymp.Text, xdelim, "fldcomp", cmbtarget.Text)
    Else
      modTextDB.ImportCSVToCurrentDB(modDatabase.$myConn, "tblcomplaints", txtcsvsymp.Text, xdelim)
    Endif
    Me.Exec("Toastify({text: 'Data Upload completed', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End
