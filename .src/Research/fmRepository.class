' Gambas class file

' Export

Public Sub _new()

  Me.AddHeader("<meta name='viewport' content='width=device-width, initial-scale=1'>")
  Me.AddHeader("<link rel=\"stylesheet\" href=\"" & modHelpVariable.$AppCssPath & "\">")
  Me.AddJavascriptFile("js/webcontrols.js")
  Me.AddJavascriptFile("js/jquery.min.js")
  Me.AddJavascriptFile("js/print.min.js")
  Me.AddJavascriptFile("js/toastify.js")
  Me.AddJavascriptFile("js/Chart.js")
  Me.AddJavascriptFile("js/tribute.js")
  Me.AddJavascriptFile("js/download.js")
  Me.AddJavascriptFile("js/select2.min.js")

  Me.AddJavascriptFile("js/sketchpad.js")
  ''slow js
  Me.AddJavascriptFile("js/html2pdf.bundle.min.js")
  Me.AddJavascriptFile("js/xlsx.full.min.js")
  Me.Font = MMain.$AppFontName
  WebImage1.Image = modHelpVariable.$headerImage
  WebForm.Debug = MMain.$isdebug
  mnucuruserid.Text = modBasic.$lbluser

  modBasic.ShowUserPrivilege()
  If modBasic.$SuperUser = True Then
    mnuparam.Visible = True
    mnudb.Visible = True
  Else
    mnuparam.Visible = False
    mnudb.Visible = False
  Endif
  MMain.$IsDrugInfo = True

End

Public Sub WebForm_Open()

  modHelpVariable.SetApplicationGUI()
  MMain.GetApplVersionType()
  DiaplayCustMenu()

  modBasic.LoadClinicalChartSetting()
  modBasic.LoadClinicalLists()
  modBasic.ClinicalCommentSett()
  modBasic.ChartSettingsAll()
  modBasic.FillMunicipalList()
  modBasic.SetAccountRules()

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$SuperUser = True Then
      modBasic.$HospCode = ""
      lblocation.Visible = False
      mnupacsrepo.Visible = True

    Else
      If MMain.$AppLogCategory = "Admin" Then
        modBasic.$HospCode = ""
        lblocation.Visible = False
        mnupacsrepo.Visible = True
      Else
        modDataRepo.$RepositoryMode = MMain.$AppLogCategory
        modBasic.$HospCode = MMain.$AppLogString
        lblocation.Text = modDataRepo.$RepositoryMode & " : " & modBasic.$HospCode
        mnupacsrepo.Visible = False
        If MMain.$AppLogCategory = "Hospital" Then
          mnunepal.Visible = False
          mnuselformat.Visible = False
        Endif
      Endif

    Endif
  Endif
  ' LoadDeskTree()

  If modBasic.$ExpoRepoUser = True Then
  Else
    modBasic.$PatNameFormat = "***SurName"
  Endif
  If Not modBasic.$currency Then
    modBasic.$currency = "Rs "
  Endif
  DefaultFormLoad()

End

Private Sub DefaultFormLoad()

  Dim hForm As FmSummaryChart
  Dim hForm1 As FmNepalMap

  If Not Workspace1.Children.Count Then
    If MMain.$AppLogCategory = "Admin" Then
      hForm1 = New FmNepalMap(Workspace1)
    Else
      hForm = New FmSummaryChart(Workspace1)
    Endif
  Endif

End

Public Sub mnuexit_Click()

  Session.Abandon()
  WebForm.Current = fmLogIn
  Me.Close()

End

Public Sub WebForm_Close()

  modDevice.CamOnClose()
  modDatabase.CloseDatabase()
  modExternal.DeleteFolderRecursive("/tmp" &/ modHelpVariable.AppName &/ "docs" &/ modHelpVariable.$SessionCode)
  modExternal.DeleteFolderRecursive(modHelpVariable.AppCacheDir)

End

Public Sub mnunewextra_Click()

  Dim xLink As String = "http://bitnepal.safiur.com.np/healthybit/help/" & modHelpVariable.$LogInCategory & "/"

  Me.Exec("window.open('" & xLink & "'); ")

End

Public Sub mnuclearcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnubugrepo_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End

' Public Sub WebContainer2_Render()
'
'   Print "<iframe src='" & modBasic.$FormLeftURL & "' width='100%' height='100%'></iframe>";
'
' End
'
' Public Sub WebContainer3_Render()
'
'   Print "<iframe src='" & modBasic.$FormRightURL & "' width='100%' height='100%'></iframe>";
'
' End

Public Sub btnquit_Click()

  Session.Abandon()
  WebForm.Current = fmLogIn
  Me.Close()

End

Public Sub btnfullscreen_Click()

  If btnfullscreen.Image = "icon:/small/zoom-normal" Then
    btnfullscreen.Image = "icon:/small/zoom-fit"
    Me.Exec("openFullscreen()")

  Else If btnfullscreen.Image = "icon:/small/zoom-fit" Then
    btnfullscreen.Image = "icon:/small/zoom-normal"
    Me.Exec("closeFullscreen()")

  Endif

End

''---------------------------------------- CustomAccount Reports -------------------------------------
Private Sub DiaplayCustMenu()

  If modSettings.ShowSettingForReport("Repository.CustomQuery1/Name") Then
    mnucust1.Title = modSettings.ShowSettingForReport("Repository.CustomQuery1/Name")
    mnucust1.Tag = "Repository.CustomQuery1"
    mnucust1.Visible = True
  Endif

  If modSettings.ShowSettingForReport("Repository.CustomQuery2/Name") Then
    mnucust2.Title = modSettings.ShowSettingForReport("Repository.CustomQuery2/Name")
    mnucust2.Tag = "Repository.CustomQuery2"
    mnucust2.Visible = True
  Endif

  If modSettings.ShowSettingForReport("Repository.CustomQuery3/Name") Then
    mnucust3.Title = modSettings.ShowSettingForReport("Repository.CustomQuery3/Name")
    mnucust3.Tag = "Repository.CustomQuery3"
    mnucust3.Visible = True
  Endif

  If modSettings.ShowSettingForReport("Repository.CustomQuery4/Name") Then
    mnucust4.Title = modSettings.ShowSettingForReport("Repository.CustomQuery4/Name")
    mnucust4.Tag = "Repository.CustomQuery4"
    mnucust4.Visible = True
  Endif

  If modSettings.ShowSettingForReport("Repository.CustomQuery5/Name") Then
    mnucust5.Title = modSettings.ShowSettingForReport("Repository.CustomQuery5/Name")
    mnucust5.Tag = "Repository.CustomQuery5"
    mnucust5.Visible = True
  Endif

End

Public Sub mnucust1_Click()

  Dim hForm As FmCustQueryTable

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust1.Tag, Workspace1)

End

Public Sub mnucust2_Click()

  Dim hForm As FmCustQueryTable

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust2.Tag, Workspace1)

End

Public Sub mnucust3_Click()

  Dim hForm As FmCustQueryTable

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust3.Tag, Workspace1)

End

Public Sub mnucust4_Click()

  Dim hForm As FmCustQueryTable

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust4.Tag, Workspace1)

End

Public Sub mnucust5_Click()

  Dim hForm As FmCustQueryTable

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustQueryTable(modDatabase.$syConn, mnucust5.Tag, Workspace1)

End

Public Sub mnucustsetting_Click()

  fmCusAccReport.ShowModal

End

''=======================================
Public Sub mnusumchart_Click()

  Dim hForm As FmSummaryChart

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSummaryChart(Workspace1)

End

Public Sub mnunepal_Click()

  Dim hForm1 As FmNepalMap

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm1 = New FmNepalMap(Workspace1)

End

Public Sub mnumaternal_Click()

  Dim hForm1 As FmMaternalMap

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm1 = New FmMaternalMap(Workspace1)

End

Public Sub mnusummary_Click()

  Dim hForm1 As FmSummryReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm1 = New FmSummryReport(Workspace1)

End

Public Sub mnuhmis_Click()

  Dim hForm As FmHMISRepo
  ' Dim hForm1 As FmAMISRepo

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  If MMain.$Ayurveda = "Yes" Then
    ' hForm1 = New FmAMISRepo(Workspace1)
  Else
    hForm = New FmHMISRepo(Workspace1)
  Endif

End

Public Sub fmpatlist_Click()

  Dim hForm As FmPatIdentity

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatIdentity(Workspace1)

End

Public Sub mnubedoccupy_Click()

  Dim hForm As FmClinBedList

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmClinBedList(Workspace1)

End

Public Sub mnudept_Click()

  Dim hForm As FmPatAdmit

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatAdmit(Workspace1)

End

Public Sub mnuipdates_Click()

  Dim hForm As FmClinSummary

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmClinSummary(Workspace1)

End

Public Sub mnutrans_Click()

  Dim hForm As FmBedReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmBedReport(Workspace1)

End

Public Sub mnuconsreport_Click()

  Dim hForm As FmConsultReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmConsultReport(Workspace1)

End

Public Sub mnuopvisit_Click()

  Dim hForm As FmOpVisitReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmOpVisitReport(Workspace1)

End

Public Sub mnuprocerepo_Click()

  Dim hForm As FmProcedReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmProcedReport(Workspace1)

End

Public Sub mnuequiprepo_Click()

  Dim hForm As FmEquipReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmEquipReport(Workspace1)

End

Public Sub mnudeviceuse_Click()

  Dim hForm As FmEventReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmEventReport("Devices", Workspace1)

End

Public Sub mnumedquery_Click()

  Dim hForm As FmDrugSearch

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmDrugSearch(Workspace1)

End

Public Sub mnunutrition_Click()

  Dim hForm As FmDietReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmDietReport(Workspace1)

End

Public Sub mnuconfine_Click()

  Dim hForm As FmConfinement

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmConfinement(Workspace1)

End

Public Sub mnuexamall_Click()

  Dim hForm As FmExamAll

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmExamAll(Workspace1)

End

Public Sub mnucustdept_Click()

  Dim hForm As FmCustExamReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustExamReport(Workspace1)

End

Public Sub mnulabrep_Click()

  Dim hForm As FmSampReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSampReport(Workspace1)

End

Public Sub mnusensireport_Click()

  Dim hForm As FmSensiReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSensiReport(Workspace1)

End

Public Sub mnuradiorep_Click()

  Dim hForm As FmSampRadio

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSampRadio(Workspace1)

End

Public Sub mnurecord_Click()

  Dim hForm As FmMedSearch

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmMedSearch(Workspace1)

End

Public Sub mnuquery_Click()

  Dim hForm As FmMedStat

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmMedStat(Workspace1)

End

Public Sub mnuclinsearch_Click()

  Dim hForm As FmPatclinSearch

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatclinSearch(Workspace1)

End

Public Sub mnuimagesearch_Click()

  Dim hForm As FmImageSearch

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmImageSearch(Workspace1)

End

Public Sub mnupacsrepo_Click()

  Dim hForm As FmPacsReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPacsReport(Workspace1)

End

Public Sub mnusearchdb_Click()

  Dim hForm As FmFIndRecord

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmFIndRecord(Workspace1)

End

Public Sub mnusummrepo_Click()

  Dim hForm As FmSummryReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSummryReport(Workspace1)

End

Public Sub mnussulist_Click()

  Dim hForm As FmSocial

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSocial(Workspace1)

End

Public Sub mnustafflist_Click()

  Dim hForm As FmStaffList

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmStaffList(Workspace1)

End

Public Sub mnuserv_Click()

  Dim hForm As Fmservreport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New Fmservreport(Workspace1)

End

Public Sub mnugrpreport_Click()

  Dim hForm As FmGroupReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmGroupReport(Workspace1)

End

Public Sub mnufaculty_Click()

  Dim hForm As FmMasterReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmMasterReport(Workspace1)

End

Public Sub mnusharing_Click()

  Dim hForm As Fmsharereport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New Fmsharereport(Workspace1)

End

Public Sub mnubill_Click()

  Dim hForm As FmPatBillRecord

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatBillRecord(Workspace1)

End

Public Sub mnudeposit_Click()

  Dim hForm As FmDepositReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmDepositReport(Workspace1)

End

Public Sub mnuvouchers_Click()

  Dim hForm As FmVoucherReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmVoucherReport(Workspace1)

End

Public Sub mnuyearly_Click()

  Dim xType As String
  Dim xdate As Date[]
  Dim inidate As Date
  Dim lstdate As Date
  Dim xPath As String

  xType = InputCombo("Select Sales Book Format", "Sales Book", ["Sales Book", "Sales Return", "Sales Book(All)"], "Sales Book(All)", True)
  If xType Then
    xdate = DoubleDates("Select Dates", "Sales Book", [Now(), Now()])
    If xdate Then
      inidate = xdate[0]
      lstdate = xdate[1]

      If inidate And If lstdate Then
        xPath = modHTMLStock.GetIRDSalesBook(xType, inidate, lstdate)
        modControlSub.DisplayReportExport(xPath)
      Endif
    Endif
  Endif

End

Public Sub mnumaterial_Click()

  Dim xdate As Date[]
  Dim inidate As Date
  Dim lstdate As Date
  Dim res As Result
  Dim hForm As FRequest

  xdate = DoubleDates("Select Dates", "Yearly Report", [Now(), Now()])
  If xdate Then
    inidate = xdate[0]
    lstdate = xdate[1]

    If inidate And If lstdate Then
      res = modDatabase.$syConn.Exec("select fldfiscal,fldbillno,fldpatname,fldpan,flddate,flditemamt,flddiscountamt,fldtaxable,fldtaxamt,fldtotamt,fldsync,fldprinted,fldactive,flddate,fldpunch,fldprint,xyz from tblfiscal where flddate>=&1 and flddate<=&2", modDate.StartSqlDate(inidate), modDate.EndSqlDate(lstdate))                                                                ''
      hForm = New FRequest(res, "Yearly Report", "YearReport", True)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnupur_Click()

  Dim hForm As FmSupplier

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmSupplier(Workspace1)

End

Public Sub mnuinventory_Click()

  Dim hForm As Fmmedreport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New Fmmedreport(Workspace1)

End

Public Sub mnutransfer_Click()

  Dim hForm As FmmedTransfer

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmmedTransfer(Workspace1)

End

Public Sub mnufixedasset_Click()

  Dim hForm As FmAddFixAsset

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmAddFixAsset(Workspace1)

End

Public Sub mnuinventorydb_Click()

  fmStockDB.ShowModal

End

Public Sub mnusaved_Click()

  Dim hForm As FmRepoStatus

  hForm = New FmRepoStatus("Referrals")
  hForm.ShowModal

End

Public Sub mnuarchive_Click()

  Dim hForm As FmPatReports

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatReports("", Workspace1)

End

Public Sub mnuhospitals_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmHospitals.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuadvertise_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmSetAdvertise.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuadduser_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("fmUser")
  hForm.Show
  modBasic.ShowUserPrivilege()

End

Public Sub mnulaterdata_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmDBChange.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnudbcompare_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmDTransfer.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnudataclean_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("fmMedUpdate")
  hForm.Show

End

Public Sub mnutextimport_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmCSVImport.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnulogview_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmLogInfo.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuchartset_Click()

  fmChartSetting.ShowModal

End

Public Sub mnureposetting_Click()

  fmReportSetting.ShowModal

End

Public Sub mnuappsetting_Click()

  fmAppSetting.ShowModal

End

Public Sub mnuchangePass_Click()

  modGeneral.UpdateMainUserPassword(modBasic.$lbluser)

End

Public Sub mnucgiall_Click()

  fmCGIInfo.ShowModal

End

Public Sub mnubackup_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmFTPBackup.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnucreatetb_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    Message.Info(("Executing Request ...."), ("OK"))
    modDBTables.$DbFormat = "REP"
    modDBGroup.CreateDatabaseForSish(modDatabase.$myConn)
    Me.Exec("Toastify({text: 'Tables creation completed', duration: 3000}).showToast()")
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnualtertb_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    modDatabase.AlterDBTablesAdmin()
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnurepository_Click()

  Dim xPass As String
  Dim doTables As String[]
  Dim goTables As String[]

  If Message.Question(("Do you really want to update Database structure at your own risk?"), ("No"), ("Yes")) = 2 Then
    xPass = InputPassword("Provide Root Password", "Verification", "")
    If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
      doTables = modDatabase.GetRepositoryTables(modDatabase.$myConn)
      goTables = SelectListView("Select Tables to alter", doTables, False)
      If goTables.Count Then
        modDatabase.AlterTableRepository(modDatabase.$myConn, goTables)
        Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")
      Endif
    Else
      Message.Info("Incorrect Root Password", ("OK"))
    Endif
  Endif

End

Public Sub mnusurveil_Click()

  Dim xPass As String

  If Message.Question(("Do you really want to update Database structure at your own risk?"), ("No"), ("Yes")) = 2 Then
    xPass = InputPassword("Provide Root Password", "Verification", "")
    If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
      modDatabase.AlterTableHAIParam(modDatabase.$myConn, "Add")
      Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")
    Else
      Message.Info("Incorrect Root Password", ("OK"))
    Endif
  Endif

End

Public Sub mnudruginfo_Click()

  Dim xPass As String
  Dim aList As String[]
  Dim xtable As String

  If Message.Question(("Do you really want to update Database structure at your own risk?"), ("No"), ("Yes")) = 2 Then
    xPass = InputPassword("Provide Root Password", "Verification", "")
    If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
      aList = New String[]
      aList.Insert(modRepoSync.$sBrandData)
      aList.Insert(modRepoSync.$sMedSuppData)
      aList.Insert(modRepoSync.$sPrecauData)

      For Each xtable In aList
        modDatabase.UpdateTableDrugInformation(modDatabase.$myConn, xtable)
      Next
      Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")

    Else
      Message.Info("Incorrect Root Password", ("OK"))
    Endif
  Endif

End

Public Sub mnudropnull_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    If Message.Question(("Do you really want to DROP Empty Tables at your own risk?"), ("No"), ("Yes")) = 2 Then
      modDBApp.GetDropEmptyTables(modDatabase.$myConn)
    Endif
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnucollation_Click()

  Dim xList As String[]
  Dim xx As String
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    xList = SelectListView("Selected Tables will be changed to " & modHelpVariable.$SysCollation, modDBApp.FillDBTables(modDatabase.$myConn, True), False)
    If xList Then
      For Each xx In xList
        modDBApp.AlterMySQLSpecCollationTable(modDatabase.$myConn, xx)
      Next
      Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")
    Endif
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnusetindex_Click()

  Dim xList As String[]
  Dim xx As String
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    xList = SelectListView("Selected Tables will have secondary Index", modDBApp.FillDBTables(modDatabase.$myConn, True), False)
    If xList Then
      For Each xx In xList
        modDBGroup.UpdateDBIndexes(modDatabase.$myConn, xx)
      Next
      Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")
    Endif
  Endif

End

Public Sub mnualterfields_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmAlterTable.ShowModal
  Endif

End

Public Sub mnupersonal_Click()

  Dim hForm As FmPersonal

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPersonal(Workspace1)

End

Public Sub mnudbvariables_Click()

  fmDBValues.ShowModal

End

Public Sub mnuallsettings_Click()

  fmFileValues.ShowModal

End

Public Sub mnucuruserid_Click()

  Dim hForm As FmReportUsers

  If modBasic.$lbluser Then
    hForm = New FmReportUsers(modBasic.$lbluser)
    hForm.ShowModal
  Endif

End

Public Sub mnuaddPatient_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmPatientUser.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnutelemed_Click()

  Dim xPass As String
  Dim hForm As FmTeleMedList

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    If Workspace1.Children.Count Then
      Workspace1.DeleteChildren()
    Endif
    hForm = New FmTeleMedList(Workspace1)
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuselformat_Click()

  Dim xPath As String
  Dim xxx As String[]

  Dim aList As String[] = ["Province", "District", "Municipality", "Hospital"]
  Dim Column As Integer

  xPath = modDataRepo.GetRepoValueTableForCSV(MMain.$AppLogCategory, MMain.$AppLogString)
  If Exist(xPath) Then
    xxx = TreeViewCode(xPath, ";", 4, True)
    If xxx Then
      If MMain.$AppLogCategory = "Admin" Then
        modDataRepo.$RepositoryMode = GetLocaltionLevel(xxx[0])
        modBasic.$HospCode = xxx[1]

      Else
        Column = aList.Find(MMain.$AppLogCategory)
        If Column = 0 Then
          modDataRepo.$RepositoryMode = GetLocaltionLevel(xxx[0])
          modBasic.$HospCode = xxx[1]

        Else If Column = 1 Then
          If xxx[0] = "icons/coll1.png" Then
            modDataRepo.$RepositoryMode = MMain.$AppLogCategory
            modBasic.$HospCode = MMain.$AppLogString
          Else
            modDataRepo.$RepositoryMode = GetLocaltionLevel(xxx[0])
            modBasic.$HospCode = xxx[1]
          Endif

        Else If Column = 2 Then
          If xxx[0] = "icons/coll1.png" Then
            modDataRepo.$RepositoryMode = MMain.$AppLogCategory
            modBasic.$HospCode = MMain.$AppLogString
          Else If xxx[0] = "icons/coll2.png" Then
            modDataRepo.$RepositoryMode = MMain.$AppLogCategory
            modBasic.$HospCode = MMain.$AppLogString
          Else
            modDataRepo.$RepositoryMode = GetLocaltionLevel(xxx[0])
            modBasic.$HospCode = xxx[1]
          Endif

        Else If Column = 3 Then
          If xxx[0] = "icons/coll4.png" Then
            modDataRepo.$RepositoryMode = GetLocaltionLevel(xxx[0])
            modBasic.$HospCode = xxx[1]
          Else
            modDataRepo.$RepositoryMode = MMain.$AppLogCategory
            modBasic.$HospCode = MMain.$AppLogString
          Endif

        Endif

      Endif
      lblocation.Visible = True
      lblocation.Text = modDataRepo.$RepositoryMode & " : " & modBasic.$HospCode
    Else
      modDataRepo.$RepositoryMode = MMain.$AppLogCategory
      modBasic.$HospCode = MMain.$AppLogString
      lblocation.Visible = True
      lblocation.Text = modDataRepo.$RepositoryMode & " : " & modBasic.$HospCode
    Endif
  Endif

End

Private Function GetLocaltionLevel(sImage As String) As String

  Dim xval As String

  If sImage = "icons/coll1.png" Then
    xval = "Province"
  Else If sImage = "icons/coll2.png" Then
    xval = "District"
  Else If sImage = "icons/coll3.png" Then
    xval = "Municipality"
  Else If sImage = "icons/coll4.png" Then
    xval = "Hospital"
  Endif

  Return xval

End

Public Sub mnudumpdown_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmDumpfile.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnireportgrouping_Click()

  fmAccGroup.ShowModal

End

Public Sub mnulab_Click()

  Dim hForm As FmCost

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  modGeneralMain.$FormOpenList.Add(["FmCost", "Diagnostic Tests Cost"])
  hForm = New FmCost("Diagnostic Tests Cost", Workspace1)

End

Public Sub mnuradio_Click()

  Dim hForm As FmCost

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  modGeneralMain.$FormOpenList.Add(["FmCost", "Radio Diagnostics Cost"])
  hForm = New FmCost("Radio Diagnostics Cost", Workspace1)

End

Public Sub mnuservice_Click()

  Dim hForm As FmCost

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  modGeneralMain.$FormOpenList.Add(["FmCost", "General Services Cost"])
  hForm = New FmCost("General Services Cost", Workspace1)

End

Public Sub mnuproc_Click()

  Dim hForm As FmCost

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  modGeneralMain.$FormOpenList.Add(["FmCost", "Procedures Cost"])
  hForm = New FmCost("Procedures Cost", Workspace1)

End

Public Sub mnuequipment_Click()

  Dim hForm As FmCost

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  modGeneralMain.$FormOpenList.Add(["FmCost", "Equipment Cost"])
  hForm = New FmCost("Equipment Cost", Workspace1)

End

Public Sub mnuother_Click()

  Dim hForm As FmCost

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  modGeneralMain.$FormOpenList.Add(["FmCost", "Other Items Cost"])
  hForm = New FmCost("Other Items Cost", Workspace1)

End

Public Sub mnugeneric_Click()

  Dim hForm As FmGeneric

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmGeneric(Workspace1)

End

Public Sub mnubrand_Click()

  Dim hForm As FmMedicine

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmMedicine(Workspace1)

End

Public Sub mnudarkmode_Click()

  Me.Exec("changeScreenMode();")

End

Public Sub mnusetup_Click()

  Dim hForm As FmShowSqlite

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmShowSqlite(Workspace1)

End

Public Sub mnuwarmup_Click()

  Message.Info(("Executing Request ...."), ("OK"))
  modDBApp.WarmUpDatabase(modDatabase.$myConn)
  Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")

End
