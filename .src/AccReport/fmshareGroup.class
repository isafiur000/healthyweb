' Gambas class file

Private $rData As Result
Private $aMyFields As String[]

Private $amtChart As String[]
Private $SSQLFields As String[]
Private xuserList As String[]

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String

Private $tblpatbilling As String

Public Sub _new()

  cmbpackage.List = modNonMedical.FillDiscountCombo()
  cmbpackage.Add("%")
  cmbpackage.Text = "%"
  cmbcashmode.List = ["Credit", "Cash", "%"]
  cmbcashmode.Text = "%"
  cmbusertype.List = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditem) as col from tblprocedureuser"))
  cmbusertype.Add("%")
  cmbusertype.Text = "%"
  cmbadmission.List = ["OPD", "IPD", "Any"]
  cmbadmission.Text = "Any"

  dtfir.Value = Now()
  dtlast.Value = Now()
  rbselect.Value = True
  rbinv.Value = True
  rbtotal.Value = True
  rbshareamt.Value = True

  rbcategory.Value = True
  cmbcategory.List = GetCategoryGroups()
  cmbcategory.Text = "%"
  rbpunched.Value = True

  If modHelpVariable.$LogInCategory = "Account" Then
    modAccount.PasInvoiceSetting(cmbfiscal, True)
  Else
    modAccount.PasInvoiceSetting(cmbfiscal, False)
    mnuupdate.Visible = False
    mnugroupmain.Visible = False
  Endif
  LoadTableNames()
  $RepoStr = modDataRepo.GetRepoLastStr("tblpatgenshare")

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me.Name)

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatbilling = "tblpatbilling"
  Else
    res = modDatabase.$syConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnufiscal_Click()

  Dim res As Result
  Dim xyear As String

  xyear = InputCombo("Select Fiscal Year Range", "Select Year", modBasic.$FiscalYearList, "", True)
  If xyear Then
    res = modDatabase.$myConn.Exec("select fldfrom,fldend from tblfiscalid where fldlabel=&1", xyear)
    If res.Available Then
      res.MoveFirst
      dtfir.Value = res["fldfrom"]
      dtlast.Value = res["fldend"]
    Endif
  Endif

End

Private Function GetCategoryGroups() As String[]

  Dim xList As String[]

  If rbcategory.Value = True Then
    xList = ["Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]
  Else If rbgroup.Value = True Then
    xList = modNonMedical.GetGroupNameAccount()
  Endif
  xList.Add("%")
  Return xList

End

Public Sub rbcategory_Click()

  cmbcategory.List = GetCategoryGroups()
  cmbcategory.Text = "%"

End

Public Sub rbgroup_Click()

  cmbcategory.List = GetCategoryGroups()
  cmbcategory.Text = "%"

End

Private Function GetItemState() As String

  Dim xx As String

  If rbpunched.Value = True Then
    xx = "Punched"
  Else If rblocked.Value = True Then
    xx = "Locked"
  Endif
  Return xx

End

Private Function GetSelUserList() As String[]

  Dim bList As String[]
  Dim xAllList As String[]
  Dim userList As String[]
  Dim xgroupbool As Boolean

  If rbpunched.Value = True Then
    xgroupbool = True
  Else If rblocked.Value = True Then
    xgroupbool = False
  Endif

  xAllList = New String[]
  If rbcategory.Value = True Then
    If rbinv.Value = True Then
      bList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldvalue) as col from tblpatgenshare where flditemid in(select fldid from " & $tblpatbilling & " where flditemtype like &1 and flddisctype like &2 and (flditemqty-fldretqty)>&3 and fldtime>=&4 and fldtime<=&5) and fldsave=&6 and fldusertype like &7" & $RepoStr, cmbcategory.Text, cmbpackage.Text, 0, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xgroupbool, cmbusertype.Text))
    Else If rbentry.Value = True Then
      bList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldvalue) as col from tblpatgenshare where flditemid in(select fldid from " & $tblpatbilling & " where flditemtype like &1 and flddisctype like &2 and (flditemqty-fldretqty)>&3) and fldtime>=&4 and fldtime<=&5 and fldsave=&6 and fldusertype like &7" & $RepoStr, cmbcategory.Text, cmbpackage.Text, 0, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xgroupbool, cmbusertype.Text))
    Endif
  Else If rbgroup.Value = True Then
    If rbinv.Value = True Then
      bList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldvalue) as col from tblpatgenshare where flditemid in(select fldid from " & $tblpatbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup like &1) and flddisctype like &2 and (flditemqty-fldretqty)>&3 and fldtime>=&4 and fldtime<=&5) and fldsave=&6 and fldusertype like &7" & $RepoStr, cmbcategory.Text, cmbpackage.Text, 0, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xgroupbool, cmbusertype.Text))
    Else If rbentry.Value = True Then
      bList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldvalue) as col from tblpatgenshare where flditemid in(select fldid from " & $tblpatbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup like &1) and flddisctype like &2 and (flditemqty-fldretqty)>&3) and fldtime>=&4 and fldtime<=&5 and fldsave=&6 and fldusertype like &7" & $RepoStr, cmbcategory.Text, cmbpackage.Text, 0, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xgroupbool, cmbusertype.Text))
    Endif
  Endif
  If bList Then
    userList = modString.BinaryDistinctStringArray(bList, gb.Ascent)
  Endif

  Return userList

End

Private Sub FillUserList()

  xuserList = GetSelUserList()
  If xuserList And If xuserList.Count Then
    lstitem.Clear()
    lstitem.Count = xuserList.Count
    lstitem.Columns.Count = 2
    With lstitem
      .Columns[0].Hidden = True
    End With
  Endif

End

Public Sub txtselect_Change()

  If txtselect.Text Then
    xuserList = modString.SelectStringArrayToText(txtselect.Text, GetSelUserList())
    If xuserList And If xuserList.Count Then
      lstitem.Clear()
      lstitem.Count = xuserList.Count
      lstitem.Columns.Count = 2
      With lstitem
        .Columns[0].Hidden = True
      End With
    Endif
  Endif

End

Public Sub lstitem_Data(Row As Integer, Column As Integer, Data As WebTableData)

  modGridView.GridViewDecoration(Data, Row)
  If Column = 0 Then
    Data.Text = xuserList[Row]
  Else If Column = 1 Then
    Data.Text = modGeneral.GetUserFullName(xuserList[Row])
  Endif

End

Public Sub btnload_Click()

  If rbentry.Value Or If rbinv.Value Then
    FillUserList()
    cmbitemname.Text = "%"
  Endif

End

Public Sub btnselitem_Click()

  Dim res As Result
  Dim xList As String[]

  If cmbcategory.Text Then
    If rbcategory.Value = True Then
      res = modDatabase.$syConn.Exec("select flditemname as col from tblservicecost where flditemtype like &1", cmbcategory.Text)
    Else If rbgroup.Value = True Then
      res = modDatabase.$syConn.Exec("select flditemname as col from tblreportgroup where fldgroup like &1", cmbcategory.Text)
    Endif
    xList = modControlSub.GetDirectFillresult(res)

    If xList And If xList.Count Then
      cmbitemname.Text = GridViewNew("Select Particular", xList, False)
    Endif
  Endif

End

Private Function CategoryListRep() As String[]

  Dim xx As String[]

  If cmbcategory.Text = "%" Then
    If rbcategory.Value = True Then
      xx = ["Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]
    Else If rbgroup.Value = True Then
      xx = modNonMedical.GetGroupNameAccount()
    Endif
  Else
    xx = New String[]
    xx.Add(cmbcategory.Text)
  Endif
  Return xx

End

Private Function GetInvoiced() As Boolean

  Dim xx As Boolean

  If rbinv.Value = True Then
    xx = True
  Else
    xx = False
  Endif
  Return xx

End

Private Function GetTotalFormat() As String

  Dim xx As String

  If rbrate.Value = True Then
    xx = "SubTotal"
  Else If rbtotal.Value = True Then
    xx = "NetTotal"
  Endif
  Return xx

End

Private Function GetShareInput() As String

  Dim xx As String

  If rbshareper.Value = True Then
    xx = "Percent"
  Else If rbshareamt.Value = True Then
    xx = "Amount"
  Endif
  Return xx

End

Private Sub GetFieldList()

  Dim xhospfld As String
  Dim xList As String[]

  xList = New String[]
  xhospfld = modDataRepo.HospitalField("t2")
  If rbrate.Value = True Then
    xList = ["t1.fldid", "t1.fldvalue", "t1.fldusertype", "t1.fldencounterval", "t2.flditemname", "t2.flditemrate", "(t2.flditemqty-t2.fldretqty)", "t2.flddiscper", "(t2.flditemrate*(t2.flditemqty-t2.fldretqty))", "t1.fldid", "t1.fldchange", "t1.fldid", "t1.fldid", "t2.fldtime", "t1.fldtime", "t2.fldbillno", "t2.fldbilltype", "t2.flddisctype", "t1.flditemid", "t1.fldencounterval", "t1.flditemid", "t1.fldmixper", "t1.fldchreason"]
  Else If rbtotal.Value = True Then
    xList = ["t1.fldid", "t1.fldvalue", "t1.fldusertype", "t1.fldencounterval", "t2.flditemname", "t2.flditemrate", "(t2.flditemqty-t2.fldretqty)", "t2.flddiscper", "(t2.flditemrate*(t2.flditemqty-t2.fldretqty)*(1-t2.flddiscper/100))", "t1.fldid", "t1.fldchange", "t1.fldid", "t1.fldid", "t2.fldtime", "t1.fldtime", "t2.fldbillno", "t2.fldbilltype", "t2.flddisctype", "t1.flditemid", "t1.fldencounterval", "t1.flditemid", "t1.fldmixper", "t1.fldchreason"]                ''
  Endif
  If xhospfld Then
    xList.Add(xhospfld)
  Endif
  $SSQLFields = xList

End

Private Function ExecuteQuery(xFldList As String[], $con As Connection) As Result

  Dim res As Result
  Dim sql As String
  Dim xgroupbool As Boolean
  Dim xregist As String
  Dim xregval As String
  Dim sUser As String
  Dim encid As String

  If rbpunched.Value = True Then
    xgroupbool = True
  Else If rblocked.Value = True Then
    xgroupbool = False
  Endif

  If rbselect.Value = True And If lstitem.Selection.Count Then
    sUser = lstitem.Current.Key
  Else
    sUser = "%"
  Endif

  If Not txtencid.Text Then
    encid = "%"
  Else
    encid = txtencid.Text
  Endif

  If cmbadmission.Text = "Any" Then
    xregist = "" '" and t2.fldcurrlocat like &6"
    xregval = "%"
  Else If cmbadmission.Text = "OPD" Then
    xregist = " and t2.fldcurrlocat in(select flddept from tbldepartment where fldcateg<>&6)"
    xregval = "Patient Ward"
  Else If cmbadmission.Text = "IPD" Then
    xregist = " and t2.fldcurrlocat in(select fldbed from tbldepartmentbed where flddept in(select flddept from tbldepartment where fldcateg like &6)"
    xregval = "Patient Ward"
  Endif

  If rbcategory.Value = True Then
    If rbinv.Value = True Then
      sql = "select " & xFldList.Join(",") & " from tblpatgenshare AS t1 inner join " & $tblpatbilling & " AS t2 on t1.flditemid=t2.fldid where t2.fldsave=&1 and t2.flditemname like &2 and t2.fldbilltype like &3 and t2.flddisctype like &4 and t2.flditemtype like &5 and (t2.flditemqty-t2.fldretqty)>&{13}" & xregist & " and t1.fldvalue like &7 and t1.fldactive=&8 and t2.fldtime>=&9 and t2.fldtime<=&{10} and t1.fldusertype like &{11} and t1.fldsave=&{12} and t1.fldencounterval like &{14}" & $RepoStr
    Else
      sql = "select " & xFldList.Join(",") & " from tblpatgenshare AS t1 inner join " & $tblpatbilling & " AS t2 on t1.flditemid=t2.fldid where t2.fldsave=&1 and t2.flditemname like &2 and t2.fldbilltype like &3 and t2.flddisctype like &4 and t2.flditemtype like &5 and (t2.flditemqty-t2.fldretqty)>&{13}" & xregist & " and t1.fldvalue like &7 and t1.fldactive=&8 and t1.fldtime>=&9 and t1.fldtime<=&{10} and t1.fldusertype like &{11} and t1.fldsave=&{12} and t1.fldencounterval like &{14}" & $RepoStr                         ''
    Endif
  Else If rbgroup.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbinv.Value = True Then
        sql = "select " & xFldList.Join(",") & " from tblpatgenshare AS t1 inner join " & $tblpatbilling & " AS t2 on t1.flditemid=t2.fldid where t2.fldsave=&1 and t2.flditemname like &2 and t2.fldbilltype like &3 and t2.flddisctype like &4 and (t2.flditemqty-t2.fldretqty)>&{13}" & xregist & " and t1.fldvalue like &7 and t1.fldactive=&8 and t2.fldtime>=&9 and t2.fldtime<=&{10} and t1.fldusertype like &{11} and t1.fldsave=&{12} and t1.fldencounterval like &{14}" & $RepoStr
      Else
        sql = "select " & xFldList.Join(",") & " from tblpatgenshare AS t1 inner join " & $tblpatbilling & " AS t2 on t1.flditemid=t2.fldid where t2.fldsave=&1 and t2.flditemname like &2 and t2.fldbilltype like &3 and t2.flddisctype like &4 and (t2.flditemqty-t2.fldretqty)>&{13}" & xregist & " and t1.fldvalue like &7 and t1.fldactive=&8 and t1.fldtime>=&9 and t1.fldtime<=&{10} and t1.fldusertype like &{11} and t1.fldsave=&{12} and t1.fldencounterval like &{14}" & $RepoStr                        ''
      Endif
    Else
      If rbinv.Value = True Then
        sql = "select " & xFldList.Join(",") & " from tblpatgenshare AS t1 inner join " & $tblpatbilling & " AS t2 on t1.flditemid=t2.fldid where t2.fldsave=&1 and t2.flditemname like &2 and t2.fldbilltype like &3 and t2.flddisctype like &4 and t2.flditemname in(select flditemname from tblreportgroup where fldgroup like &5) and (t2.flditemqty-t2.fldretqty)>&{13}" & xregist & " and t1.fldvalue like &7 and t1.fldactive=&8 and t2.fldtime>=&9 and t2.fldtime<=&{10} and t1.fldusertype like &{11} and t1.fldsave=&{12} and t1.fldencounterval like &{14}" & $RepoStr
      Else
        sql = "select " & xFldList.Join(",") & " from tblpatgenshare AS t1 inner join " & $tblpatbilling & " AS t2 on t1.flditemid=t2.fldid where t2.fldsave=&1 and t2.flditemname like &2 and t2.fldbilltype like &3 and t2.flddisctype like &4 and t2.flditemname in(select flditemname from tblreportgroup where fldgroup like &5) and (t2.flditemqty-t2.fldretqty)>&{13}" & xregist & " and t1.fldvalue like &7 and t1.fldactive=&8 and t1.fldtime>=&9 and t1.fldtime<=&{10} and t1.fldusertype like &{11} and t1.fldsave=&{12} and t1.fldencounterval like &{14}" & $RepoStr                        ''
      Endif
    Endif
  Endif
  res = $con.Exec(sql, True, cmbitemname.Text, cmbcashmode.Text, cmbpackage.Text, cmbcategory.Text, xregval, sUser, "Active", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbusertype.Text, xgroupbool, 0, encid)

  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 1 Then
    xxx = modGeneral.GetUserFullName(xVariable)
  Else If Column = 5 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 7 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, -2)
  Else If Column = 8 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 9 Then
    If rbshareper.Value = True Then
      xxx = modReportVar.GetLocaleNumberFormat(modSharingGroup.GetUserPayPercentGroup(GetItemState(), modDatabase.$syConn, xVariable), -2)
    Else If rbshareamt.Value = True Then
      xxx = modReportVar.GetLocaleNumberFormat(modSharingGroup.GetUserPayAmountGroup(GetItemState(), modDatabase.$syConn, xVariable), gb.Currency)
    Endif
  Else If Column = 10 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 11 Then
    xxx = modReportVar.GetLocaleNumberFormat(modSharingGroup.GetUserPayTaxGroup(GetItemState(), modDatabase.$syConn, xVariable), -2)
  Else If Column = 12 Then
    If rbshareper.Value = True Then
      xxx = modReportVar.GetLocaleNumberFormat(modSharingGroup.GetUserPayOrReferAmtGroup(GetItemState(), modDatabase.$syConn, xVariable, GetTotalFormat()), gb.Currency)
    Else If rbshareamt.Value = True Then
      xxx = modReportVar.GetLocaleNumberFormat(modSharingGroup.GetUserPayOrReferDirectGroup(GetItemState(), modDatabase.$syConn, xVariable, GetTotalFormat()), gb.Currency)
    Endif
  Else If Column = 13 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 14 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 18 Then
    xxx = modNonMedical.GetClaimCodeFromBilling(xVariable)
  Else If Column = 19 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  GetFieldList()
  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("tblpatgenshare.fldencounterval")
    Next
  Endif
  Return xFldList

End

Public Sub cmdrepo_Click()

  Dim xFldList As String[]

  TabStrip1.Index = 0
  If rblocked.Value = True Then
    rbshareamt.Value = True
  Endif

  xFldList = GetSQLColumns()
  If rball.Value = True Then
    $rData = ExecuteQuery(xFldList, modDatabase.$syConn)
  Else If rbselect.Value = True Then
    $rData = ExecuteQuery(xFldList, modDatabase.$syConn)
  Endif

  ShowSaleData()

  If chkgrid.Value = True Then
    FillChartData()
    If chkamt.Value = True Then
      FillItemChartAMT()
    Endif
  Endif

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column > $SSQLFields.Count - 1 Then
    Data.Html = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif

End

Private Sub ShowSaleData()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[11].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[12].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[13].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[14].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[15].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[16].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[17].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[18].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[19].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[20].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[21].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[22].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "UserName"
    .Columns[2].Text = "Position"
    .Columns[3].Text = "Encounter"
    .Columns[4].Text = "Particulars"
    .Columns[5].Text = "Rate"
    .Columns[6].Text = "QTY"
    .Columns[7].Text = "Disc%"
    .Columns[8].Text = "Total"
    If rbshareper.Value = True Then
      .Columns[9].Text = "Share%"
    Else If rbshareamt.Value = True Then
      .Columns[9].Text = "ShareAmt"
    Endif
    .Columns[10].Text = "Extra"
    .Columns[11].Text = "TDS%"
    .Columns[12].Text = "NetAmt"
    .Columns[13].Text = "BillingDate"
    .Columns[14].Text = "EntryDate"
    .Columns[15].Text = "Invoice"
    .Columns[16].Text = "Mode"
    .Columns[17].Text = "Package"
    .Columns[18].Text = "Reference"
    .Columns[19].Text = "PatientName"
    .Columns[20].Text = "ItemNo"
    .Columns[21].Text = "Frac"
    .Columns[22].Text = "Reason"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      Next
    Endif
  End With

End

''---------------------------------------------- AMT Chart ---------------------------------------
Private Sub FillChartData()

  Dim xgross As Float
  Dim xtax As Float
  Dim totamt As Float

  xgross = 0
  xtax = 0
  totamt = 0
  $amtChart = New String[]
  For Each $rData
    If rbshareper.Value = True Then
      ' xgross = xgross + modSharingGroup.GetUserPayPercentGroup(GetItemState(), modDatabase.$syConn, $rData["tblpatgenshare.fldid"]) + $rData["tblpatgenshare.fldchange"]
      ' xtax = xtax + modSharingGroup.GetUserPayTaxGroup(GetItemState(), modDatabase.$syConn, $rData["tblpatgenshare.fldid"])
      totamt = totamt + modSharingGroup.GetUserPayOrReferAmtGroup(GetItemState(), modDatabase.$syConn, $rData["tblpatgenshare.fldid"], GetTotalFormat())
    Else If rbshareamt.Value = True Then
      ' xgross = xgross + modSharingGroup.GetUserPayAmountGroup(GetItemState(), modDatabase.$syConn, $rData["tblpatgenshare.fldid"]) + $rData["tblpatgenshare.fldchange"]
      ' xtax = xtax + modSharingGroup.GetUserPayTaxGroup(GetItemState(), modDatabase.$syConn, $rData["tblpatgenshare.fldid"])
      totamt = totamt + modSharingGroup.GetUserPayOrReferDirectGroup(GetItemState(), modDatabase.$syConn, $rData["tblpatgenshare.fldid"], GetTotalFormat())
    Endif
  Next
  txtgross.Value = Round(xgross, -2)
  txttax.Value = Round(xtax, -2)
  txtamt.Value = Round(totamt, -2)

End

Private Sub FillItemChartAMT()

  Dim sPath As String
  Dim sNew As String

  sPath = Temp()
  File.Save(sPath, $amtChart.Join(gb.NewLine))
  sNew = modString.GetGroupSUmmaryCSV(sPath, 0, 1, ";", gb.Tab, gb.Float)

  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Amount in " & modChart.GetAMTLabelChart() & "]"))
  Else
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Amount in " & modChart.GetAMTLabelChart() & "]"))
  Endif
  btnstats.Tag = sNew

End

Public Sub btnexport_Click()

  ' Me.Exec("printJS('" & PictureBox1.Tag & "', 'image')")
  Me.Exec("window.open('" & PictureBox2.Image & "'); ")

End

' Public Sub btnstats_Click()
'
'   Desktop.Open(btnstats.Tag)
'
' End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CUnivariate

  Column = modCustPatient.GetUnivariateColumn(3)
  xField = xFldList[Column]
  res = ExecuteQuery([xField], modDatabase.$syConn)

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(3)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(3)
  xFieColm = xFldList[Column]
  res = ExecuteQuery([xFieRow, xFieColm], modDatabase.$syConn)

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab
    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieRow, xFieColm], modDatabase.$syConn)

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnugridsumm_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xFldList = GetSQLColumns()
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList, modDatabase.$syConn)

  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Share Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Share Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Share Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Share Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

''--------------------------------------------------- Reports -------------------------------------
Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  Dim xFldList As String[]

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Width < 5 Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "USER SHARING CATEG: " & cmbcategory.Text & " PACK: " & cmbpackage.Text & " POS: " & cmbusertype.Text
  xparam2 = "DATE: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate) & " TYPE: " & cmbcashmode.Text & " STATE: " & cmbadmission.Text
  encColumn = 3
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  xFldList = GetSQLColumns()

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To xFldList.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[xFldList[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)
  Next

  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

''-------------- Reports -------------
Public Sub btnPrecise_Click()

  Dim xPath As String
  Dim xList As String[]

  If rbselect.Value = True And If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
  Else
    xList = GetSelUserList()
  Endif
  If xList Then
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentPreciseGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, cmbcategory.Text, cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentPreciseGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, cmbcategory.Text, cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnsummdeptwise_Click()

  Dim xPath As String

  cmbitemname.Text = "%"
  If rbcategory.Value = True Then
    xPath = modRHTMLShareGroup.SharingCategPaymentGroupSummaryGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, CategoryListRep(), GetInvoiced(), cmbpackage.Text, GetTotalFormat(), GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
  Else If rbgroup.Value = True Then
    xPath = modRHTMLShareGroup.SharingCategPaymentGroupSummaryGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, CategoryListRep(), GetInvoiced(), cmbpackage.Text, GetTotalFormat(), GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
  Endif
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnallsum_Click()

  Dim xPath As String
  Dim xList As String[]

  If rbselect.Value = True And If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
  Else
    xList = GetSelUserList()
  Endif
  If xList Then
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentSummaryGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentSummaryGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnallsumdept_Click()

  Dim xPath As String
  Dim xList As String[]

  If rbselect.Value = True And If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
  Else
    xList = GetSelUserList()
  Endif
  If xList Then
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingCategPaymentSummaryGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingCategPaymentSummaryGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btndetailall_Click()

  Dim xPath As String
  Dim xList As String[]

  If rbselect.Value = True And If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
  Else
    xList = GetSelUserList()
  Endif
  If xList Then
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentItemSummaryGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentItemSummaryGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnpatwise_Click()

  Dim xPath As String
  Dim xList As String[]

  If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentSummaryGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentSummaryGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btndetaildate_Click()

  Dim xPath As String
  Dim xList As String[]

  If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentItemSummaryGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentItemSummaryGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, CategoryListRep(), cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub btnsummposition_Click()

  Dim xPath As String
  Dim xList As String[]

  If rbselect.Value = True And If lstitem.Selection.Count Then
    xList = [xuserList[lstitem.Selection[0]]]
  Else
    xList = GetSelUserList()
  Endif
  If xList Then
    cmbitemname.Text = "%"
    If rbcategory.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentTaxwiseGROUP(GetItemState(), modDatabase.$syConn, "Category", dtfir.Value, dtlast.Value, cmbcategory.Text, cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Else If rbgroup.Value = True Then
      xPath = modRHTMLShareGroup.SharingPaymentTaxwiseGROUP(GetItemState(), modDatabase.$syConn, "Group", dtfir.Value, dtlast.Value, cmbcategory.Text, cmbusertype.Text, GetInvoiced(), cmbpackage.Text, GetTotalFormat(), xList, GetShareInput(), cmbcashmode.Text, cmbadmission.Text)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub chkamt_Click()

  TabStrip1.Index = 1

End

Public Sub mnuColumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnulabgroup_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Diagnostic Tests", "Saved")
  hForm.ShowModal

End

Public Sub mnuradiogroup_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Radio Diagnostics", "Saved")
  hForm.ShowModal

End

Public Sub mnuprocgroup_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("Procedures", "Saved")
  hForm.ShowModal

End

Public Sub mnuservicegroup_Click()

  Dim hForm As FmSetShare

  hForm = New FmSetShare("General Services", "Saved")
  hForm.ShowModal

End

Public Sub mnufraction_Click()

  Dim xPath As String
  Dim xdate As Date[]

  xdate = DoubleDates("Select Dates", "FRACTION ERRORS", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modRHTMLShareGroup.GetFractionErrorReport(modDatabase.$syConn, xdate[0], xdate[1])
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnusercount_Click()

  Dim xPath As String
  Dim xdate As Date[]

  xdate = DoubleDates("Select Dates", "FRACTION ERRORS", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modRHTMLShareGroup.GetShareMismatchReport(modDatabase.$syConn, xdate[0], xdate[1])
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuaddcolm_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
