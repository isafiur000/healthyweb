' Gambas class file

Private $Blank As String[]
Private $rData As Result
Private $aMyFields As String[]

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

''for IMU
Private $xLocation As Variant[]
Private $OccupList As String[]

Public Sub _new()

  cmbtest.List = modMedicine.FillLabTestCombo("%")
  dtfir.Value = Now()
  dtlast.Value = Now()
  rbnew.Value = True
  $Blank = New String[]
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()

  ''for IMU
  $xLocation = GetLocationIMU()
  $OccupList = ["Front Line Health Worker", "Doctor", "Nurse", "Police/Army", "Business/Industry", "Teacher/Student/Education", "Journalist", "Agriculture", "Transport/Delivery", "Other"]

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnshow_Click()

  FillGridView()

End

Private Sub FillGridView()

  Dim xFldList As String[]

  xFldList = ["fldid", "fldencounterval", "fldencounterval", modDataRepo.SerialField(), "fldencounterval", "fldtestid", "fldsampleid", "fldsampletype", "fldtime_sample", "fldstatus", modDataRepo.SerialField(), "fldtest_type", "fldid", "fldabnormal", "fldgroupid"]
  If rbnew.Value = True Then
    $rData = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldtime_sample>=&1 and fldtime_sample<=&2 and fldtestid like &3 and (fldstatus=&4 or fldstatus=&5) and flvisible=&6 and (fldflag=&7 or fldflag IS NULL)", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbtest.Text, "Reported", "Verified", "Visible", False)                       ''
  Else If rbflag.Value = True Then
    $rData = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldtime_sample>=&1 and fldtime_sample<=&2 and fldtestid like &3 and (fldstatus=&4 or fldstatus=&5) and flvisible=&6 and fldflag=&7", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbtest.Text, "Reported", "Verified", "Visible", True)                       ''
  Endif
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(275 * modBasic.$AppWidthRatio) & "px"
    .Columns[11].Hidden = True
    .Columns[12].Hidden = True
    .Columns[13].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[14].Hidden = True

    .Columns[1].Text = "EncID"
    .Columns[2].Text = "Name"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "Gender"
    .Columns[5].Text = "TestName"
    .Columns[6].Text = "SampID"
    .Columns[7].Text = "Specimen"
    .Columns[8].Text = "Date"
    .Columns[9].Text = "Status"
    .Columns[10].Text = "Observation"
    .Columns[13].Text = "Flag"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 10 Then
    Data.Html = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Else If Column = 13 Then
    Data.Html = modString.GetImageForHTMLGrid(GetGridViewValue(Column, $rData[$aMyFields[Column]]), "50%", "50%")
    Data.Text = ""
  Else
    Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modMedReports.GetPatientPastAgeString($tblpatlabtest, xVariable)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 8 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 10 Then
    xxx = modLabTest.GetLabTestValueSubString(xVariable, MMain.$defUnit, False, $tblpatlabtest, $tblpatlabsubtest)
  Else If Column = 13 Then
    xxx = modMisc.GetGridIcon(xVariable)
  Else If Column = 14 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif

  Return xxx

End

Public Sub mnudemog_Click()

  Dim hForm As FmPatdemograph

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmPatdemograph($rData["fldencounterval"], "Clinical")
    hForm.ShowModal
  Endif

End

Public Sub mnupatprofile_Click()

  Dim hForm As FmIndexForm

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmIndexForm($rData["fldencounterval"], True, True)
    hForm.Show()
  Endif

End

''========================== IMU API ==========================
Private Function GetLocationIMU() As Variant[]

  Dim sPath As String
  Dim xVar As Variant[]

  sPath = modHelpVariable.$docsDirectory &/ "IMULocations.txt"
  If Exist(sPath) Then
    xVar = JSON.Decode(File.Load(sPath))
  Endif
  Return xVar

End

Public Sub mnuapi_Click()

  Dim hForm As FmAPISetting

  hForm = New FmAPISetting("IMUAPI")
  hForm.ShowModal

End

Public Sub mnutravel_Click()

  Dim hForm As FmSelectionList
  Dim aList As String[]

  aList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flddemoid as col from tbldemographic where (fldcomp=&1 or fldcomp=&2) ORDER BY fldindex", modBasic.$compID, "%"))
  hForm = New FmSelectionList("CovidDemography", ["Occupation", "Symptom", "Past Covid Infection", "Covid Vaccination", "District", "Municipality"], aList)
  hForm.ShowModal()

End

Public Sub mnutestname_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("CovidTestName", ["PCR Swab Collection", "Anitgen Test"], modMedicine.FillLabTestCombo("%"))
  hForm.ShowModal()

End

Public Sub mnuspecimen_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("CovidSpecimen", ["Nasopharyngeal", "Oropharyngeal", "Both Types"], modBasic.$LabSpecimenList)
  hForm.ShowModal()

End

Public Sub mnuresult_Click()

  Dim hForm As FmSelectionList

  hForm = New FmSelectionList("CovidResult", ["Positive", "Negative"], $Blank)
  hForm.ShowModal()

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, cmbtest.Text, modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub mnupload_Click()

  Dim hForm As CIMUPost
  Dim xmsg As String
  Dim res As Result

  If $xLocation.Count Then
    If rbnew.Value = True Then
      If GridView1.Selection.Count Then
        $rData.MoveTo(GridView1.Selection[0])

        hForm = New CIMUPost($rData["fldid"], $xLocation, cmbfiscal.Text)
        xmsg = hForm.IMUOutput()
        If xmsg Then
          If Message.Question(xmsg, ("Success"), ("Error")) = 1 Then
            res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData["fldid"])
            res["fldflag"] = True
            res.Update
            FillGridView()
          Endif
        Endif

      Endif
    Endif
  Endif

Catch
  Message.Warning(Error.Text, ("OK"))

End

Public Sub mnubulk_Click()

  Dim Row As Integer
  Dim hForm As CIMUPost
  Dim xmsg As String
  Dim res As Result
  Dim sColl As Collection

  If $xLocation.Count Then
    If rbnew.Value = True Then
      If Message.Question("Are you sure ?", ("No"), ("Yes")) = 2 Then
        For Row = 0 To GridView1.Count - 1
          $rData.MoveTo(Row)

          xmsg = ""
          hForm = New CIMUPost($rData["fldid"], $xLocation, cmbfiscal.Text)
          xmsg = hForm.IMUOutput()
          If xmsg Then
            Try sColl = JSON.Decode(xmsg)
            If sColl And If sColl["message"] = "Data Successfully Sync" Then
              res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData["fldid"])
              res["fldflag"] = True
              res.Update
            Else
              Message.Warning(xmsg, ("OK"))
            Endif
          Endif

        Next
        FillGridView()
      Endif
    Endif
  Endif

Catch
  Message.Warning(Error.Text, ("OK"))

End

Public Sub mnuremoveflag_Click()

  Dim res As Result

  If rbflag.Value = True Then
    If GridView1.Selection.Count Then
      $rData.MoveTo(GridView1.Selection[0])
      res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData["fldid"])
      res["fldflag"] = False
      res.Update
      FillGridView()
    Endif
  Endif

End
