' Gambas class file

Private $barCodeStr As String

Private $encid As String
Private $TableColVar As Collection
Private $Columns As String[]
Private $TableData As String
Private $TemplatePath As String
Private $RepoType As String
Private $commentText As String
Private $UserData As New Collection
Private $IndexData As String[]
Private $sHide As String[]
Private $hashCode As String

Private TextAlign As String
Private Width As Integer
Private ReportPath As String

Private $FormatColuTitle As String
Private $FormatCOlumnID As Integer

Public Sub _new(encid As String, hColVar As Collection, sTableData As String, TempletePath As String, sReportType As String, sComment As String, sUserData As Collection, IndexData As String[], Optional sHide As String[])

  $encid = encid
  $TableColVar = hColVar
  $TableData = sTableData
  $TemplatePath = TempletePath
  $RepoType = sReportType
  $commentText = sComment
  $UserData = sUserData
  $IndexData = IndexData
  $sHide = sHide

  $FormatColuTitle = modSettings.ShowSettingFromFIle("ReportColumnFormat/Title")
  If $FormatColuTitle Then
    $FormatCOlumnID = CInt(modSettings.ShowSettingFromFIle("ReportColumnFormat/ColumnID"))
  Endif
  $hashCode = $UserData["QRHashCode"]
  MakeHTMLFile()

End

Private Sub MakeHTMLFile()

  Dim hForm As FmSigna
  Dim $Report As String[]

  If modBasic.$SignaPopUp = "Yes" Then
    If $RepoType = "PatientReport" Or If $RepoType = "LaboratoryReport" Then
      hForm = New FmSigna
      hForm.ShowModal
    Endif
  Endif

  $Report = New String[]
  $Report.Add(modRepoTemplete.TitleHTMLScript())
  $Report.Add(modReportVar.$HTMLStart)
  $Report.Add("<section id='printable@report' class='printable@report'>") '''used to locate printable text
  $Report.Add(modReportVar.$CSSStart)
  $Report.Add(TempleteString())
  $Report.Add(modReportVar.$CSSEnd)
  $Report.Add(modReportVar.$TitleStart)
  $Report.Insert(ReportTitle())
  $Report.Add(modReportVar.$TitleEnd)
  $Report.Add(modReportVar.$HeaderStart)
  $Report.Insert(ReportHeader())
  $Report.Add(modReportVar.$HeaderEnd)
  $Report.Insert(ExtraHeader())
  $Report.Add(modReportVar.$BodyStart)
  $Report.Insert(ReportBody())
  $Report.Add(modReportVar.$BodyEnd)
  $Report.Add(modReportVar.$FooterStart)
  $Report.Insert(ReportFooter())
  $Report.Add(modReportVar.$FooterEnd)
  If $sHide And If $sHide.Exist("FootImage") Then
  Else
    $Report.Add(modReportVar.$FootImageStart)
    $Report.Add(modRepoTemplete.ReportFootImage())
    $Report.Add(modReportVar.$FootImageEnd)
  Endif
  $Report.Add("</section>")
  $Report.Add(modReportVar.$HTMLEnd)
  $Report.Add(modRepoTemplete.EndTemplete())

  ReportPath = Temp() & ".html"
  File.Save(ReportPath, $Report.Join(gb.NewLine))

End

Public Function GetHTMLFile() As String

  Return ReportPath

End

Private Function TempleteString() As String

  Dim xx As String

  If $RepoType = "LaboratoryReport" Then
    xx = File.Load($TemplatePath &/ "labtemplate.tpl")
  Else
    xx = File.Load($TemplatePath &/ "template.tpl")
  Endif
  Return xx

End

Private Function ReportTitle() As String[]

  Dim repo As String[]
  Dim xdeftitle As String

  repo = New String[]
  xdeftitle = modSettings.ShowSettingFromFIle("ReportFormat/Default_Title")
  If xdeftitle And If xdeftitle = "BuiltIn" Then
    If $sHide And If $sHide.Exist("Title") Then
      repo.Add(GetReplaceString(modRepoTemplete.GetReportNoTitleTemplete()))
    Else
      repo.Add(GetReplaceString(modRepoTemplete.GetReportTitleTemplete()))
    Endif
  Else
    If $sHide And If $sHide.Exist("Title") Then
      repo.Add(GetLoadReplace($TemplatePath &/ "report_notitle.tpl"))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "report_title.tpl"))
    Endif
  Endif

  Return repo

End

Private Function ReportHeader() As String[]

  Dim repo As String[]
  Dim xdefhead As String

  repo = New String[]
  repo.Add(modReportVar.BlankLinesAccSetting("ReportFormat/BlankLines_Department_Header"))
  xdefhead = modSettings.ShowSettingFromFIle("ReportFormat/Default_Header")
  If $RepoType = "PatientReport" Then
    $barCodeStr = modReportVar.GetBarcodeImage($encid, $hashCode)
    If xdefhead And If xdefhead = "BuiltIn" Then
      repo.Add(GetReplaceString(modRepoTemplete.GetPatientHeaderTemplete()))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "patient_header.tpl"))
    Endif

  Else If $RepoType = "LaboratoryReport" Then
    $barCodeStr = modReportVar.GetBarcodeImage($encid, $hashCode)
    If xdefhead And If xdefhead = "BuiltIn" Then
      repo.Add(GetReplaceString(modRepoTemplete.GetPatientHeaderTemplete()))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "patient_header.tpl"))
    Endif

  Else If $RepoType = "PurchaseReport" Then
    If xdefhead And If xdefhead = "BuiltIn" Then
      repo.Add(GetReplaceString(modRepoTemplete.GetPurchaseHeaderTemplete()))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "purchase_header.tpl"))
    Endif

  Else
    If xdefhead And If xdefhead = "BuiltIn" Then
      repo.Add(GetReplaceString(modRepoTemplete.GetGeneralHeaderTemplete()))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "general_header.tpl"))
    Endif

  Endif

  If $IndexData.Count Then
    repo.Add("<p>")
    repo.Add($IndexData.Join("<br>"))
    repo.Add("</p>")
  Endif

  Return repo

End

Private Function ExtraHeader() As String[]

  Dim repo As String[]

  repo = New String[]
  If $RepoType = "LaboratoryReport" Then
    If modSettings.ShowSettingFromFIle("Laboratory/EXTRA3") Or If modSettings.ShowSettingFromFIle("Laboratory/EXTRA4") Or If modSettings.ShowSettingFromFIle("Laboratory/EXTRA2") Or If modSettings.ShowSettingFromFIle("Laboratory/EXTRA1") Or If modSettings.ShowSettingFromFIle("Laboratory/EXTRA5") Or If modSettings.ShowSettingFromFIle("Laboratory/EXTRA6") Then                     ''
      repo.Add(GetLoadReplace($TemplatePath &/ "lab_extra.tpl"))
    Endif
  Endif

  Return repo

End

Private Function ReportFooter() As String[]

  Dim repo As String[]
  Dim xdeffoot As String

  repo = New String[]
  xdeffoot = modSettings.ShowSettingFromFIle("ReportFormat/Default_Footer")
  If $RepoType = "PatientReport" Or If $RepoType = "LaboratoryReport" Then
    If xdeffoot And If xdeffoot = "BuiltIn" Then
      If $sHide And If $sHide.Exist("Footer") Then
        repo.Add(GetReplaceString(modRepoTemplete.GetGeneralFooterTemplete()))
      Else
        repo.Add(GetReplaceString(modRepoTemplete.GetPatientFooterTemplete()))
      Endif
    Else
      If $sHide And If $sHide.Exist("Footer") Then
        repo.Add(GetLoadReplace($TemplatePath &/ "general_footer.tpl"))
      Else
        repo.Add(GetLoadReplace($TemplatePath &/ "patient_footer.tpl"))
      Endif
    Endif

  Else If $RepoType = "PurchaseReport" Then
    If xdeffoot And If xdeffoot = "BuiltIn" Then
      repo.Add(GetReplaceString(modRepoTemplete.GetPurchaseFooterTemplete()))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "purchase_footer.tpl"))
    Endif

  Else
    If xdeffoot And If xdeffoot = "BuiltIn" Then
      repo.Add(GetReplaceString(modRepoTemplete.GetGeneralFooterTemplete()))
    Else
      repo.Add(GetLoadReplace($TemplatePath &/ "general_footer.tpl"))
    Endif

  Endif

  Return repo

End

Private Function ReportBody() As String[]

  Dim counter As Integer = 0
  Dim colStr As String
  Dim xx As String
  Dim repo As String[]

  Dim xbackpic As String
  Dim xshowlabel As String
  Dim xcollabel As String
  Dim xcolwid As String
  Dim xcolwid_col As String

  Dim aVar As Variant
  Dim asx As String[]

  repo = New String[]

  If (TextAlign = "") Then
    TextAlign = "left"
  Endif

  If (Width = 0) Then
    Width = 100
  Endif

  xbackpic = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_BackgroundPicture")
  If xbackpic Then
    xx = " background=" & xbackpic
  Else
    xx = ""
  Endif

  xshowlabel = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ShowLabel")
  xcolwid = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth")

  repo.Add(modReportVar.BlankLinesAccSetting("ReportFormat/BlankLines_Header_Body"))
  repo.Add("  <table " & xx & " class='report_table' style='text-align: " & TextAlign & "; width: " & Width & "%;' id='bodytable'>")
  repo.Add("    <thead>")     ''use when webkit bug is solved

  repo.Add("    <tr>")
  $Columns = New String[]
  For Each aVar In $TableColVar
    asx = aVar
    $Columns.Insert(asx)
    repo.Add("      <th colspan='" & asx.Count & "'  class='report_table_h'>" & $TableColVar.Key & "</th>")
  Next
  repo.Add("    </tr>")

  repo.Add("    <tr>")
  For counter = 0 To $Columns.Count - 1
    colStr = $Columns[counter]
    If $FormatColuTitle Then
      If $FormatCOlumnID = counter Then
        colStr = $FormatColuTitle
      Endif
    Endif

    xcollabel = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ShowLabel_Column" & CStr(counter + 1))
    If xcollabel And If xcollabel = "No" Then
      colStr = ""
    Else
      If xshowlabel And If xshowlabel = "No" Then
        colStr = ""
      Endif
    Endif

    xcolwid_col = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth_Column" & CStr(counter + 1))
    If xcolwid_col Then
      repo.Add("      <th class='report_table_h' style='width: " & CInt(xcolwid_col) & "%;'>" & colStr & "</th>")
    Else
      If xcolwid Then
        If counter = $Columns.Count - 1 Then
          repo.Add("      <th class='report_table_h' style='width: " & CInt(100 - ($Columns.Count - 1) * xcolwid) & "%;'>" & colStr & "</th>")
        Else
          repo.Add("      <th class='report_table_h' style='width: " & CInt(xcolwid) & "%;'>" & colStr & "</th>")
        Endif
      Else
        repo.Add("      <th class='report_table_h'>" & colStr & "</th>")
      Endif
    Endif

  Next
  repo.Add("    </tr>")
  repo.Add("    </thead>")

  repo.Add("    <tbody>")
  repo.Add($TableData)
  repo.Add("    </tbody>")
  repo.Add("  </table>")
  repo.Add(modReportVar.BlankLinesAccSetting("ReportFormat/BlankLines_Body_Footer"))

  Return repo

End

Private Function GetLoadReplace(sFile As String) As String

  Dim sLine As String
  Dim repo As String

  If Exist(sFile) Then
    sLine = File.Load(sFile)
    repo = GetReplaceString(sLine)
  Endif

  Return repo

End

Private Function GetReplaceString(sLine As String) As String

  Dim KeyValue As String

  sLine = modReportVar.GetReportVarTitle(sLine)
  sLine = modReportVar.GetReportVarImages($encid, sLine)

  'collection
  For Each KeyValue In $UserData
    If (String.InStr(sLine, $UserData.Key) > 0) Then
      sLine = Replace(sLine, "{" & $UserData.Key & "}", KeyValue)
    Endif
  Next

  If $encid Then
    sLine = modReportVar.GetReportVarPatient($encid, sLine)
    sLine = modReportVar.GetReportVarEncounter($encid, sLine)

    If (String.InStr(sLine, "barcodelink") > 0) Then                    ''
      sLine = Replace(sLine, "{barcodelink}", $barCodeStr)
    Endif

    If modBasic.$CustomConsult = "Yes" Then
      sLine = modReportVar.GetReportLastConsult($encid, sLine)
    Endif
    If modBasic.$CustomBirth = "Yes" Then
      sLine = modReportVar.GetReportBirthDetail($encid, sLine)
    Endif
    If modBasic.$CustomHistory = "Yes" Then
      sLine = modReportVar.GetReportVarHistory($encid, sLine)
    Endif
    If modBasic.$CustomSelExam = "Yes" Then
      sLine = modReportVar.GetReportVarExam($encid, sLine)
    Endif

    ''use of loop
    If modBasic.$CustomTest = "Yes" Then
      While (String.InStr(sLine, "$Last_Test:") > 0)
        sLine = modReportVar.GetReportTestLastVal($encid, sLine)
      Wend
    Endif
    If modBasic.$CustomExam = "Yes" Then
      While (String.InStr(sLine, "$Last_Exam:") > 0)
        sLine = modReportVar.GetReporExamLastVal($encid, sLine)
      Wend
    Endif
    If modBasic.$CustomDemog = "Yes" Then
      While (String.InStr(sLine, "$Last_Demog:") > 0)
        sLine = modReportVar.GetReporDemogLastVal($encid, sLine)
      Wend
    Endif
    If modBasic.$CustomParagraph = "Yes" Then
      While (String.InStr(sLine, "$Last_History:") > 0)
        sLine = modReportVar.GetReporHistoryLastVal($encid, sLine)
      Wend
      While (String.InStr(sLine, "$Last_Discharge:") > 0)
        sLine = modReportVar.GetReporDischargeLastVal($encid, sLine)
      Wend
      While (String.InStr(sLine, "$ColumnTable:") > 0)
        sLine = modReportVar.GetColumnTableLastVal($encid, sLine)
      Wend
    Endif

    If modBasic.$CustomDataQR = "Yes" Then
      sLine = modReportVar.GetRemoteScanQRCode($encid, sLine)
    Endif
    If $hashCode Then
      sLine = modReportVar.GetRemoteScanHashCode($encid, $hashCode, sLine)
    Endif

  Endif

  ''to be done at last
  If modBasic.$CustomSQLQuery = "Yes" Then
    While (String.InStr(sLine, "$SQLValue[") > 0)
      sLine = modReportVar.GetReporQueryCustom(sLine)
    Wend
    While (String.InStr(sLine, "$SQLArray[") > 0)
      sLine = modReportVar.GetReporQueryArrayCustom(sLine)
    Wend
    While (String.InStr(sLine, "$SQLTable[") > 0)
      sLine = modReportVar.GetReporQueryTableCustom(sLine)
    Wend
    While (String.InStr(sLine, "$SQLAutoTable[") > 0)
      sLine = modReportVar.GetReporQuerySerialTableCustom(sLine)
    Wend
  Endif
  If (String.InStr(sLine, "$InvoiceData[") > 0) Then
    sLine = modReportVar.GetInvoiceDetailSpcificPrint(sLine)
  Endif

  If modBasic.$CustomExec = "Yes" Then
    While (String.InStr(sLine, "$Exec[") > 0)
      sLine = modReportVar.GetReportExecArgs(sLine)
    Wend
    While (String.InStr(sLine, "$Format[") > 0)
      sLine = modReportVar.GetCustFormatValue(sLine)
    Wend
  Endif

  If modBasic.$CustomScript = "Yes" Then
    sLine = modReportVar.GetReportScript(sLine)
  Endif

  If modBasic.$CustomCalc = "Yes" Then
    While (String.InStr(sLine, "$Calc[") > 0)
      sLine = modReportVar.GetReportCalculation(sLine)
    Wend
  Endif

  If modBasic.$CustomImage = "Yes" Then
    While (String.InStr(sLine, "$BarCode[") > 0)
      sLine = modReportVar.GetBarCodeCustom(sLine)
    Wend
    While (String.InStr(sLine, "$QRCode[") > 0)
      sLine = modReportVar.GetQRCodeCustom(sLine)
    Wend
    While (String.InStr(sLine, "$PatImage[") > 0)
      sLine = modReportVar.GetPatImageCustom(sLine)
    Wend
  Endif

  If modBasic.$CustomUser = "Yes" Then
    While (String.InStr(sLine, "$UserProfile[") > 0)
      sLine = modReportVar.GetUserProfileCustom(sLine)
    Wend
  Endif

  ''Footer info
  sLine = modReportVar.GetReportFooterSetting(sLine, $commentText)

  sLine = modReportVar.ClearRemainingString(sLine)

  Return sLine

End
