' Gambas class file

Private $encid As String
Private $sTest As String
Private $sUnit As String
Private $sMethod As String

Private $gender As String
Private $agegr As String

Private ConvFactor As Float
Private LabUnit As String
Private AcceptRange As Float[]
Private ReferRange As Float[]

Public Sub _new(encid As String, sTest As String, sUnit As String, Optional sMethod As String)

  $encid = encid
  $sTest = sTest
  $sUnit = sUnit
  If sMethod Then
    $sMethod = sMethod
  Else
    $sMethod = ""
  Endif

  $gender = modPatient.GetPatientSex($encid)
  $agegr = modPatient.GetAgeGroupFIxed($encid, Now())
  CalculateParam()

End

Private Sub CalculateParam()

  Dim sql As String
  Dim sqstr As String
  Dim res As Result

  Dim xLimit As Float
  Dim yLimit As Float

  Dim minLimit As Float
  Dim maxLimit As Float

  If Not $sMethod Or If $sMethod = "Regular" Then
    sqstr = ""
  Else
    sqstr = " and fldmethod=&6"
  Endif

  If $sUnit = "Metric" Then
    sql = "select fldconvfactor,fldminimum,fldmaximum,fldmetunit as xunit,fldmetlow as xlow,fldmethigh as xhigh from tbltestlimit where fldtestid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)" & sqstr
  Else If $sUnit = "SI" Then
    sql = "select fldconvfactor,fldminimum,fldmaximum,fldsiunit as xunit,fldsilow as xlow,fldsihigh as xhigh from tbltestlimit where fldtestid=&1 and (fldptsex=&2 or fldptsex=&3) and (fldagegroup=&4 or fldagegroup=&5)" & sqstr
  Endif
  res = modDatabase.$medConn.Exec(sql, $sTest, $gender, "Both Sex", $agegr, "All Age", $sMethod)

  If res.Available = True Then
    res.MoveFirst
    If res["fldconvfactor"] Then
      ConvFactor = res["fldconvfactor"]
    Else
      ConvFactor = 1
    Endif

    If res["xunit"] Then
      LabUnit = res["xunit"]
    Else
      LabUnit = ""
    Endif

    If res["fldminimum"] Then
      xLimit = res["fldminimum"]
    Else
      xLimit = 0
    Endif
    If res["fldmaximum"] Then
      yLimit = res["fldmaximum"]
    Else
      yLimit = 0
    Endif

    If res["xlow"] Then
      minLimit = res["xlow"]
    Else
      minLimit = 0
    Endif
    If res["xhigh"] Then
      maxLimit = res["xhigh"]
    Else
      maxLimit = 0
    Endif

  Else
    ConvFactor = 1
    LabUnit = ""
    xLimit = 0
    yLimit = 0
    minLimit = 0
    maxLimit = 0
  Endif

  If $sUnit = "Metric" Then
    AcceptRange = [xLimit, yLimit]
  Else If $sUnit = "SI" Then
    AcceptRange = [xLimit * ConvFactor, yLimit * ConvFactor]
  Endif

  ReferRange = [minLimit, maxLimit]

End

''LabConversionValue(encid As String, strTest As String, Optional sMethod As String)
Public Function GetConversionFactor() As Float

  Return ConvFactor

End

''LabTestUnit(strTest As String, encid As String, strUnit As String, Optional sMethod As String)
Public Function GetLabUnit() As String

  Return LabUnit

End

''GetLabAcceptableRange(strTest As String, encid As String, strUnit As String, Optional sMethod As String)
Public Function GetAcceptableLimits() As Float[]

  Return AcceptRange

End

''LabBothLimitValue(strTest As String, encid As String, strUnit As String, Optional sMethod As String)
Public Function GetReferenceRange() As Float[]

  Return ReferRange

End
