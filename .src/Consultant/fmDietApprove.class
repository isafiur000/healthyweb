' Gambas class file

Private $rData1 As Result
Private $aMyFields1 As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]
Private $newColumn As String[]
Private $SSQLFields As String[]
Private $ColCount As Integer

Private $DietFormat As String

Public Sub _new()

  Dim xhospfld As String

  cmbdept.List = modBasic.$IPDDepartmentsAll
  cmbdept.Add("%")
  dttodaysave.Value = Date()
  rbwaiting.Value = True
  rbtotal.Value = True
  $DietFormat = "Mixture Code"
  chkautobill.Value = True

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldencounterval", "fldencounterval", "fldencounterval", "fldencounterval", "fldencounterval", "fldencounterval"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub mnusdietcapt_Click()

  If $DietFormat = "Mixture Code" Then
    $DietFormat = "Mixture Name"
    ShowPatientGrid()
  Else If $DietFormat = "Mixture Name" Then
    $DietFormat = "Mixture Code"
    ShowPatientGrid()
  Endif

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 1 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 2 Then
    xxx = modPatient.GetPatientAgeString(xVariable, Now())
  Else If Column = 3 Then
    xxx = modPatient.GetPatientLocation(xVariable)
  Else If Column = 4 Then
    xxx = modPatient.ShowDiscountCategEnc(xVariable)
  Else If Column = 5 Then
    xxx = GetSelectDietDose(xVariable).Join("<br>")
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif

  Return xxx

End

Public Sub btnrefreshsave_Click()

  ShowPatientGrid()

End

Private Sub ShowPatientGrid()

  Dim sql As String
  Dim xFldList As String[]

  xFldList = GetSQLColumns()
  If cmbdept.Text = "%" Then
    sql = "select " & xFldList.Join(",") & " from tblextradosing where fldtype=&1 and flddosetime>=&2 and flddosetime<=&3 and fldstatus=&4 GROUP BY fldencounterval"
  Else
    sql = "select " & xFldList.Join(",") & " from tblextradosing where fldtype=&1 and flddosetime>=&2 and flddosetime<=&3 and fldstatus=&4 and fldencounterval in(select fldencounterval from tbldepartmentbed where flddept=&5) GROUP BY fldencounterval"
  Endif
  If rbwaiting.Value = True Then
    $rData1 = modDatabase.$myConn.Exec(sql, "Input Food/Fluid", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), "Planned", cmbdept.Text)
  Else If rbapproved.Value = True Then
    $rData1 = modDatabase.$myConn.Exec(sql, "Input Food/Fluid", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), "Continue", cmbdept.Text)
  Endif
  FillPatientGrid()

End

Private Sub FillPatientGrid()

  Dim i As Integer

  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView1, $rData1, $aMyFields1)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "EncID"
    .Columns[1].Text = "Name"
    .Columns[2].Text = "Age"
    .Columns[3].Text = "Bed"
    .Columns[4].Text = "Package"
    .Columns[5].Text = "Particulars"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = 150 * modBasic.$AppWidthRatio
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 5 Then
    Data.Html = GetGridViewValue(Column, $rData1[$aMyFields1[Column]])
  Else
    If Column > $SSQLFields.Count - 1 Then
      Data.Html = modString.TextToHTML(GetGridViewValue(Column, $rData1[$aMyFields1[Column]]))
    Else
      Data.Text = GetGridViewValue(Column, $rData1[$aMyFields1[Column]])
    Endif
  Endif

End

Public Sub GridView1_Select()

  If GridView1.Selection.Count Then
    $rData1.MoveTo(GridView1.Selection[0])
    SHowContinuePlan($rData1["fldencounterval"])
  Endif

End

Public Sub rbwaiting_Click()

  If GridView1.Selection.Count Then
    $rData1.MoveTo(GridView1.Selection[0])
    SHowContinuePlan($rData1["fldencounterval"])
  Endif

End

Public Sub rbapproved_Click()

  If GridView1.Selection.Count Then
    $rData1.MoveTo(GridView1.Selection[0])
    SHowContinuePlan($rData1["fldencounterval"])
  Endif

End

Public Sub btndietplan_Click()

  Dim hForm As FmFoodPlan

  If GridView1.Selection.Count Then
    $rData1.MoveTo(GridView1.Selection[0])
    hForm = New FmFoodPlan($rData1["fldencounterval"])
    hForm.ShowModal
  Endif

End

Public Sub btnsavecalc_Click()

  Dim hForm As FmDietCalc

  If GridView1.Selection.Count Then
    $rData1.MoveTo(GridView1.Selection[0])
    hForm = New FmDietCalc($rData1["fldencounterval"], modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), "Pending")
    hForm.ShowModal
  Endif

End

Public Sub btnexport_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "DEPT : " & cmbdept.Text, modReportVar.GetDateTimeReport(dttodaysave.Value, gb.MediumDate))

End

Private Function GetSelectDietDose(encid As String) As String[]

  Dim sql As String
  Dim res As Result
  Dim xxx As String[]

  xxx = New String[]
  sql = "select fldcategory,flditem,flddose,flddosetime from tblextradosing where fldstatus=&1 and flddosetime>=&2 and flddosetime<=&3 and fldsave=&4 and fldencounterval=&5 and fldtype=&6"
  If rbwaiting.Value = True Then
    res = modDatabase.$myConn.Exec(sql, "Planned", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), False, encid, "Input Food/Fluid")
  Else If rbapproved.Value = True Then
    res = modDatabase.$myConn.Exec(sql, "Continue", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), True, encid, "Input Food/Fluid")
  Endif
  If res.Available Then
    For Each res
      If res["fldcategory"] = "Mixture" Then
        If $DietFormat = "Mixture Code" Then
          xxx.Add(res["flditem"] & " : " & CStr(res["flddose"]))
        Else If $DietFormat = "Mixture Name" Then
          xxx.Add(modMedConstant.GetDietMixNameFromCode(res["flditem"]) & " : " & CStr(res["flddose"]))
        Endif
      Else
        xxx.Add(res["flditem"] & " : " & CStr(res["flddose"]))
      Endif
    Next
  Endif
  Return xxx

End

''================= Sub Table ======================
Private Sub GetNutritionCalculation()

  Dim xcalori As Float
  Dim xfluid As Float
  Dim xprot As Float
  Dim xsugar As Float
  Dim xfat As Float
  Dim xmineral As Float
  Dim xfiber As Float
  Dim xcalcium As Float
  Dim xphospho As Float
  Dim xiron As Float
  Dim xcarotene As Float
  Dim xthiam As Float
  Dim xribofla As Float
  Dim xniacin As Float
  Dim xpyridox As Float
  Dim xfreefoli As Float
  Dim xtotfoli As Float
  Dim xvitc As Float

  xcalori = 0
  xfluid = 0
  xcalori = 0
  xfluid = 0
  xprot = 0
  xsugar = 0
  xfat = 0
  xmineral = 0
  xfiber = 0
  xcalcium = 0
  xphospho = 0
  xiron = 0
  xcarotene = 0
  xthiam = 0
  xribofla = 0
  xniacin = 0
  xpyridox = 0
  xfreefoli = 0
  xtotfoli = 0
  xvitc = 0

  If rbtotal.Value = True Then
    For Each $rData2
      xcalori = xcalori + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldenergy")
      xfluid = xfluid + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldfluid")
      xprot = xprot + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldprotein")
      xsugar = xsugar + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldsugar")
      xfat = xfat + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldlipid")
      xmineral = xmineral + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldmineral")
      xfiber = xfiber + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldfibre")
      xcalcium = xcalcium + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldcalcium")
      xphospho = xphospho + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldphosphorous")
      xiron = xiron + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldiron")
      xcarotene = xcarotene + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldcarotene")
      xthiam = xthiam + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldthiamine")
      xribofla = xribofla + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldriboflavin")
      xniacin = xniacin + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldniacin")
      xpyridox = xpyridox + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldpyridoxine")
      xfreefoli = xfreefoli + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldfreefolic")
      xtotfoli = xtotfoli + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldtotalfolic")
      xvitc = xvitc + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldvitaminc")
    Next
  Else If rbunit.Value = True Then
    If GridView2.Selection.Count Then
      $rData2.MoveTo(GridView2.Row)
      xcalori = xcalori + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldenergy")
      xfluid = xfluid + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldfluid")
      xprot = xprot + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldprotein")
      xsugar = xsugar + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldsugar")
      xfat = xfat + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldlipid")
      xmineral = xmineral + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldmineral")
      xfiber = xfiber + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldfibre")
      xcalcium = xcalcium + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldcalcium")
      xphospho = xphospho + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldphosphorous")
      xiron = xiron + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldiron")
      xcarotene = xcarotene + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldcarotene")
      xthiam = xthiam + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldthiamine")
      xribofla = xribofla + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldriboflavin")
      xniacin = xniacin + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldniacin")
      xpyridox = xpyridox + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldpyridoxine")
      xfreefoli = xfreefoli + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldfreefolic")
      xtotfoli = xtotfoli + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldtotalfolic")
      xvitc = xvitc + modFixPatho.GetNutritionValue($rData2["fldcategory"], $rData2["flditem"], $rData2["flddose"], "fldvitaminc")
    Endif
  Endif

  txcalori.Value = Round(xcalori, -3)
  txfluid.Value = Round(xfluid, -3)
  txprot.Value = Round(xprot, -3)
  txsugar.Value = Round(xsugar, -3)
  txfat.Value = Round(xfat, -3)
  txmineral.Value = Round(xmineral, -3)
  txfiber.Value = Round(xfiber, -3)
  txcalcium.Value = Round(xcalcium, -3)
  txphospho.Value = Round(xphospho, -3)
  txiron.Value = Round(xiron, -3)
  txcarotene.Value = Round(xcarotene, -3)
  txthiam.Value = Round(xthiam, -3)
  txribofla.Value = Round(xribofla, -3)
  txniacin.Value = Round(xniacin, -3)
  txpyridox.Value = Round(xpyridox, -3)
  txfreefoli.Value = Round(xfreefoli, -3)
  txtotfoli.Value = Round(xtotfoli, -3)
  txvitc.Value = Round(xvitc, -3)

End

Private Sub SHowContinuePlan(encid As String)

  Dim sql As String

  sql = "select fldid,fldcategory,flditem,flddose,fldid,fldid,flddosetime,fldstatus,flddosetime,fldencounterval from tblextradosing where fldstatus=&1 and flddosetime>=&2 and flddosetime<=&3 and fldsave=&4 and fldencounterval=&5 and fldtype=&6"
  If rbwaiting.Value = True Then
    $rData2 = modDatabase.$myConn.Exec(sql, "Planned", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), False, encid, "Input Food/Fluid")
  Else If rbapproved.Value = True Then
    $rData2 = modDatabase.$myConn.Exec(sql, "Continue", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), True, encid, "Input Food/Fluid")
  Endif
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(GridView2, $rData2, $aMyFields2)

  With GridView2
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(35 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Hidden = True
    .Columns[6].Hidden = True
    .Columns[7].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Hidden = True

    .Columns[1].Text = "Type"
    .Columns[2].Text = "Particulars"
    .Columns[3].Text = "Dose"
    .Columns[7].Text = "Status"
    .Columns[8].Text = "Time"
  End With
  GetNutritionCalculation()

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 4 Then
    Data.Control = btnsecancel
  Else If Column = 8 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.MediumTime)
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub GridView2_Select()

  If GridView2.Selection.Count Then
    $rData2.MoveTo(GridView2.Selection[0])
    If rbunit.Value = True Then
      GetNutritionCalculation()
    Endif
  Endif

End

Public Sub btndose_Click()

  Dim xval As Float
  Dim res As Result

  If GridView2.Selection.Count Then
    $rData2.MoveTo(GridView2.Selection[0])
    If rbwaiting.Value = True Then
      xval = InputValue(("Update Quantity of ") & $rData2["flditem"], "Diet Plan", $rData2["flddose"])
      If xval Then
        res = modDatabase.$myConn.Edit("tblextradosing", "fldid=&1", $rData2["fldid"])
        res["flddose"] = xval
        res["xyz"] = False
        res.Update
        SHowContinuePlan($rData1["fldencounterval"])
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Public Sub GridView2_Click(Row As Integer, Column As Integer)

  Dim res As Result

  If GridView2.Selection.Count Then
    $rData2.MoveTo(GridView2.Selection[0])

    If rbapproved.Value = True Then
      If Column = 4 Then
        If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
          res = modDatabase.$myConn.Edit("tblextradosing", "fldid=&1", $rData2["fldid"])
          res["fldstatus"] = "Discontinue"
          res["xyz"] = False
          res.Update
          SHowContinuePlan($rData1["fldencounterval"])
          Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
        Endif
      Endif

    Else If rbwaiting.Value = True Then
      If Column = 4 Then
        If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
          modDatabase.$myConn.Delete("tblextradosing", "fldid=&1", $rData2["fldid"])
          SHowContinuePlan($rData1["fldencounterval"])
          Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information deleted", modBasic.$BalloonDelay))
        Endif
      Endif
    Endif

  Endif

End

Public Sub btnapprove_Click()

  Dim res As Result

  If GridView2.Selection.Count Then
    $rData2.MoveTo(GridView2.Selection[0])
    If rbwaiting.Value = True Then

      modDatabase.$myConn.Begin
      If chkautobill.Value = True Then
        SetAutoBillDiet($rData2["fldid"], $rData2["fldencounterval"], $rData2["flditem"], CFloat($rData2["flddose"]))
      Endif
      res = modDatabase.$myConn.Edit("tblextradosing", "fldid=&1", $rData2["fldid"])                   ''
      res["fldstatus"] = "Continue"
      res["flduserid"] = modBasic.$lbluser
      res["fldtime"] = Now()
      res["fldcomp"] = modBasic.$compID
      res["fldsave"] = True
      res["xyz"] = False
      res.Update
      modDatabase.$myConn.Commit

      SHowContinuePlan($rData1["fldencounterval"])
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Private Sub SetAutoBillDiet(sIndex As Long, encid As String, xGroup As String, xQty As Float)

  Dim xdiscType As String
  Dim res As Result

  xdiscType = modNonMedical.DefaultBillingScheme(encid, modBasic.$compID)
  If xdiscType Then
    res = modDatabase.$myConn.Exec("select flditemname,flditemqty,fldbillingmode,flditemtype from tblfoodorder where fldgroup=&1 and flddisctype=&2", xGroup, xdiscType)
    If res.Available Then
      For Each res
        modBillings.GetAutoBillingEntry(encid, xdiscType, res["flditemtype"], res["flditemname"], res["flditemqty"] * xQty, "Done", sIndex, True, False)
      Next
    Endif
  Endif

End

Public Sub btnreport_Click()

  Dim sql As String
  Dim res As Result
  Dim encList As String[]
  Dim xPath As String
  Dim xstate As String

  If rbwaiting.Value = True Then
    xstate = "Planned"
  Else If rbapproved.Value = True Then
    xstate = "Continue"
  Endif
  If cmbdept.Text = "%" Then
    sql = "select distinct(fldencounterval) as col from tblextradosing where fldtype=&1 and flddosetime>=&2 and flddosetime<=&3 and fldstatus=&4"
  Else
    sql = "select distinct(fldencounterval) as col from tblextradosing where fldtype=&1 and flddosetime>=&2 and flddosetime<=&3 and fldstatus=&4 and fldencounterval in(select fldencounterval from tbldepartmentbed where flddept=&5)"
  Endif
  res = modDatabase.$myConn.Exec(sql, "Input Food/Fluid", modDate.StartSqlDate(dttodaysave.value), modDate.EndSqlDate(dttodaysave.value), xstate, cmbdept.Text)
  encList = modControlSub.GetDirectFillresult(res)

  If encList Then
    xPath = modCHTMLPatSummary.GetPlannedFoodReport(dttodaysave.Value, encList, cmbdept.Text, xstate, $DietFormat)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuextcolumn_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucolumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End
