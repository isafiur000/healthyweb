' Gambas module file

Public $GroqCloudModels As String[] = ["llama3-70b-8192", "llama3-8b-8192", "mixtral-8x7b-32768", "gemma-7b-it", "gemma2-9b-it"]
Public $WhisperModels As String[] = ["tiny.en", "base.en", "small.en", "small", "medium", "large", "turbo"]

''----------------------- Cloud AI ------------------------
Public Function GetPatCloudAIResponse(encid As String, sText As String) As String

  Dim xansw As String

  If encid Then
    If modBasic.$AITextSupport = "Speech-To-Text" Then

    Else
      xansw = PatCloudAI(encid, sText, "")
    Endif
  Endif

  Return xansw

End

''======================= Whisper Speech to Text ========================
Public Sub GetTextToSpeech(sModel As String, sInput As String, sLanguage As String, sOutFormat As String, sOutDir As String)

  Dim arcmd As String

  arcmd = "whisper " & sInput & " --model " & sModel & " --language " & sLanguage & " --output_format " & sOutFormat & " --output_dir " & sOutDir                          ''
  modBasic.DebugString("Execute " & arcmd)
  Shell arcmd Wait

End

''========================= Groq Generative AI ============================
Public Function GetGroqModelList(sKey As String) As String[]

  Dim acmd As String
  Dim xx As String
  Dim aColl As Collection
  Dim aVar As Variant[]
  Dim xLst As String[]
  Dim xcol As Collection

  acmd = "curl https://api.groq.com/openai/v1/models -H " & Quote("Authorization: Bearer " & sKey)
  modBasic.DebugAPIString(Replace("Execute " & acmd, sKey, "****"))
  Shell acmd To xx
  modBasic.DebugAPIString("Response: " & xx)

  xLst = New String[]
  If Trim(xx) Then
    aColl = JSON.Decode(xx)
    aVar = aColl["data"]
    If aVar And If aVar.Count Then
      For Each xcol In aVar
        xLst.Add(xcol["id"])
      Next
    Endif
  Endif

  Return xLst

End

Public Function GetComboCloudAIResponse(sData As String, sList As String[]) As String

  Dim xval As String
  Dim cForm As CGroqAPI
  Dim xansw As String
  Dim xxx As String

  xval = GridViewNew("Your Question", sList, True)
  If Trim(xval) Then
    cForm = New CGroqAPI(modBasic.$CloudAIModel_Gen, sData & gb.NewLine & Trim(xval))
    xansw = cForm.GetAPIAnswer()
    If Trim(xansw) Then
      xxx = xansw & gb.NewLine & "[Source: " & modString.GetSelectedTextBetween(modBasic.$CloudAIURL_Gen, "//", "/") & "]"
    Else
      xxx = ""
    Endif
  Endif

  Return xxx

End

Public Function GetMedicineInvoiceResponse(sQuery As String, sInvoice As String) As String

  Dim xinput As String
  Dim encid As String

  Dim res As Result
  Dim xList As String[]
  Dim cForm As CGroqAPI
  Dim xansw As String
  Dim xfinal As String

  If sQuery Then
    encid = modNonMedical.GetEncounterFromBillNo(sInvoice)
    If sInvoice Then

      res = modDatabase.$syConn.Exec("select fldencounterval,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp from tblpatdosing where fldid in(select fldparent from tblpatbilling where fldbillno=&1)", sInvoice)
      If res.Available Then
        res.MoveFirst
        xinput = "Following medicine(s) are prescribed to a " & modPatient.GetPatientSex(res["fldencounterval"], modDatabase.$syConn) & " patient of age " & modPatient.GetPatientAgeString(res["fldencounterval"], Now())
        xList = New String[]
        For Each res
          xList.Add(res["fldroute"] & Space(1) & modMedConstant.GetCodeFromStockID(res["flditem"]) & Space(2) & res["flddose"] & " " & modMedConstant.GetMedicineDoseUnit(res["flditem"]) & " X " & res["fldfreq"] & " X " & res["flddays"] & " day(s)")
        Next
        xinput = xinput & gb.NewLine & xList.Join(gb.NewLine) & gb.NewLine & gb.NewLine & sQuery

        cForm = New CGroqAPI(modBasic.$CloudAIModel_Gen, xinput)
        xansw = cForm.GetAPIAnswer()

        If Trim(xansw) Then
          xfinal = xansw & gb.NewLine & "[Source: " & modString.GetSelectedTextBetween(modBasic.$CloudAIURL_Gen, "//", "/") & "]"
        Else
          xfinal = ""
        Endif

      Endif

    Endif
  Else
    xfinal = ""
  Endif

  Return xfinal

End
