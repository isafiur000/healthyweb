' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $qtyChart As String[]
Private $amtCHart As String[]

Private $RepoOption As String
Private $SSQLFields As String[]

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String
Private $PolyCompLst As String[]

Private $tblpatbilling As String
Private $tblpatbilldetail As String
Private $tbltempbilldetail As String

Public Sub _new()

  modBillingAll.$InvLockLocation = ""
  modReceiptAll.$RecLockLocation = ""
  cmbcomp.List = modBasic.$AllCompPerList
  cmbcomp.Text = "%"
  $PolyCompLst = New String[]
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmbsearch.Text = "Hospital"
      cmbsearch.Text = modDataRepo.$RepositoryMode
      txtselect.Text = modBasic.$HospCode
      cmbsearch.Enabled = False
      txtselect.Enabled = False
    Else
      mnucashinvoice.Visible = False
      cmbsearch.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif

  Else
    Select modHelpVariable.$LogInCategory
      Case "Cashier", "Dispensar"
        mnulocked.Visible = False
        If modBasic.$ViewLockInvoice = "User" Then
          cmbsearch.List = ["Encounter", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload", "Booking"]
        Else If modBasic.$ViewLockInvoice = "Branch" Then
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload", "Booking"]
          $PolyCompLst = modBasic.$branchList
          cmbcomp.List = modBasic.$branchList
        Else If modBasic.$ViewLockInvoice = "Location" Then
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload", "Booking"]
          cmbcomp.Text = modBasic.$compID
          cmbcomp.Enabled = False
          lblcomp.Text = "Lock"
        Else
          cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload", "Booking"]
        Endif
      Case Else
        cmbsearch.List = ["Encounter", "Cashier", "Invoice", "Package", "Reference", "PatientCode", "RatePlan", "Doc Upload", "CBMS Upload", "Booking"]
    End Select

  Endif

  cmbtype.List = ["All Types", "Cash Deposit", "Counter Sales", "Counter Return", "Pharmacy Sales", "Pharmacy Return", "Due Clearance", "Deposit Adjustment"]
  cmbtype.Text = "All Types"
  cmbcategory.List = ["%", "Diagnostic Tests", "General Services", "Procedures", "Equipment", "Radio Diagnostics", "Other Items", "Medicines", "Surgicals", "Extra Items"]
  cmbcashcredit.List = ["Credit", "Cash", "%"]
  cmbaccount.List = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldacledger) as col from tblacledger"))
  cmbaccount.Add("%")
  cmbaccount.Text = "%"
  cmblocation.List = ["OPD", "IPD", "All"]
  cmblocation.Text = "All"

  Select modHelpVariable.$LogInCategory
    Case "Cashier", "Dispensar"
      modAccount.PasInvoiceSetting(cmbfiscal, False)
      mnufinance.Visible = False
      mnufinansumm.Visible = False
      If modBasic.$BillReportSummary = "Hidden" Then
        Panel4.Visible = False
        btnfullrep.Enabled = False
      Endif
    Case Else
      modAccount.PasInvoiceSetting(cmbfiscal, True)
      mnufinance.Visible = True
      mnufinansumm.Visible = True
  End Select

  dtfir.Value = Now()
  dtlast.Value = Now()
  txtselect.Text = ""
  cmbcashcredit.Text = "%"
  cmbcategory.Text = "%"
  If MMain.$WebReport = "Multiple" Then
    $RepoOption = "Date"
    mnurepoformat.Visible = False
  Else
    $RepoOption = "Invoice"
  Endif
  SHowEntryBox()
  rbinvoice.Value = True
  LoadTableNames()

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub mnulocked_Click()

  Dim xcomp As String

  xcomp = InputCombo("Select Location to be Locked", "Reports", modBasic.$AllCompList, "", False)
  If xcomp Then
    modBillingAll.$InvLockLocation = xcomp
    modReceiptAll.$RecLockLocation = xcomp
    cmbcomp.Text = xcomp
    cmbcomp.Enabled = False
    lblcomp.Text = "Lock"
  Else
    modBillingAll.$InvLockLocation = ""
    modReceiptAll.$RecLockLocation = ""
    cmbcomp.Text = "%"
    cmbcomp.Enabled = True
    lblcomp.Text = "Comp"
  Endif

End

Private Sub SetRepoString()

  If MMain.$WebReport = "Multiple" Then
  Else
    cmbsearch.Text = ""
    txtselect.Text = ""
  Endif

End

Public Sub cmbsearch_Click()

  txtselect.Clear
  txtselect.Text = ""
  If cmbsearch.Text = "Cashier" Then
    txtselect.List = modGeneral.GetUserIDAll()
  Else If cmbsearch.Text = "Package" Then
    txtselect.List = modNonMedical.FillDiscountCombo()
  Else If cmbsearch.Text = "RatePlan" Then
    txtselect.List = modNonMedical.FillCashModeCombo()
  Else If cmbsearch.Text = "Doc Upload" Then
    txtselect.List = ["Pending", "Completed"]
  Else If cmbsearch.Text = "CBMS Upload" Then
    txtselect.List = ["Pending", "Completed"]
  Else If cmbsearch.Text = "Booking" Then
    txtselect.List = ["Pending", "Completed"]
  Endif

End

Public Sub mnurepoformat_Click()

  If $RepoOption = "Date" Then
    $RepoOption = "Invoice"
    ' mnurepoformat.Checked = False
    SHowEntryBox()
  Else If $RepoOption = "Invoice" Then
    $RepoOption = "Date"
    ' mnurepoformat.Checked = True
    SHowEntryBox()
  Endif

End

Private Sub SHowEntryBox()

  If $RepoOption = "Date" Then
    txtdtfrom.Visible = True
    txtdtto.Visible = True
    txtinvfrom.Visible = False
    txtinvto.Visible = False
    txtdtfrom.Value = modDate.StartSqlDate(Now())
    txtdtto.Value = modDate.EndSqlDate(Now())
  Else
    txtdtfrom.Visible = False
    txtdtto.Visible = False
    txtinvfrom.Visible = True
    txtinvto.Visible = True
  Endif

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatbilling = "tblpatbilling"
    $tblpatbilldetail = "tblpatbilldetail"
    $tbltempbilldetail = "tbltempbilldetail"
  Else
    res = modDatabase.$syConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatbilling"] Then
        $tblpatbilling = res["fldpatbilling"]
      Else
        $tblpatbilling = "tblpatbilling"
      Endif
      If res["fldpatbilldetail"] Then
        $tblpatbilldetail = res["fldpatbilldetail"]
      Else
        $tblpatbilldetail = "tblpatbilldetail"
      Endif
      If res["fldtempbilldetail"] Then
        $tbltempbilldetail = res["fldtempbilldetail"]
      Else
        $tbltempbilldetail = "tbltempbilldetail"
      Endif
    Else
      $tblpatbilling = "tblpatbilling"
      $tblpatbilldetail = "tblpatbilldetail"
      $tbltempbilldetail = "tbltempbilldetail"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnufiscal_Click()

  Dim res As Result
  Dim xyear As String

  xyear = InputCombo("Select Fiscal Year Range", "Select Year", modBasic.$FiscalYearList, "", True)
  If xyear Then
    res = modDatabase.$myConn.Exec("select fldfrom,fldend from tblfiscalid where fldlabel=&1", xyear)
    If res.Available Then
      res.MoveFirst
      dtfir.Value = res["fldfrom"]
      dtlast.Value = res["fldend"]
    Endif
  Endif

End

' Public Sub cmbsearch_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbsearch)
'   modFillContainer.RestrictComboToContent(cmbsearch)
'
' End
'
' Public Sub cmbcategory_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbcategory)
'   modFillContainer.RestrictComboToContent(cmbcategory)
'
' End
'
' Public Sub cmbcashcredit_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbcashcredit)
'   modFillContainer.RestrictComboToContent(cmbcashcredit)
'
' End
'
' Public Sub cmbtype_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbtype)
'   modFillContainer.RestrictComboToContent(cmbtype)
'
' End

Private Sub GetFields()

  Dim xhospfld As String

  xhospfld = modDataRepo.HospitalField()
  If rbreceipt.Value = True And If cmbtype.Text = "Deposit Adjustment" Then
    $SSQLFields = ["fldtime", "fldtime", "fldbillno", "fldencounterval", "fldencounterval", "fldbilltype", "fldbankname", "fldchequeno", "flditemamt", "flddiscountamt", "fldtaxamt", "fldchargedamt", "fldreceivedamt", "fldcurdeposit", "flduserid", "fldbilltype", "fldtaxamt", "flddiscountamt", "fldbillno", "flddiscountgroup", "fldcomp", "fldprevdeposit", "flddepoadjust"]
  Else
    $SSQLFields = ["fldtime", "fldtime", "fldbillno", "fldencounterval", "fldencounterval", "fldbilltype", "fldbankname", "fldchequeno", "flditemamt", "flddiscountamt", "fldtaxamt", "fldchargedamt", "fldreceivedamt", "fldcurdeposit", "flduserid", "fldbilltype", "fldtaxamt", "flddiscountamt", "fldbillno", "flddiscountgroup", "fldcomp", "fldprevdeposit"]
  Endif
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  GetFields()
  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Private Sub SetRepoStr()

  If MMain.$WebReport = "Multiple" Then
    $RepoStr = modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
  Else
    $RepoStr = ""
  Endif

End

Public Sub mnusaleall_Click()

  Dim xFieldList As String[]
  Dim xtype As String
  Dim xstr As String

  xtype = InputCombo("Select Category", "Invoices", ["All Types", "With Discount", "With Tax"], "", True)
  If xtype Then
    If xtype = "With Discount" Then
      xstr = db.Subst(" and flddiscountamt>&1", 0)
    Else If xtype = "With Tax" Then
      xstr = db.Subst(" and fldtaxamt>&1", 0)
    Else
      xstr = ""
    Endif
    xFieldList = GetSQLColumns()
    SetRepoStr()
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "CAS" & "%", "PHM" & "%")                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "TMP" & "%", "TPM" & "%")
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    lblrecordcount.Text = "Count: " & $rData.Count
    FillGrid()
  Endif

End

Public Sub mnuretall_Click()

  Dim xFieldList As String[]
  Dim xtype As String
  Dim xstr As String

  xtype = InputCombo("Select Category", "Invoices", ["All Types", "With Discount", "With Tax"], "", True)
  If xtype Then
    If xtype = "With Discount" Then
      xstr = db.Subst(" and flddiscountamt<&1", 0)
    Else If xtype = "With Tax" Then
      xstr = db.Subst(" and fldtaxamt<&1", 0)
    Else
      xstr = ""
    Endif
    xFieldList = GetSQLColumns()
    SetRepoStr()
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "CRE" & "%", "RET" & "%")                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and (fldbillno like &3 or fldbillno like &4)" & xstr & $RepoStr & " ORDER BY fldtime ASC", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "TRE" & "%", "TPR" & "%")
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    lblrecordcount.Text = "Count: " & $rData.Count
    FillGrid()
  Endif

End

Public Sub mnusearch_Click()

  Dim xname As String[]
  Dim xFieldList As String[]

  xFieldList = GetSQLColumns()
  SetRepoStr()
  xname = InputDoubleText(("Search Patient Name"), ["First Name", "SurName"], ["%", "%"], modBasic.$SurNameList)
  If xname Then
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &3 and lower(fldptnamelast) like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(xname[0]), LCase(xname[1]))                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &3 and lower(fldptnamelast) like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(xname[0]), LCase(xname[1]))
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    lblrecordcount.Text = "Count: " & $rData.Count
    FillGrid()
  Endif

End

Public Sub mnusearchitem_Click()

  Dim xname As String
  Dim xFieldList As String[]
  Dim xList As String[]

  xFieldList = GetSQLColumns()
  SetRepoStr()
  xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select flditemname as col from tblservicecost"))
  xname = GridViewNew("Select Particulars", xList, True)
  If xname Then
    If rbinvoice.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemname like &3)" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xname)                                                  ''
    Else If rbreceipt.Value = True Then
      $rData = modDatabase.$syConn.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemname like &3)" & $RepoStr, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), xname)
    Endif
    txttaxamt.Value = 0
    txtdiscamt.Value = 0
    txttotalrecv.Value = 0
    txttotalamt.Value = 0
    lblrecordcount.Text = "Count: " & $rData.Count
    FillGrid()
  Endif

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim res As Result
  Dim Bll As String
  Dim Bll1 As String
  Dim Bll2 As String
  Dim txuser As String
  Dim xcateg As String
  Dim xregist As String
  Dim yregist As String
  Dim xsear As String
  Dim xorder As String

  Dim xcomp As String
  Dim compLst As String[]
  Dim i As Integer

  If cmbtype.Text = "All Types" Then
    Bll = "%"
    Bll1 = "%"
    Bll2 = "%"
  Else
    If rbinvoice.Value = True Then
      Bll = modBillLock.InvSign(cmbtype.Text) & "%"
    Else If rbreceipt.Value = True Then
      Bll = modBillLock.ReceiptSign(cmbtype.Text) & "%"
    Else If rbboth.Value = True
      Bll1 = modBillLock.InvSign(cmbtype.Text) & "%"
      Bll2 = modBillLock.ReceiptSign(cmbtype.Text) & "%"
    Endif
  Endif

  If modBasic.$ViewLockInvoice = "User" Then
    txuser = modBasic.$lbluser
  Else
    txuser = "%"
  Endif

  If cmbcategory.Text = "%" Then
    xcateg = ""
  Else
    xcateg = " and fldbillno in(select fldbillno from " & $tblpatbilling & " where flditemtype like &7)"
  Endif

  If cmbaccount.Text = "%" Then
    xregist = ""
  Else
    xregist = " and lower(fldbankname) like &8"
  Endif

  If cmblocation.Text = "All" Then
    yregist = ""
  Else
    If cmblocation.Text = "OPD" Then
      yregist = " and fldprevdeposit=&9"
    Else If cmblocation.Text = "IPD" Then
      yregist = " and fldprevdeposit>&9"
    Endif
  Endif

  SetRepoStr()
  If Not cmbsearch.Text Then
    xsear = ""
  Else
    If cmbsearch.Text = "Encounter" Then
      xsear = " and lower(fldencounterval) like &{10}"
    Else If cmbsearch.Text = "Cashier" Then
      xsear = " and lower(flduserid) like &{10}"
    Else If cmbsearch.Text = "Invoice" Then
      xsear = " and lower(fldbillno) like &{10}"
    Else If cmbsearch.Text = "Reference" Then
      xsear = " and lower(fldchequeno) like &{10}"
    Else If cmbsearch.Text = "PatientCode" Then
      xsear = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptcode like &{10}))"

    Else If cmbsearch.Text = "Package" Then
      xsear = " and fldbillno in(select fldbillno from tblpatbilling where flddisctype like &{10})"
    Else If cmbsearch.Text = "RatePlan" Then
      xsear = " and fldbillno in(select fldbillno from tblpatbilling where fldbillingmode like &{10})"

    Else If cmbsearch.Text = "Doc Upload" Then
      If txtselect.Text = "Pending" Then
        xsear = " and fldbillno not in(select fldbillno from tblbillupload)"
      Else
        xsear = " and fldbillno in(select fldbillno from tblbillupload)"
      Endif
    Else If cmbsearch.Text = "CBMS Upload" Then
      If txtselect.Text = "Pending" Then
        xsear = Subst(" and fldbillno in(select fldbillno from tblfiscal where (fldsync IS NULL or fldsync<>&1))", 200)
      Else
        xsear = Subst(" and fldbillno in(select fldbillno from tblfiscal where fldsync=&1)", 200)
      Endif
    Else If cmbsearch.Text = "Booking" Then
      If txtselect.Text = "Pending" Then
        xsear = " and fldbillno not in(select fldbillno from tblpatbillbooking)"
      Else
        xsear = " and fldbillno in(select fldbillno from tblpatbillbooking)"
      Endif
    Else
      xsear = "" 'modDataRepo.GetWhereStringRepo(cmbsearch.Text, txtselect.Text)
    Endif
  Endif

  If cmbsearch.Text = "Doc Upload" And If txtselect.Text = "Pending" Then
    xorder = " ORDER BY fldchequeno"
  Else
    xorder = " ORDER BY fldid"
  Endif

  If cmbcomp.Text = "%" Then
    If $PolyCompLst.Count Then
      compLst = $PolyCompLst.Copy()
      For i = 0 To compLst.Count - 1
        compLst[i] = "'" & compLst[i] & "'"
      Next
      xcomp = "fldcomp in(" & compLst.Join(",") & ") and "
    Else
      xcomp = ""
    Endif
  Else
    xcomp = "fldcomp=&1 and "
  Endif

  If rbinvoice.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatbilldetail & " WHERE " & xcomp & "fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & xorder, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text))
  Else If rbreceipt.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tbltempbilldetail & " WHERE " & xcomp & "fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & xorder, cmbcomp.Text, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text))
  Else If rbboth.Value = True Then
    res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from " & $tblpatbilldetail & " WHERE " & xcomp & "fldbillno like &2 and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr & " UNION ALL " & "select " & xFldList.Join(",") & " from " & $tbltempbilldetail & " WHERE " & xcomp & "fldbillno like &{11} and fldtime>=&3 and fldtime<=&4 and fldbilltype like &5 and flduserid like &6" & xcateg & xregist & yregist & xsear & $RepoStr, cmbcomp.Text, Bll1, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbcashcredit.Text, txuser, cmbcategory.Text, LCase(cmbaccount.Text), 1, LCase(txtselect.Text), Bll2)              ''
  Endif
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 0 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.MediumDate)
  Else If Column = 1 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.LongTime)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 8 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 9 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 10 Then
    xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
  Else If Column = 11 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 12 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 13 Then
    If modHelpVariable.$LogInCategory = "Cashier" And If modBasic.$BillReportSummary = "Hidden" Then
      xxx = "***"
    Else
      xxx = modReportVar.GetLocaleNumberFormat(xVariable, gb.Currency)
    Endif
  Else If Column = 18 Then
    xxx = modNonMedical.GetReturnInvoices(xVariable).Join("; ")
  Else If Column = 22 Then
    If rbreceipt.Value = True And If cmbtype.Text = "Deposit Adjustment" Then
      xxx = xVariable
    Else
      xxx = modDataRepo.GetHospitalTextLabel(xVariable)
    Endif
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Public Sub chkok_Click()

  Dim res As Result
  Dim totamt As Float
  Dim taxamt As Float
  Dim discamt As Float
  Dim recvamt As Float
  Dim xFldList As String[]
  Dim xFieldList As String[]

  TabStrip1.Index = 0
  xFieldList = GetSQLColumns()
  $rData = ExecuteQuery(xFieldList)
  If $rData.Count Then
    lblrecordcount.Text = "Count: " & $rData.Count
  Else
    lblrecordcount.Text = "Count: 0"
  Endif

  If chkqty.Value = True Or If chkamt.Value = True Then
    ExportData()
  Else
    taxamt = 0
    discamt = 0
    recvamt = 0
    totamt = 0
    xFldList = ["SUM(fldchargedamt) as totamt", "SUM(fldtaxamt) as taxamt", "SUM(flddiscountamt) as dscamt", "SUM(fldreceivedamt+fldcurdeposit) as recvamt"]
    res = ExecuteQuery(xFldList)
    ' res = modDatabase.$syConn.Exec("select " & xFldList.Join(",") & " from tblpatbilldetail where fldcomp like &1 and fldencounterval like &2 and flduserid like &3 and fldbillno like &4 and fldbillno like &5 and fldtime>=&6 and fldtime<=&7 and fldbilltype like &8" & xst & xregist, cmbcomp.Text, txencid, txuser, txtbillno, Bll, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbmode.Text, cmbcategory.Text, cmbregist.Text)
    If res.Available Then
      For Each res
        If res["taxamt"] Then
          taxamt = taxamt + res["taxamt"]
        Endif
        If res["dscamt"] Then
          discamt = discamt + res["dscamt"]
        Endif
        If res["recvamt"] Then
          recvamt = recvamt + res["recvamt"]
        Endif
        If res["totamt"] Then
          totamt = totamt + res["totamt"]
        Endif
      Next

      txttaxamt.Value = Round(taxamt, -2)
      txtdiscamt.Value = Round(discamt, -2)
      txttotalrecv.Value = Round(recvamt, -2)
      txttotalamt.Value = Round(totamt, -2)
    Endif
  Endif
  FillGrid()

  If chkqty.Value = True Then
    FillItemChartQTY()
  Endif
  If chkamt.Value = True Then
    FillItemChartAMT()
  Endif

  If $rData.Available Then
    $rData.MoveFirst
    If $RepoOption = "Invoice" Then
      txtinvfrom.Text = $rData["fldbillno"]
    Else If $RepoOption = "Date" Then
      txtdtfrom.Value = $rData["fldtime"]
    Endif
    $rData.MoveLast
    If $RepoOption = "Invoice" Then
      txtinvto.Text = $rData["fldbillno"]
    Else If $RepoOption = "Date" Then
      txtdtto.Value = $rData["fldtime"]
    Endif
  Endif

End

Private Sub FillGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[11].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[12].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[13].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[14].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[15].Hidden = True
    .Columns[16].Hidden = True
    .Columns[17].Hidden = True
    .Columns[18].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[19].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[20].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[21].Hidden = True

    .Columns[0].Text = "Date"
    .Columns[1].Text = "Time"
    .Columns[2].Text = "Invoice"
    .Columns[3].Text = "EncID"
    .Columns[4].Text = "Name"
    .Columns[5].Text = "Type"
    .Columns[6].Text = "Account"
    .Columns[7].Text = "Reference"
    .Columns[8].Text = "SubTotal"
    .Columns[9].Text = "DiscAmt"
    .Columns[10].Text = "TaxAmt"
    .Columns[11].Text = "NetTotal"
    .Columns[12].Text = "Received"
    .Columns[13].Text = "Deposit"
    .Columns[14].Text = "User"
    .Columns[18].Text = "Comment"
    .Columns[19].Text = "Label"
    .Columns[20].Text = "Location"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column > $SSQLFields.Count - 1 Then
    Data.Html = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif

End

Private Sub ExportData()

  Dim totamt As Float
  Dim nettot As Float
  Dim taxamt As Float
  Dim discamt As Float
  Dim recvamt As Float
  Dim newdepo As Float

  totamt = 0
  nettot = 0
  taxamt = 0
  discamt = 0
  recvamt = 0
  newdepo = 0

  $qtyChart = New String[]
  $amtCHart = New String[]
  For Each $rData
    totamt = totamt + $rData["flditemamt"]
    taxamt = taxamt + $rData["fldtaxamt"]
    discamt = discamt + $rData["flddiscountamt"]
    nettot = nettot + $rData["fldchargedamt"]
    recvamt = recvamt + $rData["fldreceivedamt"]
    newdepo = newdepo + $rData["fldcurdeposit"]
    If chkqty.Value = True Then
      $qtyChart.Add(DateDiff(dtfir.Value, $rData["fldtime"], modChart.GetDateIntegerFromSetting()))
    Endif
    If chkamt.Value = True Then
      $amtCHart.Add(DateDiff(dtfir.Value, $rData["fldtime"], modChart.GetDateIntegerFromSetting()) & ";" & CStr($rData["fldreceivedamt"] / modChart.GetAMTValueChart()))
    Endif
  Next

  txttotalamt.Value = Round(totamt, -2)
  txttaxamt.Value = Round(taxamt, -2)
  txtdiscamt.Value = Round(discamt, -2)
  txttotalrecv.Value = Round(recvamt, -2)

End

''----------------------------------------- Grid menu ---------------------------------------
Public Sub mnusummgrid_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xFldList = GetSQLColumns()
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Invoice Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CUnivariate
  Column = modCustPatient.GetUnivariateColumn(3)
  xField = xFldList[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(3)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(3)
  xFieColm = xFldList[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab

    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    'modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnuinvcopy_Click()

  Dim ShowTax As Boolean
  Dim ShowDisc As Boolean
  Dim invType As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modNonMedical.$tblpatbilling = $tblpatbilling
    modNonMedical.$tblpatbilldetail = $tblpatbilldetail
    modNonMedical.$tbltempbilldetail = $tbltempbilldetail
    invType = modBillLock.GetInvoiceFormatNo($rData["fldbillno"])
    If invType = "Invoice" Then
      If $rData["fldtaxamt"] = 0 Then
        ShowTax = False
      Else
        ShowTax = True
      Endif
      If $rData["flddiscountamt"] = 0 Then
        ShowDisc = False
      Else
        ShowDisc = True
      Endif
      modBILLFormat.BillingInvoice($rData["fldencounterval"], $rData["fldbillno"], modBillLock.GetCopyBillTypeFromBillNo($rData["fldbillno"]), ShowTax, ShowDisc)
    Else If invType = "Receipt" Then
      If $rData["fldbillno"] Like "TDA" & "*" Then
        modBILLFormat.DischargeReceipt($rData["fldencounterval"], $rData["fldbillno"], "DISCHARGE SLIP (COPY)")
      Else
        modBILLFormat.BillingReceipt($rData["fldencounterval"], $rData["fldbillno"], "RECEIPT (COPY)")
      Endif
    Endif

    If modBasic.$BillWithInvoicePrint = "Prescription" Then
      modPatientSub.PrintRegistExtraReport($rData["fldencounterval"])
    Endif

    modNonMedical.$tblpatbilling = ""
    modNonMedical.$tblpatbilldetail = ""
    modNonMedical.$tbltempbilldetail = ""
  Endif

End

Public Sub mnuparti_Click()

  Dim sql As String
  Dim hForm As FRequest
  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If $rData["fldbillno"] Like "DCL" & "*" Or If $rData["fldbillno"] Like "TCL" & "*" Then
      sql = "select fldencounterval,fldbillitem,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldtime,fldid,fldbillno from tblduebilling where fldbillno=&1"
    Else
      sql = "select fldencounterval,flditemname,flditemrate,flditemqty,fldtaxper,flddiscper,fldditemamt as tot,fldtime,fldid,fldbillno from " & $tblpatbilling & " where fldbillno=&1"                                                  ''
    Endif
    res = modDatabase.$syConn.Exec(sql, $rData["fldbillno"])
    If res.Available Then
      hForm = New FRequest(res, $rData["fldbillno"], "Billing:SelectedInvoice", False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub mnusummary_Click()

  Dim xPath As String
  Dim invType As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    invType = modBillLock.GetInvoiceFormatNo($rData["fldbillno"])
    If invType = "Invoice" Then
      xPath = modCHTMLInvoice.BillDepartmentWise(modDatabase.$syConn, $rData["fldbillno"], $rData["fldencounterval"], "Invoice")
    Else If invType = "Receipt" Then ''need to make report
      xPath = modCHTMLInvoice.BillDepartmentWise(modDatabase.$syConn, $rData["fldbillno"], $rData["fldencounterval"], "Receipt")
    Endif
    modControlSub.OpenHTMLPreview($rData["fldencounterval"], xPath, "ReportSize")
  Endif

End

Public Sub mnubillreport_Click()

  Dim xPath As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xPath = modCHTMLInvoice.ShowTotalInvoicebyPatient($rData["fldencounterval"], "Complete")
    modControlSub.OpenHTMLPreview($rData["fldencounterval"], xPath, "ReportSize")
  Endif

End

Public Sub mnuexpenses_Click()

  Dim xPath As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xPath = modCHTMLInvoice.ShowTotalExpensebyPatient(modDatabase.$syConn, $rData["fldencounterval"], "Complete")
    modControlSub.OpenHTMLPreview($rData["fldencounterval"], xPath, "ReportSize")
  Endif

End

''---------------------------------------- QTY Chart ------------------------------------
Private Sub FillItemChartQTY()

  Dim sFile As String

  sFile = Temp()
  File.Save(sFile, $qtyChart.Join(gb.NewLine))
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Invoice Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, "Invoice Count"))
  Endif
  btnstats.Tag = sFile

End

' Public Sub PictureBox1_Menu()
'
'   mnuqty.Popup
'
' End

Public Sub btnexport_Click()

  Me.Exec("window.open('" & PictureBox1.Image & "'); ")

End

Public Sub btnstats_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", btnstats.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", btnstats.Tag))
  Endif

End

''---------------------------------------- AMT Chart --------------------------------------------
Private Sub FillItemChartAMT()

  Dim sPath As String
  Dim sNew As String

  sPath = Temp()
  File.Save(sPath, $amtCHart.Join(gb.NewLine))
  sNew = modString.GetGroupSUmmaryCSV(sPath, 0, 1, ";", gb.Tab, gb.Float)

  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Else
    modImage.StretchtPictureToBox(PictureBox2, modChart.HistogramChart(sNew, "[Received Amount in " & modChart.GetAMTLabelChart() & "]"))
  Endif
  btnstats2.Tag = sNew

End

' Public Sub PictureBox2_Menu()
'
'   mnuamt.Popup
'
' End

Public Sub btnexport2_Click()

  Me.Exec("window.open('" & PictureBox2.Image & "'); ")

End

Public Sub btnstats2_Click()

  ' Desktop.Open(mnustatsamt.Tag)

End

''----------------------------------------------------------- Reports -----------------------------------
Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  Dim xFldList As String[]

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "BILLING REPORT: " & txtselect.Text
  xparam2 = modReportVar.GetDateTimeReport(modDate.StartSqlDate(dtfir.value), gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(modDate.EndSqlDate(dtlast.value), gb.MediumDate)
  encColumn = 3
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  xFldList = GetSQLColumns()

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To xFldList.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[xFldList[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)
  Next

  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

' Public Sub txtselect_KeyPress()
'
'   If Key.Code = Key.Down Then
'     If modBasic.$AutoEncSuffix = "Yes" Then
'       txtselect.Text = txtselect.Text & modBasic.$HospCode
'     Endif
'   Else
'     modGeneralMain.InputTextKeyOnly()
'   Endif
'
' End
'
' Public Sub txtinvfrom_KeyPress()
'
'   modGeneralMain.InputUpCaseOnly()
'
' End
'
' Public Sub txtinvto_KeyPress()
'
'   modGeneralMain.InputUpCaseOnly()
'
' End

''====================== Combined Report ============================
Public Sub mnucombsummary_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCombinedReport.CombinedReportBillingRangeSummary("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucombledger_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCombinedReport.CombinedReportBillingRangeAccount("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucombuser_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCombinedReport.CombinedReportBillingRangeUserBrief("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucombgroup_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCombinedReport.CombinedReportBillingRangeGroupBrief("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucomblocation_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "SUMMARY", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCombinedReport.CombinedReportBillingRangeLocation("Date", modDatabase.$syConn, modDate.StartSqlDate(xdate[0]), modDate.EndSqlDate(xdate[1]), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

''============================ SUMMARY REPORT ===========================================
Public Sub btnrecv_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeSummary($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeSummary($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeSummary($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btnsummdepo_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeLocation($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeLocation($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeLocation($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btndatewise_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeUserDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btninvsumm_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeUserBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btngrpdetail_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeGroupDetail($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btngrpsummry_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeGroupBrief($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btndiffitem_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilling, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.BothInvoiceReportDetailByMismatch($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btnitemsumm_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeAccount($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeAccount($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeAccount($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btndsc_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Discount", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif
    Endif

  Endif

End

Public Sub btntax_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeTaxDiscount($RepoOption, modDatabase.$syConn, "Tax", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
      Endif
    Endif

  Endif

End

Public Sub btnsumdisc_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Credit", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif
    Endif

  Endif

End

Public Sub btntaxsum_Click()

  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modBillingReport.InvoiceReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tblpatbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Endif

  Else If rbreceipt.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Else
      If txtinvfrom.Text And If txtinvto.Text Then
        xPath = modReceiptReport.ReceiptReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", Trim(txtinvfrom.Text), Trim(txtinvto.Text), cmbsearch.Text, txtselect.Text, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif

    Endif

  Else If rbboth.Value = True Then
    If $RepoOption = "Date" Then
      If txtdtfrom.Value And If txtdtto.Value Then
        xPath = modCombinedReport.CombinedReportBillingRangeCashCredit($RepoOption, modDatabase.$syConn, "Cash", txtdtfrom.Value, txtdtto.Value, cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
        ' modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        modControlSub.DisplayReportExport(xPath)
      Endif
    Endif

  Endif

End

Public Sub chkqty_Click()

  TabStrip1.Index = 1

End

Public Sub chkamt_Click()

  TabStrip1.Index = 2

End

Public Sub mnuColumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mniaddcolm_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnufinsummary_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  If rbinvoice.Value = True Then
    xdate = DoubleDates("Select Dates", "Invoices", [dtfir.Value, dtlast.Value])
  Else If rbreceipt.Value = True Then
    xdate = DoubleDates("Select Dates", "Receipts", [dtfir.Value, dtlast.Value])
  Endif

  If xdate Then
    If rbinvoice.Value = True Then
      xPath = modBillingExtra.ServiceInvoiceSummaryCashCredit("Invoice", modDatabase.$syConn, xdate[0], xdate[1], $tblpatbilldetail, cmbsearch.Text, txtselect.Text, $tblpatbilling)
    Else If rbreceipt.Value = True Then
      xPath = modBillingExtra.ServiceInvoiceSummaryCashCredit("Receipt", modDatabase.$syConn, xdate[0], xdate[1], $tbltempbilldetail, cmbsearch.Text, txtselect.Text, $tblpatbilling)
    Endif
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnufree_Click()

  Dim hForm As FmAccountDates
  Dim xType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xType = "Invoice"
  Else If rbreceipt.Value = True Then
    xType = "Receipt"
  Endif
  hForm = New FmAccountDates("Discount", xType, cmbsearch.Text, txtselect.Text)
  hForm.ShowModal

End

Public Sub mnuselectcredit_Click()

  Dim hForm As FmAccountDates
  Dim xType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xType = "Invoice"
  Else If rbreceipt.Value = True Then
    xType = "Receipt"
  Endif
  hForm = New FmAccountDates("Credit Sales", xType, cmbsearch.Text, txtselect.Text)
  hForm.ShowModal

End

Public Sub mnudueselect_Click()

  Dim hForm As FmAccountDates
  Dim xType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xType = "Invoice"
  Else If rbreceipt.Value = True Then
    xType = "Receipt"
  Endif
  hForm = New FmAccountDates("Due Clearance", xType, cmbsearch.Text, txtselect.Text)
  hForm.ShowModal

End

Public Sub mnucashcollect_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "INCOME BOOKING", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modFinance.GeIncomeBookingFinance(modDatabase.$syConn, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, cmbfiscal.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnucashinvoice_Click()

  Dim hForm As FmIncomeBook

  SetRepoString()
  hForm = New FmIncomeBook("Income Booking", cmbsearch.Text, txtselect.Text, cmbfiscal.Text)
  hForm.ShowModal

End

Public Sub mnusercollsumm_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "USER COLLECTION", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modBillingExtra.GetUserCollectionDateSummary(modDatabase.$syConn, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnulocatusersum_Click()

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "USER COLLECTION", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modBillingExtra.ShowUserCollectionStatusDetail(modDatabase.$syConn, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnusercollbysum_Click()

  Dim hForm As FmIncomeBook

  SetRepoString()
  hForm = New FmIncomeBook("User Collection", cmbsearch.Text, txtselect.Text, cmbfiscal.Text)
  hForm.ShowModal

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim xFieColm As String
  Dim res As Result
  Dim yval As Variant

  Dim xColl As Collection
  Dim xFldList As String[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then
    xFldList = GetSQLColumns()
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieColm])
    xColl = New Collection
    If res.Available Then
      For Each res
        yval = GetGridViewValue(Column, res[xFieColm])
        If yval Then
          If xColl.Exist(CStr(yval)) Then
            xColl[CStr(yval)] = xColl[CStr(yval)] + 1
          Else
            xColl[CStr(yval)] = 1
          Endif
        Endif
      Next
    Endif
    If xColl.Count Then
      xPath = modCHTMLReport.CreateHTMLReportFromCollection(["Variable", "Count"], xColl, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnugrouped_Click()

  Dim xList As String[]
  Dim xPath As String

  SetRepoString()
  If rbinvoice.Value = True Then
    xList = SelectListView("Select Locations", modGeneral.CompList(), False)
    If xList Then

      If $RepoOption = "Date" Then
        If txtdtfrom.Value And If txtdtto.Value Then
          xPath = modBillingReport.InvoiceReportGroupsSummarySpecial($RepoOption, modDatabase.$syConn, txtdtfrom.Value, txtdtto.Value, xList, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
          modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        Endif

      Else
        If txtinvfrom.Text And If txtinvto.Text Then
          xPath = modBillingReport.InvoiceReportGroupsSummarySpecial($RepoOption, modDatabase.$syConn, Trim(txtinvfrom.Text), Trim(txtinvto.Text), xList, cmbsearch.Text, txtselect.Text, $tblpatbilling, $tblpatbilldetail)
          modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
        Endif

      Endif

    Endif
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucbmsupload_Click()

  Dim cClass As CCBMSUpload
  Dim rClass As CCBMSReturn
  Dim sBillNo As String
  Dim xout As String
  Dim res1 As Result
  Dim Row As Integer

  If modHelpVariable.$IRDLevel = "Yes" Then
    For Row = 0 To GridView1.Count - 1
      $rData.MoveTo(Row)
      xout = ""
      sBillNo = ""
      sBillNo = $rData["fldbillno"]
      res1 = modDatabase.$myConn.Edit("tblfiscal", "fldbillno=&1 and (fldsync IS NULL or fldsync<>&2)", sBillNo, "200")
      If res1.Available Then
        If sBillNo Like "CAS" & "*" Then
          cClass = New CCBMSUpload(sBillNo)
          xout = cClass.CBMSOutput()
        Else If sBillNo Like "PHM" & "*" Then
          cClass = New CCBMSUpload(sBillNo)
          xout = cClass.CBMSOutput()

        Else If sBillNo Like "CRE" & "*" Then
          rClass = New CCBMSReturn(sBillNo)
          xout = rClass.CBMSOutput()
        Else If sBillNo Like "RET" & "*" Then
          rClass = New CCBMSReturn(sBillNo)
          xout = rClass.CBMSOutput()
        Endif

        res1["fldsync"] = Trim(xout)
        res1["xyz"] = False
        res1.Update
      Else
        Me.Exec("Toastify({text: 'Already Uploaded', duration: 3000}).showToast()")
      Endif
    Next
  Endif

Catch
  Message.Error(xout)

End

Public Sub mnudetail_Click()

  Dim xdate As Date[]
  Dim xPath As String
  Dim sType As String

  SetRepoString()
  If rbinvoice.Value = True Then
    sType = "Invoice"
  Else If rbreceipt.Value = True Then
    sType = "Receipt"
  Else If rbboth.Value = True Then
    sType = "Both"
  Endif
  xdate = DoubleDates("Select Dates", "INVOICE DESCRIPTION", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCHTMLInvoice.ExportInvoiceDepartments(modDatabase.$syConn, sType, xdate[0], xdate[1], cmbsearch.Text, txtselect.Text, $tblpatbilldetail, $tbltempbilldetail)
    modControlSub.DisplayReportExport(xPath)
  Endif

End
