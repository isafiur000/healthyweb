' Gambas module file

Public Function GetUserPayOrReferAmt(xState As String, $conn As Connection, id As Long, shareType As String, userid As String, sFormat As String) As Float

  Dim xtaxper As Float
  Dim xshareper As Float
  Dim ushare As Float
  Dim utax As Float
  Dim netot As Float
  Dim res As Result
  Dim xuser As String

  If xState = "Locked" Then
    If modBasic.$PayableCalculation = "Groups" Then
      res = $conn.Exec("select fldsharenet from tblpatgenshare where flditemid=&1 and fldsave=&2", id, False)
      If res.Available Then
        If res["fldsharenet"] Then
          netot = res["fldsharenet"]
        Else
          netot = 0
        Endif
      Else
        netot = 0
      Endif
    Else
      netot = 0
    Endif

  Else
    If sFormat = "SubTotal" Then
      res = modDatabase.$syConn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemrate*flditemqty) as totl,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
    Else
      res = modDatabase.$syConn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemrate*flditemqty*(1-flddiscper/100)) as totl,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
    Endif
    If res.Available Then

      If modBasic.$PayableCalculation = "Groups" Then
        xshareper = GetSharePercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
        xtaxper = GetTaxPercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"])
      Else
        If shareType = "Payable" Then
          xshareper = GetSharePercentManual($conn, userid, res["fldencounterval"], res["flditemname"])
          xtaxper = GetTaxPercentManual($conn, userid, res["fldencounterval"], res["flditemname"])
        Endif
        If Not xshareper Then
          If shareType = "Payable" Then
            If res["fldpayto"] And If userid = res["fldpayto"] Then
              xuser = userid
            Endif
          Else If shareType = "Referral" Then
            If res["fldrefer"] And If userid = res["fldrefer"] Then
              xuser = userid
            Endif
          Endif
          If xuser Then
            xshareper = GetSharePercentException($conn, xuser, shareType, res["flditemname"])
            xtaxper = GetTaxPercentException($conn, xuser, shareType, res["flditemname"])
          Else
            xshareper = 0
            xtaxper = 0
          Endif
        Endif
        If Not xshareper Then
          xshareper = GetSharePercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
          xtaxper = GetTaxPercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"])
        Endif
        If Not xshareper Then
          xshareper = GetSharePercentCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
          xtaxper = GetTaxPercentCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
        Endif
      Endif

      ushare = res["totl"] * xshareper / 100
      utax = ushare * xtaxper / 100
    Endif
    netot = ushare - utax
  Endif

  Return netot

End

Public Function GetUserPayOrReferDirect(xState As String, $conn As Connection, id As Long, shareType As String, userid As String, sFormat As String) As Float

  Dim xtaxper As Float
  Dim ushare As Float
  Dim utax As Float
  Dim netot As Float
  Dim res As Result
  Dim xuser As String

  If xState = "Locked" Then
    If modBasic.$PayableCalculation = "Groups" Then
      res = $conn.Exec("select fldsharenet from tblpatgenshare where flditemid=&1 and fldsave=&2", id, False)
      If res.Available Then
        If res["fldsharenet"] Then
          netot = res["fldsharenet"]
        Else
          netot = 0
        Endif
      Else
        netot = 0
      Endif
    Else
      netot = 0
    Endif

  Else
    If sFormat = "SubTotal" Then
      res = modDatabase.$syConn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemrate*flditemqty) as totl,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
    Else
      res = modDatabase.$syConn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,(flditemrate*flditemqty*(1-flddiscper/100)) as totl,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
    Endif
    If res.Available Then

      If modBasic.$PayableCalculation = "Groups" Then
        ushare = GetShareAmountGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
        xtaxper = GetTaxPercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"])
      Else
        If shareType = "Payable" Then
          ushare = GetShareAmountManual($conn, userid, res["fldencounterval"], res["flditemname"])
          xtaxper = GetTaxPercentManual($conn, userid, res["fldencounterval"], res["flditemname"])
        Endif
        If Not ushare Then
          If shareType = "Payable" Then
            If res["fldpayto"] And If userid = res["fldpayto"] Then
              xuser = userid
            Endif
          Else If shareType = "Referral" Then
            If res["fldrefer"] And If userid = res["fldrefer"] Then
              xuser = userid
            Endif
          Endif
          If xuser Then
            ushare = GetShareAmountException($conn, xuser, shareType, res["flditemname"])
            xtaxper = GetTaxPercentException($conn, xuser, shareType, res["flditemname"])
          Else
            ushare = 0
            xtaxper = 0
          Endif
        Endif
        If Not ushare Then
          ushare = GetShareAmountGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
          xtaxper = GetTaxPercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"])
        Endif
        If Not ushare Then
          ushare = GetShareAmountCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
          xtaxper = GetTaxPercentCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
        Endif
      Endif

      utax = ushare * xtaxper / 100
    Endif
    netot = ushare - utax
  Endif

  Return netot

End

''----------------------------- User share calculation ------------------------------------
Public Function GetUserPayPercent(xState As String, $conn As Connection, id As Long, userid As String, shareType As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim xuser As String

  If xState = "Locked" Then
    If modBasic.$PayableCalculation = "Groups" Then
      res = $conn.Exec("select fldshareamt from tblpatgenshare where flditemid=&1 and fldsave=&2", id, False)
      If res.Available Then
        If res["fldshareamt"] Then
          xval = res["fldshareamt"]
        Else
          xval = 0
        Endif
      Else
        xval = 0
      Endif
    Else
      xval = 0
    Endif

  Else
    res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
    If res.Available Then

      If modBasic.$PayableCalculation = "Groups" Then
        xval = GetSharePercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
      Else
        If shareType = "Payable" Then
          xval = GetSharePercentManual($conn, userid, res["fldencounterval"], res["flditemname"])
        Endif
        If Not xval Then
          If shareType = "Payable" Then
            If res["fldpayto"] And If userid = res["fldpayto"] Then
              xuser = userid
            Endif
          Else If shareType = "Referral" Then
            If res["fldrefer"] And If userid = res["fldrefer"] Then
              xuser = userid
            Endif
          Endif
          If xuser Then
            xval = GetSharePercentException($conn, xuser, shareType, res["flditemname"])
          Else
            xval = 0
          Endif
        Endif
        If Not xval Then
          xval = GetSharePercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
        Endif
        If Not xval Then
          xval = GetSharePercentCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
        Endif
      Endif

    Endif
  Endif

  Return xval

End

Public Function GetUserPayTaxReduction(xState As String, $conn As Connection, id As Long, userid As String, shareType As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim xuser As String

  If xState = "Locked" Then
    If modBasic.$PayableCalculation = "Groups" Then
      res = $conn.Exec("select fldtdsper from tblpatgenshare where flditemid=&1 and fldsave=&2", id, False)
      If res.Available Then
        If res["fldtdsper"] Then
          xval = res["fldtdsper"]
        Else
          xval = 0
        Endif
      Else
        xval = 0
      Endif
    Else
      xval = 0
    Endif

  Else
    If modBasic.$PayableTDSMode = "User" Then
      xval = modGeneral.GetStaffTaxPer(userid)
    Else
      res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
      If res.Available Then

        If modBasic.$PayableCalculation = "Groups" Then
          xval = GetTaxPercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"])
        Else
          If shareType = "Payable" Then
            xval = GetTaxPercentManual($conn, userid, res["fldencounterval"], res["flditemname"])
          Endif
          If Not xval Then
            If shareType = "Payable" Then
              If res["fldpayto"] And If userid = res["fldpayto"] Then
                xuser = userid
              Endif
            Else If shareType = "Referral" Then
              If res["fldrefer"] And If userid = res["fldrefer"] Then
                xuser = userid
              Endif
            Endif
            If xuser Then
              xval = GetTaxPercentException($conn, xuser, shareType, res["flditemname"])
            Else
              xval = 0
            Endif
          Endif
          If Not xval Then
            xval = GetTaxPercentGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"])
          Endif
          If Not xval Then
            xval = GetTaxPercentCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
          Endif
        Endif

      Endif
    Endif
  Endif

  Return xval

End

Public Function GetUserPayAmount(xState As String, $conn As Connection, id As Long, userid As String, shareType As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim xuser As String

  If xState = "Locked" Then
    If modBasic.$PayableCalculation = "Groups" Then
      res = $conn.Exec("select fldshareamt from tblpatgenshare where flditemid=&1 and fldsave=&2", id, False)
      If res.Available Then
        If res["fldshareamt"] Then
          xval = res["fldshareamt"]
        Else
          xval = 0
        Endif
      Else
        xval = 0
      Endif
    Else
      xval = 0
    Endif

  Else
    res = $conn.Exec("select fldencounterval,fldbillingmode,flditemtype,fldid,flditemname,fldpayto,fldrefer,fldtarget from tblpatbilling where fldid=&1", id)
    If res.Available Then

      If modBasic.$PayableCalculation = "Groups" Then
        xval = GetShareAmountGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
      Else
        If shareType = "Payable" Then
          xval = GetShareAmountManual($conn, userid, res["fldencounterval"], res["flditemname"])
        Endif
        If Not xval Then
          If shareType = "Payable" Then
            If res["fldpayto"] And If userid = res["fldpayto"] Then
              xuser = userid
            Endif
          Else If shareType = "Referral" Then
            If res["fldrefer"] And If userid = res["fldrefer"] Then
              xuser = userid
            Endif
          Endif
          If xuser Then
            xval = GetShareAmountException($conn, xuser, shareType, res["flditemname"])
          Else
            xval = 0
          Endif
        Endif
        If Not xval Then
          xval = GetShareAmountGroup($conn, userid, shareType, res["fldid"], res["fldencounterval"], res["flditemtype"], res["flditemname"], res["fldbillingmode"], "%")
        Endif
        If Not xval Then
          xval = GetShareAmountCategory($conn, shareType, res["flditemtype"], res["fldbillingmode"], res["fldtarget"])
        Endif
      Endif

    Endif
  Endif

  Return xval

End

''================================= FUNCTIONS ===============================
Private Function GetProcUserCountItem($conn As Connection, id As Long, encid As String, shareType As String, sCategory As String) As Integer

  Dim res As Result
  Dim xval As Integer

  res = $conn.Exec("select distinct(fldvalue) as col from tblpatgenshare where flditemid=&1 and fldencounterval=&2 and fldusertype=&3 and fldcategory=&4 and fldactive=&5", id, encid, shareType, sCategory, "Active")
  If res.Available Then
    If res.Count Then
      xval = res.Count
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''==================== SHARE PERCENT =========================
Private Function GetSharePercentManual($conn As Connection, userid As String, encid As String, sItemName As String) As Float

  Dim res1 As Result
  Dim xx1 As Float

  res1 = $conn.Exec("select flduserper,fldtotalper from tblpatusershares where fldsharetype=&1 and fldencounterval=&2 and flditemname=&3 and fldshareuser=&4 and fldactive=&5", "Payable", encid, sItemName, userid, "Active")
  If res1.Available Then
    res1.MoveFirst
    If res1["flduserper"] Then
      xx1 = Round(res1["flduserper"] * res1["fldtotalper"] / 100, -2)
    Else
      xx1 = 0
    Endif
  Else
    xx1 = 0
  Endif
  Return xx1

End

Private Function GetSharePercentException($conn As Connection, xuser As String, shareType As String, sItemName As String) As Float

  Dim res2 As Result
  Dim xx2 As Float

  res2 = $conn.Exec("select flditemshare from tbluserpay where flditemtype=&1 and flduserid=&2 and flditemname=&3 and fldactive=&4", shareType, xuser, sItemName, "Active")
  If res2.Available Then
    res2.MoveFirst
    If res2["flditemshare"] Then
      xx2 = res2["flditemshare"]
    Else
      xx2 = 0
    Endif
  Else
    xx2 = 0
  Endif
  Return xx2

End

Private Function GetSharePercentGroup($conn As Connection, userid As String, shareType As String, billID As Long, encid As String, sItemType As String, sItemName As String, sBillingMode As String, userType As String) As Float

  Dim resy As Result
  Dim res3 As Result
  Dim xx3 As Float
  Dim xuscount As Integer

  xx3 = 0
  resy = $conn.Exec("select fldusertype from tblpatgenshare where fldencounterval=&1 and flditemid=&2 and fldvalue=&3 and fldcategory=&4 and fldactive=&5 and fldusertype like &6", encid, billID, userid, sItemType, "Active", userType)
  If resy.Available Then
    For Each resy

      res3 = $conn.Exec("select flditemshare from tblprocedureshare where fldsharetype=&1 and (flditemname like &2 or flditemname=&3) and fldusertype=&4 and fldbillingmode like &5 and flditemtype=&6 and fldactive=&7", shareType, sItemName, "%", resy["fldusertype"], sBillingMode, sItemType, "Active")
      If res3.Available Then
        res3.MoveFirst
        xuscount = GetProcUserCountItem($conn, billID, encid, resy["fldusertype"], sItemType)
        If res3["flditemshare"] Then
          If xuscount Then
            xx3 = xx3 + res3["flditemshare"] / xuscount
          Else
            xx3 = xx3 + res3["flditemshare"]
          Endif
        Endif
      Endif

    Next
  Endif

  Return xx3

End

Private Function GetSharePercentCategory($conn As Connection, shareType As String, sItemType As String, sBillingMode As String, sFormat As String) As Float

  Dim res4 As Result
  Dim xx4 As Float

  If sItemType = "Procedures" Then
    res4 = $conn.Exec("select flditemshare from tblusershare where fldsharetype=&1 and flditemtype like &2 and fldbillingmode like &3 and flddepartname like &4 and fldactive=&5", shareType, sItemType, sBillingMode, sFormat, "Active")
  Else
    res4 = $conn.Exec("select flditemshare from tblusershare where fldsharetype=&1 and flditemtype like &2 and fldbillingmode like &3 and fldactive=&4", shareType, sItemType, sBillingMode, "Active")
  Endif
  If res4.Available Then
    res4.MoveFirst
    If res4["flditemshare"] Then
      xx4 = res4["flditemshare"]
    Else
      xx4 = 0
    Endif
  Else
    xx4 = 0
  Endif
  Return xx4

End

''======================== SHARE AMOUNT =====================
Private Function GetShareAmountManual($conn As Connection, userid As String, encid As String, sItemName As String) As Float

  Dim res1 As Result
  Dim xx1 As Float

  res1 = $conn.Exec("select flduseramt from tblpatusershares where fldsharetype=&1 and fldencounterval=&2 and flditemname=&3 and fldshareuser=&4 and fldactive=&5", "Payable", encid, sItemName, userid, "Active")
  If res1.Available Then
    res1.MoveFirst
    If res1["flduseramt"] Then
      xx1 = Round(res1["flduseramt"], -2)
    Else
      xx1 = 0
    Endif
  Else
    xx1 = 0
  Endif
  Return xx1

End

Private Function GetShareAmountException($conn As Connection, xuser As String, shareType As String, sItemName As String) As Float

  Dim res2 As Result
  Dim xx2 As Float

  res2 = $conn.Exec("select flditemamt from tbluserpay where flditemtype=&1 and flduserid=&2 and flditemname=&3 and fldactive=&4", shareType, xuser, sItemName, "Active")
  If res2.Available Then
    res2.MoveFirst
    If res2["flditemamt"] Then
      xx2 = res2["flditemamt"]
    Else
      xx2 = 0
    Endif
  Else
    xx2 = 0
  Endif
  Return xx2

End

Private Function GetShareAmountGroup($conn As Connection, userid As String, shareType As String, billID As Long, encid As String, sItemType As String, sItemName As String, sBillingMode As String, userType As String) As Float

  Dim resy As Result
  Dim res3 As Result
  Dim xx3 As Float
  Dim xuscount As Integer

  xx3 = 0
  resy = $conn.Exec("select fldusertype from tblpatgenshare where fldencounterval=&1 and flditemid=&2 and fldvalue=&3 and fldcategory=&4 and fldactive=&5 and fldusertype like &6", encid, billID, userid, sItemType, "Active", userType)
  If resy.Available Then
    For Each resy

      res3 = $conn.Exec("select flditemamt from tblprocedureshare where fldsharetype=&1 and (flditemname like &2 or flditemname=&3) and fldusertype=&4 and fldbillingmode like &5 and flditemtype=&6 and fldactive=&7", shareType, sItemName, "%", resy["fldusertype"], sBillingMode, sItemType, "Active")
      If res3.Available Then
        res3.MoveFirst
        xuscount = GetProcUserCountItem($conn, billID, encid, resy["fldusertype"], sItemType)
        If res3["flditemamt"] Then
          If xuscount Then
            xx3 = xx3 + Round(res3["flditemamt"] / xuscount, -2)
          Else
            xx3 = xx3 + res3["flditemamt"]
          Endif
        Endif
      Endif

    Next
  Endif

  Return xx3

End

Private Function GetShareAmountCategory($conn As Connection, shareType As String, sItemType As String, sBillingMode As String, sFormat As String) As Float

  Dim res4 As Result
  Dim xx4 As Float

  If sItemType = "Procedures" Then
    res4 = $conn.Exec("select flditemshare from tblusershare where fldsharetype=&1 and flditemtype like &2 and fldbillingmode like &3 and flddepartname like &4 and fldactive=&5", shareType, sItemType, sBillingMode, sFormat, "Active")
  Else
    res4 = $conn.Exec("select flditemshare from tblusershare where fldsharetype=&1 and flditemtype like &2 and fldbillingmode like &3 and fldactive=&4", shareType, sItemType, sBillingMode, "Active")
  Endif
  If res4.Available Then
    res4.MoveFirst
    If res4["flditemshare"] Then
      xx4 = res4["flditemshare"]
    Else
      xx4 = 0
    Endif
  Else
    xx4 = 0
  Endif
  Return xx4

End

''=================== TDS PERCENT ==========================
Private Function GetTaxPercentManual($conn As Connection, userid As String, encid As String, sItemName As String) As Float

  Dim res1 As Result
  Dim xx1 As Float

  res1 = $conn.Exec("select fldusertax from tblpatusershares where fldsharetype=&1 and fldencounterval=&2 and flditemname=&3 and fldshareuser=&4 and fldactive=&5", "Payable", encid, sItemName, userid, "Active")
  If res1.Available Then
    res1.MoveFirst
    If res1["fldusertax"] Then
      xx1 = res1["fldusertax"]
    Else
      xx1 = 0
    Endif
  Else
    xx1 = 0
  Endif
  Return xx1

End

Private Function GetTaxPercentException($conn As Connection, xuser As String, shareType As String, sItemName As String) As Float

  Dim res2 As Result
  Dim xx2 As Float

  res2 = $conn.Exec("select flditemtax from tbluserpay where flditemtype=&1 and flduserid=&2 and flditemname=&3 and fldactive=&4", shareType, xuser, sItemName, "Active")
  If res2.Available Then
    res2.MoveFirst
    If res2["flditemtax"] Then
      xx2 = res2["flditemtax"]
    Else
      xx2 = 0
    Endif
  Else
    xx2 = 0
  Endif
  Return xx2

End

Private Function GetTaxPercentGroup($conn As Connection, userid As String, shareType As String, billID As Long, encid As String, sItemType As String, sItemName As String, sBillingMode As String) As Float

  Dim resy As Result
  Dim res3 As Result
  Dim xx3 As Float

  resy = $conn.Exec("select fldusertype from tblpatgenshare where fldencounterval=&1 and flditemid=&2 and fldvalue=&3 and fldcategory=&4 and fldactive=&5", encid, billID, userid, sItemType, "Active")
  If resy.Available Then
    resy.MoveLast

    res3 = $conn.Exec("select flditemtax from tblprocedureshare where fldsharetype=&1 and (flditemname like &2 or flditemname=&3) and fldusertype=&4 and fldbillingmode like &5 and flditemtype=&6 and fldactive=&7", shareType, sItemName, "%", resy["fldusertype"], sBillingMode, sItemType, "Active")
    If res3.Available Then
      res3.MoveFirst
      If res3["flditemtax"] Then
        xx3 = res3["flditemtax"]
      Else
        xx3 = 0
      Endif
    Else
      xx3 = 0
    Endif
  Else
    xx3 = 0
  Endif
  Return xx3

End

Private Function GetTaxPercentCategory($conn As Connection, shareType As String, sItemType As String, sBillingMode As String, sFormat As String) As Float

  Dim res4 As Result
  Dim xx4 As Float

  If sItemType = "Procedures" Then
    res4 = $conn.Exec("select flditemtax from tblusershare where fldsharetype=&1 and flditemtype like &2 and fldbillingmode like &3 and flddepartname like &4 and fldactive=&5", shareType, sItemType, sBillingMode, sFormat, "Active")
  Else
    res4 = $conn.Exec("select flditemtax from tblusershare where fldsharetype=&1 and flditemtype like &2 and fldbillingmode like &3 and fldactive=&4", shareType, sItemType, sBillingMode, "Active")
  Endif
  If res4.Available Then
    res4.MoveFirst
    If res4["flditemtax"] Then
      xx4 = res4["flditemtax"]
    Else
      xx4 = 0
    Endif
  Else
    xx4 = 0
  Endif
  Return xx4

End
