' Gambas class file

Public Sub _new()

  cmbdateformat.List = ["AD Date", "BS Date", "AD/BS Date"]
  cmbdatecont.List = ["ShortDate", "MediumDate", "LongDate", "MonthDay", "YearMonth", "YearOnly", "DateOnly", "ShortDateOnly", "TimeOnly"]
  cmbnumfont.List = GetNumConvLangList()
  cmbnameformat.List = ["FirstName+SurName", "SurName+FirstName", "FirstName+SURNAME", "SURNAME+FirstName", "FirstName Only", "***SurName"]
  cmbageformat.List = ["Numerical", "AgeInYears", "YearMonth", "YearOnly"]
  cmbabnormal.List = ["Bold", "Italic", "UnderLine", "Bold+UnderLine", "Bold+Italic", "Red Color", "Superscript", "None"]
  cmbchapterlink.List = ["Yes", "No"]
  cmbnameservice.List = ["Rank+Name", "Name+Category", "Rank+Name+Category", "Rank+Name+Category+Scheme"]
  cmbsigpopup.List = ["Yes", "No"]
  cmbautouser.List = ["Yes", "No"]
  cmbshowunit.List = ["Enable", "Disable"]
  cmbnullvalue.List = ["Enable", "Disable"]

  If MMain.$IsPolice = True Then
    cmbnameservice.Enabled = True
    btnnameservice.Enabled = True
  Else
    cmbnameservice.Enabled = False
    btnnameservice.Enabled = False
  Endif

  ShowReportContent()
  UserSigContent()

End

Private Function GetNumConvLangList() As String[]

  Dim xx As String
  Dim sLang As String[]
  Dim arcmd As String[]

  If System.Exist("numconv") Then
    arcmd = ["numconv", "-l"]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd To xx
    sLang = Split(xx, gb.NewLine)
  Else
    modApplSub.InstallSelectedApplication(["numconv"])
  Endif
  Return sLang

End

Public Sub IconPanel1_Click()

  If IconPanel1.Index = 0 Then
    cmbdateformat.List = ["AD Date", "BS Date"]
    cmbdatecont.List = ["ShortDate", "MediumDate", "LongDate", "MonthDay", "YearMonth", "YearOnly"]
    cmbnumfont.List = GetNumConvLangList()
    cmbnameformat.List = ["FirstName+SurName", "SurName+FirstName", "FirstName+SURNAME", "SURNAME+FirstName", "FirstName Only", "***SurName"]
    cmbageformat.List = ["Numerical", "AgeInYears", "YearMonth"]
    cmbabnormal.List = ["Bold", "Italic", "UnderLine", "Bold+UnderLine", "Bold+Italic", "Red Color", "Superscript", "None"]
    cmbchapterlink.List = ["Yes", "No"]
    cmbnameservice.List = ["Rank+Name", "Name+Category", "Rank+Name+Category", "Rank+Name+Category+Scheme"]
    cmbsigpopup.List = ["Yes", "No"]
    cmbshowunit.List = ["Enable", "Disable"]

    ShowReportContent()
    UserSigContent()
  Else If IconPanel1.Index = 1 Then
    cmblogo.List = ["Yes", "No"]
    cmbdept.List = ["Yes", "No"]
    cmbaddress.List = ["Yes", "No"]
    cmbhosp.List = ["Yes", "No"]
    cmbpatident.List = ["No Image", "Bar Code", "QR Code", "Photograph", "Portal QR"]
    cmbfootsummary.List = ["Yes", "No"]
    cmbcomment.List = ["Yes", "No"]
    ShowTitleSett()
    ShowFooterSett()
    PatientInfo()
  Else If IconPanel1.Index = 2 Then
    cmbhead11.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead12.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead21.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead22.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead31.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead32.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead41.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead42.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead51.List = modRepoTemplete.GetTempleteVariabList()
    cmbhead52.List = modRepoTemplete.GetTempleteVariabList()
    ShowHeaderInfo()
  Else If IconPanel1.Index = 3 Then
    cmbtextalignall.List = ["left", "center", "right"]
    cmbtextaligncol1.List = ["left", "center", "right"]
    cmbtextaligncol2.List = ["left", "center", "right"]
    cmbvertalignall.List = ["top", "center", "bottom"]
    cmbvertaligncol1.List = ["top", "center", "bottom"]
    cmbvertaligncol2.List = ["top", "center", "bottom"]
    cmblabelall.List = ["Yes", "No"]
    cmblabelcol1.List = ["Yes", "No"]
    cmblabelcol2.List = ["Yes", "No"]
    cmbtitlealign.List = ["left", "center", "right"]
    cmbtitledisplay.List = ["Yes", "No"]
    ShowTableDesign()
  Else If IconPanel1.Index = 4 Then
    cmbreportorient.List = ["Portrait", "Landscape"]
    cmbPDFbackground.List = ["Yes", "No"]
    cmbPDFImage.List = ["Yes", "No"]
    cmbhtmlform.List = ["Yes", "No"]
    cmbhtmllink.List = ["Yes", "No"]
    cmbgrayscale.List = ["Yes", "No"]
    cmbinternalink.List = ["Yes", "No"]
    cmbPDFrotate.List = ["90", "180", "270", "None"]
    cmbPDpapsize.List = ["A3", "A4", "A5", "B3", "B4", "B5", "Letter", "Legal", "Tabloid"]
    cmbPDFshrink.List = ["Enable", "Disable", "None"]
    cmbmultipage.List = ["Continuous", "Separate"]
    cmblowquality.List = ["Enable", "Disable"]
    GeneralPDFDesign()
    ShowReportPDF()
  Else If IconPanel1.Index = 5 Then
    cmbpdfheadline.List = ["Yes", "No"]
    cmbpdfheadsource.List = ["Text", "HTML", "Custom", "None"]
    PDFHeaderDesign()
  Else If IconPanel1.Index = 6 Then
    cmbpdfootline.List = ["Yes", "No"]
    cmbpdfootsource.List = ["Text", "HTML", "Custom", "None"]
    PDFFooterDesign()
  Else If IconPanel1.Index = 7 Then
    cmbcontitle.List = ["BuiltIn", "External"]
    cmbconheader.List = ["BuiltIn", "External"]
    cmbcontable.List = ["BuiltIn", "External"]
    cmbconfooter.List = ["BuiltIn", "External"]
    ShowGnuPGPdf()
    ShowDefaultComponent()
    ShowLineSpacing()
  Else If IconPanel1.Index = 8 Then
    ShowCustomSetting()
    ShowMiscelan()
    ' GeneralBodySett()
  Else If IconPanel1.Index = 9 Then
    cmbvarformat.List = modLongVar.$RegistVar
    ShowColuFormat()
    SHowCOluVisible()
    ' SHowCOlumnSearchSetting()
  Endif

End

''---------------------PDF PRINT ------------------------------------------------------------
Public Sub btncustomleft_Click()

  modSettings.SaveSettingsToFile("Report/PDF_LeftMargin", CStr(txtreportleft.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomtop_Click()

  modSettings.SaveSettingsToFile("Report/PDF_TopMargin", CStr(txtreporttop.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomright_Click()

  modSettings.SaveSettingsToFile("Report/PDF_RightMargin", CStr(txtreportright.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustombottom_Click()

  modSettings.SaveSettingsToFile("Report/PDF_BottomMargin", CStr(txtreportbottom.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomheight_Click()

  modSettings.SaveSettingsToFile("Report/PDF_PageHeight", CStr(txtreportheight.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomwidth_Click()

  modSettings.SaveSettingsToFile("Report/PDF_PageWidth", CStr(txtreportwidth.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFpapsize_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_PaperSize", cmbPDpapsize.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdforient_Click()

  modSettings.SaveSettingsToFile("Report/PDF_Orientation", cmbreportorient.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub ShowReportPDF()

  If modSettings.ShowSettingFromFIle("Report/PDF_BottomMargin") Then
    txtreportbottom.Value = CFloat(modSettings.ShowSettingFromFIle("Report/PDF_BottomMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Report/PDF_LeftMargin") Then
    txtreportleft.Value = CFloat(modSettings.ShowSettingFromFIle("Report/PDF_LeftMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Report/PDF_RightMargin") Then
    txtreportright.Value = CFloat(modSettings.ShowSettingFromFIle("Report/PDF_RightMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Report/PDF_TopMargin") Then
    txtreporttop.Value = CFloat(modSettings.ShowSettingFromFIle("Report/PDF_TopMargin"))
  Endif

  If modSettings.ShowSettingFromFIle("Report/PDF_PageHeight") Then
    txtreportheight.Value = CFloat(modSettings.ShowSettingFromFIle("Report/PDF_PageHeight"))
  Endif
  If modSettings.ShowSettingFromFIle("Report/PDF_PageWidth") Then
    txtreportwidth.Value = CFloat(modSettings.ShowSettingFromFIle("Report/PDF_PageWidth"))
  Endif

  cmbreportorient.Text = modSettings.ShowSettingFromFIle("Report/PDF_Orientation")
  cmbPDpapsize.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_PaperSize")

End

''-------------------------------------- General PDF Design -----------------------------------------
Private Sub GeneralPDFDesign()

  cmbPDFbackground.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_BackgroundPrint")
  cmbPDFImage.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_ImagePrint")
  cmbhtmlform.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_EnableForm")
  cmbhtmllink.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_EnableExternalLink")
  cmbgrayscale.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_GrayscalePrint")
  cmbinternalink.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_EnableInternalLink")
  txtjavascript.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_JavaScript")
  cmbPDFrotate.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_Rotate")
  cmbPDFshrink.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_SmartShrinking")
  cmbmultipage.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_MultiPage")
  cmblowquality.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_LowQuality")

End

Public Sub btnPDFbackground_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_BackgroundPrint", cmbPDFbackground.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFImage_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_ImagePrint", cmbPDFImage.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhtmlform_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_EnableForm", cmbhtmlform.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhtmllink_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_EnableExternalLink", cmbhtmllink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btngrayscale_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_GrayscalePrint", cmbgrayscale.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFrotate_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_Rotate", cmbPDFrotate.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFzoom_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_SmartShrinking", cmbPDFshrink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnsmshrink_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_EnableInternalLink", cmbinternalink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnmultipage_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_MultiPage", cmbmultipage.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlowquality_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_LowQuality", cmblowquality.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnjavascript_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_JavaScript", txtjavascript.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''---------------------------- GNU PG ------------------------------------------------
Private Sub ShowGnuPGPdf()

  txtpubkeytext.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_GnuPGText")
  txtpubkeylink.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_GnuPGLink")
  txtpubkeyname.Text = modSettings.ShowSettingFromFIle("Report" & "/PDF_GnuPGName")

End

Public Sub btnpubkeytext_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_GnuPGText", txtpubkeytext.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpubkeylink_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDF_GnuPGLink", txtpubkeylink.Text)
  modSettings.SaveSettingsToFile("Report" & "/PDF_GnuPGName", txtpubkeyname.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''----------------------------------------------------------------------------------------------------------
''--------------------------------------- Report content----------------------------------------------------
Private Sub ShowReportContent()

  cmbnameformat.Text = modSettings.ShowSettingFromFIle("ReportFormat/NameFormat")
  cmbnameservice.Text = modSettings.ShowSettingFromFIle("ReportFormat/NameModification")
  txtadresformat.Text = modSettings.ShowSettingFromFIle("ReportFormat/AddressFormat")
  cmbdateformat.Text = modSettings.ShowSettingFromFIle("ReportFormat/DateFormat")
  cmbnumfont.Text = modSettings.ShowSettingFromFIle("ReportFormat/NumberFont")
  cmbdatecont.Text = modSettings.ShowSettingFromFIle("ReportFormat/DateContent")
  cmbageformat.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_AgeFormat")
  cmbabnormal.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_AbnormalMark")
  txtnumformat.Text = modSettings.ShowSettingFromFIle("ReportFormat/NumberFormat")
  cmbshowunit.Text = modSettings.ShowSettingFromFIle("ReportFormat/ShowQuantiUnit")
  cmbnullvalue.Text = modSettings.ShowSettingFromFIle("ReportFormat/NullOnZeroValue")
  cmbcommentcol.Text = modSettings.ShowSettingFromFIle("ReportFormat/CommentColumn")
  cmbchapterlink.Text = modSettings.ShowSettingFromFIle("ReportFormat/ChapterIndex")

End

Public Sub btnchapterlink_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ChapterIndex", cmbchapterlink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncommentcol_Click()

  modSettings.SaveSettingsToFile("ReportFormat/CommentColumn", cmbcommentcol.Text)
  modBasic.$CommentColumn = cmbcommentcol.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnameformat_Click()

  modSettings.SaveSettingsToFile("ReportFormat/NameFormat", cmbnameformat.Text)
  If modHelpVariable.$LogInCategory = "Research" Then
    If modBasic.$ExpoRepoUser = True Then
      modBasic.$PatNameFormat = cmbnameformat.Text
    Else
      modBasic.$PatNameFormat = "***SurName"
    Endif
  Else
    modBasic.$PatNameFormat = cmbnameformat.Text
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnameservice_Click()

  modSettings.SaveSettingsToFile("ReportFormat/NameModification", cmbnameservice.Text)
  modBasic.$PatNameModification = cmbnameservice.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnadresformat_Click()

  modSettings.SaveSettingsToFile("ReportFormat/AddressFormat", txtadresformat.Text)
  modBasic.$PatAddressFormat = txtadresformat.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndateformat_Click()

  modSettings.SaveSettingsToFile("ReportFormat/DateFormat", cmbdateformat.Text)
  modBasic.$DateFormat = cmbdateformat.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnumfont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/NumberFont", cmbnumfont.Text)
  modBasic.$NumFont = cmbnumfont.Text
  modBasic.LoadLocalNumbers()
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncurrency_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ShowQuantiUnit", cmbshowunit.Text)
  modBasic.$QuantiUnitEnable = cmbshowunit.Text
  modBasic.LoadLocalNumbers()
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnullvalue_Click()

  modSettings.SaveSettingsToFile("ReportFormat/NullOnZeroValue", cmbnullvalue.Text)
  modBasic.$NullOnZero = cmbnullvalue.Text
  modBasic.LoadLocalNumbers()
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnumformat_Click()

  modSettings.SaveSettingsToFile("ReportFormat/NumberFormat", txtnumformat.Text)
  modBasic.$NumFormat = txtnumformat.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndatecont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/DateContent", cmbdatecont.Text)
  modBasic.$DateContent = cmbdatecont.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnageformat_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_AgeFormat", cmbageformat.Text)
  modBasic.$PatAgeFormat = cmbageformat.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnabnormal_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_AbnormalMark", cmbabnormal.Text)
  modBasic.$AbnFormat = cmbabnormal.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''---------------------------------------------- User Content -------------------------------------------------------
Private Sub UserSigContent()

  If modSettings.ShowSettingFromFIle("ReportFormat/FooterColumn") Then
    cmbfootcolumn.Value = CInt(modSettings.ShowSettingFromFIle("ReportFormat/FooterColumn"))
    ShowFootColumn()
  Endif
  cmbsigpopup.Text = modSettings.ShowSettingFromFIle("ReportFormat/FooterPopUp")
  cmbautouser.Text = modSettings.ShowSettingFromFIle("ReportFormat/Footer_ShowPastUser")

  txtuser1.Tag = modSettings.ShowSettingFromFIle("ReportFormat/Footer_User1")
  txtuser2.Tag = modSettings.ShowSettingFromFIle("ReportFormat/Footer_User2")
  txtuser3.Tag = modSettings.ShowSettingFromFIle("ReportFormat/Footer_User3")

  If txtuser1.Tag Then
    txtuser1.Text = modGeneral.GetUserFullNamePrint(txtuser1.Tag)
  Endif
  If txtuser2.Tag Then
    txtuser2.Text = modGeneral.GetUserFullNamePrint(txtuser2.Tag)
  Endif
  If txtuser3.Tag Then
    txtuser3.Text = modGeneral.GetUserFullNamePrint(txtuser3.Tag)
  Endif

  If modSettings.ShowSettingFromFIle("ReportFormat/FooterSignature_Width") Then
    txtsignwidth.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/FooterSignature_Width"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/FooterSignature_Height") Then
    txtsignheight.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/FooterSignature_Height"))
  Endif

End

Public Sub btnfootcolumn_Click()

  modSettings.SaveSettingsToFile("ReportFormat/FooterColumn", CStr(cmbfootcolumn.Value))
  ShowFootColumn()
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnsigpopup_Click()

  modSettings.SaveSettingsToFile("ReportFormat/FooterPopUp", cmbsigpopup.Text)
  modBasic.$SignaPopUp = cmbsigpopup.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnautouser_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Footer_ShowPastUser", cmbautouser.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnsignsize_Click()

  modSettings.SaveSettingsToFile("ReportFormat/FooterSignature_Width", CStr(txtsignwidth.Value))
  modSettings.SaveSettingsToFile("ReportFormat/FooterSignature_Height", CStr(txtsignheight.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub ShowFootColumn()

  If cmbfootcolumn.Value = 1 Then
    txtuser1.Enabled = False
    txtuser2.Enabled = False
    txtuser3.Enabled = True
  Else If cmbfootcolumn.Value = 2 Then
    txtuser1.Enabled = True
    txtuser2.Enabled = False
    txtuser3.Enabled = True
  Else If cmbfootcolumn.Value = 3 Then
    txtuser1.Enabled = True
    txtuser2.Enabled = True
    txtuser3.Enabled = True
  Endif

End

Public Sub btnfoot1_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Footer_User1", txtuser1.Tag)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoot2_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Footer_User2", txtuser2.Tag)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoot3_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Footer_User3", txtuser3.Tag)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoot1clr_Click()

  txtuser1.Tag = ""
  txtuser1.Text = ""
  modSettings.SaveSettingsToFile("ReportFormat/Footer_User1", txtuser1.Tag)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoot2clr_Click()

  txtuser2.Tag = ""
  txtuser2.Text = ""
  modSettings.SaveSettingsToFile("ReportFormat/Footer_User2", txtuser2.Tag)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoot3clr_Click()

  txtuser3.Tag = ""
  txtuser3.Text = ""
  modSettings.SaveSettingsToFile("ReportFormat/Footer_User3", txtuser3.Tag)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnselectuser1_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Application User"), modBasic.$SignaUserList)
  If xMedUser And If xMedUser.Count Then
    txtuser1.Tag = xMedUser[0]
    txtuser1.Text = xMedUser[1]
  Else
    txtuser1.Tag = ""
    txtuser1.Text = ""
  Endif

End

Public Sub btnselectuser2_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Application User"), modBasic.$SignaUserList)
  If xMedUser And If xMedUser.Count Then
    txtuser2.Tag = xMedUser[0]
    txtuser2.Text = xMedUser[1]
  Else
    txtuser2.Tag = ""
    txtuser2.Text = ""
  Endif

End

Public Sub btnselectuser3_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Application User"), modBasic.$SignaUserList)
  If xMedUser And If xMedUser.Count Then
    txtuser3.Tag = xMedUser[0]
    txtuser3.Text = xMedUser[1]
  Else
    txtuser3.Tag = ""
    txtuser3.Text = ""
  Endif

End

'''------------------- default component ----------------------------------------
Private Sub ShowDefaultComponent()

  cmbcontitle.Text = modSettings.ShowSettingFromFIle("ReportFormat/Default_Title")
  cmbconheader.Text = modSettings.ShowSettingFromFIle("ReportFormat/Default_Header")
  cmbcontable.Text = modSettings.ShowSettingFromFIle("ReportFormat/Default_Table")
  cmbconfooter.Text = modSettings.ShowSettingFromFIle("ReportFormat/Default_Footer")

End

Public Sub btncontitle_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Default_Title", cmbcontitle.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnconheader_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Default_Header", cmbconheader.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncontable_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Default_Table", cmbcontable.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnconfooter_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Default_Footer", cmbconfooter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''--------------------------------------------------------------------------
''--------------------------------- Title -----------------------------------
Private Sub ShowTitleSett()

  txtbackground.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_BackgroundPicture")

  cmbhosp.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_HospitalName")
  cmbaddress.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_HospitalAddress")
  cmbdept.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_DepartmentName")
  txtnamefont.Text = modSettings.ShowSettingFromFIle("ReportFormat/HospitalName_Font")
  txtaddfont.Text = modSettings.ShowSettingFromFIle("ReportFormat/HospitalAddress_Font")
  txtdeptfont.Text = modSettings.ShowSettingFromFIle("ReportFormat/Department_Font")

  cmblogo.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Logo")
  txtheader.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Picture")

  If modSettings.ShowSettingFromFIle("ReportFormat/Header_LogoWidth") Then
    txtlogowidth.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/Header_LogoWidth"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/Header_LogoHeight") Then
    txtlogoheight.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/Header_LogoHeight"))
  Endif

End

Public Sub btnOkbackgrnd_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_BackgroundPicture", txtbackground.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntitle_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_HospitalName", cmbhosp.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnaddress_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_HospitalAddress", cmbaddress.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndept_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_DepartmentName", cmbhosp.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnamefont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/HospitalName_Font", txtnamefont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnaddfont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/HospitalAddress_Font", txtaddfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndeptfont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Department_Font", txtdeptfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlogo_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Logo", cmblogo.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlogodiamension_Click()

  If txtlogowidth.Text Then
    modSettings.SaveSettingsToFile("ReportFormat/Header_LogoWidth", CStr(txtlogowidth.Value))
  Endif
  If txtlogoheight.Text Then
    modSettings.SaveSettingsToFile("ReportFormat/Header_LogoHeight", CStr(txtlogoheight.Value))
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnheaderpic_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Picture", txtheader.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

'''----------------------------------------- Footer ---------------------------------------------
Private Sub ShowFooterSett()

  txtfooter.Text = modSettings.ShowSettingFromFIle("ReportFormat/Footer_Picture")
  cmbcomment.Text = modSettings.ShowSettingFromFIle("ReportFormat/ShowComment")
  cmbfootsummary.Text = modSettings.ShowSettingFromFIle("ReportFormat/ShowSummary")

  If modSettings.ShowSettingFromFIle("ReportFormat/CommentBox_Width") Then
    txtcommwidth.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/CommentBox_Width"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/CommentBox_Height") Then
    txtcommht.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/CommentBox_Height"))
  Endif

End

Public Sub btnfootpic_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Footer_Picture", txtfooter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncomment_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ShowComment", cmbcomment.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfootsummary_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ShowSummary", cmbfootsummary.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncommdiamen_Click()

  If txtcommwidth.Text Then
    modSettings.SaveSettingsToFile("ReportFormat/CommentBox_Width", CStr(txtcommwidth.Value))
  Endif
  If txtcommht.Text Then
    modSettings.SaveSettingsToFile("ReportFormat/CommentBox_Height", CStr(txtcommht.Value))
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''--------------------------------------- patient identity -----------------------------
Private Sub PatientInfo()

  cmbpatident.Text = modSettings.ShowSettingFromFIle("ReportFormat/PatientImage")
  If modSettings.ShowSettingFromFIle("ReportFormat/PatientImage_Width") Then
    txtpatimagewid.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/PatientImage_Width"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/PatientImage_Height") Then
    txtpatimageht.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/PatientImage_Height"))
  Endif

End

Public Sub btnpatident_Click()

  modSettings.SaveSettingsToFile("ReportFormat/PatientImage", cmbpatident.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpatimagediamen_Click()

  If txtpatimagewid.Text Then
    modSettings.SaveSettingsToFile("ReportFormat/PatientImage_Width", CStr(txtpatimagewid.Value))
  Endif
  If txtpatimageht.Text Then
    modSettings.SaveSettingsToFile("ReportFormat/PatientImage_Height", CStr(txtpatimageht.Value))
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''-------------------------------------------------------------------------------------
''----------------------------------- Header --------------------------------------------
Private Sub ShowHeaderInfo()

  txtheadlabel11.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label11")
  txtheadlabel12.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label12")
  txtheadlabel21.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label21")
  txtheadlabel22.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label22")
  txtheadlabel31.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label31")
  txtheadlabel32.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label32")
  txtheadlabel41.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label41")
  txtheadlabel42.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label42")
  txtheadlabel51.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label51")
  txtheadlabel52.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Label52")

  cmbhead11.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value11")
  cmbhead12.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value12")
  cmbhead21.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value21")
  cmbhead22.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value22")
  cmbhead31.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value31")
  cmbhead32.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value32")
  cmbhead41.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value41")
  cmbhead42.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value42")
  cmbhead51.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value51")
  cmbhead52.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_Value52")

  txtheadlabelfont.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_LabelFont")
  txtheadfont.Text = modSettings.ShowSettingFromFIle("ReportFormat/Header_ValueFont")

End

Public Sub btnlabelhead11_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label11", txtheadlabel11.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead11_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value11", cmbhead11.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead12_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label12", txtheadlabel12.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead12_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value12", cmbhead12.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead21_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label21", txtheadlabel21.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead21_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value21", cmbhead21.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead22_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label22", txtheadlabel22.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead22_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value22", cmbhead22.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead31_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label31", txtheadlabel31.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead31_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value31", cmbhead31.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead32_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label32", txtheadlabel32.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead32_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value32", cmbhead32.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End
'''------------------

Public Sub btnlabelhead41_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label41", txtheadlabel41.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead41_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value41", cmbhead41.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead42_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label42", txtheadlabel42.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead42_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value42", cmbhead42.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead51_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label51", txtheadlabel51.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead51_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value51", cmbhead51.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelhead52_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Label52", txtheadlabel52.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhead52_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_Value52", cmbhead52.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnheadlabelfont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_LabelFont", txtheadlabelfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnheadfont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/Header_ValueFont", txtheadfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''---------------------------------------------------------------------------------
''---------------------------------- Table design ---------------------------------
Private Sub ShowTableDesign()

  txttitlefont.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_TitleFont")
  cmbtitlealign.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_TitleAlignment")
  cmbtitledisplay.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_TitleDisplay")

  If modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth") Then
    txtwidcolall.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth_Column1") Then
    txtwidcol1.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth_Column1"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth_Column2") Then
    txtwidcol2.Value = CFloat(modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ColWidth_Column2"))
  Endif
  txtbodyfont.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ContentFont")
  txtfoncol1.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_Font_Column1")
  txtfoncol2.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_Font_Column2")
  modSettings.ShowCheckBox(chkucasetitle, "ReportFormat/ReportBody_TitleUpCase")
  cmbtextalignall.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_TextAlignment")
  cmbtextaligncol1.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_TextAlignment_Column1")
  cmbtextaligncol2.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_TextAlignment_Column2")
  cmbvertalignall.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_VerticalAlignment")
  cmbvertaligncol1.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_VerticalAlignment_Column1")
  cmbvertaligncol2.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_VerticalAlignment_Column2")
  cmblabelall.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ShowLabel")
  cmblabelcol1.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ShowLabel_Column1")
  cmblabelcol2.Text = modSettings.ShowSettingFromFIle("ReportFormat/ReportBody_ShowLabel_Column2")

End

Public Sub btntitlefont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_TitleFont", txttitlefont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntitlealign_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_TitleAlignment", cmbtitlealign.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub chkucasetitle_Click()

  modSettings.EnterCheckSetting(chkucasetitle, "ReportFormat/ReportBody_TitleUpCase")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntitledisply_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_TitleDisplay", cmbtitledisplay.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnwidcol1_Click()

  If txtwidcol1.Value Then
    modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ColWidth_Column1", CStr(txtwidcol1.Value))
  Else
    modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ColWidth_Column1", "")
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnwidcol2_Click()

  If txtwidcol2.Value Then
    modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ColWidth_Column2", CStr(txtwidcol2.Value))
  Else
    modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ColWidth_Column2", "")
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnwidcolall_Click()

  If txtwidcolall.Value Then
    modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ColWidth", CStr(txtwidcolall.Value))
  Else
    modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ColWidth", "")
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnbodyfont_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ContentFont", txtbodyfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoncol1_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_Font_Column1", txtfoncol1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoncol2_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_Font_Column2", txtfoncol2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntextalignall_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_TextAlignment", cmbtextalignall.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntextaligncol1_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_TextAlignment_Column1", cmbtextaligncol1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntextaligncol2_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_TextAlignment_Column2", cmbtextaligncol2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvertalignall_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_VerticalAlignment", cmbvertalignall.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvertaligncol1_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_VerticalAlignment_Column1", cmbvertaligncol1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvertaligncol2_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_VerticalAlignment_Column2", cmbvertaligncol2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelall_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ShowLabel", cmblabelall.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelcol1_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ShowLabel_Column1", cmblabelcol1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelcol2_Click()

  modSettings.SaveSettingsToFile("ReportFormat/ReportBody_ShowLabel_Column2", cmblabelcol2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''----------------------------------- spacing --------------------------------------------
Private Sub ShowLineSpacing()

  If modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Address_Department") Then
    txtadd_dep.Value = CInt(modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Address_Department"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Department_Header") Then
    txtdept_profile.Value = CInt(modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Department_Header"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Header_Body") Then
    txtprofile_body.Value = CInt(modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Header_Body"))
  Endif
  If modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Body_Footer") Then
    txtbody_foot.Value = CInt(modSettings.ShowSettingFromFIle("ReportFormat/BlankLines_Body_Footer"))
  Endif

End

Public Sub btnline1_Click()

  modSettings.SaveSettingsToFile("ReportFormat/BlankLines_Address_Department", CStr(txtadd_dep.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnline2_Click()

  modSettings.SaveSettingsToFile("ReportFormat/BlankLines_Department_Header", CStr(txtdept_profile.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnline3_Click()

  modSettings.SaveSettingsToFile("ReportFormat/BlankLines_Header_Body", CStr(txtprofile_body.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnline4_Click()

  modSettings.SaveSettingsToFile("ReportFormat/BlankLines_Body_Footer", CStr(txtbody_foot.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------------------------- PDF Header -----------------------------------------------
Private Sub ShowPDFVariable()

  Dim xx As String

  xx = "[page]:the number of the pages currently being printed" & "<br>"
  xx = xx & "[frompage]:the  number  of  the  first  page  to  be printed" & "<br>"
  xx = xx & "[topage]:the number of the last page to be printed" & "<br>"
  xx = xx & "[date]:the current date in system local format" & "<br>"
  xx = xx & "[time]:the current time in system local format"
  Message.Info(xx, ("OK"))

End

Public Sub bkpdfheadtext2_Click()

  ShowPDFVariable()

End

Public Sub bkpdfheadtext3_Click()

  ShowPDFVariable()

End

Public Sub bkpdfheadtext1_Click()

  ShowPDFVariable()

End

Private Sub PDFHeaderDesign()

  cmbpdfheadsource.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_Source")

  txtpdfheadtextleft.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_LeftText")
  txtpdfheadtextcenter.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_CenterText")
  txtpdfheadtextright.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_RightText")
  txtpdfheadfont.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_Font")
  cmbpdfheadline.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_Line")
  If modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_Spacing") Then
    txtpdfheadspacing.Value = CInt(modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_Spacing"))
  Endif

  modSettings.ShowCheckBox(chkpdfheadtitle, "Report" & "/PDFHeader_HTML_Title")
  modSettings.ShowCheckBox(chkpdfheadpatinfo, "Report" & "/PDFHeader_HTML_PatInfo")

  txtheadcustom.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFHeader_CustomPath")

End

Public Sub btnpdfheadfont_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_Font", txtpdfheadfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadline_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_Line", cmbpdfheadline.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadsour_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_Source", cmbpdfheadsource.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadtextleft_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_LeftText", txtpdfheadtextleft.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadtextcenter_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_CenterText", txtpdfheadtextcenter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadtextright_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_RightText", txtpdfheadtextright.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadsource_Click()

  modSettings.EnterCheckSetting(chkpdfheadtitle, "Report" & "/PDFHeader_HTML_Title")
  modSettings.EnterCheckSetting(chkpdfheadpatinfo, "Report" & "/PDFHeader_HTML_PatInfo")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadspacing_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_Spacing", CStr(txtpdfheadspacing.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadcustom_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFHeader_CustomPath", txtheadcustom.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------------------------- PDF footer -----------------------------------------------
Public Sub bkpdfoottext_Click()

  ShowPDFVariable()

End

Public Sub bkpdfoottext1_Click()

  ShowPDFVariable()

End

Public Sub bkpdfoottext2_Click()

  ShowPDFVariable()

End

Private Sub PDFFooterDesign()

  cmbpdfootsource.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_Source")

  txtpdffoottextleft.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_LeftText")
  txtpdffoottextcenter.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_CanterText")
  txtpdffoottextright.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_RightText")
  txtpdfootfont.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_Font")
  cmbpdfootline.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_Line")
  If modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_Spacing") Then
    txtpdffootspacing.Value = CInt(modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_Spacing"))
  Endif

  modSettings.ShowCheckBox(chkpdfootsigna, "Report" & "/PDFFooter_HTML_Signature")
  modSettings.ShowCheckBox(chkpdfootfoot, "Report" & "/PDFFooter_HTML_FooterImage")
  modSettings.ShowCheckBox(chkpdfootpagenum, "Report" & "/PDFFooter_HTML_PageNumber")

  txtfootcustom.Text = modSettings.ShowSettingFromFIle("Report" & "/PDFFooter_CustomPath")

End

Public Sub btnpdffoottextleft_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_LeftText", txtpdffoottextleft.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffoottextcenter_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_CanterText", txtpdffoottextcenter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffoottextright_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_RightText", txtpdffoottextright.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootfont_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_Font", txtpdfootfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootline_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_Line", cmbpdfootline.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootsour_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_Source", cmbpdfootsource.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootsource_Click()

  modSettings.EnterCheckSetting(chkpdfootsigna, "Report" & "/PDFFooter_HTML_Signature")
  modSettings.EnterCheckSetting(chkpdfootfoot, "Report" & "/PDFFooter_HTML_FooterImage")
  modSettings.EnterCheckSetting(chkpdfootpagenum, "Report" & "/PDFFooter_HTML_PageNumber")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffootspacing_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_Spacing", CStr(txtpdffootspacing.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffootcustom_Click()

  modSettings.SaveSettingsToFile("Report" & "/PDFFooter_CustomPath", txtfootcustom.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''-------------------------------------- Scripts --------------------------------
Private Sub ShowMiscelan()

  txtreposcript1.Text = modSettings.ShowSettingFromFIle("Report" & "/ExternalScript1")
  txtrepoexec1.Text = modSettings.ShowSettingFromFIle("Report" & "/Exec_ExternalScript1")
  txtreposcript2.Text = modSettings.ShowSettingFromFIle("Report" & "/ExternalScript2")
  txtrepoexec2.Text = modSettings.ShowSettingFromFIle("Report" & "/Exec_ExternalScript2")
  txtreposcript3.Text = modSettings.ShowSettingFromFIle("Report" & "/ExternalScript3")
  txtrepoexec3.Text = modSettings.ShowSettingFromFIle("Report" & "/Exec_ExternalScript3")
  txtreposcript4.Text = modSettings.ShowSettingFromFIle("Report" & "/ExternalScript4")
  txtrepoexec4.Text = modSettings.ShowSettingFromFIle("Report" & "/Exec_ExternalScript4")
  txtreposcript5.Text = modSettings.ShowSettingFromFIle("Report" & "/ExternalScript5")
  txtrepoexec5.Text = modSettings.ShowSettingFromFIle("Report" & "/Exec_ExternalScript5")

End

Public Sub btnreposcript1_Click()

  modSettings.SaveSettingsToFile("Report" & "/ExternalScript1", txtreposcript1.Text)
  modSettings.SaveSettingsToFile("Report" & "/Exec_ExternalScript1", txtrepoexec1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnreposcript2_Click()

  modSettings.SaveSettingsToFile("Report" & "/ExternalScript2", txtreposcript2.Text)
  modSettings.SaveSettingsToFile("Report" & "/Exec_ExternalScript2", txtrepoexec2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnreposcript3_Click()

  modSettings.SaveSettingsToFile("Report" & "/ExternalScript3", txtreposcript3.Text)
  modSettings.SaveSettingsToFile("Report" & "/Exec_ExternalScript3", txtrepoexec3.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnreposcript4_Click()

  modSettings.SaveSettingsToFile("Report" & "/ExternalScript4", txtreposcript4.Text)
  modSettings.SaveSettingsToFile("Report" & "/Exec_ExternalScript4", txtrepoexec4.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnreposcript5_Click()

  modSettings.SaveSettingsToFile("Report" & "/ExternalScript5", txtreposcript5.Text)
  modSettings.SaveSettingsToFile("Report" & "/Exec_ExternalScript5", txtrepoexec5.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

' '''-------------------------------- General Body templete --------------------------
' Public Sub txtnewtemplete_Click()
'
'   Dim hForm As FmTextEditReport
'
'   hForm = New FmTextEditReport(txtnewtemplete)
'   hForm.ShowModal
'
' End
'
' Private Sub GeneralBodySett()
'
'   txtnewtemplete.Text = modSettings.ShowSettingFromFIle("Report/BodyTemplete")
'
' End
'
' Public Sub btnnewtemplete_Click()
'
'   modSettings.SaveSettingsToFile("Report/BodyTemplete", txtnewtemplete.Text)
'   Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
'   ''Balloon.Delay = modBasic.$BalloonDelay
'
' End

''------------------------------------- Custom report -----------------------------------------------
Private Sub ShowCustomSetting()

  modSettings.ShowCheckBox(chkcusconsult, "CustomVariable/Consultation")
  modSettings.ShowCheckBox(chkcusbirth, "CustomVariable/BirthDetail")
  modSettings.ShowCheckBox(chkcushistory, "CustomVariable/SelectedHistory")
  modSettings.ShowCheckBox(chkessexam, "CustomVariable/SelectedExam")
  modSettings.ShowCheckBox(chkcustprocedure, "CustomVariable/ProcedureDetail")

  modSettings.ShowCheckBox(chkcustimage, "CustomVariable/CustomImages")
  modSettings.ShowCheckBox(chkcustprofile, "CustomVariable/CustomUser")
  modSettings.ShowCheckBox(chkcustrepoimage, "CustomVariable/CustomReportQR")
  modSettings.ShowCheckBox(chkcustdemograph, "CustomVariable/CustomDemographics")
  modSettings.ShowCheckBox(chkcustdischarge, "CustomVariable/CustomParagraph")

  modSettings.ShowCheckBox(chkcustTest, "CustomVariable/CustomTest")
  modSettings.ShowCheckBox(chkcustexam, "CustomVariable/CustomExam")
  modSettings.ShowCheckBox(chkcustradio, "CustomVariable/CustomRadio")
  modSettings.ShowCheckBox(chkcustcalc, "CustomVariable/CustomCalculation")
  modSettings.ShowCheckBox(chkcustsql, "CustomVariable/CustomSQLQuery")
  modSettings.ShowCheckBox(chkcustscript, "CustomVariable/CustomScripts")
  modSettings.ShowCheckBox(chkcusexec, "CustomVariable/CustomExecs")

End

Public Sub btncustsave_Click()

  modSettings.EnterCheckSetting(chkcusconsult, "CustomVariable/Consultation")
  modSettings.EnterCheckSetting(chkcusbirth, "CustomVariable/BirthDetail")
  modSettings.EnterCheckSetting(chkcushistory, "CustomVariable/SelectedHistory")
  modSettings.EnterCheckSetting(chkessexam, "CustomVariable/SelectedExam")
  modSettings.EnterCheckSetting(chkcustprocedure, "CustomVariable/ProcedureDetail")

  modSettings.EnterCheckSetting(chkcustimage, "CustomVariable/CustomImages")
  modSettings.EnterCheckSetting(chkcustprofile, "CustomVariable/CustomUser")
  modSettings.EnterCheckSetting(chkcustrepoimage, "CustomVariable/CustomReportQR")
  modSettings.EnterCheckSetting(chkcustdemograph, "CustomVariable/CustomDemographics")
  modSettings.EnterCheckSetting(chkcustdischarge, "CustomVariable/CustomParagraph")

  modSettings.EnterCheckSetting(chkcustTest, "CustomVariable/CustomTest")
  modSettings.EnterCheckSetting(chkcustexam, "CustomVariable/CustomExam")
  modSettings.EnterCheckSetting(chkcustradio, "CustomVariable/CustomRadio")
  modSettings.EnterCheckSetting(chkcustcalc, "CustomVariable/CustomCalculation")
  modSettings.EnterCheckSetting(chkcustsql, "CustomVariable/CustomSQLQuery")
  modSettings.EnterCheckSetting(chkcustscript, "CustomVariable/CustomScripts")
  modSettings.EnterCheckSetting(chkcusexec, "CustomVariable/CustomExecs")

  modBasic.LoadCustomReportSource()
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub chkselall_Click()

  chkcusconsult.Value = chkselall.Value
  chkcusbirth.Value = chkselall.Value
  chkcushistory.Value = chkselall.Value
  chkessexam.Value = chkselall.Value
  chkcustprocedure.Value = chkselall.Value

  chkcustimage.Value = chkselall.Value
  chkcustprofile.Value = chkselall.Value
  chkcustrepoimage.Value = chkselall.Value
  chkcustdemograph.Value = chkselall.Value
  chkcustdischarge.Value = chkselall.Value

  chkcustTest.Value = chkselall.Value
  chkcustexam.Value = chkselall.Value
  chkcustradio.Value = chkselall.Value
  chkcustcalc.Value = chkselall.Value
  chkcustsql.Value = chkselall.Value
  chkcustscript.Value = chkselall.Value
  chkcusexec.Value = chkselall.Value

End

''-------------------------------------- Column FOrmat ------------------------------------
Public Sub btnadduni_Click()

  cmbvarformat.Text = VarDiagnostic()

End

' Public Sub txtsqlformat_KeyPress()
'
'   modGeneralMain.InsertTexEditortData(txtsqlformat)
'
' End

Public Sub btnclear_Click()

  txtcolformatitle.Text = ""
  cmbvarformat.Text = ""
  txtcolnoformat.Value = 0
  txtsqlformat.Text = ""
  txtfiroption.Text = ""
  txtsecoption.Text = ""
  txtthirdoption.Text = ""
  chkarrlist.Value = False
  txtexposcript.Text = ""
  txtexposhell.Text = ""

End

Public Sub btnsaveformat_Click()

  modSettings.SaveSettingsToFile("ReportColumnFormat/Title", txtcolformatitle.Text)
  modSettings.SaveSettingsToFile("ReportColumnFormat/PatVariable", cmbvarformat.Text)
  modSettings.SaveSettingsToFile("ReportColumnFormat/SQLText", txtsqlformat.Text)
  modSettings.EnterCheckSetting(chkarrlist, "ReportColumnFormat/ArrayOutput")
  modSettings.SaveSettingsToFile("ReportColumnFormat/Option1", txtfiroption.Text)
  modSettings.SaveSettingsToFile("ReportColumnFormat/Option2", txtsecoption.Text)
  modSettings.SaveSettingsToFile("ReportColumnFormat/Option3", txtthirdoption.Text)
  modSettings.SaveSettingsToFile("ReportColumnFormat/ColumnID", CStr(txtcolnoformat.Value))
  modSettings.SaveSettingsToFile("ReportColumnFormat/FormatScript", txtexposcript.Text)
  modSettings.SaveSettingsToFile("ReportColumnFormat/FormatShell", txtexposhell.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub ShowColuFormat()

  txtcolformatitle.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/Title")
  cmbvarformat.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/PatVariable")
  txtsqlformat.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/SQLText")
  modSettings.ShowCheckBox(chkarrlist, "ReportColumnFormat/ArrayOutput")
  txtfiroption.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/Option1")
  If Not txtfiroption.Text Then
    txtfiroption.Text = "{ColumnData}"
  Endif
  txtsecoption.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/Option2")
  txtthirdoption.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/Option3")
  If modSettings.ShowSettingFromFIle("ReportColumnFormat/ColumnID") Then
    txtcolnoformat.Value = CInt(modSettings.ShowSettingFromFIle("ReportColumnFormat/ColumnID"))
  Endif
  txtexposcript.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/FormatScript")
  txtexposhell.Text = modSettings.ShowSettingFromFIle("ReportColumnFormat/FormatShell")

End

''--------------------------------- column visibility -------------------------------
Public Sub btnsavecolvisib_Click()

  modSettings.EnterCheckSetting(rbcustcol, "ReportColumnVisibility/VisibilityMode")
  modSettings.SaveSettingsToFile("ReportColumnVisibility/ExcludeColumns", txtcustcoldisplay.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub SHowCOluVisible()

  modSettings.ShowCheckBox(rbcustcol, "ReportColumnVisibility/VisibilityMode")
  txtcustcoldisplay.Text = modSettings.ShowSettingFromFIle("ReportColumnVisibility/ExcludeColumns")

End

''------------------------------------ column search ----------------------------------
' Private Sub SHowCOlumnSearchSetting()
'
'   Dim xcol As String
'
'   xcol = modSettings.ShowSettingFromFIle("ReportColumnSearch/Column")
'   If xcol Then
'     txtcolnosearch.Value = CInt(xcol)
'   Endif
'   txtcolsearchtext.Text = modSettings.ShowSettingFromFIle("ReportColumnSearch/String")
'
' End
'
' Public Sub btnsavecolsearch_Click()
'
'   modSettings.SaveSettingsToFile("ReportColumnSearch/Column", CStr(txtcolnosearch.Value))
'   modSettings.SaveSettingsToFile("ReportColumnSearch/String", txtcolsearchtext.Text)
'   Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
'
' End

' ''--------------------------------- Advanced Dictionary ------------------------------
' Public Sub btndtctpath_Click()
'
'   modSettings.SaveSettingsToFile("AdvancedDictionary/Path", txtdictpath.Text)
'   modBasic.$dictadvPath = txtdictpath.Text
'   lstdict.List = SHowAdvanceDictItems()
'   Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
'
' End
'
' Public Sub btndictoption_Click()
'
'   modSettings.SaveSettingsToFile("AdvancedDictionary/" & cmbdictoption.Text, txtdictoption.Text)
'   Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
'
' End
'
' Public Sub cmbdictoption_Click()
'
'   If cmbdictoption.Text Then
'     txtdictoption.Text = modSettings.ShowSettingFromFIle("AdvancedDictionary/" & cmbdictoption.Text)
'   Endif
'
' End
'
' Public Sub btndictadd_Click()
'
'   Dim ConfFile As Settings
'   Dim xpath As String
'
'   If txtdicttile.Text Then
'     xpath = modSettings.ShowSettingFromFIle("AdvancedDictionary/Path")
'     If Exist(xpath) Then
'       ConfFile = New Settings(modSettings.ShowSettingFromFIle("AdvancedDictionary/Path"))
'       ConfFile["Dictionary/" & txtdicttile.Text] = Trim(txtdictext.RichText)
'       ConfFile.Save()
'       lstdict.List = SHowAdvanceDictItems()
'       Message.Info(("Information saved"), btndictadd)
'       ''Balloon.Delay = modBasic.$BalloonDelay
'     Endif
'   Endif
'
' End
'
' Public Sub lstdict_Click()
'
'   Dim xpath As String
'
'   xpath = modSettings.ShowSettingFromFIle("AdvancedDictionary/Path")
'   If Exist(xpath) Then
'     txtdicttile.Text = lstdict.Text
'     txtdictext.RichText = modControlSub.ShowSettingValue(xpath, "Dictionary/" & lstdict.Text)
'   Endif
'
' End
'
' Private Function SHowAdvanceDictItems() As String[]
'
'   Dim xxx As String[]
'   Dim xpath As String
'   Dim ConfFile As Settings
'   Dim xtitle As String
'   Dim xkey As String
'
'   xxx = New String[]
'   xpath = modSettings.ShowSettingFromFIle("AdvancedDictionary/Path")
'   If Exist(xpath) Then
'
'     ConfFile = New Settings(xpath)
'     For Each xtitle In ConfFile.Keys
'       If xtitle = "Dictionary" Then
'         For Each xkey In ConfFile.Keys[xtitle]
'           xxx.Add(xkey)
'         Next
'       Endif
'     Next
'
'   Endif
'   Return xxx
'
' End
'

Public Sub wbButton1_Click()

  GetNormalButtons()
  IconPanel1.Index = 0
  wbButton1.Background = Color.LightGray

End

Public Sub wbButton2_Click()

  GetNormalButtons()
  IconPanel1.Index = 1
  wbButton2.Background = Color.LightGray

End

Public Sub wbButton3_Click()

  GetNormalButtons()
  IconPanel1.Index = 2
  wbButton3.Background = Color.LightGray

End

Public Sub wbButton4_Click()

  GetNormalButtons()
  IconPanel1.Index = 3
  wbButton4.Background = Color.LightGray

End

Public Sub wbButton5_Click()

  GetNormalButtons()
  IconPanel1.Index = 4
  wbButton5.Background = Color.LightGray

End

Public Sub wbButton6_Click()

  GetNormalButtons()
  IconPanel1.Index = 5
  wbButton6.Background = Color.LightGray

End

Public Sub wbButton7_Click()

  GetNormalButtons()
  IconPanel1.Index = 6
  wbButton7.Background = Color.LightGray

End

Public Sub wbButton8_Click()

  GetNormalButtons()
  IconPanel1.Index = 7
  wbButton8.Background = Color.LightGray

End

Public Sub wbButton9_Click()

  GetNormalButtons()
  IconPanel1.Index = 8
  wbButton9.Background = Color.LightGray

End

Public Sub wbButton10_Click()

  GetNormalButtons()
  IconPanel1.Index = 9
  wbButton10.Background = Color.LightGray

End

Private Sub GetNormalButtons()

  wbButton1.Background = Color.Default
  wbButton2.Background = Color.Default
  wbButton3.Background = Color.Default
  wbButton4.Background = Color.Default
  wbButton5.Background = Color.Default
  wbButton6.Background = Color.Default
  wbButton7.Background = Color.Default
  wbButton8.Background = Color.Default
  wbButton9.Background = Color.Default
  wbButton10.Background = Color.Default

End

Public Sub btnclose_Click()

  Me.Close()

End
