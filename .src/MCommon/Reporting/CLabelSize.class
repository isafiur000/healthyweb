' Gambas class file

Private $Report As New String[0]
Private ReportPath As String
Private dosid As Long
Private LabelMode As String
Private $HtmlFolder As String

Public Sub _new($dosid As Long, $LabelMode As String)

  dosid = $dosid
  LabelMode = $LabelMode
  $HtmlFolder = modHelpVariable.$htmlDirectory

End

Private Function GenerateFile() As String

  Dim res As Result
  Dim stAll As String
  Dim hCls As CLabelFreq
  Dim stockno As Long

  Dim $Line As String
  Dim ReportPart As File
  Dim sPath As String

  Dim xmode As String
  Dim xitemwid As String
  Dim xhospwid As String
  Dim xpatwid As String
  Dim itemname As String
  Dim hospname As String
  Dim patname As String
  Dim dirtext As String

  Dim xstart As String
  Dim xend As String
  Dim xfix As String
  Dim startBlank As Integer
  Dim endBlank As Integer
  Dim fixlines As Integer
  Dim xfileLines As Integer
  Dim dirlines As Integer

  xmode = modSettings.ShowSettingFromFIle("Label/PrintMode")

  If xmode = "Line" Then
    fixlines = 0
    startBlank = 0
    endBlank = 0
    xfix = modSettings.ShowSettingFromFIle("Label/FixLines")
    If xfix Then
      If CInt(xfix) > 0 Then
        fixlines = CInt(xfix)
      Endif
    Endif
    xstart = modSettings.ShowSettingFromFIle("Label/StartLines")
    If xstart Then
      If CInt(xstart) > 0 Then
        startBlank = CInt(xstart)
      Endif
    Endif
    xend = modSettings.ShowSettingFromFIle("Label/EndLines")
    If xend Then
      If CInt(xend) > 0 Then
        endBlank = CInt(xend)
      Endif
    Endif
    xfileLines = modString.GetLineInTextFile(modHelpVariable.$textDirectory &/ "label")
    dirlines = fixlines - (startBlank + xfileLines + endBlank) + 1
  Endif

  xitemwid = modSettings.ShowSettingFromFIle("LabelPrintFormat/Max_Label_Particular")
  xhospwid = modSettings.ShowSettingFromFIle("LabelPrintFormat/Max_Label_Hospital")
  xpatwid = modSettings.ShowSettingFromFIle("LabelPrintFormat/Max_Label_PatName")

  res = modDatabase.$syConn.Exec("select fldencounterval,fldroute,flditem,flddose,fldfreq,flddays,fldqtydisp,flditemtype,fldstarttime,flddirection from tblpatdosing where fldid=&1", dosid)                                                ''
  If res["flditemtype"] = "Medicines" Then
    hCls = New CLabelFreq(res["fldfreq"], LabelMode)
    stockno = GetMedicineStockID(dosid)

    If xitemwid Then
      itemname = Left(modPharmLabel.MedicineLabelName(res["flditem"]), CInt(xitemwid))
    Else
      itemname = modPharmLabel.MedicineLabelName(res["flditem"])
    Endif
    If xhospwid Then
      hospname = Left(modHelpVariable.$HospitalName, CInt(xhospwid))
    Else
      hospname = modHelpVariable.$HospitalName
    Endif
    If xpatwid Then
      patname = Left(modPatient.GetPatientNameByEnc(res["fldencounterval"]), CInt(xpatwid))
    Else
      patname = modPatient.GetPatientNameByEnc(res["fldencounterval"])
    Endif
    If xmode = "Line" Then
      If xitemwid Then
        dirtext = modString.GetWordWrapText(modPharmLabel.GetDirectionForLabel(res["fldroute"], res["flditem"], LabelMode), CInt(xitemwid), dirlines)
      Else
        dirtext = modPharmLabel.GetDirectionForLabel(res["fldroute"], res["flditem"], LabelMode)
      Endif
    Else
      dirtext = modPharmLabel.GetDirectionForLabel(res["fldroute"], res["flditem"], LabelMode)
    Endif

    If xmode = "Line" Then
      ReportPart = Open modHelpVariable.$textDirectory &/ "label" For Input
      modBasic.DebugString("Open File " & modHelpVariable.$textDirectory &/ "label")
    Else
      ReportPart = Open $HtmlFolder &/ "label.tpl" For Input
      modBasic.DebugString("Open File " & $HtmlFolder &/ "label.tpl")
    Endif

    While Not Eof(ReportPart)
      Line Input #ReportPart, $Line

      If (String.InStr($Line, "PatientName") > 0) Then
        $Line = Replace($Line, "{PatientName}", patname)
      Endif
      If (String.InStr($Line, "Location") > 0) Then
        $Line = Replace($Line, "{Location}", modPatient.GetPatientLocation(res["fldencounterval"]))
      Endif
      If (String.InStr($Line, "Encounter") > 0)
        $Line = Replace($Line, "{Encounter}", CStr(res["fldencounterval"]))
      Endif

      If (String.InStr($Line, "MedicineName") > 0) Then
        $Line = Replace($Line, "{MedicineName}", itemname)
      Endif
      If (String.InStr($Line, "Quantity") > 0) Then
        $Line = Replace($Line, "{Quantity}", "[" & CStr(res["fldqtydisp"]) & "]")
      Endif

      If stockno Then
        If (String.InStr($Line, "Batch") > 0) Then
          $Line = Replace($Line, "{Batch}", modStock.GetBatchFromStockNo(stockno))
        Endif
        If (String.InStr($Line, "Expiry") > 0) Then
          $Line = Replace($Line, "{Expiry}", modReportVar.GetDateTimeReport(modStock.GetExpiryFromStockNo(stockno), gb.MediumDate))
        Endif
      Else
        If (String.InStr($Line, "Batch") > 0) Then
          $Line = Replace($Line, "{Batch}", "")
        Endif
        If (String.InStr($Line, "Expiry") > 0) Then
          $Line = Replace($Line, "{Expiry}", "")
        Endif
      Endif

      If (String.InStr($Line, "PhysicianAdvice") > 0) Then
        $Line = Replace($Line, "{PhysicianAdvice}", res["flddirection"])
      Endif
      If (String.InStr($Line, "Directions") > 0) Then
        $Line = Replace($Line, "{Directions}", dirtext)
      Endif
      If (String.InStr($Line, "DireFnt") > 0) Then
        $Line = Replace($Line, "{DireFnt}", modPharmLabel.GetDirectionFontForLabel(res["fldroute"], res["flditem"], LabelMode))
      Endif
      If (String.InStr($Line, "Precautions") > 0) Then
        $Line = Replace($Line, "{Precautions}", hCls.PrecaytionText())
      Endif
      If (String.InStr($Line, "PrecFnt") > 0) Then
        $Line = Replace($Line, "{PrecFnt}", hCls.PrecautionFont())
      Endif

      If modBasic.$DispLabelRegimen = "No" Then
        If (String.InStr($Line, "Dose") > 0) Then
          $Line = Replace($Line, "{Dose}", "")
        Endif
        If (String.InStr($Line, "DosageForm_Font") > 0) Then
          $Line = Replace($Line, "{DosageForm_Font}", "")
        Endif
        If (String.InStr($Line, "DosageForm") > 0) Then
          $Line = Replace($Line, "{DosageForm}", "")
        Endif
        If (String.InStr($Line, "Every_Font") > 0) Then
          $Line = Replace($Line, "{Every_Font}", "")
        Endif
        If (String.InStr($Line, "Every") > 0) Then
          $Line = Replace($Line, "{Every}", "")
        Endif
        If (String.InStr($Line, "Frequency") > 0) Then
          $Line = Replace($Line, "{Frequency}", "")
        Endif
        If (String.InStr($Line, "Frequency_Font") > 0) Then
          $Line = Replace($Line, "{Frequency_Font}", "")
        Endif
        If (String.InStr($Line, "Interval") > 0) Then
          $Line = Replace($Line, "{Interval}", "")
        Endif
        If (String.InStr($Line, "Difference_Font") > 0) Then
          $Line = Replace($Line, "{Difference_Font}", "")
        Endif
        If (String.InStr($Line, "Difference") > 0) Then
          $Line = Replace($Line, "{Difference}", "")
        Endif
        If (String.InStr($Line, "Duration") > 0) Then
          $Line = Replace($Line, "{Duration}", "")
        Endif
        If (String.InStr($Line, "Days_Font") > 0) Then
          $Line = Replace($Line, "{Days_Font}", "")
        Endif
        If (String.InStr($Line, "Days") > 0) Then
          $Line = Replace($Line, "{Days}", "")
        Endif

      Else
        If (String.InStr($Line, "Dose") > 0) Then
          $Line = Replace($Line, "{Dose}", modPharmLabel.GetQuantityLabel(res["flddose"], res["flditem"], LabelMode))
        Endif
        If (String.InStr($Line, "DosageForm_Font") > 0) Then
          $Line = Replace($Line, "{DosageForm_Font}", modPharmLabel.GetDosageFontForLabel(res["flditem"], LabelMode))
        Endif
        If (String.InStr($Line, "DosageForm") > 0) Then
          $Line = Replace($Line, "{DosageForm}", modPharmLabel.GetDosageFormForLabel(res["flditem"], LabelMode))
        Endif
        If (String.InStr($Line, "Every_Font") > 0) Then
          $Line = Replace($Line, "{Every_Font}", modPharmLabel.GetLabelFontFromDB("Every", LabelMode))
        Endif
        If (String.InStr($Line, "Every") > 0) Then
          $Line = Replace($Line, "{Every}", modPharmLabel.GetLabelWordsFromDB("Every", LabelMode))
        Endif
        If (String.InStr($Line, "Frequency") > 0) Then
          $Line = Replace($Line, "{Frequency}", hCls.HourValue())
        Endif
        If (String.InStr($Line, "Frequency_Font") > 0) Then
          $Line = Replace($Line, "{Frequency_Font}", hCls.HourLabelFont())
        Endif
        If (String.InStr($Line, "Interval") > 0) Then
          $Line = Replace($Line, "{Interval}", hCls.HourLabelText())
        Endif
        If (String.InStr($Line, "Difference_Font") > 0) Then
          $Line = Replace($Line, "{Difference_Font}", modPharmLabel.GetLabelFontFromDB("Difference", LabelMode))
        Endif
        If (String.InStr($Line, "Difference") > 0) Then
          $Line = Replace($Line, "{Difference}", modPharmLabel.GetLabelWordsFromDB("Difference", LabelMode))
        Endif
        If (String.InStr($Line, "Duration") > 0) Then
          $Line = Replace($Line, "{Duration}", CStr(res["flddays"]))
        Endif
        If (String.InStr($Line, "Days_Font") > 0) Then
          $Line = Replace($Line, "{Days_Font}", modPharmLabel.GetLabelFontFromDB("Day", LabelMode))
        Endif
        If (String.InStr($Line, "Days") > 0) Then
          $Line = Replace($Line, "{Days}", modPharmLabel.GetLabelWordsFromDB("Day", LabelMode))
        Endif
      Endif

      If (String.InStr($Line, "HospitalName") > 0)
        $Line = Replace($Line, "{HospitalName}", hospname)
      Endif
      If (String.InStr($Line, "Date") > 0) Then
        $Line = Replace($Line, "{Date}", modReportVar.GetDateTimeReport(res["fldstarttime"], gb.MediumDate))
      Endif
      If (String.InStr($Line, "Route") > 0) Then
        $Line = Replace($Line, "{Route}", res["fldroute"])
      Endif

      $Report.Add($Line)
    Wend

    If xmode = "Line" Then
      stAll = ""
      If startBlank Then
        stAll = stAll & modString.BlankLines(startBlank).Join(gb.NewLine) & gb.NewLine
      Endif
      stAll = stAll & $Report.Join(gb.NewLine) & gb.NewLine
      If endBlank Then
        stAll = stAll & modString.BlankLinesLast(endBlank).Join(gb.NewLine)
      Endif

      ReportPath = Temp() & ".txt"
      File.Save(ReportPath, stAll)

    Else
      ReportPath = Temp() & ".html"
      File.Save(ReportPath, $Report.Join(gb.NewLine))
    Endif
    sPath = modControlSub.PrePrintFormatting(ReportPath, "LabelSize")
    Return sPath

  Endif 'for medicine only
  $Report.Clear()

End

Private Function GetMedicineStockID(xdosid As Long) As Long

  Dim res As Result
  Dim stockno As Long

  res = modDatabase.$myConn.Exec("select flditemno from tblpatbilling where fldparent=&1 and flditemtype=&2 and flditemname=&3", xdosid, "Medicines", modPharmacy.GetStockIDFromDosing(dosid))
  If res.Available Then
    res.MoveFirst
    stockno = res["flditemno"]
    Return stockno
  Endif

End

Public Function LabelPath() As String

  Return GenerateFile()

End
