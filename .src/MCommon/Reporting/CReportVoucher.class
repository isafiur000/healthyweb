' Gambas class file

Private ReportPath As String 'Path to report
Private $Body As New String[0]
Public UserData As New Collection

Private Template As String
Private Columns As String[]
Private TextAlign As String
Private Width As Integer

Public Sub _new(hColumns As String[])

  Columns = hColumns
  Template = modHelpVariable.$htmlDirectory
  modReportVar.$ReportHash = ""

End

Public Sub Add(col_content As String[])

  Dim counter As Integer
  Dim xcolalign As String

  If Not (col_content.Count = Columns.Count) Then
    Error.Raise("col_content must be equivalent to Columns")
  Endif

  $Body.Add("  <tr>" & gb.NewLine)
  For counter = 0 To Columns.Count - 1
    xcolalign = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign" & CStr(counter + 1))
    If xcolalign Then
      $Body.Add("    <td style='text-align: " & xcolalign & ";'>" & col_content[counter] & "</td>" & gb.NewLine)                                                                             ''
    Else
      $Body.Add("    <td>" & col_content[counter] & "</td>" & gb.NewLine)
    Endif
  Next
  $Body.Add("  </tr>" & gb.NewLine)

End

Private Function BillTitle() As String[]

  Dim repo As String[]
  Dim xtitle As String

  repo = New String[]
  xtitle = modSettings.ShowSettingFromFIle("Invoice/Default_Title")
  If xtitle And If xtitle = "BuiltIn" Then
    repo.Add(t_replace(modRepoTemplete.GetInvoiceTitleTemplete()))
  Else
    repo.Add(t_ReadPart("voucher_title.tpl"))
  Endif

  Return repo

End

Private Function BillHeader() As String[]

  Dim repo As String[]

  repo = New String[]
  repo.Add(t_ReadPart("voucher_header.tpl"))
  Return repo

End

Private Function BillTypeString() As String

  Dim xx As String

  xx = t_replace(modRepoTemplete.GetInvoiceBillType())
  Return xx

End

Private Function BillFooter() As String[]

  Dim repo As String[]

  repo = New String[]
  repo.Add(t_ReadPart("voucher_footer.tpl"))
  Return repo

End

Private Function BillBody() As String[]

  Dim counter As Integer = 0
  Dim xx As String
  Dim repo As String[]
  Dim colStr As String

  Dim xbackpic As String
  Dim xcoltit As String
  Dim xcoltitfont As String
  Dim xcolwid As String

  repo = New String[]
  If (TextAlign = "") Then
    TextAlign = "left"
  Endif

  If (Width = 0) Then
    Width = 100
  Endif

  xbackpic = modSettings.ShowSettingFromFIle("Invoice/Body_BackgroundPicture")
  If xbackpic Then
    xx = " background=" & xbackpic
  Else
    xx = ""
  Endif

  repo.Add(modReportVar.BlankLinesAccSetting("Invoice/BlankLines_Header_Body"))
  repo.Add(t_ReadPart("voucher_template.tpl"))

  repo.Add("  <table " & xx & " class='report_table' style='text-align: " & TextAlign & "; width: " & Width & "%;' id='bodytable'>")
  repo.Add("    <thead>")   ''use when webkit bug solved
  repo.Add("    <tr>")

  xcoltit = modSettings.ShowSettingFromFIle("Invoice/ShowColumnTitle")
  xcoltitfont = modSettings.ShowSettingFromFIle("Invoice/ColumnTitle_Font")
  For counter = 0 To Columns.Count - 1
    If xcoltit And If xcoltit = "No" Then
      colStr = ""
    Else
      colStr = Columns[counter]
      If xcoltitfont Then
        colStr = modString.GetFormatTextFontString(colStr, xcoltitfont)
      Endif
    Endif

    xcolwid = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth" & CStr(counter + 1) & "_Value")
    If xcolwid Then
      repo.Add("      <td class='report_table_h' style='width: " & CInt(xcolwid) & modSettings.ShowSettingFromFIle("Invoice/ColumnWidth" & CStr(counter + 1) & "_Unit") & ";'>" & colStr & "</td>")                   ''
    Else
      repo.Add("      <td class='report_table_h'>" & colStr & "</td>")
    Endif
  Next
  repo.Add("    <tr>")
  repo.Add("    </thead>")

  repo.Add("    <tbody>")
  repo.Insert($Body)
  repo.Add("    </tbody>")
  repo.Add("  </table>")
  repo.Add(modReportVar.BlankLinesAccSetting("Invoice/BlankLines_Body_Footer"))

  Return repo

End

Private Function t_ReadPart(T_File As String) As String

  Dim sLine As String
  Dim repo As String

  If Exist(Template &/ T_File) Then
    sLine = File.Load(Template &/ T_File)
    repo = t_replace(sLine)
  Endif

  Return repo

End

Private Function t_replace(sLine As String) As String

  Dim KeyValue As String

  sLine = modReportVar.GetReportVarTitle(sLine)
  'collection
  For Each KeyValue In UserData
    If (String.InStr(sLine, UserData.Key) > 0) Then
      sLine = Replace(sLine, "{" & UserData.Key & "}", KeyValue)
    Endif
  Next

  Return sLine

End

Private Sub MakeHTMLFile()

  Dim $Report As String[]

  $Report = New String[]
  $Report.Add(modRepoTemplete.TitleHTMLScript())
  $Report.Add(modReportVar.$TitleStart)
  $Report.Insert(BillTitle())
  $Report.Add(BillTypeString())
  $Report.Add(modReportVar.$TitleEnd)
  $Report.Add(modReportVar.$HeaderStart)
  $Report.Insert(BillHeader())
  $Report.Add(modReportVar.$HeaderEnd)
  $Report.Add(modReportVar.$BodyStart)
  $Report.Insert(BillBody())
  $Report.Add(modReportVar.$BodyEnd)
  $Report.Add(modReportVar.$FooterStart)
  $Report.Insert(BillFooter())
  $Report.Add(modReportVar.$FooterEnd)
  $Report.Add(modReportVar.$FootImageStart)
  $Report.Add(modRepoTemplete.InvoiceFootImage())
  $Report.Add(modReportVar.$FootImageEnd)
  $Report.Add(modRepoTemplete.EndTemplete())

  ReportPath = Temp() & ".html"
  File.Save(ReportPath, $Report.Join(gb.NewLine))

End

Public Function NewHTMLPath() As String

  If modHelpVariable.$ApplKey < 2 Then
    MakeHTMLFile()
    Return ReportPath
  Endif

End

Public Sub Preview(strSize As String)

  If modHelpVariable.$ApplKey < 2 Then
    MakeHTMLFile()
    modPrint.PrintPopUp("Voucher", ReportPath, strSize)
  Else
    Message.Warning(("HTML Report disabled. Please insert validation key"), ("OK"))
  Endif

End
