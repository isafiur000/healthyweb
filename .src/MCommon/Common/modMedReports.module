' Gambas module file

''------------------------------------- variables ---------------------------------------
Public Sub WeightGroupGeneralList() As String[]

  Dim hFile As File
  Dim sline As String
  Dim agegrp As String[]
  Dim xxx As String[]

  xxx = New String[]
  If Not Exist(modHelpVariable.AppDirectory &/ "weightgrouping") Then
    Message.Warning(("Weight Grouping not set"), ("OK"))
    Return
  Endif

  hFile = Open modHelpVariable.AppDirectory &/ "weightgrouping"
  modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "weightgrouping")
  For Each sline In hFile.Lines
    If Len(sline) Then
      agegrp = Split(sline, ";")
      xxx.Add(agegrp[0] & ";" & agegrp[1] & ";" & agegrp[2])
    Endif
  Next
  hFile.Close()
  Return xxx

End

Public Sub AgeGroupGeneralList() As String[]

  Dim hFile As File
  Dim sline As String
  Dim agegrp As String[]
  Dim xxx As String[]

  xxx = New String[]
  If Exist(modHelpVariable.AppDirectory &/ "agegrouping") And If modSettings.ShowSettingFromFIle("AgeGrouping/Custom") = "Yes" Then
    hFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
    modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
    For Each sline In hFile.Lines
      If Len(sline) Then
        agegrp = Split(sline, ";")
        xxx.Add(agegrp[0] & ";" & agegrp[1] & ";" & agegrp[2])
      Endif
    Next
    hFile.Close()

  Else
    xxx.Add("Neonate;0;30")
    xxx.Add("Infant;30;365")
    xxx.Add("Toddler;365;730")
    xxx.Add("Children;730;4380")
    xxx.Add("Adolescent;4380;7300")
    xxx.Add("Adult;7300;21900")
    xxx.Add("Elderly;21900;43800")
  Endif

  Return xxx

End

Public Sub AgeGroupNameList() As String[]

  Dim hFile As File
  Dim sline As String
  Dim agegrp As String[]
  Dim xxx As String[]

  xxx = New String[]
  If Exist(modHelpVariable.AppDirectory &/ "agegrouping") And If modSettings.ShowSettingFromFIle("AgeGrouping/Custom") = "Yes" Then
    hFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
    modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
    For Each sline In hFile.Lines
      If Len(sline) Then
        agegrp = Split(sline, ";")
        xxx.Add(agegrp[0])
      Endif
    Next
    hFile.Close()

  Else
    xxx.Add("Neonate")
    xxx.Add("Infant")
    xxx.Add("Toddler")
    xxx.Add("Children")
    xxx.Add("Adolescent")
    xxx.Add("Adult")
    xxx.Add("Elderly")
  Endif

  Return xxx

End

Public Sub AgeGroupGenderList() As String[]

  Dim hFile As File
  Dim sline As String
  Dim agegrp As String[]
  Dim xxx As String[]

  xxx = New String[]
  If Exist(modHelpVariable.AppDirectory &/ "agegrouping") And If modSettings.ShowSettingFromFIle("AgeGrouping/Custom") = "Yes" Then
    hFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
    modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
    For Each sline In hFile.Lines
      If Len(sline) Then
        agegrp = Split(sline, ";")
        xxx.Add(agegrp[0] & ":" & "Female")
        xxx.Add(agegrp[0] & ":" & "Male")
      Endif
    Next
    hFile.Close()

  Else
    xxx.Add("Neonate" & ":Female")
    xxx.Add("Neonate" & ":Male")
    xxx.Add("Infant" & ":Female")
    xxx.Add("Infant" & ":Male")
    xxx.Add("Toddler" & ":Female")
    xxx.Add("Toddler" & ":Male")
    xxx.Add("Children" & ":Female")
    xxx.Add("Children" & ":Male")
    xxx.Add("Adolescent" & ":Female")
    xxx.Add("Adolescent" & ":Male")
    xxx.Add("Adult" & ":Female")
    xxx.Add("Adult" & ":Male")
    xxx.Add("Elderly" & ":Female")
    xxx.Add("Elderly" & ":Male")
  Endif
  Return xxx

End

Public Function GetAgeValuefromgroup(agegroup As String) As String

  Dim hFile As File
  Dim sline As String
  Dim agegrp As String[]
  Dim xx As String

  If Exist(modHelpVariable.AppDirectory &/ "agegrouping") And If modSettings.ShowSettingFromFIle("AgeGrouping/Custom") = "Yes" Then
    hFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
    modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
    For Each sline In hFile.Lines
      If Len(sline) Then
        agegrp = Split(sline, ";")
        If agegrp[0] = agegroup Then
          xx = agegrp[1] & ";" & agegrp[2]
        Endif
      Endif
    Next
    hFile.Close()

  Else
    If agegroup = "Neonate" Then
      xx = "0" & ";" & "30"
    Else If agegroup = "Infant" Then
      xx = "30" & ";" & "365"
    Else If agegroup = "Toddler" Then
      xx = "365" & ";" & "730"
    Else If agegroup = "Children" Then
      xx = "730" & ";" & "4380"
    Else If agegroup = "Adolescent" Then
      xx = "4380" & ";" & "7300"
    Else If agegroup = "Adult" Then
      xx = "7300" & ";" & "21900"
    Else If agegroup = "Elderly" Then
      xx = "21900" & ";" & "43800"
    Endif
  Endif
  Return xx

End

Public Sub AgeGroupList() As String[]

  Dim hFile As File
  Dim sline As String
  Dim agegrp As String[]
  Dim xxx As String[]
  Dim xtot As String
  Dim xset As String

  xset = modSettings.ShowSettingFromFIle("HealthReport/ShowGender")
  xtot = modSettings.ShowSettingFromFIle("HealthReport/ShowTotal")
  xxx = New String[]
  If Exist(modHelpVariable.AppDirectory &/ "agegrouping") And If modSettings.ShowSettingFromFIle("AgeGrouping/Custom") = "Yes" Then
    hFile = Open modHelpVariable.AppDirectory &/ "agegrouping"
    modBasic.DebugString("Open File " & modHelpVariable.AppDirectory &/ "agegrouping")
    For Each sline In hFile.Lines
      If Len(sline) Then
        agegrp = Split(sline, ";")
        If xset = "No" Then
        Else
          xxx.Add(agegrp[0] & ";Male;" & agegrp[1] & ";" & agegrp[2])
          xxx.Add(agegrp[0] & ";Female;" & agegrp[1] & ";" & agegrp[2])
        Endif
        If xtot = "No" Then
        Else
          xxx.Add(agegrp[0] & ";%;" & agegrp[1] & ";" & agegrp[2])
        Endif
      Endif
    Next
    hFile.Close()

  Else
    If xset = "No" Then
    Else
      xxx.Add("Neonate" & ";Male;" & "0" & ";" & "30")
      xxx.Add("Neonate" & ";Female;" & "0" & ";" & "30")
      xxx.Add("Infant" & ";Male;" & "30" & ";" & "365")
      xxx.Add("Infant" & ";Female;" & "30" & ";" & "365")
      xxx.Add("Toddler" & ";Male;" & "365" & ";" & "730")
      xxx.Add("Toddler" & ";Female;" & "365" & ";" & "730")
      xxx.Add("Children" & ";Male;" & "730" & ";" & "4380")
      xxx.Add("Children" & ";Female;" & "730" & ";" & "4380")
      xxx.Add("Adolescent" & ";Male;" & "4380" & ";" & "7300")
      xxx.Add("Adolescent" & ";Female;" & "4380" & ";" & "7300")
      xxx.Add("Adult" & ";Male;" & "7300" & ";" & "21900")
      xxx.Add("Adult" & ";Female;" & "7300" & ";" & "21900")
      xxx.Add("Elderly" & ";Male;" & "21900" & ";" & "43800")
      xxx.Add("Elderly" & ";Female;" & "21900" & ";" & "43800")
    Endif
    If xtot = "Yes" Then
      xxx.Add("Neonate" & ";%;" & "0" & ";" & "30")
      xxx.Add("Infant" & ";%;" & "30" & ";" & "365")
      xxx.Add("Toddler" & ";%;" & "365" & ";" & "730")
      xxx.Add("Children" & ";%;" & "730" & ";" & "4380")
      xxx.Add("Adolescent" & ";%;" & "4380" & ";" & "7300")
      xxx.Add("Adult" & ";%;" & "7300" & ";" & "21900")
      xxx.Add("Elderly" & ";%;" & "21900" & ";" & "43800")
    Endif

  Endif

  Return xxx

End

Public Function GetPatientCount($con As Connection, sDept As String, sStatus As String, sDate1 As Date, sDate2 As Date, sGender As String, sVisit As String) As Integer

  Dim res As Result
  Dim xx As Integer
  Dim coltime As String
  Dim status As String

  Select sStatus
    Case "Admitted"
      coltime = "flddoa"
      status = "%"
    Case "Discharged", "LAMA", "Death", "Refer", "Absconder"
      coltime = "flddod"
      status = sStatus
    Case Else
      coltime = "fldregdate"
      status = "%"
  End Select

  res = $con.Exec("select count(fldencounterval) as mtot from tblencounter where " & coltime & ">=&1 and " & coltime & "<=&2 and fldadmitlocat like &3 and fldadmission like &4 and fldvisit like &5 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &6)", modDate.StartSqlDate(sDate1), modDate.EndSqlDate(sDate2), sDept, status, sVisit, sGender)                                                    ''
  If res.Available Then
    xx = res!mtot
  Else
    xx = 0
  Endif
  Return xx

End

Public Function GetColumnEncounter(sType As String) As String

  Dim xval As String

  If sType = "Gender" Then
    xval = "tblpatientinfo.fldptsex"
  Else If sType = "Surname" Then
    xval = "tblpatientinfo.fldptnamelast"
  Else If sType = "Ethnic Group" Then
    xval = "tblpatientinfo.fldethniccode"
  Else If sType = "District" Then
    xval = "tblpatientinfo.fldptadddist"
  Else If sType = "Municipality" Then
    xval = "tblpatientinfo.fldptaddvill"
  Else If sType = "Service Rank" Then
    xval = "tblpatientinfo.fldrank"
  Else If sType = "Service Unit" Then
    xval = "tblpatientinfo.fldunit"
  Else If sType = "Service Category" Then
    xval = "tblpatientinfo.fldcategory"

  Else If sType = "Regd Department" Then
    xval = "tblencounter.fldadmitlocat"
  Else If sType = "Rate Plan" Then
    xval = "tblencounter.fldbillingmode"
  Else If sType = "Package" Then
    xval = "tblencounter.flddisctype"
  Else If sType = "Regd location" Then
    xval = "tblencounter.fldcomp"
  Else If sType = "Last Status" Then
    xval = "tblencounter.fldadmission"
  Else If sType = "Visit Type" Then
    xval = "tblencounter.fldvisit"
  Else If sType = "Visit Mode" Then
    xval = "tblencounter.fldfollow"
  Else If sType = "Consultant" Then
    xval = "tblencounter.flduserid"
  Else If sType = "Hospital" Then
    xval = "tblencounter.fldhospcode"

    ''tblconsult
  Else If sType = "OPD Department" Then
    xval = "tblconsult.fldconsultname"
  Else If sType = "OPD Consultant" Then
    xval = "tblconsult.flduserid"
  Else If sType = "OPD Rate Plan" Then
    xval = "tblconsult.fldbillingmode"
  Else If sType = "OPD Outcome" Then
    xval = "tblconsult.fldoutcome"

    ''tblopvisit
  Else If sType = "Visit Department" Then
    xval = "tblopvisit.fldconsultname"
  Else If sType = "Visit Rate Plan" Then
    xval = "tblopvisit.fldbillingmode"
  Else If sType = "Visit Outcome" Then
    xval = "tblopvisit.fldoutcome"

  Endif
  Return xval

End

''--------------------- copied from modPatient------------------------------
Public Function GetPatientEncFromID(tbl As String, id As Variant) As String

  Dim sql As String
  Dim res As Result
  Dim xenc As String
  Dim sid As String
  Dim sencid As String

  Select Case tbl
    Case "tblencounter"
      sid = "fldencounterval"
      sencid = "fldencounterval"
    Case Else
      sid = "fldid"
      sencid = "fldencounterval"
  End Select

  sql = Subst("select &1 as fldencid from &2 where &3", sencid, tbl, sid)
  res = modDatabase.$myConn.Exec(sql & "=&1", id)
  If res.Available Then
    If res["fldencid"] Then
      xenc = res["fldencid"]
    Else
      xenc = ""
    Endif
  Else
    xenc = ""
  Endif
  Return xenc

End

Public Function GetTableTimeField(sTable As String) As String

  Dim stime As String

  Select Case sTable
    Case "tblpatfindings", "tblpatientexam", "tblexamgeneral", "tblpatgeneral", "tblpatsubgeneral", "tblpataccgeneral", "tblpatplanning", "tblpatientdate", "tbladvreceiptdetail", "tblcashsources", "tblclaimcode", "tbldrugproblems", "tblduebilldetail", "tblgenviolence", "tblmedinventory", "tblmonitor", "tblnurdosing", "tblobstetrics", "tblpatbilldetail", "tblpatcharity", "tblpatdoseremote", "tblpatgenshare", "tblpatreport", "tblpatserialimage", "tblpatusershares", "tbltempbilldetail", "tblvaccdosing"
      stime = "fldtime"
    Case "tblduebilling", "tblpatbilling", "tbltelemedtalk"
      stime = "fldordtime"
    Case "tblpatdosing", "tblpatmeditem"
      stime = "fldtime_order"
    Case "tblpatlabtest"
      stime = "fldtime_sample"
    Case "tblpatradiotest"
      stime = "fldtime_report"
    Case "tblpattiming", "tblpatevents"
      stime = "fldfirsttime"
    Case "tblconsult", "tblopvisit"
      stime = "fldconsulttime"
    Case "tblconfinement"
      stime = "flddeltime"
    Case "tblencounter"
      stime = "fldregdate"
    Case "tblpatientinfo"
      stime = "fldptadmindate"
    Case "tblextradosing"
      stime = "flddosetime"
    Case Else
      If modBasic.$YearlabtestList.Exist(sTable) Then
        stime = "fldtime_sample"
      Else If modBasic.$YearpatexamList.Exist(sTable) Then
        stime = "fldtime"
      Endif
  End Select

  Return stime

End

Public Function GetPatientPastAgeString(sTable As String, id As Variant) As String

  Dim sql As String
  Dim res As Result
  Dim xage As String
  Dim sid As String
  Dim stime As String
  Dim sencid As String
  Dim xdate As Date

  If sTable = "tblencounter" Then
    sid = "fldencounterval"
  Else
    If MMain.$WebEntry = True Then
      sid = "fldrepoid"
    Else
      sid = "fldid"
    Endif
  Endif
  sencid = "fldencounterval"
  stime = GetTableTimeField(sTable)

  sql = Subst("select &1 as fldencid,&2 as fldtime from &3 where &4", sencid, stime, sTable, sid)
  res = modDatabase.$syConn.Exec(sql & "=&1", id)
  If res.Available Then
    xdate = modPatient.GetPatientBirthDay(res["fldencid"], modDatabase.$syConn)
    If xdate Then
      xage = modDate.GetAgeString(xdate, res["fldtime"])
    Else
      xage = "?"
    Endif
  Else
    xage = ""
  Endif
  Return xage

End

Public Function GetAgeStringByTable(sTable As String, $con As Connection) As String

  Dim xdtstr As String
  Dim stime As String

  stime = GetTableTimeField(sTable)
  xdtstr = modDate.GetSQLDateDiffStr(sTable & "." & stime, "tblpatientinfo.fldptbirday", $con)

  Return xdtstr

End
