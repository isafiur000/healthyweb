' Gambas class file

Private $ItemList As String[]
Private $rData As Result
Private $aMyFields As String[]
Private $SSQLFields As String[]

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String

Public Sub _new()

  Dim xhospfld As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      Panel8.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif
  Else
    Panel8.Visible = False
  Endif

  cmbroute.List = modMedicine.RouteMedicine()
  cmbroute.Add("%")
  cmbroute.Text = "%"
  cmbfreq.List = modMedicine.FrequencyCombo()
  cmbfreq.Add("%")
  cmbfreq.Text = "%"
  cmbgender.List = ["Male", "Female", "Other", "%"]
  cmbgender.Text = "%"
  cmbstatus.List = ["Dispensed", "All Types"]
  cmbstatus.Text = "All Types"
  cmbcategory.List = modMedicine.GetMedCategoryList()
  cmbcategory.Text = "%"

  dtfir.Value = Now()
  dtlast.Value = Now()
  rbcomb.Value = True
  rball.Value = True

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldid", "fldencounterval", "fldencounterval", modDataRepo.SerialField(), "fldencounterval", "fldencounterval", "fldtime", "flditem", "flddose", "fldfreq", "flddays", "fldprescriber", "fldregno"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif
  chkgrid.Value = True

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub cmblocation_Click()

  cmbvalue.Clear()
  If cmblocation.Text Then
    cmbvalue.List = modDataRepo.GetRepoValueListType(cmblocation.Text)
  Endif

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnrefresh_Click()

  Dim res As Result
  Dim res1 As Result

  $ItemList = New String[]
  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  If MMain.$WebReport = "Multiple" Then
    res1 = modDatabase.$syConn.Exec("select distinct(fldstockid) as col from tblentry where fldcategory=&1" & $RepoStr, "Medicines")
    $ItemList = modControlSub.GetDirectFillresult(res1)
    chkpattern.Value = True
  Else
    If cmbcategory.Text And If cmbcategory.Text <> "%" Then
      If rbnarco.Value = True Then
        res = modDatabase.$syConn.Exec("select distinct(fldcodename) as col from tbldrug where flddrug in(select flddrug from tblmedbrand where fldnarcotic=&1) and fldcodename in(select fldcodename from tblcode where fldcategory=&2)", "Yes", cmbcategory.Text)
      Else
        res = modDatabase.$syConn.Exec("select distinct(fldcodename) as col from tbldrug where fldcodename in(select fldcodename from tblcode where fldcategory=&1)", cmbcategory.Text)
      Endif
    Else
      If rbnarco.Value = True Then
        res = modDatabase.$syConn.Exec("select distinct(fldcodename) as col from tbldrug where flddrug in(select flddrug from tblmedbrand where fldnarcotic=&1)", "Yes")
      Else
        res = modDatabase.$syConn.Exec("select distinct(fldcodename) as col from tbldrug")
      Endif
    Endif
    If res.Available Then
      $ItemList = modControlSub.GetDirectFillresult(res)
      chkpattern.Value = False
    Endif
  Endif
  FillListBox()

End

Private Sub FillListBox()

  Dim xList As String[]

  If $ItemList Then
    If txtcustom.Text Then
      xList = modString.SelectStringArrayToText(txtcustom.Text, $ItemList)
    Else
      xList = $ItemList
    Endif
    If xList Then
      ListBox1.List = xList.Sort()
    Else
      ListBox1.Clear()
    Endif
  Endif

End

Public Sub txtcustom_Change()

  FillListBox()

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Public Sub mnuaddcolumn_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnusearch_Click()

  Dim encid As String
  Dim sql As String
  Dim xFldList As String[]

  encid = GetEncid()
  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  If encid Then
    xFldList = GetSQLColumns()
    sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldencounterval=&1" & $RepoStr
    $rData = modDatabase.$syConn.Exec(sql, encid)
    FillTransferGrid()
  Endif

End

Public Sub mnusearname_Click()

  Dim xname As String[]
  Dim sql As String
  Dim xFldList As String[]

  xname = InputDoubleText(("Search Patient Name"), ["First Name", "SurName"], ["%", "%"], modBasic.$SurNameList)
  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  If xname Then
    xFldList = GetSQLColumns()
    sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &1 and lower(fldptnamelast) like &2))" & $RepoStr
    $rData = modDatabase.$syConn.Exec(sql, LCase(xname[0]), LCase(xname[1]))
    FillTransferGrid()
  Endif

End

Private Function ExecuteQuery(sItem As String, xFldList As String[]) As Result

  Dim sql As String
  Dim sqdose As String
  Dim sqfreq As String
  Dim xsql As String
  Dim xstr As String
  Dim xmed As String

  Dim res As Result

  If cmbfreq.Text = "%" Then
    sqfreq = ""
  Else
    sqfreq = " and fldfreq like &7"
  Endif

  If Not txtunitfrom.Value And If Not txtunitto.Value Then
    sqdose = ""
  Else
    sqdose = " and flddose>=&8 and flddose<=&9"
  Endif

  If Not txtfromage.Value And If Not txttoage.Value And If cmbgender.Text = "%" Then
    xsql = ""
  Else
    If Not txtfromage.Value And If Not txttoage.Value Then
      xsql = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &{10}))"
    Else
      xstr = modMedReports.GetAgeStringByTable("tblpatdosing", modDatabase.$syConn)
      xsql = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &{10} and fldptbirday like &{11} and " & xstr & ">=&{12} and " & xstr & "<&{13}))"
    Endif
  Endif

  If cmbcategory.Text And If cmbcategory.Text <> "%" Then
    If sItem = "%" Then
      If rbnarco.Value = True Then
        xmed = " and flditem like &5 and flditem in(select fldbrandid from tblmedbrand where fldnarcotic=&{14} and flddrug in(select flddrug from tbldrug where fldcodename in(select fldcodename from tblcode where fldcategory like &{15})))"
      Else
        xmed = " and flditem like &5 and flditem in(select fldbrandid from tblmedbrand where flddrug in(select flddrug from tbldrug where fldcodename in(select fldcodename from tblcode where fldcategory like &{15})))"
      Endif
    Else
      If rbnarco.Value = True Then
        xmed = " and flditem in(select fldbrandid from tblmedbrand where fldnarcotic=&{14} and flddrug in(select flddrug from tbldrug where fldcodename like &5 and fldcodename in(select fldcodename from tblcode where fldcategory like &{15})))"
      Else
        xmed = " and flditem in(select fldbrandid from tblmedbrand where flddrug in(select flddrug from tbldrug where fldcodename like &5 and fldcodename in(select fldcodename from tblcode where fldcategory like &{15})))"
      Endif
    Endif
  Else
    If sItem = "%" Then
      If rbnarco.Value = True Then
        xmed = "  and flditem like &5 and flditem in(select fldbrandid from tblmedbrand where fldnarcotic=&{14})"
      Else
        xmed = "  and flditem like &5"
      Endif
    Else
      If rbnarco.Value = True Then
        xmed = " and flditem in(select fldbrandid from tblmedbrand where fldnarcotic=&{14} and flddrug in(select flddrug from tbldrug where fldcodename like &5))"
      Else
        xmed = " and flditem in(select fldbrandid from tblmedbrand where flddrug in(select flddrug from tbldrug where fldcodename like &5))"
      Endif
    Endif
  Endif
  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)

  If chkpattern.Value = False Then
    If sItem = "%" Then
      If cmbstatus.Text = "Dispensed" Then
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave_order=&4" & xmed & " and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr                                                ''
      Else
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3" & xmed & " and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr
      Endif
    Else
      If cmbstatus.Text = "Dispensed" Then
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave_order=&4" & xmed & " and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr                                                 ''
      Else
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3" & xmed & " and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr
      Endif
    Endif
    res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "Medicines", True, sItem, cmbroute.Text, cmbfreq.Text, txtunitfrom.Value, txtunitto.Value, cmbgender.Text, "%", 365 * txtfromage.Value, 365 * txttoage.Value, "Yes", cmbcategory.Text)

  Else
    If sItem = "%" Then
      If cmbstatus.Text = "Dispensed" Then
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave_order=&4 and flditem like &5 and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr                                                  ''
      Else
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and flditem like &5 and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr
      Endif
    Else
      If cmbstatus.Text = "Dispensed" Then
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave_order=&4 and flditem like &5 and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr                                              ''
      Else
        sql = "select " & xFldList.Join(",") & " from tblpatdosing where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and flditem like &5 and fldroute like &6" & sqfreq & sqdose & xsql & $RepoStr
      Endif
    Endif
    res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), "Medicines", True, sItem, cmbroute.Text, cmbfreq.Text, txtunitfrom.Value, txtunitto.Value, cmbgender.Text, "%", 365 * txtfromage.Value, 365 * txttoage.Value, "Yes", cmbcategory.Text)

  Endif
  Return res

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modMedReports.GetPatientPastAgeString("tblpatdosing", xVariable)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 5 Then
    xxx = modPatient.GetPatientNoByEnc(xVariable)
  Else If Column = 6 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 11 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif

  Return xxx

End

Public Sub btnfilldata_Click()

  Dim xitem As String
  Dim xFldList As String[]

  TabStrip1.Index = 0
  xFldList = GetSQLColumns()
  If rbsel.Value = True Then
    If chkcustom.Value = True Then
      xitem = Trim(txtcustom.Text) & "%"
    Else
      xitem = ListBox1.Text
    Endif

    If xitem Then
      $rData = ExecuteQuery(xitem, xFldList)
      If chkgrid.Value = True Then
        FillTransferGrid()
      Endif
      If chkchart.Value = True Then
        FillChartData(xitem)
      Endif
    Endif

  Else If rball.Value = True Then
    $rData = ExecuteQuery("%", xFldList)
    If chkgrid.Value = True Then
      FillTransferGrid()
    Endif
  Endif

  If $rData.Available Then
    lblrecordcount.Text = "Count: " & $rData.Count
  Else
    lblrecordcount.Text = "Count: 0"
  Endif

End

Private Sub FillTransferGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(275 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[11].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[12].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "EncID"
    .Columns[2].Text = "Name"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "Gender"
    .Columns[5].Text = "PatientNo"
    .Columns[6].Text = "Date"
    .Columns[7].Text = "Medicine"
    .Columns[8].Text = "Dose"
    .Columns[9].Text = "Freq"
    .Columns[10].Text = "Day"
    .Columns[11].Text = "Prescriber"
    .Columns[12].Text = "RegNo"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column > $SSQLFields.Count - 1 Then
    Data.Html = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif

End

Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "Prescription Report"
  xparam2 = modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  encColumn = 1
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To $SSQLFields.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[$SSQLFields[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)
  Next
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

Public Sub mnuencchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CUnivariate
  Column = modCustPatient.GetUnivariateColumn(1)
  xField = xFldList[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnustcross_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(1)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(1)
  xFieColm = xFldList[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab

    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    'modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnugridsummary_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xFldList = GetSQLColumns()
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

''------------------------------ chart ---------------------------
Private Sub FillChartData(sItem As String)

  Dim xLst As String[]
  Dim sFile As String

  xLst = New String[]
  For Each $rData
    xLst.Add(DateDiff(dtfir.Value, $rData["fldtime"], modChart.GetDateIntegerFromSetting()))
  Next

  sFile = Temp()
  File.Save(sFile, xLst.Join(gb.NewLine))
  btnstats.Tag = sFile
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, sItem & " : Patient Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.FrequencyChart(sFile, sItem & " : Patient Count"))
  Endif

End

Public Sub btnexport_Click()

  ' Me.Exec("printJS('" & PictureBox1.Tag & "', 'image')")
  Me.Exec("window.open('" & PictureBox1.Image & "'); ")

End

Public Sub btnstats_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", btnstats.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("freqtable", btnstats.Tag))
  Endif

End

Public Sub chkchart_Click()

  TabStrip1.Index = 1

End

Public Sub mnucolumn_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnuaddcolm_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim xFieColm As String
  Dim res As Result
  Dim yval As Variant

  Dim xColl As Collection
  Dim xFldList As String[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then
    xFldList = GetSQLColumns()
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieColm])
    xColl = New Collection
    If res.Available Then
      For Each res
        yval = GetGridViewValue(Column, res[xFieColm])
        If yval Then
          If xColl.Exist(CStr(yval)) Then
            xColl[CStr(yval)] = xColl[CStr(yval)] + 1
          Else
            xColl[CStr(yval)] = 1
          Endif
        Endif
      Next
    Endif
    If xColl.Count Then
      xPath = modCHTMLReport.CreateHTMLReportFromCollection(["Variable", "Count"], xColl, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
