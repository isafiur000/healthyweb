' Gambas class file

Private $sFollow As Boolean
Private $rData As Result
Private $aMyFields As String[]
Private $selDate As Boolean

Private $sValue As String
Private $ImgPath As String
Private $lstencDate As Date
Private $SearchBox As String
Private $imgList As String[]

Private $ValidExpiry As Date
Private $CredAmount As Float
Private $DiscAmount As Float
Private $APISelect As String

Private $sProceed As Boolean
Private $selectList As String[]

Public Sub Run(sFollow As Boolean) As String

  Dim xcursor As String

  $sFollow = sFollow
  DisplayTextBoxEnableSetting()
  ShowConsulDoc()
  ShowConsDate()
  If $sFollow = True Then
    chkfollow.Value = True
    chkfollow.Enabled = False
  Endif
  If MMain.$CustomFormat = "CLAPS" Then
    pnlregistcategory.Visible = False
    chkinfant.Visible = False
    pnlnewstatus.Class = ""
    pnlnewstatus.Width = "100%"
    lblpatcodepan.Text = "National ID"
    lblconsdoctor.Text = "Doctor"
    txtbookingid.PlaceHolder = "Booking No"
  Endif
  ''--------- for police -------------
  If MMain.$IsPolice = True Then
    cmbcategory.Visible = True
    pnlpolice.Visible = True
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldcategory as col from tblcategorylist"))
    cmbrank.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tblranks"))
    cmbunit.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tblunits"))
  Endif
  ''---------end ------------------------

  cmbsex.List = ["Female", "Male", "Other"]
  chknull.Value = False

  cmbdistrict.List = modBasic.$DistrictList
  cmbrelation.List = modBasic.$RelationList

  cmbdisctype.List = modBasic.$BillDiscountRegd
  cmbbillmode.List = modBasic.$BillBillingMode
  cmbconsult.List = modGeneral.RegistrationDeptList()

  lblstatus.Text = "NEW PATIENT"
  dtconsultdate.Value = Now()
  btnyear.Text = "Year"
  btnmon.Text = "Mon"
  If cmbdisctype.List.Count = 1 Then
    cmbdisctype.Text = cmbdisctype.List[0]
  Endif

  If modBasic.$AutoConsultation = "Yes" Then
    chkconsult.Value = True
  Else If modBasic.$AutoConsultation = "No" Then
    chkconsult.Value = False
  Else
    modSettings.ShowCheckBox(chkconsult, "Registration/AutoConsultation")
  Endif
  If modBasic.$AutoConsultLock = "Yes" Then
    chkconsult.Enabled = False
  Else
    chkconsult.Enabled = True
  Endif

  cmbsex.Text = modBasic.$RegGender
  cmbdistrict.Text = modBasic.$RegDistrict
  cmbrelation.Text = modBasic.$RegRelation
  cmbconsult.Text = modBasic.$RegDepart
  If modBasic.$RegConsultant Then
    If modBasic.$RegConsultant = "CurrentUser" Then
      btnconsult.Tag = modBasic.$lbluser
    Else
      btnconsult.Tag = modBasic.$RegConsultant
    Endif
    btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
    btnconsult.Enabled = False
  Endif

  FillRegistrationGrid(dtconsultdate.Value)
  SetRequiredVariables()
  $SearchBox = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultSearchBox")
  If $SearchBox = "Booking ID" Then
    rbbook.Value = True
  Else If $SearchBox = "Staff ID" Then
    rbstaff.Value = True
  Else If $SearchBox = "NHIS No" Then
    rbnhis.Value = True
  Else If $SearchBox = "SS Unit" Then
    rbsocial.Value = True
  Else If $SearchBox = "SS Fund" Then
    rbssf.Value = True
  Else
    rbfile.Value = True  ''Disabled due to bug in 3.18.2
  Endif
  $sProceed = False
  xcursor = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultCursor")
  If xcursor = "Search Box" Then
    txtbookingid.SetFocus
  Else
    txtpatno.SetFocus
  Endif

  If Me.ShowModal() Then Return $sValue

End

' Public Sub Form_KeyRelease()
'
'   If Key.Code = Key["A"] And If Key.Control Then
'     If chkconsult.Value = False Then
'       chkconsult.Value = True
'     Else If chkconsult.Value = True Then
'       chkconsult.Value = False
'     Endif
'   Else If Key.Code = Key["Y"] And If Key.Alt Then
'     btnyear.Text = "Year"
'     btnmon.Text = "Mon"
'   Else If Key.Code = Key["M"] And If Key.Alt Then
'     btnyear.Text = "Mon"
'     btnmon.Text = "Day"
'   Else If Key.Code = Key["D"] And If Key.Alt Then
'     btnyear.Text = "Day"
'     btnmon.Text = "Hour"
'   Else If Key.Code = Key.Esc Then
'     Me.Close()
'   Else
'     modGeneralmain.GoToNextControlTab()
'   Endif
'
' End

''-------------------- Date -------------------------
Public Sub dtdobmain_Click()

  Dim xdate As Date

  xdate = GetDateValue(("Select Date Time of Birth"), "DateTime", dtdobmain.Tag)
  If xdate Then
    dtdobmain.Tag = xdate
  Endif
  If dtdobmain.Tag Then
    If dtdobmain.Tag > modDate.EndSqlDate(Now()) Then
      dtdobmain.Tag = ""
      Message.Warning("Incorrect Date and Time", ("OK"))
    Else
      $selDate = True
      modDateSub.DateToYearandMonth(dtdobmain.Tag, txtyears, txtmonths, btnyear, btnmon)
    Endif
  Endif

End

Public Sub btnnepdate_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtdobmain.Tag))
  If xx Then
    dtdobmain.Tag = modDate.ConvertToEnglishdate(xx)
  Endif
  If dtdobmain.Tag Then
    If dtdobmain.Tag > modDate.EndSqlDate(Now()) Then
      dtdobmain.Tag = ""
      Message.Warning("Incorrect Date and Time", ("OK"))
    Else
      $selDate = True
      modDateSub.DateToYearandMonth(dtdobmain.Tag, txtyears, txtmonths, btnyear, btnmon)
    Endif
  Endif

End

Public Sub btnyear_Click()

  If btnyear.Text = "Year" Then
    btnyear.Text = "Mon"
    btnmon.Text = "Day"
  Else If btnyear.Text = "Mon" Then
    btnyear.Text = "Day"
    btnmon.Text = "Hour"
  Else If btnyear.Text = "Day" Then
    btnyear.Text = "Year"
    btnmon.Text = "Mon"
  Endif

End

Private Sub DateBoxEntry()

  If txtyears.Value = 0 And If txtmonths.Value = 0 Then
    chknull.Value = True
  Else
    chknull.Value = False
  Endif

  If txtmonths.Value > 12 And If btnmon.Text = "Mon" Then
    txtmonths.Value = 0
    Message.Warning(("Wrong Age value"), ("OK"))
  Else If txtmonths.Value > 31 And If btnmon.Text = "Day" Then
    txtmonths.Value = 0
    Message.Warning(("Wrong Age value"), ("OK"))
  Else If txtmonths.Value > 24 And If btnmon.Text = "Hour" Then
    txtmonths.Value = 0
    Message.Warning(("Wrong Age value"), ("OK"))
  Else
    $selDate = False
  Endif

End

Public Sub txtyears_Activate()

  DateBoxEntry()
  txtmonths.SetFocus
  Me.Exec("$_(" & JS(txtmonths.Name & ":entry") & ").select()")

End

Public Sub chknull_Click()

  If chknull.Value = True Then
    txtyears.Value = 0
    txtmonths.Value = 0
  Endif

End

''-------------- End Buttons -------------------
' Private Sub AutoRegistrationSMS(encid As String, sUser As String)
'
'   Dim smsfir As Boolean
'   Dim smssec As Boolean
'
' If modBasic.$RegistAutoPatientSMS = "Yes" Then
'   smsfir = True
' Endif
' If modBasic.$RegistAutoPhysicianSMS = "Yes" Then
'   smssec = True
' Endif
'
'   If smsfir = True Or If smssec = True Then
'
'     If smsfir = True Then
'       modDevice.SendMessageToRegistPatient(encid)
'     Endif
'
'     If smssec = True Then
'       If sUser Then
'         modDevice.SendMessageToRegistPhysician(encid, sUser)
'       Endif
'     Endif
'
'   Endif
'
' End

Private Sub OpenDemographics()

  Dim hForm2 As FmPatdemograph
  Dim hForm1 As Fmdemograph
  Dim hForm As FmPatAccEdit

  If modBasic.$RegistAutoDemograph Then

    Select modBasic.$RegistAutoDemograph
      Case "Acount", "Clinical"
        If modBasic.$RegistEmbedDemograph = "Yes" Then
          pnldemograph.Visible = True
          hForm1 = New Fmdemograph(txtencounter.Text, modBasic.$RegistAutoDemograph, pnldemograph)
        Else
          hForm2 = New FmPatdemograph(txtencounter.Text, modBasic.$RegistAutoDemograph)
          hForm2.ShowModal
        Endif
      Case "Essential"
        hForm = New FmPatAccEdit(txtencounter.Text, True)
        hForm.ShowModal
    End Select
  Endif

End

Private Function AllowDataSave() As Boolean

  Dim xx As Boolean

  xx = True
  If modBasic.$RegistEssAddress = "Yes" Then
    If Not txtaddfir.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssDistrict = "Yes" Then
    If Not cmbdistrict.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssAge = "Yes" Then
    If Not dtdobmain.Tag And If Not txtyears.Value And If Not txtmonths.Value Then
      xx = False
    Else If chknull.Value = True
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssGuardian = "Yes" Then
    If Not txtguardian.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssRelation = "Yes" Then
    If Not cmbrelation.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssContact = "Yes" Then
    If Not txtcontact.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssEMail = "Yes" Then
    If Not txtemail.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssCode = "Yes" Then
    If Not txtpatcode.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssWardNo = "Yes" Then
    If Not txtward.Text Then
      xx = False
    Endif
  Endif

  If modBasic.$RegistEssEthnic = "Yes" Then
    If Not txtethcode.Text Then
      xx = False
    Endif
  Endif

  Return xx

End

Private Function GetConsultLockValue() As Boolean

  Dim xLock As Boolean
  Dim regd As Integer
  Dim quota As Integer
  Dim bokplan As Integer

  If modBasic.$RegistLockToQuota = "Yes" Then
    bokplan = modConsult.GetPatientBooked("Planned", cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text, btnconsult.Tag)
    txtwait.Value = bokplan
    regd = modConsult.GetPatientRegisteredValid(cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text, btnconsult.Tag)
    txtregd.Value = regd
    quota = modConsult.GetPatientQuota(cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text, btnconsult.Tag)
    txtmaxquota.Value = quota

    If quota Then
      If (bokplan + regd + 1) > quota
        xLock = True
        Message.Warning(("Patient Allocation Quota reached"), ("OK"))
      Else
        xLock = False
      Endif
    Else
      xLock = False
    Endif
  Else
    xLock = False
  Endif

  Return xLock

End

Private Function GetConsultLock() As Boolean

  Dim xLock As Boolean
  Dim res As Result

  If txtbookingid.Text Then
    If rbbook.Value = True Then
      If modBasic.$RegistQuotaQueMode = "ConsultOnly" Then
        res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and flduserid=&3 and fldstate like &4 and fldbookingval=&5 and fldcomp=&6", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), btnconsult.Tag, "Planned", Trim(txtbookingid.Text), modBasic.$compID)

      Else If modBasic.$RegistQuotaQueMode = "DepartOnly" Then
        res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldadmitlocat=&3 and fldstate like &4 and fldbookingval=&5 and fldcomp=&6", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbconsult.Text, "Planned", Trim(txtbookingid.Text), modBasic.$compID)

      Else If modBasic.$RegistQuotaQueMode = "Consult+Mode" Then
        res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldbillingmode like &3 and flduserid=&4 and fldstate like &5 and fldbookingval=&6 and fldcomp=&7", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbbillmode.Text, btnconsult.Tag, "Planned", Trim(txtbookingid.Text), modBasic.$compID)

      Else
        If btnconsult.Tag Then
          res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldadmitlocat=&3 and fldbillingmode like &4 and flduserid=&5 and fldstate like &6 and fldbookingval=&7 and fldcomp=&8", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbconsult.Text, cmbbillmode.Text, btnconsult.Tag, "Planned", Trim(txtbookingid.Text), modBasic.$compID)                                                  ''
        Else
          res = modDatabase.$myConn.Exec("select fldbookingval from tblpatientbook where fldconsultdate>=&1 and fldconsultdate<=&2 and fldadmitlocat=&3 and fldbillingmode like &4 and fldstate like &5 and fldbookingval=&6 and fldcomp=&7", modDate.StartSqlDate(dtconsultdate.Value), modDate.EndSqlDate(dtconsultdate.Value), cmbconsult.Text, cmbbillmode.Text, "Planned", Trim(txtbookingid.Text), modBasic.$compID)                                                  ''
        Endif

      Endif

      If res.Available Then
        xLock = False
      Else
        xLock = GetConsultLockValue()
      Endif
    Else
      xLock = GetConsultLockValue()
    Endif
  Else
    xLock = GetConsultLockValue()
  Endif
  Return xLock

End

Public Sub btnwebcam_Click()

  Dim hForm As FmPersonImage

  If txtpatno.Text Then
    hForm = New FmPersonImage("Patient", Trim(txtpatno.Text), False)
    hForm.ShowModal
  Else
    Message.Warning("You need to complete registration first", ("OK"))
  Endif

End

Public Sub btnshowrefr_Click()

  If cmbconsult.Text And If cmbbillmode.Text Then
    If modBasic.$RegistAutoWebcam = "Yes" Then
      If Not $ImgPath Then
        $ImgPath = modImage.GetWebCamValue()
      Endif
    Endif

    DateBoxEntry()
    If dtconsultdate.Value Then
      If GetConsultLock() = True Then
        btnOK.Enabled = False
        txtpatno.SetFocus
      Else
        btnshowrefr.Tag = ""
        btnOK.Enabled = True
      Endif
    Endif

    btnshowrefr.Image = "icon:/small/down"
    btnOK.SetFocus
  Endif

End

' Public Sub btnshowrefr_KeyRelease()
'
'   If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
'     btnshowrefr_Click()
'   Endif
'
' End

Private Sub UpdatePatientBasic(sPatNo As String, sName As String, sSurName As String)

  Dim res As Result

  If sName And If sSurName Then
    res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1", sPatNo)
    If res.Available Then
      res["fldptnamefir"] = modPassword.EncryptPatData(String.UCaseFirst(sName))
      res["fldptnamelast"] = modPassword.EncryptPatData(String.UCaseFirst(sSurName))
      res["fldencrypt"] = modBasic.$PatInfoEncrypt
      res.Update
    Endif
  Endif

End

''required to clear Select2 issue when null is saved as -1
Private Function GetSelectComboText(comboText As String) As String

  Dim xval As String

  If comboText = "-1" Then
    xval = ""
  Else
    xval = String.UCaseFirst(Trim(comboText))
  Endif
  Return xval

End

Private Sub RegisterFirstTime()

  Dim res As Result
  Dim $DOBirth As Date

  If $selDate = True Then
    $DOBirth = dtdobmain.Tag
  Else
    If txtmonths.Value = 0 Then
      If btnyear.Text = "Year" Then
        $DOBirth = DateAdd(Now(), gb.Year, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(txtyears.Value))
      Endif

    Else
      If btnyear.Text = "Year" And If btnmon.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(12 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Mon" And If btnmon.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(30 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Day" And If btnmon.Text = "Hour" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(24 * txtyears.Value + txtmonths.Value))
      Endif

    Endif
  Endif

  If chknull.Value = True Or If DateDiff($DOBirth, Now(), gb.Day) < 73000 Then

    If txtpatno.Text Then
      If modPatient.SearchPatNo(Trim(txtpatno.Text)) = False Then
        txtpatno.Text = ""
      Endif
    Endif

    If txtpatno.Text Then
    Else
      txtpatno.Text = modBillLock.PatientNoValue()
    Endif

    If txtpatno.Text Then
      txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      lblstatus.Text = "REGISTERED PATIENT"
      res = modDatabase.$myConn.Create("tblpatientinfo")
      res["fldpatientval"] = Trim(txtpatno.Text)
      res["fldptnamefir"] = modPassword.EncryptPatData(String.UCaseFirst(Trim(txtnamefir.text)))
      res["fldptnamelast"] = modPassword.EncryptPatData(String.UCaseFirst(Trim(txtnamelast.text)))
      res["fldethniccode"] = txtethcode.Text
      res["fldptcontact"] = modPassword.EncryptPatData(Trim(txtcontact.Text))
      res["fldemail"] = modPassword.EncryptPatData(Trim(txtemail.Text))
      res["fldptaddvill"] = GetSelectComboText(txtaddfir.Text)
      res["fldptaddward"] = Trim(txtward.Text)
      res["fldptadddist"] = GetSelectComboText(cmbdistrict.Text)
      res["fldptsex"] = String.UCaseFirst(cmbsex.text)
      res["fldptguardian"] = String.UCaseFirst(Trim(txtguardian.Text))
      res["fldrelation"] = GetSelectComboText(cmbrelation.Text)
      If chknull.Value = False Then
        res["fldptbirday"] = $DOBirth
      Endif
      res["fldptadmindate"] = Now()
      res["flddiscount"] = ""
      res["fldptcode"] = Trim(txtpatcode.Text)
      res["fldadmitfile"] = ""
      res["fldcomment"] = ""
      res["fldencrypt"] = modBasic.$PatInfoEncrypt
      res["fldpassword"] = ""

      ''--------- for police -------------
      If MMain.$IsPolice = True Then
        res["fldcategory"] = cmbcategory.Text
        res["fldrank"] = cmbrank.Text
        res["fldunit"] = cmbunit.Text
      Endif
      ''----------end -------------------

      res["flduserid"] = modBasic.$lbluser
      res["fldtime"] = Now()
      res["fldupuser"] = ""
      res["flduptime"] = ""
      res["xyz"] = False
      If MMain.$WebEntry = True Then
        res["fldrepodate"] = Now()
        res["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
        res["fldhospcode"] = modBasic.$HospCode
      Endif
      res.Update()
    Endif

  Endif

End

Private Sub SaveRegistrationData()

  Dim res As Result
  Dim xdate As Date
  Dim autobil As Boolean
  Dim idLock As Boolean
  Dim xcomm As String
  Dim xformat As String

  If txtnamefir.Text And If txtnamelast.Text And If cmbsex.Text And If cmbconsult.Text And If cmbdisctype.Text And If cmbbillmode.Text Then
    If AllowDataSave() = True Then

      idLock = modBillLock.LockTableForID("Registration")
      If idLock = True Then

        modDatabase.$myConn.Begin
        If lblstatus.Text = "NEW PATIENT" Or If lblstatus.Text = "RECORDED PATIENT" Then
          RegisterFirstTime()
        Endif

        If txtpatno.Text Then
          txtencounter.Text = modBillLock.EncounterIDValue()

          If txtencounter.Text Then
            res = modDatabase.$myConn.Create("tblencounter")
            res["fldencounterval"] = txtencounter.Text
            res["fldpatientval"] = Trim(txtpatno.Text)
            res["fldadmitlocat"] = cmbconsult.Text
            res["flddisctype"] = cmbdisctype.Text
            res["fldbillingmode"] = cmbbillmode.Text
            res["fldadmission"] = "Registered"
            res["fldregdate"] = Now()
            res["fldcomp"] = modBasic.$compID
            res["fldvisit"] = txtvisit.Text
            If chkfollow.Value = True Then
              res["fldfollow"] = "Follow-up"
            Else
              res["fldfollow"] = "New"
            Endif

            res["fldcurrlocat"] = ""
            res["flddoa"] = ""
            res["flddod"] = ""
            res["fldheight"] = ""
            res["flduserid"] = btnconsult.Tag
            res["fldcashdeposit"] = 0
            If $CredAmount Then
              res["fldcashcredit"] = $CredAmount
            Else
              res["fldcashcredit"] = txtcredit.Value
            Endif
            If $DiscAmount Then
              res["fldcharity"] = $DiscAmount
            Else
              res["fldcharity"] = txtdiscnt.Value
            Endif
            If $ValidExpiry Then
              res["fldvalidity"] = $ValidExpiry
            Else
              res["fldvalidity"] = DateAdd(Now(), gb.Year, 1)
            Endif
            res["fldfollowdate"] = ""
            res["fldreferto"] = ""

            res["fldregistid"] = modPatient.GetPatientHMISRegVal(Trim(txtpatno.Text))
            res["fldadmitid"] = ""
            res["xyz"] = False
            If MMain.$WebEntry = True Then
              res["fldrepodate"] = Now()
              res["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
              res["fldhospcode"] = modBasic.$HospCode
            Endif
            res.Update()
          Endif
          If chkconsult.Value = True Then
            If chkfollow.Value = False Then
              autobil = modBillings.InsertRegistrationBilling(modBasic.$AutoRegistBilling, txtencounter.Text, cmbconsult.Text, cmbdisctype.Text, cmbbillmode.Text, "New", btnconsult.Tag)
              xcomm = "Paid Consultation"
            Else
              autobil = modBillings.InsertRegistrationBilling(modBasic.$AutoRegistBilling, txtencounter.Text, cmbconsult.Text, cmbdisctype.Text, cmbbillmode.Text, "Follow-up", btnconsult.Tag)
              xcomm = "Follow-up Consultation"
            Endif

            xformat = modGeneral.GetCategoryFromDept(cmbconsult.Text)
            If chkdate.Value = True Then
              xdate = modGeneral.GetDepartConsultTime(xformat, cmbconsult.Text, dtconsultdate.Value)
            Else
              xdate = Now()
            Endif
            If xformat = "Consultation" Then
              modPatientSub.AddConsultData(txtencounter.Text, cmbconsult.Text, xdate, cmbbillmode.Text, xcomm, btnconsult.Tag)
            Else
              modPatientSub.AddOPVisitData(txtencounter.Text, cmbconsult.Text, xdate, cmbbillmode.Text, xcomm)
            Endif
          Endif

          If txtbookingid.Text Then
            If rbbook.Value = True Then
              modPatientSub.UpdateBookingTable(Trim(txtbookingid.Text), txtpatno.Text, txtencounter.Text)
              modPatientSub.UpdateRemoteUserNo(modPatient.GetPatRemoteMailBooking(Trim(txtbookingid.Text)), txtpatno.Text)
            Else If rbstaff.Value = True Then
              modPatientSub.UpdateStaffIDTable(Trim(txtbookingid.Text), txtpatno.Text)
            Else If rbsocial.Value = True Then
              modPatientSub.UpdateSocialUnitIDTable(Trim(txtbookingid.Text), txtpatno.Text)
            Endif
          Endif
          modDatabase.$myConn.Commit
          btnOK.Enabled = False
          btnshowrefr.Enabled = False

        Else
          modDatabase.$myConn.Rollback
          txtencounter.Text = ""
        Endif 'check if patientno is present

        modBillLock.ReleaseLockTable("Registration")
      Endif

    Else
      Me.Exec("Toastify({text: 'Incomplete data', duration: 3000}).showToast()")
      txtpatno.SetFocus
    Endif
  Endif  ''check if name, gender, dept are listed

Catch
  modDatabase.$myConn.Rollback
  If idLock = True Then
    modBillLock.ReleaseLockTable("Registration")
  Endif
  txtencounter.Text = ""
  txtpatno.Text = ""
  modHelpVariable.CreateErrorReport()

End

Private Sub GetFollowStatus()

  Dim xday As Integer

  If $lstencDate Then
    If modBasic.$AutoRegistNoBillHour Then
      xday = CInt(modBasic.$AutoRegistNoBillHour)
    Else
      xday = 0
    Endif
    If xday Then
      If DateDiff($lstencDate, Now(), gb.Hour) < xday Then
        chkfollow.Value = True
        chkfollow.Enabled = False
      Else
        chkfollow.Value = False
        chkfollow.Enabled = False
      Endif
    Else
      chkfollow.Value = False
      chkfollow.Enabled = True
    Endif
  Else
    chkfollow.Value = False
    chkfollow.Enabled = True
  Endif

End

Public Sub btnOK_Click()

  Dim $hReport As CRegistLabel
  Dim xval As String
  Dim xpass As String
  Dim res As Result
  Dim sLongID As Long
  Dim ximgpath As String

  If txtpatno.Text Then
    If Not txtencounter.Text Then
      If modBasic.$RegistClearPast = "Yes" Then
        res = modDatabase.$myConn.Exec("select fldencounterval from tblencounter where fldpatientval=&1 and fldadmission=&2", Trim(txtpatno.Text), "Registered")
        For Each res
          If modNonMedical.GetFinanceClearance(res["fldencounterval"]) = True Then
          Else
            modPatientSub.EnterPatientImpDate(res["fldencounterval"], "Clearance", "")
          Endif
        Next
      Endif
    Endif
  Endif

  SaveRegistrationData()
  If $ImgPath Then
    modImage.InsertPatientImage("Patient", Trim(txtpatno.Text), $ImgPath)
  Endif
  Wait
  If txtencounter.Text Then
    If txtreference.Text = "Claim Code" Then
      xval = modClaim.GetClaimCidePatient(Trim(txtencounter.Text), $APISelect)
    Else If txtreference.Text = "Accident SSF" Then
      xval = modSSF.GetSSFClaimRegistPatient(Trim(txtencounter.Text), "Accident SSF")
    Else If txtreference.Text = "Critical SSF" Then
      xval = modSSF.GetSSFClaimRegistPatient(Trim(txtencounter.Text), "Critical SSF")
    Else If txtreference.Text = "MedExtra SSF" Then
      xval = modSSF.GetSSFClaimRegistPatient(Trim(txtencounter.Text), "MedExtra SSF")
    Else If txtreference.Text = "Medical SSF" Then
      Select $APISelect
        Case "Accident,C"
          xval = modSSF.GetSSFClaimRegistMedical(Trim(txtencounter.Text), "Child Accident")
        Case "Accident,S"
          xval = modSSF.GetSSFClaimRegistMedical(Trim(txtencounter.Text), "Spouse Accident")
        Case "Maternity"
          xval = modSSF.GetSSFClaimRegistMedical(Trim(txtencounter.Text), "Maternity Expenses")
        Case "Out Patient"
          xval = modSSF.GetSSFClaimRegistMedical(Trim(txtencounter.Text), "Medical Expenses")
      End Select
    Endif
    If xval Then
      Me.Exec("Toastify({text: '" & "Claim Code: " & xval & "', duration: 3000}).showToast()")
    Endif
    xpass = modGeneral.SendPatientPasswordForRemote(Trim(txtencounter.Text))
    OpenDemographics()
    ' ' AutoRegistrationSMS(txtencounter.Text, cmbconsult.Tag)
    If $imgList And If $imgList.Count Then
      For Each ximgpath In $imgList
        sLongID = modImage.SavePatientFileGeneral(Trim(txtencounter.Text), "Scanned Images", "Scanned Images:" & modString.GetDateString(Now()), ximgpath)
      Next
    Endif

    If modBasic.$RegistAutoBarcode = "Yes" Then
      ' modDevice.PrintBarCodeEnc(txtencounter.Text)
    Endif

    If modBasic.$RegistAutoSticker = "Yes" Then
      If modNonMedical.AllowRegistSlipWithInvoice(txtencounter.Text, cmbconsult.Text, cmbbillmode.Text) = True Then
        $hReport = New CRegistLabel(txtencounter.Text)
        modControlSub.OpenHTMLPreview(txtencounter.Text, $hReport.RegistLabelPath(), "LabelSize")
      Endif
    Endif

    If modBasic.$RegistAutoPrescription = "Yes" Then
      ' modPatientSub.PrintRegistExtraReport(txtencounter.Text)
    Endif

  Endif  'if encounter is present

End

' Public Sub btnOK_KeyRelease()
'
'   If Key.Code = Key.Return Or If Key.Code = Key.Enter Or If Key.Code = Key.AltKey Then
'     btnOK_Click()
'   Endif
'
' End

Public Sub btnChange_Click()

  Dim res As Result
  Dim $DOBirth As Date

  If $selDate = True Then
    $DOBirth = dtdobmain.Tag
  Else
    If txtmonths.Value = 0 Then
      If btnyear.Text = "Year" Then
        $DOBirth = DateAdd(Now(), gb.Year, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(txtyears.Value))
      Else If btnyear.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(txtyears.Value))
      Endif

    Else
      If btnyear.Text = "Year" And If btnmon.Text = "Mon" Then
        $DOBirth = DateAdd(Now(), gb.Month, 0 - CInt(12 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Mon" And If btnmon.Text = "Day" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(30 * txtyears.Value + txtmonths.Value))
      Else If btnyear.Text = "Day" And If btnmon.Text = "Hour" Then
        $DOBirth = DateAdd(Now(), gb.Day, 0 - CInt(24 * txtyears.Value + txtmonths.Value))
      Endif

    Endif
  Endif

  If txtpatno.Text Then
    If txtnamefir.Text And If txtnamelast.Text And If cmbsex.Text Then
      res = modDatabase.$myConn.Edit("tblpatientinfo", "fldpatientval=&1 and fldadmitfile IS &2", Trim(txtpatno.Text), Null)
      If res.Available Then
        If res["fldencrypt"] = True Then
          res["fldptnamefir"] = modPassword.EncryptPatSimple(String.UCaseFirst(Trim(txtnamefir.text)))
          res["fldptnamelast"] = modPassword.EncryptPatSimple(String.UCaseFirst(Trim(txtnamelast.text)))
          res["fldptcontact"] = modPassword.EncryptPatSimple(Trim(txtcontact.text))
          res["fldemail"] = modPassword.EncryptPatSimple(Trim(txtemail.Text))
        Else
          res["fldptnamefir"] = String.UCaseFirst(Trim(txtnamefir.text))
          res["fldptnamelast"] = String.UCaseFirst(Trim(txtnamelast.text))
          res["fldptcontact"] = Trim(txtcontact.text)
          res["fldemail"] = Trim(txtemail.Text)
        Endif
        res["fldethniccode"] = txtethcode.Text
        res["fldptaddvill"] = GetSelectComboText(txtaddfir.Text)
        res["fldptaddward"] = Trim(txtward.Text)
        res["fldptadddist"] = GetSelectComboText(cmbdistrict.Text)
        res["fldptsex"] = String.UCaseFirst(cmbsex.text)
        res["fldptguardian"] = String.UCaseFirst(Trim(txtguardian.text))
        res["fldrelation"] = GetSelectComboText(cmbrelation.Text)
        If chknull.Value = False Then
          res["fldptbirday"] = $DOBirth
        Endif

        ''--------- for police -------------
        If MMain.$IsPolice = True Then
          res["fldcategory"] = cmbcategory.Text
          res["fldrank"] = cmbrank.Text
          res["fldunit"] = cmbunit.Text
        Endif
        ''----------end -------------------

        res["fldptcode"] = txtpatcode.Text
        res["fldupuser"] = modBasic.$lbluser
        res["flduptime"] = Now()
        res["xyz"] = False
        res.Update()
        modPatientSub.RemovePatientCache(Trim(txtpatno.Text))
        FillRegistrationGrid(dtconsultdate.Value)
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Else
    Message.Warning(("Patient No is NULL"), ("OK"))
  Endif

End

Public Sub btnCancel_Click()

  If txtencounter.Text Then
    $sValue = txtencounter.Text
    Me.Close(True)
  Else
    Me.Close()
  Endif

End

Private Sub SetSelect2Format(WebComboBox1 As WebComboBox)

  If modBasic.$AppSelect2JS = "Enable" Then
    WebComboBox1.ReadOnly = True
    modJavaScript.SetSelect2Combo(WebComboBox1)
  Endif

End

''------------------------------------- Search procedures ------------------------------------
Public Sub btngetpatno_Click()

  If chkinfant.Value = True Then
    txtnamefir.Text = "I/O " & txtnamefir.Text
  Endif
  $selectList = New String[]
  GetPatientInfoAll()

End

Public Sub txtpatno_Activate()

  If chkinfant.Value = True Then
    txtnamefir.Text = "I/O "
  Endif
  $selectList = New String[]
  GetPatientInfoAll()

End

Private Sub GetPatientInfoAll()

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]
  Dim xscheme As String
  Dim xallow As Boolean

  $selDate = False
  $ImgPath = ""
  txtnamefir.Enabled = True
  txtnamelast.Enabled = True
  pnlregistcategory.Enabled = False
  If txtpatno.Text Then
    If cmbconsult.Text Then
      xallow = modPatient.GetRegistrationAllow(Trim(txtpatno.Text), cmbconsult.Text)
    Else
      xallow = modPatient.GetRegistrationAllow(Trim(txtpatno.Text))
    Endif
    If xallow = True Then
      If MMain.$IsPolice = True Then
        sql = "select fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptsex,fldptcontact,fldptguardian,fldptbirday,fldptadmindate,fldemail,fldptcode,fldrelation,fldencrypt,fldcategory,fldrank,fldunit from tblpatientinfo where fldpatientval=&1"
      Else
        sql = "select fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptsex,fldptcontact,fldptguardian,fldptbirday,fldptadmindate,fldemail,fldptcode,fldrelation,fldencrypt from tblpatientinfo where fldpatientval=&1"
      Endif
      res = modDatabase.$myConn.Exec(sql, Trim(txtpatno.Text))
      If res.Available = False Then
        modLinkDB.CheckPatientDataRemote(Trim(txtpatno.Text))
        txtpatno.SetFocus
      Else
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
        cmbdistrict.Text = res["fldptadddist"]  ''district always before address
        cmbsex.Text = res["fldptsex"]
        If res["fldptaddward"] Then
          txtward.Text = res["fldptaddward"]
          txtaddfir.Text = res["fldptaddvill"]
        Else
          If res["fldptaddvill"] Then
            xaddr = Split(res["fldptaddvill"], "-")
            If xaddr.Count > 1 Then
              If IsInteger(xaddr[xaddr.Count - 1]) Then
                txtward.Text = xaddr[xaddr.Count - 1]
                txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
              Else
                txtward.Text = ""
                txtaddfir.Text = xaddr.Join("-")
              Endif
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Endif
        Endif
        txtguardian.Text = res["fldptguardian"]
        cmbrelation.Text = res["fldrelation"]
        If modBasic.$SuperUser = True Then
          txtnamefir.Text = modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"])
          txtnamelast.Text = modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"])
          txtemail.Text = modPassword.DecryptPatData(res["fldemail"], res["fldencrypt"])
          txtcontact.Text = modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"])
        Else
          txtnamefir.Text = res["fldptnamefir"]
          txtnamelast.Text = res["fldptnamelast"]
          txtemail.Text = res["fldemail"]
          txtcontact.Text = res["fldptcontact"]
        Endif
        txtethcode.Text = res["fldethniccode"]
        txtpatcode.Text = res["fldptcode"]
        If res["fldptbirday"] Then
          chknull.Value = False
          dtdobmain.Tag = res["fldptbirday"]
          $selDate = True
          modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
        Else
          dtdobmain.Tag = ""
          chknull.Value = True
        Endif

        ''--------- for police -------------
        If MMain.$IsPolice = True Then
          cmbcategory.Text = res["fldcategory"]
          cmbrank.Text = res["fldrank"]
          cmbunit.Text = res["fldunit"]
        Endif
        ''----------end -------------------

        lblstatus.Text = "REGISTERED PATIENT"
        lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
        $lstencDate = modPatient.GetLastPaidConsultDate(Trim(txtpatno.Text))
        If chkfollow.Enabled = True Then
          GetFollowStatus()
        Endif
        If lstdat Then
          If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
            lbllast.Text = "TODAY"
          Else
            lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
          Endif
        Else
          lbllast.Text = ""
        Endif
        If Not cmbdisctype.Text Then
          xscheme = modBillings.GetDefaultDiscountOnRegistration(Trim(txtpatno.Text), modBasic.$compID)
          cmbdisctype.Text = xscheme
        Endif
        If Not cmbdisctype.Text Then
          cmbdisctype.Text = modBasic.$RegistDefaultDisc
        Endif
        LoadDiscCreditVal()
        If modBasic.$RegistLockProfile Then
          If DateDiff(res["fldptadmindate"], Now(), gb.Hour) > modBasic.$RegistLockProfile Then
            btnChange.Enabled = False
          Endif
        Endif
        SetSelect2Format(cmbconsult)
        cmbconsult.SetFocus
      Endif

      If Not txtnamefir.Text Then
        If modBasic.$AllowPatNoEntry = "Yes" Then
          txtnamefir.SetFocus
        Else
          txtpatno.SetFocus
        Endif
      Endif

    Else
      txtpatno.Text = ""
      Message.Warning("Multiple Registration is disabled", ("OK"))
      txtnamefir.Text = ""
      txtnamelast.Text = ""
      txtpatcode.Text = ""
      cmbdisctype.Text = ""
      txtpatno.SetFocus
    Endif

  Else
    If rbbook.Value = True Or If rbfile.Value = True Then
      xscheme = modBillings.GetDefaultDiscountFreeRegistration(modBasic.$compID)
      cmbdisctype.Text = xscheme
    Else
      If Not cmbdisctype.Text Then
        xscheme = modBillings.GetDefaultDiscountFreeRegistration(modBasic.$compID)
        cmbdisctype.Text = xscheme
      Endif
    Endif
    LoadDiscCreditVal()
    $selectList.Add("Gender")
    $selectList.Add("District")
    $selectList.Add("Municipality")
    $selectList.Add("Relation")
    $selectList.Add("Department")
    If MMain.$IsPolice = True Then
      $selectList.Add("Category")
      $selectList.Add("Rank")
      $selectList.Add("Unit")
    Endif
    SetSelect2Format(cmbsex)
    SetSelect2Format(cmbdistrict)
    SetSelect2Format(cmbrelation)
    SetSelect2Format(cmbconsult)
    txtnamefir.SetFocus
  Endif
  $sProceed = True

End

Public Sub btnhospcode_Click()

  Dim xval As String

  xval = InputBox(("Enter Patient's Code/PAN"), "Code/PAN", "")
  If xval Then
    txtpatno.Text = modPatient.GetPatientNoByHospCode(xval)
  Endif

End

Public Sub btnfindpatno_Click()

  Dim xval As String

  xval = InputBox(("Enter Patient's Encounter ID"), "Encounter ID", "")
  If xval Then
    txtpatno.Text = modPatient.GetPatientNoByEnc(xval)
  Endif

End

Public Sub btnfindfile_Click()

  Dim xval As String

  xval = InputBox(("Enter Patient's File Number"), "File Number", "")
  If xval Then
    txtpatno.Text = modPatient.GetPatientNoByFileNo(xval)
  Endif

End

''---------------- Extra procedures in form ------------------------
Public Sub chkconsult_Click()

  modSettings.EnterCheckSetting(chkconsult, "Registration/AutoConsultation")

End

Public Sub txtnamefir_Activate()

  If txtnamefir.Text Then
    txtnamelast.SetFocus
  Endif

End

Public Sub txtnamelast_Activate()

  If txtnamelast.Text Then
    txtethcode.SetFocus
  Endif

End

' ' Public Sub txtnamelast_KeyPress()
' '
' '   If Key.Code = "Down" Then
' '     If modBasic.$SurNameList Then
' '       If modBasic.$RegistGridFormat = "Yes" Then
' '         txtnamelast.Text = GridViewNew("Select SurName", modBasic.$SurNameList, False)
' '       Endif
' '     Endif
' '   Endif
' '
' ' End

Public Sub cmbsex_Click()

  If cmbsex.Text Then
    If MMain.$IsPolice = True Then
      If cmbcategory.List.Count Then
        If $selectList.Exist("Category") Then
          If modBasic.$AppSelect2JS = "Enable" Then
            SetSelect2Format(cmbcategory)
            modJavaScript.PopUpSelect2Combo(cmbcategory)
          Endif
          cmbcategory.SetFocus
        Endif
      Endif

    Else
      txtyears.SetFocus
      Me.Exec("$_(" & JS(txtyears.Name & ":entry") & ").select()")
    Endif
  Endif

End

Public Sub cmbcategory_Click()

  txtyears.SetFocus
  Me.Exec("$_(" & JS(txtyears.Name & ":entry") & ").select()")

End

' Public Sub cmbdistrict_Activate()
'
'   Dim xbool As Boolean
'
'   If txtnamelast.Text Then
'     If Not txtethcode.Text Then
'       txtethcode.Text = modGeneral.GetEthnicCode(Trim(txtnamelast.Text))
'     Endif
'   Endif
'
'   If modBasic.$UnLockDistrict = "Yes" Then
'     xbool = True
'   Else
'     xbool = False
'   Endif
'
'   If Not cmbdistrict.Text Then
'     If modBasic.$DistrictList Then
'
'       If modBasic.$RegistGridFormat = "Yes" Then
'         cmbdistrict.Text = GridViewNew("Select District", modBasic.$DistrictList, xbool)
'       Endif
'
'     Endif
'   Endif
'
' End

' Public Sub txtaddfir_Activate()
'
'   Dim xbool As Boolean
'
'   If modBasic.$UnLockAddress = "Yes" Then
'     xbool = True
'   Else
'     xbool = False
'   Endif
'
'   If Not txtaddfir.Text Then
'     If modBasic.$RegistGridFormat = "Yes" Then
'       txtaddfir.Text = GridViewNew("Select Address", txtaddfir.List, xbool)
'     Endif
'   Endif
'
' End

Public Sub txtaddfir_Click()

  If txtaddfir.Text Then
    txtward.SetFocus
  Endif

End

Public Sub txtward_Activate()

  txtcontact.SetFocus

End

Public Sub txtcontact_Activate()

  txtemail.SetFocus

End

Public Sub txtemail_Activate()

  txtguardian.SetFocus

End

' Public Sub cmbrelation_Activate()
'
'   Dim xbool As Boolean
'
'   If modBasic.$UnLockRelation = "Yes" Then
'     xbool = True
'   Else
'     xbool = False
'   Endif
'
'   If Not cmbrelation.Text Then
'     If modBasic.$RelationList Then
'
'       If modBasic.$RegistGridFormat = "Yes" Then
'         cmbrelation.Text = GridViewNew("Select Relation", modBasic.$RelationList, xbool)
'       Endif
'
'     Endif
'   Else
'     txtpatcode.SetFocus
'   Endif
'
' End

Public Sub cmbrelation_Click()

  If MMain.$IsPolice = True Then
    If cmbrank.List.Count Then
      If $selectList.Exist("Rank") Then
        If modBasic.$AppSelect2JS = "Enable" Then
          SetSelect2Format(cmbrank)
          modJavaScript.PopUpSelect2Combo(cmbrank)
        Endif
        cmbrank.SetFocus
      Endif
    Endif

  Else
    txtpatcode.SetFocus
  Endif

End

Public Sub cmbrank_Click()

  If MMain.$IsPolice = True Then
    If cmbunit.List.Count Then
      If $selectList.Exist("Unit") Then
        If modBasic.$AppSelect2JS = "Enable" Then
          SetSelect2Format(cmbunit)
          modJavaScript.PopUpSelect2Combo(cmbunit)
        Endif
        cmbunit.SetFocus
      Endif
    Endif
  Endif

End

Public Sub cmbunit_Click()

  txtpatcode.SetFocus

End

Public Sub cmbdisctype_Click()

  If txtnamefir.Text Then
    If cmbdisctype.Text Then
      LoadDiscCreditVal()

      If cmbbillmode.Text And If cmbbillmode.Enabled = False Then
        If chkdate.Value = False And If chkphysician.Value = False Then
          btnshowrefr_Click()
        Else If chkdate.Value = False And If chkphysician.Value = True Then
          btnselectuser_Click()
        Else If chkdate.Value = True Then
          dtconsultdate.SetFocus
        Endif
      Else
        cmbbillmode.SetFocus
      Endif

    Endif
  Endif

End

' Public Sub cmbdisctype_Activate()
'
'   If cmbdisctype.Text Then
'     cmbbillmode.SetFocus
'   Endif
'
' End

Private Sub LoadDiscCreditVal()

  Dim resx As Result

  txtreference.Text = ""
  txtdiscnt.Value = 0
  txtcredit.Value = 0

  If cmbdisctype.Text Then
    resx = modDatabase.$myConn.Exec("select fldbillingmode,fldamount,fldcredit,fldreference,fldlimit,fldyear from tbldiscount where fldtype=&1", cmbdisctype.Text)
    If resx.Available Then
      ''billingmode
      If resx["fldbillingmode"] Then
        cmbbillmode.Text = resx["fldbillingmode"]
        cmbbillmode.Enabled = False
      Else
        cmbbillmode.Text = modBasic.$RegistDefaultMode
      Endif
      ''claim code
      If resx["fldreference"] Then
        If resx["fldreference"] = "Claim Code" Then
          txtreference.Text = "Claim Code"
        Else If resx["fldreference"] = "Accident SSF" Then
          txtreference.Text = "Accident SSF"
        Else If resx["fldreference"] = "Critical SSF" Then
          txtreference.Text = "Critical SSF"
        Else If resx["fldreference"] = "MedExtra SSF" Then
          txtreference.Text = "MedExtra SSF"
        Else If resx["fldreference"] = "Medical SSF" Then
          txtreference.Text = "Medical SSF"
        Endif
      Endif
      ''credit/discount limit
      If resx["fldlimit"] Then
        If resx["fldlimit"] = "YearlyDiscount" Then
          If resx["fldamount"] Then
            $DiscAmount = resx["fldamount"]
            If resx["fldyear"] Then
              $ValidExpiry = DateAdd(resx["fldyear"], gb.Year, 1)
            Endif
          Endif
        Else If resx["fldlimit"] = "YearlyCreditAMT" Then
          If resx["fldcredit"] Then
            $CredAmount = resx["fldcredit"]
            If resx["fldyear"] Then
              $ValidExpiry = DateAdd(resx["fldyear"], gb.Year, 1)
            Endif
          Endif
        Endif
      Endif

    Endif
    If rbfile.Value = True Or If rbbook.Value = True Then
      modBillings.GetDefDiscFixOnRegistration(cmbdisctype)
    Endif
  Endif
  If cmbbillmode.Text Then
    If modBasic.$RegistFixMode = "Yes" Then
      cmbbillmode.Enabled = False
    Else If modBasic.$RegistFixMode = "No" Then
      cmbbillmode.Enabled = True
    Endif
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub btnselectuser_Click()

  Dim xList As Variant[]
  Dim xMedUser As String[]

  If modBasic.$LockConsultant = "LockByQuota" Then
    xList = modConsult.GetUserPostingList(cmbconsult.Text, dtconsultdate.Value, cmbbillmode.Text)
  Else
    xList = modBasic.$OPConsulUserList
  Endif
  xMedUser = MedicalSelectedValue(("Select Consultant"), xList)
  If xMedUser And If xMedUser.Count Then
    btnconsult.Tag = xMedUser[0]
    btnconsult.Text = xMedUser[1]
  Else
    btnconsult.Tag = ""
    btnconsult.Text = ""
  Endif

End

' Public Sub txtpatno_KeyPress()
'
'   If Key.Code = Key.Down Then
'     If modBasic.$AutoEncSuffix = "Yes" Then
'       txtpatno.Text = txtpatno.Text & modBasic.$HospCode
'     Endif
'   Else
'     modGeneralMain.InputUpCaseOnly()
'   Endif
'
' End
'
' Public Sub txtpatno_KeyRelease()
'
'   If Not txtpatno.Text Then
'     If Key.Code = Key.Down Then
'       txtpatno.Text = PatSearch("PatientNo")
'       txtpatno.SetFocus
'     Endif
'   Endif
'
' End
'
' Public Sub txtbookingid_KeyPress()
'
'   modGeneralMain.InputUpCaseOnly()
'
' End

' Public Sub txtnamelast_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(txtnamelast)
'
' End
'
' Public Sub txtaddfir_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(txtaddfir)
'   If modBasic.$UnLockAddress = "Yes" Then
'   Else
'     modFillContainer.RestrictComboToContent(txtaddfir)
'   Endif
'
' End
'
' Public Sub cmbdistrict_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbdistrict)
'   If modBasic.$UnLockDistrict = "Yes" Then
'   Else
'     modFillContainer.RestrictComboToContent(cmbdistrict)
'   Endif
'
' End
'
' Public Sub cmbsex_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbsex)
'   modFillContainer.RestrictComboToContent(cmbsex)
'
' End

' Public Sub cmbrelation_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbrelation)
'   If modBasic.$UnLockRelation = "Yes" Then
'   Else
'     modFillContainer.RestrictComboToContent(cmbrelation)
'   Endif
'
' End
'
' Public Sub cmbconsult_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbconsult)
'   modFillContainer.RestrictComboToContent(cmbconsult)
'
' End

'
' Public Sub cmbdisctype_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbdisctype)
'   modFillContainer.RestrictComboToContent(cmbdisctype)
'
' End
'

' Public Sub cmbbillmode_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbbillmode)
'   modFillContainer.RestrictComboToContent(cmbbillmode)
'
' End
'

''------------------------------------------- Reports------------------------------------
Public Sub dtnepcal_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtconsultdate.Value))
  If xx Then
    dtconsultdate.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnsearchdate_Click()

  Dim sDate As Date

  sDate = GetDateValue("Select Date", "Registration", Date())
  If sDate Then
    FillRegistrationGrid(sDate)
  Endif

End

Public Sub btnindex_Click()

  Dim hForm As FmIndexForm

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmIndexForm($rData["fldencounterval"], True, True)
    hForm.ShowModal
  Endif

End

Public Sub btnfullrep_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, "REGISTRATION REPORT", modReportVar.GetDateTimeReport(btnsearchdate.Tag, gb.MediumDate))

End

''-----------------------------------Grid View and menu items ----------------------------------------
Private Sub FillRegistrationGrid(sDate As Date)

  Dim sql As String

  btnsearchdate.Tag = sDate
  sql = "select fldencounterval,fldencounterval,fldencounterval,fldencounterval,fldadmitlocat,fldregdate,fldpatientval,fldencounterval,fldencounterval from tblencounter where fldregdate>=&1 and fldregdate<=&2 and fldcomp=&3"                                      ''
  $rData = modDatabase.$myConn.Exec(sql, modDate.StartSqlDate(sDate), modDate.EndSqlDate(sDate), modBasic.$compID)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  With GridView1
    .Columns[0].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Hidden = True
    .Columns[6].Hidden = True
    .Columns[7].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "Encounter"
    .Columns[1].Text = "Name"
    .Columns[2].Text = "Gender"
    .Columns[3].Text = "Address"
    .Columns[4].Text = "Department"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modPatient.GetPatientNameByEnc($rData[$aMyFields[Column]])
  Else If Column = 2 Then
    Data.Text = modPatient.GetPatientSex($rData[$aMyFields[Column]])
  Else If Column = 3 Then
    Data.Text = modPatient.GetPatientAddressByEnc($rData[$aMyFields[Column]])
  Else If Column = 7 Then
    Data.Control = btnattach
  Else If Column = 8 Then
    Data.Control = btnedit
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

''--------------------------------------enable/disable textbox ------------------------------
Private Sub TextBoxEnableSetting(chk As WebCheckBox, TxtBox As WebTextBox)

  If chk.Value = True Then
    TxtBox.Enabled = True
  Else If chk.Value = False Then
    TxtBox.Enabled = False
  Endif

End

Private Sub ComboBoxEnableSetting(chk As WebCheckBox, CmboBox As WebComboBox)

  If chk.Value = True Then
    CmboBox.Enabled = True
  Else If chk.Value = False Then
    CmboBox.Enabled = False
  Endif

End

Private Sub SetRequiredVariables()

  If modBasic.$RegistEssAddress = "Yes" Then
    chkaddfir.Text = "*"
    chkaddfir.Value = True
  Endif

  If modBasic.$RegistEssDistrict = "Yes" Then
    chkdistrict.Text = "*"
    chkdistrict.Value = True
  Endif

  If modBasic.$RegistEssAge = "Yes" Then
    chknull.Value = False
  Endif

  If modBasic.$RegistEssGuardian = "Yes" Then
    chkguardian.Text = "*"
    chkguardian.Value = True
  Endif

  If modBasic.$RegistEssRelation = "Yes" Then
    chkrelation.Text = "*"
    chkrelation.Value = True
  Endif

  If modBasic.$RegistEssContact = "Yes" Then
    chkcontact.Text = "*"
    chkcontact.Value = True
  Endif

  If modBasic.$RegistEssEMail = "Yes" Then
    chkemail.Text = "*"
    chkemail.Value = True
  Endif

  If modBasic.$RegistEssCode = "Yes" Then
    chkptcode.Text = "*"
    chkptcode.Value = True
  Endif

End

Public Sub chkaddfir_Click()

  modSettings.EnterCheckSetting(chkaddfir, "RegistrationForm/Enable_Address")
  ComboBoxEnableSetting(chkaddfir, txtaddfir)
  TextBoxEnableSetting(chkaddfir, txtward)

End

Public Sub chkdistrict_Click()

  modSettings.EnterCheckSetting(chkdistrict, "RegistrationForm/Enable_District")
  ComboBoxEnableSetting(chkdistrict, cmbdistrict)

End

Public Sub chkcontact_Click()

  modSettings.EnterCheckSetting(chkcontact, "RegistrationForm/Enable_Contact")
  TextBoxEnableSetting(chkcontact, txtcontact)

End

Public Sub chkemail_Click()

  modSettings.EnterCheckSetting(chkemail, "RegistrationForm/Enable_EMail")
  TextBoxEnableSetting(chkemail, txtemail)

End

Public Sub chkguardian_Click()

  modSettings.EnterCheckSetting(chkguardian, "RegistrationForm/Enable_Guardian")
  TextBoxEnableSetting(chkguardian, txtguardian)

End

Public Sub chkrelation_Click()

  modSettings.EnterCheckSetting(chkrelation, "RegistrationForm/Enable_Relation")
  ComboBoxEnableSetting(chkrelation, cmbrelation)

End

Public Sub chkptcode_Click()

  modSettings.EnterCheckSetting(chkptcode, "RegistrationForm/Enable_ExtCode")
  TextBoxEnableSetting(chkptcode, txtpatcode)

End

Public Sub chkdate_Click()

  modSettings.EnterCheckSetting(chkdate, "RegistrationForm/Enable_ConsultDate")
  If chkdate.Value = True Then
    dtconsultdate.Enabled = True
  Else If chkdate.Value = False Then
    dtconsultdate.Enabled = False
  Endif

End

Private Sub ShowConsDate()

  modSettings.ShowCheckBox(chkdate, "RegistrationForm/Enable_ConsultDate")
  If chkdate.Value = True Then
    dtconsultdate.Enabled = True
  Else If chkdate.Value = False Then
    dtconsultdate.Enabled = False
  Endif

End

Public Sub chkphysician_Click()

  modSettings.EnterCheckSetting(chkphysician, "RegistrationForm/Enable_Consultant")
  If chkphysician.Value = True Then
    btnconsult.Enabled = True
    btnselectuser.Enabled = True
  Else If chkphysician.Value = False Then
    btnconsult.Enabled = False
    btnselectuser.Enabled = False
  Endif

End

Private Sub ShowConsulDoc()

  modSettings.ShowCheckBox(chkphysician, "RegistrationForm/Enable_Consultant")
  If chkphysician.Value = True Then
    btnconsult.Enabled = True
    btnselectuser.Enabled = True
  Else If chkphysician.Value = False Then
    btnconsult.Enabled = False
    btnselectuser.Enabled = False
  Endif

End

Private Sub DisplayTextBoxEnableSetting()

  modSettings.ShowCheckBox(chkaddfir, "RegistrationForm/Enable_Address")
  ComboBoxEnableSetting(chkaddfir, txtaddfir)
  TextBoxEnableSetting(chkaddfir, txtward)

  modSettings.ShowCheckBox(chkdistrict, "RegistrationForm/Enable_District")
  ComboBoxEnableSetting(chkdistrict, cmbdistrict)

  modSettings.ShowCheckBox(chkcontact, "RegistrationForm/Enable_Contact")
  TextBoxEnableSetting(chkcontact, txtcontact)

  modSettings.ShowCheckBox(chkemail, "RegistrationForm/Enable_EMail")
  TextBoxEnableSetting(chkemail, txtemail)

  modSettings.ShowCheckBox(chkguardian, "RegistrationForm/Enable_Guardian")
  TextBoxEnableSetting(chkguardian, txtguardian)

  modSettings.ShowCheckBox(chkrelation, "RegistrationForm/Enable_Relation")
  ComboBoxEnableSetting(chkrelation, cmbrelation)

  modSettings.ShowCheckBox(chkptcode, "RegistrationForm/Enable_ExtCode")
  TextBoxEnableSetting(chkptcode, txtpatcode)

End

''-------------------------------- Add to List ---------------------------------------
Public Sub btnsurname_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblsurname")
  hForm.ShowModal
  modBasic.FillSurnameList()

End

Public Sub btnrelation_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblrelations")
  hForm.ShowModal
  modBasic.FillRelationList()
  cmbrelation.List = modBasic.$RelationList

End

Public Sub btnrank_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblranks")
  hForm.ShowModal()
  cmbrank.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tblranks"))

End

Public Sub btnunit_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblunits")
  hForm.ShowModal()
  cmbunit.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select flditem as col from tblunits"))

End

''------------------------ Patient Menu -----------------------
Public Sub mnuscan_Click()

  Dim xVal As String
  Dim xdate As Date
  Dim xaddr As String[]
  Dim xxx As Variant
  Dim xcoll As JSONCollection

  ' xVal = modDevice.ChooseBarCodeSource()
  '   Exec ["zbarimg", "-q", "--raw", "/home/sish/Desktop/regist.png"] To xVal
  If xVal Then
    If IsNumber(xVal) Then
    Else

      Try xxx = JSON.Decode(xVal, True)
      If xxx Is JSONCollection Then
        xcoll = xxx
        txtpatno.Text = xcoll["PATIENTNO"]
        txtnamefir.Text = xcoll["NAME"]
        txtnamelast.Text = xcoll["SURNAME"]
        cmbdistrict.Text = xcoll["DISTRICT"]
        If xcoll["ADDRESS"] Then
          xaddr = Split(xcoll["ADDRESS"], "-")
          txtaddfir.Text = xaddr[0]
          If xaddr.Count = 2 Then
            txtward.Text = xaddr[1]
          Endif
        Endif
        cmbsex.Text = xcoll["GENDER"]
        xdate = Val(xcoll["DOB"])
        If xdate Then
          dtdobmain.Tag = xdate
          modDateSub.DateToYearandMonth(xdate, txtyears, txtmonths, btnyear, btnmon)
        Endif
        txtcontact.Text = xcoll["CONTACT"]
        txtemail.Text = xcoll["EMAIL"]
        txtguardian.Text = xcoll["GUARDIAN"]
        cmbrelation.Text = xcoll["RELATION"]
        txtpatcode.Text = xcoll["CODE"]
        If txtpatno.Text Then
          GetPatientInfoAll()
        Endif
        cmbconsult.SetFocus
      Endif

    Endif
  Endif

End

Public Sub mnusearch_Click()

  txtpatno.Text = PatSearch("PatientNo")

End

Public Sub mnugeneral_Click()

  modPatientSub.RegistBlankPatient()
  modPatientSub.RegistBlankEncounter()
  FillRegistrationGrid(dtconsultdate.Value)

End

Public Sub mnupic_Click()

  Dim hForm As FmPersonImage

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmPersonImage("Patient", $rData["fldpatientval"], False)
    hForm.ShowModal
  Endif

End

Public Sub mnuscanfile_Click()

  $imgList = GetImageMulti()

End

''-------------- Encounter menu --------------------------
Public Sub mnupatdemog_Click()

  Dim hForm1 As FmPatdemograph
  Dim hForm As FmPatAccEdit

  If GridView1.Selection.Count Then
    If modBasic.$RegistAutoDemograph Then
      $rData.MoveTo(GridView1.Selection[0])
      Select modBasic.$RegistAutoDemograph
        Case "Acount", "Clinical"
          hForm1 = New FmPatdemograph($rData["fldencounterval"], modBasic.$RegistAutoDemograph)
          hForm1.ShowModal
        Case "Essential"
          hForm = New FmPatAccEdit($rData["fldencounterval"], True)
          hForm.ShowModal
      End Select
    Endif
  Endif

End

Public Sub mnuprescnote_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modPatientSub.PrintRegistExtraReport($rData["fldencounterval"])
  Endif

End

Public Sub mnulabel_Click()

  Dim $hReport As CRegistLabel

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If modNonMedical.AllowRegistSlipWithInvoiceEncid($rData["fldencounterval"]) = True Then
      $hReport = New CRegistLabel($rData["fldencounterval"])
      modControlSub.OpenPDFPreview($rData["fldencounterval"], $hReport.RegistLabelPath(), "LabelSize")
    Endif
  Endif

End

Public Sub mnubarcode_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    ' modDevice.PrintBarCodeEnc($rData["fldencounterval"])
  Endif

End

Public Sub mnuptno_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    Message.Info("Patient No: " & modPatient.GetPatientNoByEnc($rData["fldencounterval"]), ("OK"))
  Endif

End

' Public Sub mnusms_Click()
'
'   If GridView1.Selection.Count > 0 Then
'     modDevice.SendMessageToRegistPatient(GridView1[GridView1.Row, 0].Text)
'   Endif
'
' End

'''================== Search Box ====================
Public Sub btngetfileno_Click()

  If txtbookingid.Text Then
    If rbstaff.Value = True Then
      If modBasic.$RegistStaffFormat = "PAHS" Then
        GetPatientPAHSStaff(Trim(txtbookingid.Text))
      Else If modBasic.$RegistStaffFormat = "NPH" Then
        ' UpdateHRISapi(Trim(txtbookingid.Text))
        ' txtpatno.Text = txtbookingid.Text
      Endif
      If Not txtpatno.Text Then
        GetPatientFromStaff(Trim(txtbookingid.Text))
      Endif
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbsocial.Value = True Then
      GetPatientFromSocial(Trim(txtbookingid.Text))
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbnhis.Value = True Then
      If chkinfant.Value = True Then
        txtpatno.Text = modPatient.GetInfantPatNoByHospCode(Trim(txtbookingid.Text))
      Else
        txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
      Endif
      If Not txtpatno.Text Then
        If modBasic.$RegistDataRepo = "Yes" Then
          modRepository.CopyPatCodeFromRepository(Trim(txtbookingid.Text))
          Wait
          txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
        Endif
      Endif
      If modBasic.$IMISPatientURL Then
        GetIMISDataAPI(Trim(txtbookingid.Text))
      Else
        txtpatcode.Text = Trim(txtbookingid.Text)
      Endif
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        UpdatePatientBasic(txtpatno.Text, Trim(txtnamefir.text), Trim(txtnamelast.text))
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbssf.Value = True Then
      txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
      If Not txtpatno.Text Then
        If modBasic.$RegistDataRepo = "Yes" Then
          modRepository.CopyPatCodeFromRepository(Trim(txtbookingid.Text))
          Wait
          txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
        Endif
      Endif
      If modBasic.$SSFPatientURL Then
        GetSSFDataAPI(Trim(txtbookingid.Text))
      Else
        txtpatcode.Text = Trim(txtbookingid.Text)
      Endif
      If cmbdisctype.Text Then
        cmbdisctype.Enabled = False
      Endif
      If txtpatno.Text Then
        UpdatePatientBasic(txtpatno.Text, Trim(txtnamefir.text), Trim(txtnamelast.text))
        GetPatientInfoAll()
        txtpatno.ReadOnly = True
      Else
        txtpatno.SetFocus
      Endif

    Else If rbbook.Value = True Then
      GetPatientFromBookID(Trim(txtbookingid.Text))

    Else
      If MMain.$CustomFormat = "Patan" Then
        txtpatno.Text = modPatient.GetPatientNoByFileNo(Trim(txtbookingid.Text))
      Else
        txtpatno.Text = modPatient.GetPatientNoByEnc(Trim(txtbookingid.Text))
      Endif
      If txtpatno.Text Then
        GetPatientInfoAll()
      Else
        txtpatno.SetFocus
      Endif

    Endif
  Endif

End

Public Sub txtbookingid_Activate()

  btngetfileno_Click()

End

''==================== Booking =====================
Private Sub GetPatientFromBookID(xBookID As String)

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]
  Dim xscheme As String

  If txtbookingid.Text Then
    $selDate = False
    pnlregistcategory.Enabled = False

    ''show booking table
    sql = "select fldpatientval,fldptnamefir,fldptnamelast,fldptaddvill,fldptaddward,fldptadddist,fldptsex,fldptcontact,fldptguardian,fldptbirday,fldptadmindate,fldemail,fldptcode,fldrelation,fldconsultdate,fldadmitlocat,flduserid,flddisctype from tblpatientbook where fldbookingval=&1 and fldstate=&2"
    res = modDatabase.$myConn.Exec(sql, xBookID, "Planned")
    If res.Available = False Then
      If modBasic.$RegistDataRepo = "Yes" Then
        modRepository.CopyBookingFromRepository(xBookID)
        txtbookingid.SetFocus
      Endif
    Else
      txtpatno.Text = res["fldpatientval"]
      If txtpatno.Text Then
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      Else
        txtvisit.Text = "NEW"
      Endif
      txtnamefir.Text = res["fldptnamefir"]
      txtnamelast.Text = res["fldptnamelast"]
      txtnamefir.ReadOnly = True
      txtnamelast.ReadOnly = True
      cmbdistrict.Text = res["fldptadddist"]  ''district always before address
      cmbsex.Text = res["fldptsex"]
      If res["fldptaddward"] Then
        txtward.Text = res["fldptaddward"]
        txtaddfir.Text = res["fldptaddvill"]
      Else
        If res["fldptaddvill"] Then
          xaddr = Split(res["fldptaddvill"], "-")
          If xaddr.Count > 1 Then
            If IsInteger(xaddr[xaddr.Count - 1]) Then
              txtward.Text = xaddr[xaddr.Count - 1]
              txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Else
            txtward.Text = ""
            txtaddfir.Text = xaddr.Join("-")
          Endif
        Endif
      Endif
      txtcontact.Text = res["fldptcontact"]
      txtguardian.Text = res["fldptguardian"]
      cmbrelation.Text = res["fldrelation"]
      txtemail.Text = res["fldemail"]
      txtpatcode.Text = res["fldptcode"]
      cmbconsult.Text = res["fldadmitlocat"]
      btnconsult.Tag = res["flduserid"]
      btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
      If res["fldptbirday"] Then
        chknull.Value = False
        dtdobmain.Tag = res["fldptbirday"]
        $selDate = True
        modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
      Else
        dtdobmain.Tag = ""
        chknull.Value = True
      Endif
      If txtpatno.Text Then
        lblstatus.Text = "REGISTERED PATIENT"
      Else
        lblstatus.Text = "RECORDED PATIENT"
      Endif
      lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
      If lstdat Then
        If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
          lbllast.Text = "TODAY"
        Else
          lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
        Endif
      Else
        lbllast.Text = ""
      Endif
      xscheme = modBillings.GetDefaultDiscountOnRegistration(Trim(txtpatno.Text), modBasic.$compID)
      cmbdisctype.Text = xscheme
      If Not cmbdisctype.Text Then
        cmbdisctype.Text = res["flddisctype"]
      Else
        If cmbdisctype.Text <> res["flddisctype"] Then
          Message.Warning("Current Package different from booking", "OK")
        Endif
      Endif
      If Not cmbdisctype.Text Then
        cmbdisctype.Text = modBasic.$RegistDefaultDisc
      Endif
      LoadDiscCreditVal()

      If res["fldconsultdate"] >= modDate.StartSqlDate(Now()) And If res["fldconsultdate"] <= modDate.EndSqlDate(Now()) Then
        cmbconsult.SetFocus
      Else
        Message.Warning(("NOT TODAY"), ("OK"))
      Endif
    Endif

  Endif
  $sProceed = True

End

''================= Health Insurance ==============
Private Sub GetIMISDataAPI(xfile As String)

  Dim hCform As CimisAPIPatient
  Dim hCElig As CimisAPIEligible
  Dim xmessage As String
  Dim xresp As String

  Dim xname As String
  Dim xsurname As String
  Dim xgender As String
  Dim xdob As Date
  Dim xcontact As String
  Dim xemail As String
  Dim xdistrict As String
  Dim xfirserv As String
  Dim ximage As String

  Dim xPolicy As String
  Dim xexpdate As Date
  Dim xcredamt As Float
  Dim xallow As Boolean
  Dim xpayval As Float
  Dim xpayType As String

  Dim aPolicy As String
  Dim aexpdate As Date
  Dim acredamt As Float
  Dim apayval As Float
  Dim apayType As String

  Dim bPolicy As String
  Dim bexpdate As Date
  Dim bcredamt As Float
  Dim bpayval As Float
  Dim bpayType As String

  Dim xPatVar As Variant[]
  Dim aColl As Collection
  Dim xallow1 As Boolean
  Dim xallow2 As Boolean

  If xfile Then
    hCform = New CimisAPIPatient(xfile)
    xname = hCform.GetPatientName()
    xsurname = hCform.GetPatientSurName()
    xgender = hCform.GetPatientGender()
    xcontact = hCform.GetPatientContact()
    xemail = hCform.GetPatientEmail()
    xdob = hCform.GetPatientDateBirth()
    xdistrict = hCform.GetPatientDistrict()
    xfirserv = hCform.GetPatientFirstService()
    ximage = hCform.GetPatientImage()

    If xname Then
      hCElig = New CimisAPIEligible(xfile)
      xPatVar = hCElig.GetPatientPolicyData()
      For Each aColl In xPatVar
        If aColl["Policy Name"] = "HIB-3500" Then
          aPolicy = aColl["Policy Name"]
          aexpdate = aColl["Expiry Date"]
          acredamt = aColl["Credit Limit"]
          apayval = aColl["Credit Value"]
          apayType = aColl["Credit Type"]
          xallow1 = True
          If aexpdate < modDate.StartSqlDate(Now()) Then
            xallow1 = False
          Endif
          If acredamt < 200 Then
            xallow1 = False
          Endif
        Else
          bPolicy = aColl["Policy Name"]
          bexpdate = aColl["Expiry Date"]
          bcredamt = aColl["Credit Limit"]
          bpayval = aColl["Credit Value"]
          bpayType = aColl["Credit Type"]
          xallow2 = True
          If bexpdate < modDate.StartSqlDate(Now()) Then
            xallow2 = False
          Endif
          If bcredamt < 200 Then
            xallow2 = False
          Endif
        Endif
      Next
      ' xPolicy = hCElig.GetPolicyNo()
      ' xexpdate = hCElig.GetexpiryDaye()
      ' xcredamt = hCElig.GetAllowedAmt()
      ' xpayval = hCElig.GetCopayValue()
      ' xpayType = hCElig.PatientPayType()
      If Not xdistrict Then
        xdistrict = hCElig.GetPatientDistrict()
      Endif
      If Not xfirserv Then
        xfirserv = hCElig.GetPatientFirstService()
      Endif
      If Not ximage Then
        ximage = hCElig.GetPatientImage()
      Endif
    Endif

    If Exist(ximage) Then
      If modBasic.$RegistSaveApiImage = "Yes" Then
        $ImgPath = ximage
      Endif
    Endif

    If xname Then
      xallow = True
      xmessage = "<h1>" & xname & modString.HTMLBlankSpace(1) & xsurname & "</h1>"

      If xallow1 = False And If aPolicy Then
        xmessage = xmessage & "<br><b>" & aPolicy & " Expired</b>"
      Endif
      If xallow2 = False And If bPolicy Then
        xmessage = xmessage & "<br><b>" & bPolicy & " Expired</b>"
      Endif
      If xallow1 = True And If xallow2 = True Then
        xmessage = xmessage & "<br><b>Allowed Policy:</b> " & aPolicy & ", " & bPolicy
        xPolicy = aPolicy
        xexpdate = aexpdate
        xcredamt = acredamt
        xpayval = apayval
        xpayType = apayType
      Else
        If xallow1 = True Then
          xmessage = xmessage & "<br><b>Allowed Policy:</b> " & aPolicy
          xPolicy = aPolicy
          xexpdate = aexpdate
          xcredamt = acredamt
          xpayval = apayval
          xpayType = apayType
        Else If xallow2 = True Then
          xmessage = xmessage & "<br><b>Allowed Policy:</b> " & bPolicy
          xPolicy = bPolicy
          xexpdate = bexpdate
          xcredamt = bcredamt
          xpayval = bpayval
          xpayType = bpayType
        Else
          xallow = False
        Endif
      Endif

      xmessage = xmessage & "<br>" & "<b>Expiry Date:</b> " & modReportVar.GetDateTimeReport(xexpdate, gb.MediumDate)
      xmessage = xmessage & "<br>" & "<b>Credit Limit:</b> " & modReportVar.GetLocaleNumberFormat(xcredamt, gb.Currency)
      If xcredamt < 1000 Then
        xmessage = xmessage & "<h4> Low Balance</h4>"
      Endif
      If xpayval = 0.1 Then
        xmessage = xmessage & "<h3> Co-Payment</h3>"
      Else
        xmessage = xmessage & "<h3> Full Credit</h3>"
      Endif
      xmessage = xmessage & "<b>Patient Type : </b>" & xpayType
      If xfirserv Then
        xmessage = xmessage & "<br><b>FSP : </b>" & xfirserv
      Endif
      If xallow = True Then
        xresp = MessageValue(xmessage, ["Cancel", "Outpatient", "Emergency"], ximage)
        ' xresp = Message.Question(xmessage, ("Cancel"), ("Outpatient"), ("Emergency"))
      Else If xallow = False Then
        xresp = MessageValue(xmessage, ["Cancel"], ximage)
        ' xresp = Message.Question(xmessage, ("Cancel"))
      Endif

      If xresp = "Outpatient" Then
        If modBasic.$HIPackage And If modBasic.$HIPackageER Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          txtnamefir.ReadOnly = True
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Tag = xdob
          modDateSub.DateToYearandMonth(dtdobmain.Tag, txtyears, txtmonths, btnyear, btnmon)
          cmbdistrict.Text = xdistrict

          $APISelect = xPolicy
          $ValidExpiry = xexpdate
          $CredAmount = xcredamt
          If $CredAmount Then
            txtpatcode.Text = xfile
            txtpatcode.Enabled = False
            If xpayval = 0.1 Then
              cmbdisctype.Text = modBasic.$HIPackage
            Else
              cmbdisctype.Text = modBasic.$HIPackageER
            Endif
            LoadDiscCreditVal()
            If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
              txtpatno.ReadOnly = True
            Endif
          Endif
        Endif

      Else If xresp = "Emergency" Then
        If modBasic.$HIPackageER Then
          txtnamefir.Text = xname
          txtnamelast.Text = xsurname
          txtnamefir.ReadOnly = True
          ' txtnamelast.ReadOnly = True
          cmbsex.Text = xgender
          txtcontact.Text = xcontact
          txtemail.Text = xemail
          dtdobmain.Tag = xdob
          modDateSub.DateToYearandMonth(dtdobmain.Tag, txtyears, txtmonths, btnyear, btnmon)
          cmbdistrict.Text = xdistrict

          $APISelect = xPolicy
          $ValidExpiry = xexpdate
          $CredAmount = xcredamt
          If $CredAmount Then
            txtpatcode.Text = xfile
            txtpatcode.Enabled = False
            cmbdisctype.Text = modBasic.$HIPackageER
            LoadDiscCreditVal()
            If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
              txtpatno.ReadOnly = True
            Endif
          Endif
          cmbconsult.List = modBasic.$RegERDeparts
          If cmbconsult.List.Count = 1 Then
            cmbconsult.Text = modBasic.$RegERDeparts[0]
          Endif
        Endif

      Else If xresp = "Cancel" Then
        txtpatno.Text = ""
        txtnamefir.Text = ""
        txtnamelast.Text = ""
        txtbookingid.SetFocus

      Endif
    Endif

  Endif

  ' Catch

End

''===================== Social ===========================
Private Sub GetPatientFromSocial(xStafID As String)

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]

  If xStafID Then
    $selDate = False
    pnlregistcategory.Enabled = False

    ''show booking table
    sql = "select fldcategory,fldserviceid,fldptnamefir,fldptnamelast,fldptsex,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptbirday,fldemail,fldptguardian,fldrelation,fldjoindate,fldenddate,fldactivity,fldpatientval,flddisctype,fldstatus,fldcitizen,fldidentify,fldscheme,fldservice,fldreferhosp,fldreferdist,fldreferdate,fldsocialmode,fldcreditlim,flddisclimit,fldcreditdate,flddiscdate,fldremark from tblsociallist where fldptcode=&1 and fldstatus=&2 and fldjoindate<=&3 and fldenddate>&3"
    res = modDatabase.$myConn.Exec(sql, xStafID, "Active", Now())
    If res.Available Then
      txtpatno.Text = res["fldpatientval"]
      If txtpatno.Text Then
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      Else
        txtvisit.Text = "NEW"
      Endif
      txtnamefir.Text = res["fldptnamefir"]
      txtnamelast.Text = res["fldptnamelast"]
      txtnamefir.ReadOnly = True
      txtnamelast.ReadOnly = True
      cmbdistrict.Text = res["fldptadddist"]  ''district always before address
      cmbsex.Text = res["fldptsex"]
      If res["fldptaddward"] Then
        txtward.Text = res["fldptaddward"]
        txtaddfir.Text = res["fldptaddvill"]
      Else
        If res["fldptaddvill"] Then
          xaddr = Split(res["fldptaddvill"], "-")
          If xaddr.Count > 1 Then
            If IsInteger(xaddr[xaddr.Count - 1]) Then
              txtward.Text = xaddr[xaddr.Count - 1]
              txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Else
            txtward.Text = ""
            txtaddfir.Text = xaddr.Join("-")
          Endif
        Endif
      Endif
      txtcontact.Text = res["fldptcontact"]
      txtemail.Text = res["fldemail"]
      txtemail.Text = res["fldemail"]
      txtguardian.Text = res["fldptguardian"]
      If res["fldptbirday"] Then
        chknull.Value = False
        dtdobmain.Tag = res["fldptbirday"]
        $selDate = True
        modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
      Else
        dtdobmain.Tag = ""
        chknull.Value = True
      Endif

      If txtpatno.Text Then
        lblstatus.Text = "REGISTERED PATIENT"
      Else
        lblstatus.Text = "RECORDED PATIENT"
      Endif
      lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
      If lstdat Then
        If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
          lbllast.Text = "TODAY"
        Else
          lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
        Endif
      Else
        lbllast.Text = ""
      Endif
      cmbdisctype.Text = res["flddisctype"]
      $ValidExpiry = res["fldenddate"]
      If cmbdisctype.Text Then
        LoadDiscCreditVal()
        cmbdisctype.Enabled = False
      Endif

      If res["fldsocialmode"] And If res["fldenddate"] Then
        If res["fldsocialmode"] = "Add Credit" Then
          If res["fldcreditdate"] Then
            $CredAmount = res["fldcreditlim"] - modNonMedical.GeCreditUsedCurYear(res["fldpatientval"], res["flddisctype"], res["fldcreditdate"], res["fldenddate"])
          Endif
          $DiscAmount = 0
        Else If res["fldsocialmode"] = "Add Discount" Then
          $CredAmount = 0
          If res["flddiscdate"] Then
            $DiscAmount = res["flddisclimit"] - modNonMedical.GetDiscUsedCurYear(res["fldpatientval"], res["flddisctype"], res["flddiscdate"], res["fldenddate"])
          Endif
        Else If res["fldsocialmode"] = "Add Credit+Discount" Then
          If res["fldcreditdate"] Then
            $CredAmount = res["fldcreditlim"] - modNonMedical.GeCreditUsedCurYear(res["fldpatientval"], res["flddisctype"], res["fldcreditdate"], res["fldenddate"])
          Endif
          If res["flddiscdate"] Then
            $DiscAmount = res["flddisclimit"] - modNonMedical.GetDiscUsedCurYear(res["fldpatientval"], res["flddisctype"], res["flddiscdate"], res["fldenddate"])
          Endif
        Endif
      Endif

    Else
      Message.Warning("Account expired or inactive", ("OK"))
    Endif
  Endif

End

'''==================== SSF ==============================
Private Sub GetSSFDataAPI(xfile As String)

  Dim hCform As CssfAPIPatient
  Dim hCElig As CssfAPIEligible
  Dim hCImage As CssfAPIPicture
  Dim xmessage As String
  Dim xresp As String
  Dim aButton As String[]

  Dim xname As String
  Dim xsurname As String
  Dim xgender As String
  Dim xdob As Date
  Dim xcontact As String
  Dim xemail As String
  Dim xdist As String
  Dim xward As String
  Dim xmunic As String
  Dim ximage As String
  Dim xpath As String

  Dim xallow As Boolean
  Dim xaccdt As Float
  Dim xmedextra As Float
  Dim xmedopd As Float
  Dim xmedipd As Float
  Dim xcritPre As Float
  Dim xcritPost As Float
  Dim xcritDisc As Float

  Dim boolMed As Boolean
  Dim boolAcc As Boolean
  Dim boolExtra As Boolean
  Dim boolCrit As Boolean
  Dim xcashper As Float

  If xfile Then

    hCElig = New CssfAPIEligible(xfile)
    xaccdt = hCElig.GetAccidentAmt()
    xmedextra = hCElig.GetMedExtraAmt()
    xmedopd = hCElig.GetMedicalOPDAmt()
    xmedipd = hCElig.GetMedicalIPDAmt()
    xcritPre = hCElig.GetPreDiagnoAmt()
    xcritPost = hCElig.GetPostDiagnoAmt()
    xcritDisc = hCElig.GetDischargeAmt()
    boolMed = hCElig.GetMedicalEnable()
    boolAcc = hCElig.GetAccidentEnable()
    boolExtra = hCElig.GetMedExtraEnable()
    boolCrit = hCElig.GetCriticalEnable()
    ximage = hCElig.GetPatientImage()
    If ximage Then
      xpath = modImageSub.GetHtmlImagePath(ximage)
    Endif

    hCform = New CssfAPIPatient(xfile)
    xname = hCform.GetPatientName()
    xsurname = hCform.GetPatientSurName()
    xgender = hCform.GetPatientGender()
    xcontact = hCform.GetPatientContact()
    xemail = hCform.GetPatientEmail()
    xdob = hCform.GetPatientDateBirth()
    xdist = hCform.GetPatientDistrict()
    xward = hCform.GetPatientWardNo()
    xmunic = hCform.GetPatientMunicipality()

    If Not xpath Then
      ximage = hCform.GetPatientImagePath()
      If ximage Then
        hCImage = New CssfAPIPicture(ximage)
        xpath = hCImage.GetPatientImage()
      Endif
    Endif

    If Exist(ximage) Then
      If modBasic.$RegistSaveApiImage = "Yes" Then
        $ImgPath = xpath
      Endif
    Endif

    If xname Then
      xallow = True
      aButton = New String[]
      aButton.Add("Close")
      xmessage = "<h2>" & xname & modString.HTMLBlankSpace(1) & xsurname & "</h2>"
      xmessage = xmessage & "<b>Sex/DOB :</b> " & xgender & modString.HTMLBlankSpace(1)
      If xdob Then
        xmessage = xmessage & " [" & modReportVar.GetDateTimeReport(xdob, gb.MediumDate) & "]"
      Endif
      xmessage = xmessage & "<br>" & "<b>Address :</b> " & xmunic & " -" & xward & ", " & xdist & "<br>"
      Select Left(xfile, 1)
        Case "C", "D", "E", "F", "G"
          If boolMed = True Then
            aButton.Add("Accident,C")
            aButton.Add("Out Patient")
            xmessage = xmessage & "<br>" & "<b>Medical/Child Accident OPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedopd, gb.Currency)
            xmessage = xmessage & "<br>" & "<b>Medical/Child Accident IPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedipd, gb.Currency) & "<br>"
          Else
            xmessage = xmessage & "<br>" & "<b>Medical/Child Accident Credit suspended </b>" & "<br>"
          Endif

        Case "S"
          If boolMed = True Then
            aButton.Add("Accident,S")
            aButton.Add("Out Patient")
            If xgender = "Female" Then
              aButton.Add("Maternity")
            Endif
            xmessage = xmessage & "<br>" & "<b>Medical/Spouse OPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedopd, gb.Currency)
            xmessage = xmessage & "<br>" & "<b>Medical/Spouse IPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedipd, gb.Currency) & "<br>"
          Else
            xmessage = xmessage & "<br>" & "<b>Medical/Spouse Accident Credit suspended </b>" & "<br>"
          Endif

        Case Else
          If boolAcc = True Then
            aButton.Add("Accident")
            xmessage = xmessage & "<br>" & "<b>Accident Credit:</b> " & modReportVar.GetLocaleNumberFormat(xaccdt, gb.Currency) & "<br>"
          Else
            xmessage = xmessage & "<br>" & "<b> Accident Credit suspended </b>" & "<br>"
          Endif
          If boolMed = True Then
            aButton.Add("Out Patient")
            xmessage = xmessage & "<br>" & "<b>Medical OPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedopd, gb.Currency)
            xmessage = xmessage & "<br>" & "<b>Medical IPD Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedipd, gb.Currency) & "<br>"
          Else
            xmessage = xmessage & "<br>" & "<b> Medical Credit suspended </b>" & "<br>"
          Endif
          If boolCrit = True Then
            aButton.Add("Critical")
            xmessage = xmessage & "<br>" & "<b>Pre Diagnosis Credit:</b> " & modReportVar.GetLocaleNumberFormat(xcritPre, gb.Currency)
            xmessage = xmessage & "<br>" & "<b>Post Diagnosis Credit:</b> " & modReportVar.GetLocaleNumberFormat(xcritPost, gb.Currency)
            xmessage = xmessage & "<br>" & "<b>Post Discharge Credit:</b> " & modReportVar.GetLocaleNumberFormat(xcritDisc, gb.Currency) & "<br>"
          Else
            xmessage = xmessage & "<br>" & "<b> Critical Credit suspended </b>"
          Endif
          If boolExtra = True Then
            aButton.Add("Med Extra")
            xmessage = xmessage & "<br>" & "<b>Medical Extra Credit:</b> " & modReportVar.GetLocaleNumberFormat(xmedextra, gb.Currency) & "<br>"
          Else
            xmessage = xmessage & "<br>" & "<b>Medical Extra Credit suspended </b>" & "<br>"
          Endif
      End Select

      If xaccdt + xmedextra + xmedopd + xmedipd + xcritPre + xcritPost + xcritDisc = 0 Then
        xallow = False
        xmessage = xmessage & "<h3> No Credit in any Category </h3>"
        Message.Warning(xmessage, "OK")
      Else
        txtnamefir.ReadOnly = True
        ' txtnamelast.ReadOnly = True
        txtpatcode.Text = xfile
        txtpatcode.Enabled = False

        xmessage = xmessage & "<h4> Select Service Format</h4>"
        xresp = MessageValue(xmessage, aButton, xpath, xfile)
        $APISelect = xresp

        Select xresp
          Case "Accident", "Med Extra", "Out Patient", "Critical", "Accident,C", "Accident,S", "Maternity"
            txtnamefir.Text = xname
            txtnamelast.Text = xsurname
            cmbsex.Text = xgender
            txtcontact.Text = xcontact
            txtemail.Text = xemail
            dtdobmain.Value = xdob
            If modBasic.$DistrictList.Exist(xdist) Then
              cmbdistrict.Text = xdist
            Endif
            txtaddfir.Text = xmunic
            txtward.Text = xward
            modDateSub.DateToYearandMonth(dtdobmain.Value, txtyears, txtmonths, btnyear, btnmon)
          Case Else
            txtpatno.Text = ""
            txtnamefir.Text = ""
            txtnamelast.Text = ""
        End Select

        Select xresp
          Case "Accident"
            If modBasic.$SSFAccident Then
              $ValidExpiry = DateAdd(Now(), gb.Year, 1)
              If boolAcc = True And If xaccdt Then
                $CredAmount = xaccdt
                cmbdisctype.Text = modBasic.$SSFAccident
                ' modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFAccident)
                LoadDiscCreditVal()
                If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                  txtpatno.ReadOnly = True
                Endif
              Else
                $CredAmount = 0
              Endif
              cmbconsult.List = modBasic.$RegERDeparts
              If cmbconsult.List.Count = 1 Then
                cmbconsult.Text = modBasic.$RegERDeparts[0]
              Endif
            Endif

          Case "Critical"
            If modBasic.$SSFCritical Then
              $ValidExpiry = DateAdd(Now(), gb.Year, 1)
              If boolCrit = True And If xcritPre Then
                xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFCritical)
                $CredAmount = xcritPre * (100 - xcashper) / 100
                cmbdisctype.Text = modBasic.$SSFCritical
                ' modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFCritical)
                LoadDiscCreditVal()
                If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                  txtpatno.ReadOnly = True
                Endif
              Else
                $CredAmount = 0
              Endif
            Endif

          Case "Med Extra"
            If modBasic.$SSFMedExtra Then
              $ValidExpiry = DateAdd(Now(), gb.Year, 1)
              If boolExtra = True And If xmedextra Then
                xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFMedExtra)
                $CredAmount = xmedextra * (100 - xcashper) / 100
                cmbdisctype.Text = modBasic.$SSFMedExtra
                ' modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFMedExtra)
                LoadDiscCreditVal()
                If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                  txtpatno.ReadOnly = True
                Endif
              Else
                $CredAmount = 0
              Endif
            Endif

          Case "Out Patient", "Accident,C", "Accident,S", "Maternity"
            If modBasic.$SSFMedical Then
              $ValidExpiry = DateAdd(Now(), gb.Year, 1)
              If boolMed = True And If xmedopd Then
                xcashper = modNonMedical.GetCashinCreditFixPercent(modBasic.$SSFMedical)
                $CredAmount = xmedopd * (100 - xcashper) / 100
                cmbdisctype.Text = modBasic.$SSFMedical
                ' modFillContainer.ComboInsertNotItem(cmbdisctype, modBasic.$SSFMedical)
                LoadDiscCreditVal()
                If modNonMedical.GetReservePackageParam(cmbdisctype.Text) = "Scheme" Then
                  txtpatno.ReadOnly = True
                Endif
              Else
                $CredAmount = 0
              Endif
            Endif

          Case Else
            txtbookingid.SetFocus
            $CredAmount = 0
        End Select

      Endif
    Endif

  Endif

  ' Catch

End

''============================ Staff ======================
Private Sub GetPatientFromStaff(xStafID As String)

  Dim res As Result
  Dim sql As String
  Dim lstdat As Date
  Dim xaddr As String[]

  If xStafID Then
    $selDate = False
    pnlregistcategory.Enabled = False

    ''show booking table
    sql = "select fldcategory,fldserviceid,fldptnamefir,fldptnamelast,fldptsex,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptbirday,fldemail,fldptguardian,fldrelation,fldjoindate,fldenddate,flduserid,fldpatientval,flddisctype,fldstatus from tblstafflist where fldptcode=&1 and fldstatus=&2 and fldjoindate<=&3 and fldenddate>&3"
    res = modDatabase.$myConn.Exec(sql, xStafID, "Active", Now())
    If res.Available Then
      txtpatno.Text = res["fldpatientval"]
      If txtpatno.Text Then
        txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
      Else
        txtvisit.Text = "NEW"
      Endif
      txtnamefir.Text = res["fldptnamefir"]
      txtnamelast.Text = res["fldptnamelast"]
      txtnamefir.ReadOnly = True
      txtnamelast.ReadOnly = True
      cmbdistrict.Text = res["fldptadddist"]  ''district always before address
      cmbsex.Text = res["fldptsex"]
      If res["fldptaddward"] Then
        txtward.Text = res["fldptaddward"]
        txtaddfir.Text = res["fldptaddvill"]
      Else
        If res["fldptaddvill"] Then
          xaddr = Split(res["fldptaddvill"], "-")
          If xaddr.Count > 1 Then
            If IsInteger(xaddr[xaddr.Count - 1]) Then
              txtward.Text = xaddr[xaddr.Count - 1]
              txtaddfir.Text = xaddr.Copy(0, xaddr.Count - 1).Join("-")
            Else
              txtward.Text = ""
              txtaddfir.Text = xaddr.Join("-")
            Endif
          Else
            txtward.Text = ""
            txtaddfir.Text = xaddr.Join("-")
          Endif
        Endif
      Endif
      txtcontact.Text = res["fldptcontact"]
      txtemail.Text = res["fldemail"]
      txtemail.Text = res["fldemail"]
      txtguardian.Text = res["fldptguardian"]
      If res["fldptbirday"] Then
        chknull.Value = False
        dtdobmain.Tag = res["fldptbirday"]
        $selDate = True
        modDateSub.DateToYearandMonth(res["fldptbirday"], txtyears, txtmonths, btnyear, btnmon)
      Else
        dtdobmain.Tag = ""
        chknull.Value = True
      Endif

      If txtpatno.Text Then
        lblstatus.Text = "REGISTERED PATIENT"
      Else
        lblstatus.Text = "RECORDED PATIENT"
      Endif
      lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
      If lstdat Then
        If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
          lbllast.Text = "TODAY"
        Else
          lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
        Endif
      Else
        lbllast.Text = ""
      Endif
      cmbdisctype.Text = res["flddisctype"]
      $ValidExpiry = res["fldenddate"]
      If cmbdisctype.Text Then
        LoadDiscCreditVal()
        cmbdisctype.Enabled = False
      Endif

    Else
      Message.Warning("Account expired or inactive", ("OK"))
    Endif
  Endif

End

Private Sub GetPatientPAHSStaff(xStafID As String)

  Dim lstdat As Date
  Dim hCForm As CPAHSapi

  If xStafID Then
    $selDate = False
    pnlregistcategory.Enabled = False

    hCForm = New CPAHSapi(xStafID)
    If hCForm.GetEmployeeStatus() Then
      If hCForm.GetEmployeeStatus() = "Working" Then
        txtpatno.Text = modPatient.GetPatientNoByHospCode(Trim(txtbookingid.Text))
        If Not txtpatno.Text Then
          If hCForm.GetEmployeeHospNo() Then
            txtpatno.Text = modPatient.GetPatientNoByFileNo(hCForm.GetEmployeeHospNo())
          Endif
        Endif
        If txtpatno.Text Then
          txtvisit.Text = modPatient.GetPatientHMISStattus(Trim(txtpatno.Text))
        Else
          txtvisit.Text = "NEW"
        Endif

        txtpatcode.Text = xStafID
        txtpatcode.Enabled = False

        txtnamefir.Text = hCForm.GetEmployeeName()
        txtnamelast.Text = hCForm.GetEmployeeSurName()
        txtnamefir.ReadOnly = True
        txtnamelast.ReadOnly = True
        If modBasic.$DistrictList.Exist(hCForm.GetEmployeeDistrict()) Then
          cmbdistrict.Text = hCForm.GetEmployeeDistrict()  ''district always before address
        Endif
        cmbsex.Text = hCForm.GetEmployeeGender()
        txtward.Text = hCForm.GetEmployeeWard()
        txtaddfir.Text = hCForm.GetEmployeeAddress()
        txtcontact.Text = hCForm.GetEmployeeContact()
        txtemail.Text = hCForm.GetEmployeeEmail()
        txtguardian.Text = hCForm.GetEmployeeGuardian()
        cmbrelation.Text = hCForm.GetEmployeeRelation()
        If hCForm.GetEmployeeDOB() Then
          chknull.Value = False
          dtdobmain.Value = hCForm.GetEmployeeDOB()
          $selDate = True
          modDateSub.DateToYearandMonth(hCForm.GetEmployeeDOB(), txtyears, txtmonths, btnyear, btnmon)
        Else
          chknull.Value = True
        Endif

        If txtpatno.Text Then
          lblstatus.Text = "REGISTERED PATIENT"
        Else
          lblstatus.Text = "RECORDED PATIENT"
        Endif
        lstdat = modPatient.GetRecordDate(modPatient.GetLastEncoutnerFromPatNo(Trim(txtpatno.Text)))
        If lstdat Then
          If lstdat >= modDate.StartSqlDate(Date()) And If lstdat <= modDate.EndSqlDate(Date()) Then
            lbllast.Text = "TODAY"
          Else
            lbllast.Text = Left(modDate.GetWeekDay(lstdat), 3) & Space(1) & modReportVar.GetDateTimeReport(lstdat, gb.MediumDate)
          Endif
        Else
          lbllast.Text = ""
        Endif
        cmbdisctype.Text = hCForm.GetEmployeePackage()
        If hCForm.GetEmployeeEndDate() Then
          $ValidExpiry = hCForm.GetEmployeeEndDate()
        Else
          $ValidExpiry = DateAdd(Now(), gb.Year, 1)
        Endif
        If cmbdisctype.Text Then
          LoadDiscCreditVal()
          cmbdisctype.Enabled = False
        Endif

      Else
        Message.Warning("Account expired or inactive", ("OK"))
      Endif

    Else
      Message.Warning("No Response from Server", ("OK"))
    Endif

  Endif

End

Public Sub txtethcode_Activate()

  If $selectList.Exist("Gender") Then
    If modBasic.$AppSelect2JS = "Enable" Then
      modJavaScript.PopUpSelect2Combo(cmbsex)
    Endif
  Endif
  cmbsex.SetFocus

End

Public Sub txtmonths_Activate()

  DateBoxEntry()
  If $selectList.Exist("District") Then
    If modBasic.$AppSelect2JS = "Enable" Then
      modJavaScript.PopUpSelect2Combo(cmbdistrict)
    Endif
  Endif
  cmbdistrict.SetFocus

End

Public Sub cmbdistrict_Click()

  If $sProceed = True Then
    If txtaddfir.List.Count Then
      txtaddfir.Clear()
    Endif
    If cmbdistrict.Text Then
      txtaddfir.List = modDataRepo.GetMunicipalsByDistrict(cmbdistrict.Text)
      If txtaddfir.List.Count Then
        If $selectList.Exist("Municipality") Then
          If modBasic.$AppSelect2JS = "Enable" Then
            SetSelect2Format(txtaddfir)
            modJavaScript.PopUpSelect2Combo(txtaddfir)
          Endif
          txtaddfir.SetFocus
        Endif
      Endif
    Endif
  Endif

End

Public Sub txtguardian_Activate()

  If $selectList.Exist("Relation") Then
    If modBasic.$AppSelect2JS = "Enable" Then
      modJavaScript.PopUpSelect2Combo(cmbrelation)
    Endif
  Endif
  cmbrelation.SetFocus

End

Public Sub txtpatcode_Activate()

  If $selectList.Exist("Department") Then
    If modBasic.$AppSelect2JS = "Enable" Then
      modJavaScript.PopUpSelect2Combo(cmbconsult)
    Endif
  Endif
  cmbconsult.SetFocus

End

Public Sub cmbconsult_Click()

  If $sProceed = True Then
    If cmbconsult.Text Then
      If cmbdisctype.Text Then
        cmbbillmode.SetFocus
      Else
        If modBasic.$AppSelect2JS = "Enable" Then
          cmbdisctype.ReadOnly = True
          modJavaScript.SetSelect2Combo(cmbdisctype)
          modJavaScript.PopUpSelect2Combo(cmbdisctype)
        Endif
        cmbdisctype.SetFocus
      Endif
    Endif
  Endif

End
