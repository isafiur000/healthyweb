' Gambas class file

Private $encid As String
Private $sMode As String
Private $PatientNum As String

Private $rData As Result
Private $aMyFields As String[]

Private $rData1 As Result
Private $aMyFields1 As String[]
Private $sPath As String

Public Sub _new(encid As String, sMode As String)

  $encid = encid
  $sMode = sMode

  If modBasic.$ClinConsultTelemed = "Remote" Then
    btnshowexpert.Visible = True
  Else
    btnshowexpert.Visible = False
  Endif

  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  txtgender.Text = modPatient.GetPatientSex($encid)
  txtpatientaddress.Text = modPatient.GetPatientAddressByEnc($encid)
  txtage.Text = modPatient.GetPatientAgeString($encid, Now())

  ShowTablesGrid()

End

Private Sub ShowTablesGrid()

  Dim sql As String

  sql = "select fldid,fldencounterval,fldencounterval,fldtestid,fldsampletype,fldabnormal,fldreportquali,fldreportquanti,fldtime_report,fldstatus,fldtime_report,fldmethod,fldcondition,fldcomment,fldtestno,fldpacstudy from tbltelradiotest where fldencounterval=&1"                      ''
  $rData = modDatabase.$myConn.Exec(sql, $encid)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
    .Columns[3].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Hidden = True
    .Columns[5].Width = CStr(20 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True
    .Columns[11].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[12].Hidden = True
    .Columns[13].Hidden = True
    .Columns[14].Hidden = True   ''fldtestno
    .Columns[15].Hidden = True  ''fldpacstudy

    .Columns[1].Text = "EncID"
    .Columns[3].Text = "TestName"
    .Columns[6].Text = "Observation"
    .Columns[7].Text = "Value"
    .Columns[8].Text = "ReportingTime"
    .Columns[11].Text = "Method"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 5 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData[$aMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 6 Then
    Data.Html = $rData[$aMyFields[Column]]
  Else If Column = 8 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub GridView1_Select()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    SHowQualiSUbTest($rData["fldtestno"])
  Endif

End

Private Sub SHowQualiSUbTest(serial As Long)

  Dim sql As String

  sql = "select fldid,fldchk,fldsubtest,fldabnormal,fldreport,fldorder from tbltelradiosubtest where fldencounterval=&1 and fldtestid=&2"
  $rData1 = modDatabase.$myConn.Exec(sql, $encid, serial)
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView2, $rData1, $aMyFields1)
  ResizeSubGrid()

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData1[$aMyFields1[Column]]), "75%", "75%")
    Data.Text = ""
  Else If Column = 4 Then
    Data.Html = $rData1[$aMyFields1[Column]]
  Else
    Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

Private Sub ResizeSubGrid()

  With GridView2
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(500 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Hidden = True
    .Columns[2].Text = "SubTest"
    .Columns[4].Text = "Observation"
  End With

End

Public Sub btnclose_Click()

  Me.Close()

End

''================================== View =============================
Public Sub btnplay_Click()

  Dim res As Result
  Dim xserver As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If $rData["fldpacstudy"] Then

      res = modDatabase.$myConn.Exec("select fldpacstudy,fldpacseries,fldpacsform from tbltelradiotest where fldid=&1", $rData["fldid"])
      If res.Available Then
        If res["fldpacseries"] Then
          xserver = InputCombo("Select PACS Node to Use", "PACS", modMisc.GetPacsServerList(), "", True)
          If xserver Then
            modpacs.GetPacsSetting(xserver)
            $sPath = modPACS.DicomSeriesWebView(res["fldpacsform"], $encid, res["fldpacstudy"], res["fldpacseries"])
            mnuopenview_Click()
          Endif
        Endif
      Endif

    Endif
  Endif

End

Public Sub mnuopenview_Click()

  If $sPath Then
    Me.Exec("window.open('" & $sPath & "'); ")
  Endif

End

Public Sub btnimage_Click()

  Dim hForm As FmTestImage

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmTestImage("IMAGE", $encid, $rData["fldtestno"], $rData["fldtestid"], "Radiology", "")
    hForm.ShowModal
  Endif

End

Public Sub btndicom_Click()

  Dim hForm As FmTestImage

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmTestImage("DICOM", $encid, $rData["fldtestno"], $rData["fldtestid"], "Radiology", "")
    hForm.ShowModal
  Endif

End

''====================== Repository ================
Public Sub btnexpert_Click()

  Dim xMedUser As String[]
  Dim res As Result
  Dim xPath As String

  res = modDatabase.$myConn.Exec("select fldcategory,fldhospital,fldteleuser,fldusername from tbltelemeduser where fldstatus=&1", "Active")
  xPath = modTextDB.ConvertResultToCSV(res, ";", False)
  If Exist(xPath) Then
    xMedUser = TreeViewCode(xPath, ";", 3, True)
    If xMedUser And If xMedUser.Count Then
      cmbexpert.Tag = xMedUser[1]
      cmbexpert.Text = modGeneral.GetTeleMedUserName(cmbexpert.Tag)
    Endif
  Endif

End

Public Sub btnshowexpert_Click()

  modDatabase.$myConn.Delete("tbltelemeduser")
  Wait
  modRepoSync.ReadSyncConfig()
  modRepoSync.GetAPISyncTwoSource(modDatabase.$myConn, "tbltelemeduser", True)

End

Public Sub btnupload_Click()

  Dim res As Result
  Dim xstUID As String
  Dim xserver As String
  Dim res1 As Result
  Dim xapp As String
  Dim res2 As Result

  Dim arcmd1 As String[]
  Dim arcmd2 As String[]
  Dim arcmd3 As String[]
  Dim arcmd4 As String[]
  Dim arcmd5 As String[]

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If $rData["fldpacstudy"] Then
      res = modDatabase.$myConn.Exec("select fldpacstudy,fldpacseries,fldpacsform from tbltelradiotest where fldid=&1", $rData["fldid"])
      If res.Available Then

        xserver = InputCombo("Select PACS Node to Use", "PACS", modMisc.GetPacsServerList(), "", True)
        If xserver Then
          modpacs.GetPacsSetting(xserver)
          If res["fldpacsform"] = "Orthanc" Then
            xstUID = res["fldpacstudy"]
          Else
            xstUID = modPACS.GetOrthancString($encid & "|" & res["fldpacstudy"])
          Endif
          If xstUID Then
            modRepository.UploadOrthancStudy(xstUID)
          Endif
        Endif

        xapp = modSettings.ShowSettingFromFIle("Application/RepoUploader")
        Select modBasic.$ClinicTelemed
          Case "Enable", "Partial"
            If xapp Then
              arcmd1 = [xapp, "--upload-repo-one", "tblencounter", $encid]
              arcmd2 = [xapp, "--upload-repo-one", "tblpatientinfo", $PatientNum]
              arcmd3 = [xapp, "--upload-repo-one", "tblpatradiotest", $rData["fldid"]]
              modBasic.DebugAPIString("Execute " & arcmd1.Join(Space(1)))
              Exec arcmd1 Wait
              modBasic.DebugAPIString("Execute " & arcmd2.Join(Space(1)))
              Exec arcmd2 Wait
              modBasic.DebugAPIString("Execute " & arcmd3.Join(Space(1)))
              Exec arcmd3 Wait
            Else
              modRepository.UploadSingleToRepository("tblencounter", $encid)
              modRepository.UploadSingleToRepository("tblpatientinfo", $PatientNum)
              modRepository.UploadSingleToRepository("tblpatradiotest", $rData["fldid"])
            Endif
            res1 = modDatabase.$myConn.Exec("select fldid from tbltelradiosubtest where fldencounterval=&1 and fldtestid=&2", $encid, $rData["fldtestno"])
            If res1.Available Then
              For Each res1
                If xapp Then
                  arcmd4 = [xapp, "--upload-repo-one", "tblpatradiosubtest", res1["fldid"]]
                  modBasic.DebugAPIString("Execute " & arcmd4.Join(Space(1)))
                  Exec arcmd4 Wait
                Else
                  modRepository.UploadSingleToRepository("tblpatradiosubtest", res1["fldid"])
                Endif
              Next
            Endif
            res2 = modDatabase.$myConn.Exec("select fldid from tblpatserialimage where fldencounterval=&1 and fldtestid=&2", $encid, $rData["fldtestno"])
            If res2.Available Then
              For Each res2
                If xapp Then
                  arcmd5 = [xapp, "--uploadimg-repo-one", "tblpatserialimage", res2["fldid"]]
                  modBasic.DebugAPIString("Execute " & arcmd5.Join(Space(1)))
                  Exec arcmd5 Wait
                Else
                  modRepository.UploadOneReportToRepository("tblpatserialimage", res2["fldid"])
                Endif
              Next
            Endif
            Me.Exec("Toastify({text: 'Information uploaded', duration: 3000}).showToast()")

          Case "Complete"
            modDataRepo.GetRepoUploadEncounterData($encid)
            Me.Exec("Toastify({text: 'Information uploaded', duration: 3000}).showToast()")
        End Select

      Endif
    Endif
  Endif

End
