' Gambas module file

''------------------------------------ compare Primary -----------------------------------------
Public Function CompareTwoDBPrimaryReport(conn1 As Connection, conn2 As Connection, xdiff As Boolean) As String                                             ''

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim hTable1 As Table
  Dim hTable2 As Table
  Dim hTab As String[]
  Dim xx As String
  Dim aa As String
  Dim bb As String

  $BillingReport = New CReportHTML([("Tables"), conn1.Name, conn2.Name], "", "")
  $BillingReport.UserData.Add("Connection1: " & conn1.Name, "PARAM1")
  $BillingReport.UserData.Add("Connection2: " & conn2.Name, "PARAM2")

  hTab = New String[]
  For Each hTable1 In conn1.Tables
    If hTable1.System = True Then
    Else
      hTab.Add(hTable1.Name)
    Endif
  Next
  For Each hTable2 In conn2.Tables
    If hTable2.System = True Then
    Else
      hTab.Add(hTable2.Name)
    Endif
  Next

  For Each xx In modString.BinaryDistinctStringArray(hTab, gb.Ascent)

    If conn1.Tables.Exist(xx) Then
      For Each hTable1 In conn1.Tables
        If hTable1.Name = xx Then
          aa = "Primary: " & hTable1.PrimaryKey.Join(";")
        Endif
      Next
    Else
      aa = ""
    Endif

    If conn2.Tables.Exist(xx) Then
      For Each hTable2 In conn2.Tables
        If hTable2.Name = xx Then
          bb = "Primary: " & hTable2.PrimaryKey.Join(";")
        Endif
      Next
    Else
      bb = ""
    Endif

    If xdiff = True Then
      If aa = bb Then
      Else
        With asx
          .Add(modString.TextToHTML(xx,,,,,, True))
          .Add(aa)
          .Add(bb)
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Else
      With asx
        If aa = bb Then
          .Add(xx)
        Else
          .Add(modString.TextToHTML(xx,,,,,, True))
        Endif
        .Add(aa)
        .Add(bb)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next

  Return $BillingReport.NewHTMLPath()

End

''------------------------- compare collation ------------------------------
Public Function CompareTwoDBCollationReport(conn1 As Connection, conn2 As Connection, xdiff As Boolean) As String                                                 ''

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim hTable1 As Table
  Dim hTable2 As Table
  Dim hTab As String[]
  Dim xx As String
  Dim aa As String
  Dim bb As String
  Dim res1 As Result
  Dim res2 As Result
  Dim tabList As String[]

  $BillingReport = New CReportHTML([("Tables"), conn1.Name, conn2.Name], "", "")
  $BillingReport.UserData.Add("Connection1: " & conn1.Name, "PARAM1")
  $BillingReport.UserData.Add("Connection2: " & conn2.Name, "PARAM2")

  hTab = New String[]
  For Each hTable1 In conn1.Tables
    If hTable1.System = True Then
    Else
      hTab.Add(hTable1.Name)
    Endif
  Next
  For Each hTable2 In conn2.Tables
    If hTable2.System = True Then
    Else
      hTab.Add(hTable2.Name)
    Endif
  Next
  tabList = modString.BinaryDistinctStringArray(hTab, gb.Ascent)

  res1 = conn1.Exec("SELECT TABLE_NAME, TABLE_COLLATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=&1", conn1.Name)
  res2 = conn2.Exec("SELECT TABLE_NAME, TABLE_COLLATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=&1", conn2.Name)
  For Each xx In tabList
    aa = ""
    bb = ""
    For Each res1
      If res1["TABLE_NAME"] = xx Then
        aa = res1["TABLE_COLLATION"]
        Break
      Endif
    Next
    For Each res2
      If res2["TABLE_NAME"] = xx Then
        bb = res2["TABLE_COLLATION"]
        Break
      Endif
    Next

    If xdiff = True Then
      If aa = bb Then
      Else
        With asx
          .Add(modString.TextToHTML(xx,,,,,, True))
          .Add(aa)
          .Add(bb)
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Else
      With asx
        If aa = bb Then
          .Add(xx)
        Else
          .Add(modString.TextToHTML(xx,,,,,, True))
        Endif
        .Add(aa)
        .Add(bb)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next
  Return $BillingReport.NewHTMLPath()

End

''---------------------------------------- DB Compare -----------------------------------------------
Public Function CompareTwoDBReport(conn1 As Connection, conn2 As Connection, xdiff As Boolean, xvarLength As Boolean) As String                                              ''

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim hTable1 As Table
  Dim hTable2 As Table
  Dim hTab As String[]
  Dim fld1 As Field
  Dim fld2 As Field
  Dim xx As String
  Dim aa As String[]
  Dim bb As String[]

  $BillingReport = New CReportHTML([("Tables"), conn1.Name, conn2.Name], "", "")
  $BillingReport.UserData.Add("Connection1: " & conn1.Name, "PARAM1")
  $BillingReport.UserData.Add("Connection2: " & conn2.Name, "PARAM2")

  hTab = New String[]
  For Each hTable1 In conn1.Tables
    If hTable1.System Then
    Else
      hTab.Add(hTable1.Name)
    Endif
  Next
  For Each hTable2 In conn2.Tables
    If hTable2.System Then
    Else
      hTab.Add(hTable2.Name)
    Endif
  Next

  For Each xx In modString.BinaryDistinctStringArray(hTab, gb.Ascent)
    aa = New String[]
    bb = New String[]

    If conn1.Tables.Exist(xx) Then
      For Each hTable1 In conn1.Tables
        If hTable1.Name = xx Then
          For Each fld1 In hTable1.Fields
            If fld1.Length Then
              If xvarLength = True Then
                aa.Add(fld1.Name & " [" & GetDataTypeFromID(fld1.Type) & "(" & fld1.Length & ")]")
              Else
                aa.Add(fld1.Name & " [" & GetDataTypeFromID(fld1.Type) & "]")
              Endif
            Else
              aa.Add(fld1.Name & " [" & GetDataTypeFromID(fld1.Type) & "]")
            Endif
          Next
          If aa Then
            aa.Sort()
          Endif
          aa.Add("Fields Count: " & hTable1.Fields.Count)
        Endif
      Next
    Endif

    If conn2.Tables.Exist(xx) Then
      For Each hTable2 In conn2.Tables
        If hTable2.Name = xx Then
          For Each fld2 In hTable2.Fields
            If fld2.Length Then
              If xvarLength = True Then
                bb.Add(fld2.Name & " [" & GetDataTypeFromID(fld2.Type) & "(" & fld2.Length & ")]")
              Else
                bb.Add(fld2.Name & " [" & GetDataTypeFromID(fld2.Type) & "]")
              Endif
            Else
              bb.Add(fld2.Name & " [" & GetDataTypeFromID(fld2.Type) & "]")
            Endif
          Next
          If bb Then
            bb.Sort()
          Endif
          bb.Add("Fields Count: " & hTable2.Fields.Count)
        Endif
      Next
    Endif

    If xdiff = True Then
      If aa.Join(gb.NewLine) = bb.Join(gb.NewLine) Then
      Else
        With asx
          .Add(modString.TextToHTML(xx,,,,,, True))
          .Add(aa.Join("<br>"))
          .Add(bb.Join("<br>"))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Else
      With asx
        If aa.Join(gb.NewLine) = bb.Join(gb.NewLine) Then
          .Add(xx)
        Else
          .Add(modString.TextToHTML(xx,,,,,, True))
        Endif
        .Add(aa.Join("<br>"))
        .Add(bb.Join("<br>"))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next
  Return $BillingReport.NewHTMLPath()

End

Private Function GetDataTypeFromID(sType As Integer) As String

  Dim xx As String

  If sType = db.Serial Then
    xx = "Serial"
  Else If sType = db.Long Then
    xx = "Long"
  Else If sType = db.Integer Then
    xx = "Integer"
  Else If sType = gb.Float Then
    xx = "Float"
  Else If sType = gb.String Then
    xx = "String"
  Else If sType = gb.Date Then
    xx = "Date"
  Else If sType = gb.Boolean Then
    xx = "Boolean"
  Else If sType = db.Blob Then
    xx = "Blob"
  Else
    xx = CStr(sType)
  Endif

  Return xx

End

''---------------------------------------- Index comparison -----------------------------------
Public Function CompareDBIndexReport(conn1 As Connection, conn2 As Connection, xdiff As Boolean) As String                                                ''

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim hTable1 As Table
  Dim hTable2 As Table
  Dim hTab As String[]
  Dim fld1 As Index
  Dim fld2 As Index
  Dim xx As String
  Dim aa As String
  Dim bb As String

  $BillingReport = New CReportHTML([("Tables"), conn1.Name, conn2.Name], "", "")
  $BillingReport.UserData.Add("Connection1: " & conn1.Name, "PARAM1")
  $BillingReport.UserData.Add("Connection2: " & conn2.Name, "PARAM2")

  hTab = New String[]
  For Each hTable1 In conn1.Tables
    If hTable1.System Then
    Else
      hTab.Add(hTable1.Name)
    Endif
  Next
  For Each hTable2 In conn2.Tables
    If hTable2.System Then
    Else
      hTab.Add(hTable2.Name)
    Endif
  Next

  For Each xx In modString.BinaryDistinctStringArray(hTab, gb.Ascent)

    If conn1.Tables.Exist(xx) Then
      For Each hTable1 In conn1.Tables
        If hTable1.Name = xx Then
          aa = "Index Count: " & hTable1.Indexes.Count
          For Each fld1 In hTable1.Indexes
            aa = aa & "<br>" & fld1.Name & " [" & fld1.Fields.Join(";") & "]"
          Next
        Endif
      Next
    Else
      aa = ""
    Endif

    If conn2.Tables.Exist(xx) Then
      For Each hTable2 In conn2.Tables
        If hTable2.Name = xx Then
          bb = "Index Count: " & hTable2.Indexes.Count
          For Each fld2 In hTable2.Indexes
            bb = bb & "<br>" & fld2.Name & " [" & fld2.Fields.Join(";") & "]"
          Next
        Endif
      Next
    Else
      bb = ""
    Endif

    If xdiff = True Then
      If aa = bb Then
      Else
        With asx
          .Add(modString.TextToHTML(xx,,,,,, True))
          .Add(aa)
          .Add(bb)
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Else
      With asx
        If aa = bb Then
          .Add(xx)
        Else
          .Add(modString.TextToHTML(xx,,,,,, True))
        Endif
        .Add(aa)
        .Add(bb)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next
  Return $BillingReport.NewHTMLPath()

End

Public Function GetIndexListReport(conn1 As Connection) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim hTable1 As Table
  Dim fld1 As Index
  Dim xpri As String
  Dim xindx As String[]

  $BillingReport = New CReportHTML([("Tables"), ("Primary"), ("Index")], "", "")
  $BillingReport.UserData.Add("Index Report", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  For Each hTable1 In conn1.Tables
    xindx = New String[]
    For Each fld1 In hTable1.Indexes
      If fld1.Name = "PRIMARY" Then
        xpri = fld1.Fields.Join(";")
      Else
        xindx.Add(fld1.Name & " [" & fld1.Fields.Join(";") & "]")
      Endif
    Next

    With asx
      .Add(hTable1.Name)
      .Add(xpri)
      .Add(xindx.Join("<br>"))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  Return $BillingReport.NewHTMLPath()

End
