' Gambas class file

Private $encid As String
Private $patNo As String
Private $rData As Result
Private $aMyFields As String[]
Private $rData1 As Result
Private $aMyFields1 As String[]

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

''---- group controls ----------
Private aMainFrame As New Object[50]
Private aWebFrame As New Object[50]
Private aWebPanel As New Object[50]
Private aIndexLabel As New Object[50]
' Private aSpecLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aHTMLText As New Object[50]
Private aLineText As New Object[50]
Private aUnitText As New Object[50]
Private aValueBox As New Object[50]
Private aQuantiBox As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aQuantiUnit As New Object[50]
Private aQuantiCalc As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGenTextArea As New Object[50]
Private aBlanTextBox As New Object[50]
Private aButtonBox As New Object[50]
Private aButnFixed As New Object[50]

Private $xData As Variant[]
Private $groupForm As Boolean

Public Sub _new()
  
  Dim xoption As String
  Dim xdefault As String
  Dim ht As String
  
  cmbcategory.List = modMedicine.GetPathoCategoryList("Test")
  cmbcategory.Add("%")
  xdefault = modSettings.ShowSettingFromFIle("Laboratory/DefaultDepartment")
  If xdefault Then
    cmbcategory.Text = xdefault
  Else
    cmbcategory.Text = "%"
  Endif
  cmbspecimen.List = modBasic.$LabSpecimenList
  cmbspecimen.Add("%")
  cmbspecimen.Text = "%"
  
  modLabSub.DisplayDefaultTestUnit(rbsi, rbmetric)
  modSettings.ShowCheckBox(chkfreeview, "TestUnit/MixedView")
  modSettings.ShowCheckBox(chkall, "TestReporting/ShowAll")
  
  dtselected.Value = Now()
  dtlisted.Value = Now()
  xoption = modSettings.ShowSettingFromFIle("EntrySetting/Laboratory_DateSelect")
  If xoption = "Yes" Then
    chkdate.Value = True
    chklist.Value = True
  Else If xoption = "No" Then
    chkdate.Value = False
    chklist.Value = False
  Endif
  DateSelectionSett()
  rballtype.Value = True
  ShowInputForm()
  modAccount.PasInvoiceSetting(cmbfiscal, False)
  LoadTableNames()
  
  ''----------- group controls ----
  ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
  If ht Then
    Slider1.Value = CInt(ht)
  Else
    Slider1.Value = 3
  Endif
  
End

Public Sub WebForm_Open()
  
  modGeneralMain.RecordFormUse(Me)
  
End

' Public Sub Form_KeyRelease()
'
'   If Key.Code = Key["O"] And If Key.Control Then
'     btnwebcam_Click()
'   Else If Key.Code = Key["R"] And If Key.Control Then
'     btnrefresh_Click()
'   Else If Key.Code = Key["F"] And If Key.Control Then
'   Else If Key.Code = Key["A"] And If Key.Control Then
'     btncomponent_Click()
'   Else If Key.Code = Key.Left Then
'     GridView1.SetFocus
'   Else If Key.Code = Key["B"] And If Key.Control Then
'     Me.Close
'     Wait
'     modAppSupport.AddNewFormToWorkspace(fmLabReporting)
'   Else If Key.Code = Key["X"] And If Key.Control Then
'     Me.Close()
'   Endif
'
' End

Private Sub LoadTableNames()
  
  Dim res As Result
  
  If cmbfiscal.Text = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif
  
End

Public Sub cmbfiscal_Click()
  
  LoadTableNames()
  
End

Private Sub ShowInputForm()
  
  Dim xx As String
  
  xx = modSettings.ShowSettingFromFIle("Laboratory/InputFormat")
  If xx = "Sample" Then
    rbsample.Value = True
  Else If xx = "Invoice" Then
    rbinvoice.Value = True
  Else
    rbencounter.Value = True
  Endif
  
End

Public Sub rbencounter_Click()
  
  modSettings.SaveSettingsToFile("Laboratory/InputFormat", "Encounter")
  
End

Public Sub rbsample_Click()
  
  modSettings.SaveSettingsToFile("Laboratory/InputFormat", "Sample")
  
End

Public Sub rbinvoice_Click()
  
  modSettings.SaveSettingsToFile("Laboratory/InputFormat", "Invoice")
  
End

Public Sub rbsi_Click()
  
  modSettings.SaveSettingsToFile("TestUnit/Default", "SI")
  
End

Public Sub rbmetric_Click()
  
  modSettings.SaveSettingsToFile("TestUnit/Default", "Metric")
  
End

Public Sub dtnepselect_Click()
  
  Dim xx As String
  
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtselected.Value))
  If xx Then
    dtselected.Value = modDate.ConvertToEnglishdate(xx)
  Endif
  
End

Public Sub dtneplist_Click()
  
  Dim xx As String
  
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlisted.Value))
  If xx Then
    dtlisted.Value = modDate.ConvertToEnglishdate(xx)
  Endif
  
End

'''---------------------------------- Reporting List ----------------------------
Public Sub btnrefresh_Click()
  
  FillReportList()
  
End

Private Sub FillReportList()
  
  Dim str1 As String
  Dim xcomp As String
  Dim xstr As String
  
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = " and fldcomp_sample not like &3"
  Else
    xstr = " and fldcomp_sample like &3"
  Endif
  
  If chklist.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, modDate.StartSqlDate(dtlisted.Value), modDate.EndSqlDate(DateAdd(dtlisted.Value, gb.Day, txtrange.Value)), cmbspecimen.Text)
    Else
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, cmbcategory.Text, modDate.StartSqlDate(dtlisted.Value), modDate.EndSqlDate(DateAdd(dtlisted.Value, gb.Day, txtrange.Value)), cmbspecimen.Text)
    Endif
    
  Else
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldsampletype like &4 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldsampletype like &4 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldsampletype like &4 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, cmbspecimen.Text)
    Else
      If rbencounter.Value = True Then
        str1 = "select distinct(fldencounterval) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldsampletype like &5 ORDER BY fldid ASC"
      Else If rbsample.Value = True Then
        str1 = "select distinct(fldsampleid) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldsampletype like &5 ORDER BY fldid ASC"
      Else If rbinvoice.Value = True Then
        str1 = "select distinct(fldbillno) as fldparent,fldencounterval,fldencounterval,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2" & xstr & " and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldsampletype like &5 ORDER BY fldid ASC"
      Endif
      $rData1 = modDatabase.$myConn.Exec(str1, "Sampled", True, xcomp, cmbcategory.Text, cmbspecimen.Text)
    Endif
    
  Endif
  
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView1, $rData1, $aMyFields1)
  With GridView1
    .Columns[0].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(10 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Text = "Name"
  End With
  
End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)
  
  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Text = ""
    Data.Background = modPatient.GetPatientColor($rData1[$aMyFields1[Column]])
  Else If Column = 3 Then
    Data.Text = modPatient.GetPatientNameByEnc($rData1[$aMyFields1[Column]])
  Else
    Data.Text = $rData1[$aMyFields1[Column]]
  Endif
  
End

Public Sub GridView1_Select()
  
  GridView1Click()
  
End

Private Sub GridView1Click()
  
  Dim xstatus As String
  
  If GridView1.Selection.Count Then
    $rData1.MoveTo(GridView1.Selection[0])
    modRepository.$RepoDataStatus = False
    ' btnshow.Enabled = False
    txtencid.Text = $rData1["fldparent"]
    $encid = $rData1["fldencounterval"]
    txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
    txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & modPatient.GetPatientSex($encid)
    txtpatientaddress.Text = modPatient.GetPatientAddressByEnc($encid)
    
    $patNo = modPatient.GetPatientNoByEnc($encid)
    xstatus = modPatient.CurrentAdmissionStatus($encid)
    txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
    txtcolor.Background = modPatient.GetPatientColor($encid)
    If chklist.Value = True Then
      dtselected.Value = dtlisted.Value
      txtdtrange.Value = txtrange.Value
      chkdate.Value = True
      Panel11.Enabled = True
    Else
      chkdate.Value = False
      Panel11.Enabled = False
    Endif
    ' modImage.ShowPhotoSplash("Patient", $patNo)
    WebTabPanel1.Index = 0
    FillLabtable()
    OpenPopEntry()
    $groupForm = False
  Endif
  
End

Public Sub btnexpotree_Click()
  
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  
  Dim sql As String
  Dim res As Result
  
  Dim xcomp As String
  Dim xstr As String
  
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like &4"
  Else
    xstr = "fldcomp_sample like &4"
  Endif
  
  $BillingReport = New CReportHTML([("SNo"), ("SampleTime"), ("Encounter"), ("PatientName"), ("SampleNo"), ("TestName"), ("Observation")], " ", "")
  $BillingReport.UserData.Add("TESTS TO REPORT", "PARAM1")
  $BillingReport.UserData.Add("Category : " & cmbcategory.Text, "PARAM2")
  
  sql = "select fldid,fldtime_sample,fldsampleid,fldtestid,fldencounterval from " & $tblpatlabtest & " where fldstatus=&1 and fldsave_sample=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr
  res = modDatabase.$myConn.Exec(sql, "Sampled", True, cmbcategory.Text, xcomp)
  For Each res
    With asx
      .Add(res!fldid)
      .Add(modReportVar.GetDateTimeReport(res!fldtime_sample, gb.GeneralDate))
      .Add(res!fldencounterval)
      .Add(modPatient.GetPatientNameByEnc(res!fldencounterval))
      .Add(res!fldsampleid)
      .Add(res!fldtestid)
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next
  
  modControlSub.OpenHTMLPreview("", $BillingReport.NewHTMLPath(), "ReportSize")
  
End

''------------------------------------ individual patient tests ------------------------
' Public Sub btnwebcam_Click()
'
'   txtencid.Text = modDevice.ChooseBarCodeSource()
'   txtencid.SetFocus
'   txtencid.Pos = Len(txtencid.Text)
'
' End

Public Sub btnblankform_Click()
  
  Me.Parent.DeleteChildren()
  modGeneralMain.LoadReportingForm()
  
End

Public Sub btnsearchenc_Click()
  
  If Not txtencid.Text Then
    txtencid.Text = QRScanValue("")
  Endif
  
End

Public Sub txtencid_Activate()
  
  btnshow_Click()
  
End

Public Sub btnshow_Click()
  
  Dim xstatus As String
  
  If Not txtencid.Text Then Return
  If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
    txtencid.SetFocus
    Return
  Endif
  If txtencid.Text Then
    modRepository.$RepoDataStatus = False
    ' btnshow.Enabled = False
    If rbencounter.Value = True Then
      $encid = Trim(txtencid.Text)
    Else If rbsample.Value = True Then
      $encid = modLabTest.GetEncounterFromSampleID(txtencid.Text, $tblpatlabtest)
    Else If rbinvoice.Value = True Then
      $encid = modNonMedical.GetEncounterFromBillNo(txtencid.Text, cmbfiscal.Text)
    Endif
    txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
    txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & modPatient.GetPatientSex($encid)
    txtpatientaddress.Text = modPatient.GetPatientAddressByEnc($encid)
    
    $patNo = modPatient.GetPatientNoByEnc($encid)
    xstatus = modPatient.CurrentAdmissionStatus($encid)
    txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
    txtcolor.Background = modPatient.GetPatientColor($encid)
    modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", $encid)
    If modPatientSub.AllowEncIDHistory($encid, modDatabase.$myConn) = True Then
      ' modImage.ShowPhotoSplash("Patient", $patNo)
      WebTabPanel1.Index = 0
      FillLabtable()
      OpenPopEntry()
    Else
      Me.Enabled = False
    Endif
  Endif
  
End

Private Sub OpenPopEntry()
  
  Dim hForm As FmEnterGroupTest
  Dim xList As String[]
  Dim xFinal As String[]
  Dim xtest As String
  Dim categList As String[]
  Dim xcateg As String
  
  If modBasic.$LabReportGroup = "Yes" Then
    If cmbcategory.Text = "%" Then
      xList = modControlSub.GetDirectFillresult(ExecuteQuery(["fldtestid as col"], False))
      If xList And If xList.Count Then
        xFinal = modString.BinaryDistinctStringArray(xList)
        categList = New String[]
        For Each xtest In xFinal
          xcateg = modFixLab.GetLabTestCategory(xtest)
          If xcateg Then
            categList.Add(xcateg)
          Endif
        Next
        hForm = New FmEnterGroupTest($encid, modString.BinaryDistinctStringArray(categList), $tblpatlabtest)
        hForm.ShowModal
      Endif
      
    Else
      categList = New String[]
      categList.Add(cmbcategory.Text)
      hForm = New FmEnterGroupTest($encid, categList, $tblpatlabtest)
      hForm.ShowModal
    Endif
  Endif
  
End

' Public Sub txtencid_GotFocus()
'
'   btnshow.Enabled = True
'
' End

Public Sub chkall_Click()
  
  modSettings.EnterCheckSetting(chkall, "TestReporting/ShowAll")
  
End

Private Sub DateSelectionSett()
  
  If chkdate.Value = True Then
    Panel11.Enabled = True
  Else
    Panel11.Enabled = False
  Endif
  
  If chklist.Value = True Then
    Panel13.Enabled = True
  Else
    Panel13.Enabled = False
  Endif
  
End

Public Sub chklist_Click()
  
  modSettings.EnterCheckSetting(chklist, "EntrySetting/Laboratory_DateSelect")
  DateSelectionSett()
  
End

Public Sub chkdate_Click()
  
  modSettings.EnterCheckSetting(chkdate, "EntrySetting/Laboratory_DateSelect")
  DateSelectionSett()
  
End

Public Sub chkfreeview_Click()
  
  modSettings.EnterCheckSetting(chkfreeview, "TestUnit/MixedView")
  
End

Private Function ExecuteQuery(xFldList As String[], xShowAll As Boolean) As Result
  
  Dim sql As String
  Dim xcomp As String
  Dim xstr As String
  Dim xload As String
  Dim res As Result
  
  If Not cmbcategory.Text Then
    cmbcategory.Text = "%"
  Endif
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like "
  Else
    xstr = "fldcomp_sample like "
  Endif
  If rbloaded.Value = True Then
    xload = " and fldtime_start IS NOT NULL"
  Else
    xload = ""
  Endif
  If Not cmbspecimen.Text Then
    cmbspecimen.Text = "%"
  Endif
  
  If chkdate.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")                             ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")                               ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Endif
    Else
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")                            ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", cmbcategory.Text, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldtime_sample>=&7 and fldtime_sample<=&8 and fldsampletype like &9" & xload & modLabSub.GetLabRepoOrder("Test")                               ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldtime_sample>=&7 and fldtime_sample<=&8 and fldsampletype like &9" & xload & modLabSub.GetLabRepoOrder("Test")                               ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
        Endif
      Endif
    Endif
    
  Else
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldsampletype like &4" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", xcomp, cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")                             ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")                             ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", $encid, xcomp, cmbspecimen.Text)
        Endif
      Endif
    Else
      If rbencounter.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")                            ''
          res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", "Reported", cmbcategory.Text, xcomp, cmbspecimen.Text)
        Endif
      Else If rbsample.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Endif
      Else If rbinvoice.Value = True Then
        If xShowAll = False Then
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Else
          sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and (fldstatus=&2 or fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory like &4) and fldencounterval=&5 and " & xstr & "&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")                              ''
          res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", "Reported", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
        Endif
      Endif
    Endif
    
  Endif
  
  Return res
  
End

Private Sub FillLabtable()
  
  Dim xFldList As String[]
  
  If chkfreeview.Value = True Then
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldid", "fldreportquali", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Else
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldid", "fldid", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Endif
  
  $rData = ExecuteQuery(xFldList, chkall.Value)
  $aMyFields = New String[]
  modGridView.ReadSmallData(TableView1, $rData, $aMyFields)
  
  With TableView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Hidden = True
    .Columns[4].Hidden = True
    .Columns[5].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Hidden = True
    .Columns[8].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[11].Hidden = True
    .Columns[12].Hidden = True
    .Columns[13].Hidden = True
    .Columns[14].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[15].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[16].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[17].Hidden = True
    
    .Columns[1].Text = "Sample"
    .Columns[2].Text = "Test Name"
    .Columns[6].Text = "Observation"
    .Columns[8].Text = "Visible"
    .Columns[9].Text = "Specimen"
    .Columns[10].Text = "Method"
    .Columns[14].Text = "Sample Time"
    .Columns[15].Text = "Report Time"
    .Columns[16].Text = "Load Time"
  End With
  ' modGridView.SetLabReportIconwithLoad(TableView1, 3, 5, 16, 5)
  
End

Public Sub TableView1_Data(Row As Integer, Column As Integer, Data As WebTableData)
  
  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 6 Then
    If chkfreeview.Value = True Then
      Data.Html = $rData[$aMyFields[Column]]
    Else
      Data.Html = modLabTest.GetLabTestValueString($rData[$aMyFields[Column]], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), True, $encid, $tblpatlabtest)
    Endif
  Else If Column = 5 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetWebIconPath(SetLabReportIconwithLoad($rData[$aMyFields[Column]])), "75%", "75%")
    Data.Text = ""
  Else If Column = 14 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else If Column = 15 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else If Column = 16 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif
  
End

Private Function SetLabReportIconwithLoad(sID As Long) As String
  
  Dim res As Result
  Dim xx As String
  
  res = modDatabase.$myConn.Exec("select fldstatus,fldabnormal,fldtime_start from " & $tblpatlabtest & " where fldid=&1", sID)
  If res.Available Then
    If res["fldstatus"] = "Reported" Or If res["fldstatus"] = "Verified" Then
      If res["fldtime_start"] Then
        If res["fldabnormal"] = True Then
          xx = "icons/coll5.png"
        Else
          xx = "icons/coll4.png"
        Endif
      Else
        If res["fldabnormal"] = True Then
          xx = "icons/true.svg"
        Else
          xx = "icons/false.svg"
        Endif
      Endif
      
    Else If res["fldstatus"] = "Sampled" Then
      If res["fldtime_start"] Then
        xx = "icons/coll6.png"
      Else
        xx = "icons/null.svg"
      Endif
      
    Endif
  Endif
  Return xx
  
End

Public Sub btncomponents_Click()
  
  Dim yqualival As Variant[]
  Dim hForm2 As FmLabQuantiVal
  Dim hForm3 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim res As Result
  Dim sql As String
  Dim xData As Variant[]
  Dim xunit As String
  Dim xType As String
  Dim xdate As Date
  Dim xquali As String
  
  Dim defstr As String
  Dim defVal As Float
  Dim xdeflt As String
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    If $rData["fldtest_type"] = "Qualitative" Then
      xType = modFixLab.GetLabTestOptionType($rData["fldtestid"])
      sql = "select fldid,fldsubtest,fldtanswertype,fldreport,fldabnormal,fldindex from " & $tblpatlabsubtest & " where fldtestid=&1"
      res = modDatabase.$myConn.Exec(sql, $rData["fldid"])
      If res.Available = False Then 
        If xType = "Clinical Scale" Then
          yqualival = modExamOption.GetClinScalePopUp("Test", $rData["fldtestid"])
          If yqualival Then
            modLabSub.UpdateLabQualiQuanti($rData["fldid"], yqualival[1], CFloat(yqualival[0]), False, "", $tblpatlabtest)
          Endif
        Else If xType = "Left and Right" Then
          xquali = modLabTest.GetLabTestValueString($rData["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), False, $encid, $tblpatlabtest)
          yqualival = CLeftRight($rData["fldtestid"], xquali, modFixClinic.GetLeftRightMainHeader("Test", $rData["fldtestid"]))
          If yqualival Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], yqualival[0], yqualival[1], "", $tblpatlabtest)
          Endif
        Else If xType = "Date Time" Then
          xdate = GetDateValue($rData["fldtestid"], ("Select Date Time"), Val($rData["fldreportquali"]))
          If xdate Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], modDate.DateStringForExam(xdate), False, "", $tblpatlabtest)
          Endif
        Else If xType = "BS Date" Then
          xdate = GetDateValue($rData["fldtestid"], ("Select Date Time"), modDate.ConvertToEnglishdate($rData["fldreportquali"]))
          If xdate Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], modDate.ConvertToLocaldate(xdate), False, "", $tblpatlabtest)
          Endif
        Else If xType = "Qualitative" Then
          yqualival = GetQualiString($rData["fldtestid"], $rData["fldreportquali"], "Test")
          If yqualival Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], yqualival[0], yqualival[1], "", $tblpatlabtest)
          Endif
        Else If xType = "RichText Area" Then
          yqualival = GetQualiRich($rData["fldtestid"], $rData["fldreportquali"], "Test")
          If yqualival Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], yqualival[0], yqualival[1], yqualival[2], $tblpatlabtest)
          Endif
        Else If xType = "Calculated" Then
          xdeflt = $rData["fldreportquali"]
          If Not xdeflt Then
            defstr = modAllExam.GetExamDefaultValue("Test", $rData["fldtestid"])
            If defstr Then
              xdeflt = modReportVar.GetCalcValueVariant(defstr, $encid)
            Endif
          Endif
          yqualival = GetQualiValues($rData["fldtestid"], xdeflt, "Test")
          If yqualival Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], yqualival[0], yqualival[1], yqualival[2], $tblpatlabtest)
          Endif
        Else
          yqualival = GetQualiValues($rData["fldtestid"], $rData["fldreportquali"], "Test")
          If yqualival Then
            modLabSub.UpdateLabTestReportQuali($rData["fldid"], yqualival[0], yqualival[1], yqualival[2], $tblpatlabtest)
          Endif
        Endif
        
      Else If res.Available = True Then
        xData = New Variant[]
        For Each res
          xData.Add([res["fldsubtest"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
        Next
        xData.Add(["Final Impression", $rData["fldreportquali"], 0, "RichText Area", False, ""])
        If xType = "Left/Right Components" Then
          hFormTwo = New FmEnterMultipleTwo($rData["fldid"], "Test", $rData["fldtestid"], xData, $rData["fldsampletype"], cmbfiscal.Text)
          hFormTwo.ShowModal
        Else
          hForm3 = New FmEnterMultiple($rData["fldid"], "Test", $rData["fldtestid"], xData, $rData["fldsampletype"], cmbfiscal.Text)
          hForm3.ShowModal
        Endif 
      Endif
      
    Else If $rData["fldtest_type"] = "Quantitative" Then
      xunit = modLabSub.GetTestUnitFromButton(rbsi, rbmetric)
      defVal = modLabTest.GetTestQuantiValueLabID($encid, $rData["fldid"], xunit, $tblpatlabtest)
      If Not defVal Then
        xType = modFixLab.GetLabTestOptionType($rData["fldtestid"])
        If xType = "Calculated" Then
          defstr = modAllExam.GetExamDefaultValue("Test", $rData["fldtestid"])
          If defstr Then
            defVal = modReportVar.GetCalcValueFloat(defstr, $encid)
          Endif
        Endif
      Endif
      hForm2 = New FmLabQuantiVal($rData["fldid"], $rData["fldtestid"], defVal, xunit, $rData["fldsampletype"], "", $tblpatlabtest)
      hForm2.ShowModal
      
    Endif
    
    FillLabtable()
  Endif
  
End

Public Sub btnflag_Click()
  
  Dim xx As String
  Dim res As Result
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    If $rData["fldstatus"] = "Reported" Then
      xx = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetWebIconPath(SetLabReportIconwithLoad($rData["fldid"])), True)
      If xx Then
        
        res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData["fldid"])
        If xx = "Abnormal" Then
          res["fldabnormal"] = True
        Else
          res["fldabnormal"] = False
        Endif
        res["xyz"] = False
        res.Update
        FillLabtable()
        
      Endif
    Endif
  Endif
  
End

Public Sub btnvisible_Click()
  
  Dim xopt As String[] = ["Visible", "Hidden"]
  Dim xx As String
  Dim res As Result
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    xx = InputCombo("Set Visibility", $rData["fldtestid"], xopt, $rData["flvisible"], True)
    If xx Then
      res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData["fldid"])
      res["flvisible"] = xx
      res["xyz"] = False
      res.Update
      FillLabtable()
    Endif
  Endif
  
End

Public Sub btnspecimen_Click()
  
  Dim xx As String
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    If modBasic.$LabLockSpecimen = "No" Then
      xx = GetTextArea(("Specimen"), $rData["fldsampletype"])
    Else
      xx = InputCombo(("Test Specimen"), $rData["fldtestid"], modBasic.$LabSpecimenList, $rData["fldsampletype"], True)
    Endif
    If Trim(xx) Then
      modLabSub.UpdateSpecimenTest($rData["fldid"], Trim(xx), $tblpatlabtest)
      FillLabtable()
    Endif
  Endif
  
End

Public Sub btnmethod_Click()
  
  Dim xx As String
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    xx = InputCombo(("Select Test Method"), $rData["fldtestid"], modFixLab.MethodsForLabTest($rData["fldtestid"]), $rData["fldmethod"], True)
    If xx Then
      modLabSub.UpdateEquipmentMethod($rData["fldid"], xx, $tblpatlabtest)
      FillLabtable()
    Endif
  Endif
  
End

Public Sub btncomponent_Click()
  
  Dim xxx As String[]
  Dim yyy As String[]
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    If modFixLab.GetLabTestOptionType($rData["fldtestid"]) = "Custom Components" Then
      xxx = modFixLab.GetSubTestArray($rData["fldtestid"])   'modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldsubtest) as col from tbltestquali where fldtestid=&1", $rData["fldtestid"]))
      yyy = GridListView(("Select Components"), xxx)
      If yyy And If yyy.Count Then
        modLabSub.InsertLabSubTest($encid, $rData["fldid"], $rData["fldtestid"], yyy, $tblpatlabsubtest)
      Endif
    Endif
  Endif
  
End

Public Sub btncondi_Click()
  
  Dim xx As String
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    xx = GetTextArea(("Condition"), $rData["fldcondition"])
    If xx Then
      modLabSub.UpdateConditionTest($rData["fldid"], xx, $tblpatlabtest)
      FillLabtable()
    Endif
  Endif
  
End

Public Sub btncomment_Click()
  
  Dim xx As String
  Dim res As Result
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    xx = GetTextArea($rData["fldtestid"], $rData["fldcomment"])
    If xx Then
      res = modDatabase.$myConn.Edit($tblpatlabtest, "fldid=&1", $rData["fldid"])
      res["fldcomment"] = xx
      res["xyz"] = False
      res.Update
      FillLabtable()
    Endif
  Endif
  
End

Public Sub btnimage_Click()
  
  Dim hForm As FmTestImage
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    hForm = New FmTestImage("IMAGE", $encid, $rData["fldid"], $rData["fldtestid"], "Laboratory", "")
    hForm.ShowModal
  Endif
  
End

Public Sub btndicom_Click()
  
  Dim hForm As FmTestImage
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    hForm = New FmTestImage("DICOM", $encid, $rData["fldid"], $rData["fldtestid"], "Laboratory", "")
    hForm.ShowModal
  Endif
  
End

Public Sub btnsms_Click()
  
  Dim xmsg As String
  
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    xmsg = modDevice.SendSMSLabPatient($encid, $rData["fldtestid"], modLabTest.GetLabTestValueString($rData["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), False, $encid, $tblpatlabtest))
  Endif
  If xmsg Then
    Message.Info(xmsg, ("OK"))
  Endif
  
End

''-------------------------------------- button report -------------------------------------
Public Sub btnreport_Click()
  
  Dim hCls As CReportCustom
  Dim unt As String
  
  If rbsi.Value = True Then
    unt = "SI"
  Else
    unt = "Metric"
  Endif
  
  If $encid Then
    If modSettings.ShowSettingFromFIle("Diagnostic Help/Name") Then
      hCls = New CReportCustom($encid, "Diagnostic Help", "ReportSize", unt)
      hCls.Preview()
    Endif
  Endif
  
End

Public Sub btnchartall_Click()
  
  Dim sql As String
  Dim res As Result
  Dim xvalList As Float[]
  Dim xtitList As String[]
  Dim unt As String
  
  If rbsi.Value = True Then
    unt = "SI"
  Else
    unt = "Metric"
  Endif
  xvalList = New Float[]
  xtitList = New String[]
  If TableView1.Selection.Count Then
    $rData.MoveTo(TableView1.Selection[0])
    If $rData["fldtest_type"] = "Quantitative" Then
      sql = "select fldid,fldencounterval,fldtime_sample from " & $tblpatlabtest & " where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldtestid=&2 and fldtest_type=&3 and (fldstatus=&4 or fldstatus=&5) ORDER BY fldtime_sample"
      res = modDatabase.$myConn.Exec(sql, $patNo, $rData["fldtestid"], "Quantitative", "Reported", "Verified")
      If res.Available Then
        For Each res
          xvalList.Add(modLabTest.GetTestQuantiValueLabID(res["fldencounterval"], res["fldid"], unt, $tblpatlabtest))
          xtitList.Add(modReportVar.GetDateTimeReport(res["fldtime_sample"], gb.MediumDate))
        Next
      Endif
      
      If xvalList.Count Then
        modControlSub.OpenChartView("line", $rData["fldtestid"], xtitList, xvalList)
      Endif
      
    Endif
  Endif
  
End

Public Sub btnfullrep_Click()
  
  If $encid Then
    modCHTMLReport.ExportGridToHTML(TableView1, "", "TEST REPORTING",, $encid)
  Endif
  
End

''------------------------- menu procedures -----------------------------------
Public Sub btnrepoprint_Click()
  
  Dim hForm As FmLabRepSettings
  
  If txtencid.Text Then
    modGeneralMain.$LastEncounterID = Trim(txtencid.Text)
    Try Me.Parent.DeleteChildren()
    hForm = New FmLabRepSettings(modGeneralMain.$LastEncounterID, fmTechnician.Workspace1)
  Endif
  
End

Public Sub btnhistory_Menu()
  
  mnuhistory.Popup(btnhistory)
  
End

Public Sub mnulocal_Click()
  
  Dim xPath As String
  Dim xpatno As String
  
  If txtencid.Text Then
    xpatno = $patNo
    If modPatientSub.GetPatPassCheck(modDatabase.$myConn, xpatno) = True Then
      xPath = modCHTMLPatient.ShowPatientAllLaboratoryReport($encid, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
      modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
    Endif
  Endif
  
End

Public Sub mnuremote_Click()
  
  Dim xPath As String
  Dim xpatno As String
  Dim sCon As Connection
  Dim xCon As Connection
  
  If txtencid.Text Then
    xpatno = $patNo
    
    If modPatientSub.GetPatPassCheck(modDatabase.$myConn, xpatno) = True Then
      sCon = modDatabase.$myConn
      xCon = modDatabase.$syConn
      Message.Info(("Generating Report ...."), ("OK"))
      modRepository.TransferRemoConn(xpatno)
      xPath = modCHTMLPatient.ShowPatientAllLaboratoryReport($encid, modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
      modControlSub.OpenHTMLPreview($encid, xPath, "ReportSize")
      modDatabase.$myConn = sCon
      modDatabase.$syConn = xCon
      MMain.InitialAppMode()
    Endif
    
  Endif
  
End

Public Sub btnmachine_Click()
  
  Dim xList As String[]
  
  xList = New String[]
  For Each $rData
    If xList.Exist($rData["fldsampleid"]) = False Then
      xList.Add($rData["fldsampleid"])
    Endif
  Next
  
  If xList.Count Then
    modInterface.SyncInterfacingSelectedData(xList)
    FillLabtable()
    Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  Endif
  
End

Public Sub mnupdatesub_Click()
  
  Dim xxx As String[]
  Dim xType As String
  
  If TableView1.Selection.Count Then
    modDatabase.$myConn.Begin
    modDatabase.$myConn.Delete($tblpatlabsubtest, "fldtestid=&1", $rData["fldid"])
    xType = modFixLab.GetLabTestOptionType($rData["fldtestid"])
    If xType = "Fixed Components" Or If xType = "Left/Right Components" Then
      xxx = modFixLab.GetSubTestArray($rData["fldtestid"])     'modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldsubtest) as col from tbltestquali where fldtestid=&1", GridView1[Row, 3].Text))
      If xxx.Count Then
        modLabSub.InsertLabSubTest($encid, $rData["fldid"], $rData["fldtestid"], xxx, $tblpatlabsubtest)
      Endif
    Endif
    modDatabase.$myConn.Commit
  Endif
  
Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()
  
End

''-------------------- Group Data --------------------------
Private Function GroupExecuteQuery(xFldList As String[]) As Result
  
  Dim sql As String
  Dim xcomp As String
  Dim xstr As String
  Dim xload As String
  Dim res As Result
  
  If Not cmbcategory.Text Then
    cmbcategory.Text = "%"
  Endif
  If modBasic.$LabReportingComp Then
    xcomp = modBasic.$LabReportingComp
  Else
    xcomp = modBasic.$compID
  Endif
  If modBasic.$LabReportingFrom = "Not From" Then
    xstr = "fldcomp_sample not like "
  Else
    xstr = "fldcomp_sample like "
  Endif
  If rbloaded.Value = True Then
    xload = " and fldtime_start IS NOT NULL"
  Else
    xload = ""
  Endif
  If Not cmbspecimen.Text Then
    cmbspecimen.Text = "%"
  Endif
  
  If chkdate.Value = True Then
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldtime_sample>=&4 and fldtime_sample<=&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Endif
    Else
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldtime_sample>=&5 and fldtime_sample<=&6 and fldsampletype like &7" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldsampletype like &8" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, modDate.StartSqlDate(dtselected.Value), modDate.EndSqlDate(DateAdd(dtselected.Value, gb.Day, txtdtrange.Value)), cmbspecimen.Text)
      Endif
    Endif
    
  Else
    If cmbcategory.Text = "%" Then
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and " & xstr & "&3 and fldsampletype like &4" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", xcomp, cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldencounterval=&3 and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", $encid, xcomp, cmbspecimen.Text)
      Endif
    Else
      If rbencounter.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldencounterval=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and " & xstr & "&4 and fldsampletype like &5" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Sampled", cmbcategory.Text, xcomp, cmbspecimen.Text)
      Else If rbsample.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldsampleid=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
      Else If rbinvoice.Value = True Then
        sql = "select " & xFldList.Join(",") & " from " & $tblpatlabtest & " where fldbillno=&1 and fldstatus=&2 and fldtestid in(select fldtestid from tbltest where fldcategory like &3) and fldencounterval=&4 and " & xstr & "&5 and fldsampletype like &6" & xload & modLabSub.GetLabRepoOrder("Test")
        res = modDatabase.$myConn.Exec(sql, txtencid.Text, "Sampled", cmbcategory.Text, $encid, xcomp, cmbspecimen.Text)
      Endif
    Endif
    
  Endif
  
  Return res
  
End

''-------------------- Group controls ---------------------
Public Sub WebTabPanel1_Click()
  
  If WebTabPanel1.Index = 1 Then
    LoadGroupQuery()
    ShowGroupControls()
  Else
    $groupForm = False
  Endif
  
End

Private Sub LoadGroupQuery()
  
  Dim xFldList As String[]
  Dim res As Result
  
  If chkfreeview.Value = True Then
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldabnormal", "fldreportquali", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Else
    xFldList = ["fldid", "fldsampleid", "fldtestid", "fldstatus", "fldsave_report", "fldabnormal", "fldid", "fldtime_sample", "flvisible", "fldsampletype", "fldmethod", "fldtest_type", "fldcondition", "fldcomment", "fldtime_sample", "fldtime_report", "fldtime_start", "fldreportquali"]
  Endif
  res = GroupExecuteQuery(xFldList)
  
  $xData = New Variant[]
  If res.Available Then
    For Each res
      If res["fldtest_type"] = "Quantitative" Then
        $xData.Add([res["fldid"], res["fldtestid"], res["fldsampleid"], res["fldtest_type"], "Quantitative"])
      Else
        $xData.Add([res["fldid"], res["fldtestid"], res["fldsampleid"], res["fldtest_type"], modFixLab.GetLabTestOptionType(res["fldtestid"])])
      Endif
    Next
  Endif
  
End

Private Sub ShowGroupControls()
  
  Frame1.DeleteChildren()
  LoadFormData()
  
End

Private Sub LoadFormData()
  
  Dim i As Integer
  
  For i = 0 To $xData.Count - 1
    If i < 49 Then
      
      aMainFrame[i] = New WebContainer(Frame1)
      aWebFrame[i] = New WebHBox(aMainFrame[i])
      aIndexLabel[i] = New WebValueBox(aWebFrame[i]) As "IndexLabel"
      ' aSpecLabel[i] = New TextLabel(aWebFrame[i]) As "SpecimenLabel"
      aNameLabel[i] = New WebHtml(aWebFrame[i]) As "NameLabel"
      aAbnormCheck[i] = New WebCheckBox(aWebFrame[i]) As "CheckBoxgroup"
      
      aWebPanel[i] = New WebHBox(aMainFrame[i])
      If $xData[i][3] = "Quantitative" Then
        aQuantiBox[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroup"
        aQuantiMin[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroupMin"
        aQuantiMax[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroupMax"
        aQuantiUnit[i] = New WebLabel(aWebPanel[i])
        aQuantiCalc[i] = New WebButton(aWebPanel[i]) As "CalcButton"
      Else
        Select $xData[i][4]
          Case "Single Selection"
            aComboBox[i] = New WebComboBox(aWebPanel[i]) As "ComboGroup"
          Case "Dichotomous"
            aDichoValue[i] = New DichotomousValue(aWebPanel[i]) As "DichoText"
          Case "Left and Right"
            aLeftRight[i] = New LeftRightTextArea(aWebPanel[i]) As "LeftRightGroup"
          Case "Date Time", "BS Date"
            aDateBox[i] = New WebDateBox(aWebPanel[i]) As "DateGroup"
            aBSDate[i] = New WebButton(aWebPanel[i]) As "BSButton"
          Case "Quantitative"
            aValueBox[i] = New WebValueBox(aWebPanel[i]) As "ValueGroup"
            aUnitText[i] = New WebTextBox(aWebPanel[i]) As "UnitGroup"
          Case "ImageValue"
            aButtonBox[i] = New WebButtonBox(aWebPanel[i])
          Case "Qualitative"
            aLineText[i] = New WebTextBox(aWebPanel[i]) As "TextLineGroup"
          Case "RichText Area"
            aHTMLText[i] = New WebTextHTML(aWebPanel[i]) As "TextHTMLgroup"
          Case "No Selection"
            aGenTextArea[i] = New WebTextArea(aWebPanel[i]) As "GenAreaGroup"
          Case "Fixed Components", "Left/Right Components"
            aBlanTextBox[i] = New WebTextBox(aWebPanel[i]) As "TextBlankGroup"
            aButnFixed[i] = New WebButton(aWebPanel[i]) As "FixButtonGroup"
          Case Else
        End Select
        aQuantiUnit[i] = New WebLabel(aWebPanel[i])
      Endif
      
    Endif
  Next
  DIsplayTextForm()
  
End

Private Sub DIsplayTextForm()
  
  Dim i As Integer
  Dim xlimit As Float[]
  
  Dim xType As String
  Dim defstr As String
  
  For i = 0 To $xData.Count - 1
    If i < 49 Then
      
      With aMainFrame[i]
        .Arrangement = Arrange.Row
      End With
      
      With aWebFrame[i]
        .Class = "size-tablet less-container-margin"
      End With
      
      ''create index label
      With aIndexLabel[i]
        .Width = "2em"
        .Height = "2em"
        .Value = $xData[i][0]
        .Visible = False
        .Tag = i
      End With
      
      ' ''create specimen
      ' With aSpecLabel[i]
      '   .X = (5 + 5) * AppFactor
      '   .Y = (i * 25 * Slider1.Value + 15) * AppFactor
      '   .Width = 75 * AppFactor
      '   .Height = 25 * Slider1.Value * AppFactor
      '   .Text = $xData[i][2]
      '   .Tag = i
      '   .Wrap = True
      ' End With
      
      ''create Name Label
      With aNameLabel[i]
        .Expand = True
        .Font = "bold"
        .Text = "<p>" & $xData[i][1] & "</p>"
        .Tag = i
      End With
      
      With aWebPanel[i]
        .Class = "size-tablet less-container-margin"
      End With
      
      If $xData[i][3] = "Quantitative" Then
        xlimit = modLabTest.GetTestBothLimits($xData[i][0], modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .Width = "6em"
          .Height = "2em"
          .Text = "Abn"
          .Enabled = False
          .Tag = i
        End With
        
        ''create observation entry
        With aQuantiBox[i]
          .Expand = True
          .Height = "2em"
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .Width = "6em"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .Width = "6em"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With
        With aQuantiUnit[i]
          .Width = "6em"
          .Height = "2em"
          .Border = True
          .Text = modLabTest.GetTestUnitSrting($xData[i][0], modLabSub.GetTestUnitFromButton(rbsi, rbmetric))
          .Tag = i
        End With
        With aQuantiCalc[i]
          .Class = "toolButton"
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/calculator"
          .Tag = i
        End With
        xType = modFixLab.GetLabTestOptionType($xData[i][1])
        If xType = "Calculated" Then
          defstr = modAllExam.GetExamDefaultValue("Test", $xData[i][1])
          If defstr Then
            With aQuantiBox[i]
              .Value = modReportVar.GetCalcValueFloat(defstr, $encid)
            End With
          Endif
        Endif
        
      Else
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .Width = "6em"
          .Height = "2em"
          .Text = "Abn"
          .Tag = i
        End With
        
        ''create observation entry
        If $xData[i][4] = "Single Selection" Then
          With aComboBox[i]
            .Expand = True
            .Height = "2em"
            .ReadOnly = False
            .List = modAllExam.SelectExamOptionList("Test", $xData[i][1], $xData[i][4])
            .Text = ""
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Dichotomous" Then
          With aDichoValue[i]
            .Expand = True
            .Height = "2em"
            .List = modAllExam.SelectExamOptionList("Test", $xData[i][1], $xData[i][4])
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Left and Right" Then
          With aLeftRight[i]
            .Expand = True
            .Height = CStr(2 * Slider1.Value) & "em"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Date Time" Then
          With aDateBox[i]
            .Width = "12em"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "2em"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "BS Date" Then
          With aDateBox[i]
            .Width = "12em"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "2em"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Quantitative" Then
          With aValueBox[i]
            .Expand = True
            .Height = "2em"
            .Tag = i
          End With
          With aUnitText[i]
            .Width = "6em"
            .Height = "2em"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "ImageValue" Then
          With aButtonBox[i]
            .Expand = True
            .Height = "2em"
            .Text = ""
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Qualitative" Then
          With aLineText[i]
            .Expand = True
            .Height = "2em"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "RichText Area" Then
          With aHTMLText[i]
            .Expand = True
            .Height = CStr(2 * Slider1.Value) & "em"
            ' .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Fixed Components" Then
          With aBlanTextBox[i]
            .Expand = True
            .Height = "2em"
            .Tag = i
          End With
          With aButnFixed[i]
            .Width = "2em"
            .Height = "2em"
            .Image = "icon:/small/attach"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "Left/Right Components" Then
          With aBlanTextBox[i]
            .Expand = True
            .Height = "2em"
            .Tag = i
          End With
          With aButnFixed[i]
            .Width = "2em"
            .Height = "2em"
            .Image = "icon:/small/attach"
            .Tag = i
          End With
          
        Else If $xData[i][4] = "No Selection" Then
          With aGenTextArea[i]
            .Expand = True
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With
          
        Endif
        With aQuantiUnit[i]
          .Width = "4em"
          .Height = "2em"
          .Border = True
          .Tag = i
        End With
        
      Endif
      
    Endif
  Next
  
  $groupForm = True
  
End

Public Sub FixButtonGroup_Click()
  
  Dim j As Integer
  Dim sql As String
  Dim res As Result
  Dim aData As Variant[]
  Dim hForm3 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim xType As String
  
  If $groupForm = True Then 
    j = Last.Tag
    xType = modFixLab.GetLabTestOptionType($xData[j][1]) 
    sql = "select fldid,fldsubtest,fldtanswertype,fldreport,fldabnormal,fldindex from " & $tblpatlabsubtest & " where fldtestid=&1"
    res = modDatabase.$myConn.Exec(sql, $xData[j][0])
    If res.Available = True Then
      aData = New Variant[]
      For Each res
        aData.Add([res["fldsubtest"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
      Next
      aData.Add(["Final Impression", "", 0, "RichText Area", False, ""])
      If xType = "Left/Right Components" Then 
        hFormTwo = New FmEnterMultipleTwo($xData[j][0], "Test", $xData[j][1], aData, "", cmbfiscal.Text)
        hFormTwo.ShowModal
      Else
        hForm3 = New FmEnterMultiple($xData[j][0], "Test", $xData[j][1], aData, "", cmbfiscal.Text)
        hForm3.ShowModal
      Endif 
    Endif
  Endif
  
End

Public Sub btncntrlrefresh_Click()
  
  modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
  Frame1.DeleteChildren()
  If TableView1.Count Then
    LoadFormData()
  Endif
  
End

Public Sub btnBrOK_Click()
  
  If $xData And If $xData.Count Then
    FillGenExams()
    Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  Endif
  
End

Private Sub FillGenExams()
  
  Dim i As Integer
  
  For i = 0 To $xData.Count - 1
    If i < 49 Then
      If $xData[i][3] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modLabSub.UpdateLabTestReportQuanti(aIndexLabel[i].Value, aQuantiBox[i].Value, aAbnormCheck[i].Value, modLabSub.GetTestUnitFromButton(rbsi, rbmetric), $tblpatlabtest)
        Endif
      Else
        If $xData[i][4] = "Single Selection" Then
          If aComboBox[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aComboBox[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aDichoValue[i].Value, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aLeftRight[i].DataText, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Date Time" Then
          If aDateBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "BS Date" Then
          If aDateBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "Quantitative" Then
          If aValueBox[i].Value Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "ImageValue" Then
          If aButtonBox.Text Then
            
          Endif
        Else If $xData[i][4] = "Qualitative" Then
          If aLineText[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aLineText[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aHTMLText[i].RichText, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Else If $xData[i][4] = "No Selection" Then
          If aGenTextArea[i].Text Then
            modLabSub.UpdateLabTestReportQuali(aIndexLabel[i].Value, aGenTextArea[i].Text, aAbnormCheck[i].Value, "", $tblpatlabtest)
          Endif
        Endif
      Endif
    Endif
  Next
  
End

Public Sub btnfill_Click()
  
  Dim i As Integer
  Dim res As Result
  
  If $xData And If $xData.Count Then
    For i = 0 To $xData.Count - 1
      If i < 49 Then
        res = modDatabase.$myConn.Exec("select flddetail from tbltest where fldtestid=&1", $xData[i][1])
        If res.Available Then
          
          If $xData[i][4] = "Single Selection" Then
            If Not aComboBox[i].Text Then
              aComboBox[i].Text = res["flddetail"]
            Endif
          Else If $xData[i][4] = "RichText Area" Then
            If Not aHTMLText[i].Text Then
              aHTMLText[i].RichText = res["flddetail"]
            Endif
          Else If $xData[i][4] = "No Selection" Then
            If Not aGenTextArea[i].Text Then
              aGenTextArea[i].Text = res["flddetail"]
            Endif
          Else If $xData[i][4] = "Dichotomous" Then
            If Not aDichoValue[i].Value Then
              aDichoValue[i].Value = res["flddetail"]
            Endif
          Else If $xData[i][4] = "Qualitative" Then
            If Not aLineText[i].Text Then
              aLineText[i].Text = res["flddetail"]
            Endif
          Endif
          
        Endif
      Endif
    Next
    
  Endif
  
End

Public Sub QuantiGroup_Change()
  
  Dim j As Integer
  
  j = Last.Tag
  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif
  
  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif
  
End

Public Sub ComboGroup_Click()
  
  Dim j As Integer
  
  If $groupForm = True Then
    j = Last.Tag
    If aComboBox[j].Text Then
      SetQualitativeAbnormal(j)
    Endif
  Endif
  
End

Public Sub DichoText_Click()
  
  Dim j As Integer
  
  j = Last.Tag
  SetQualitativeAbnormal(j)
  
End

Public Sub CalcButton_Click()
  
  Dim j As Integer
  Dim xsyscon As String
  Dim xval As Float
  
  If $groupForm = True Then
    j = Last.Tag
    If rbmetric.Value = True Then
      xsyscon = modFixLab.GetTestSysName($xData[j][1])
      If xsyscon Then
        xval = modSysCons.GetConstantValue(xsyscon, $encid)
        If xval Then
          aQuantiBox[j].Value = xval
        Endif
      Endif
    Endif
  Endif
  
End

Private Sub SetQualitativeAbnormal(i As Integer)
  
  If $xData[i][4] = "Single Selection" Then
    If aComboBox[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aComboBox[i].Text, $xData[i][4])
    Endif
  Else If $xData[i][4] = "Dichotomous" Then
    If aDichoValue[i].Value Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aDichoValue[i].Value, $xData[i][4])
    Endif
  Else If $xData[i][4] = "Left and Right" Then
    If aLeftRight[i].DataText Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aLeftRight[i].DataText, $xData[i][4])
    Endif
  Else If $xData[i][4] = "Qualitative" Then
    If aLineText[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aLineText[i].Text, $xData[i][4])
    Endif
  Else If $xData[i][4] = "No Selection" Then
    If aGenTextArea[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Test", $xData[i][1], aGenTextArea[i].Text, $xData[i][4])
    Endif
  Endif
  
End
