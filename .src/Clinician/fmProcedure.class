' Gambas class file

''PATIENT PROFILE
Private $UserRestrictPat As String[]

''MAIN FORM
Private $ProcIndex As Long
Private $ProcBill As Long
Private $ProcItem As String
Private $UserRestrict As String[]
' Private $rData As Result
' Private $aMyFields As String[]
Private $sTatus As String

Private $AlphaList As String[]
Private $LedgerAC As String
Private $PatientNum As String
Private $xBillType As String
Private $PharmMode As String
Private $sLevel As String

Private $rDataA1 As Result
Private $aMyFieldsA1 As String[]
Private $rDataAp As Result
Private $aMyFieldsAp As String[]
Private $PositionList As String[]

Private $billModeTest As String
Private $billModeRadio As String
Private $billModePharmacy As String
Private $billModeProcedure As String
Private $billModeEquipment As String
Private $billModeService As String
Private $billModeOthers As String

Public Sub _new()

  ' Dim xprelist As String
  ' Dim xonlist As String
  ' Dim xpostlist As String

  ''PATIENT PROFILE
  cmbpatheightunit.List = ["cm", "inch", "foot"]
  $UserRestrictPat = modBasic.$ClinicDisableCompo
  If MMain.$SISHAppMode = "HIS" Then
    txtbedno.ReadOnly = True
  Endif

  ''MAIN FORM
  ' FillCustomFormMenu()
  If modBasic.$PayableSettingVerify = "Enable" Then
    $sLevel = "Waiting"
  Else
    $sLevel = "Active"
  Endif
  dtplan.Value = Now()
  $UserRestrict = modBasic.$ClinicDisableCompo
  $AlphaList = New String[]

  ' ' txtcomment.DictionaryPath = modBasic.$dictPathList
  ' ' txtprediscuss.DictionaryPath = modBasic.$dictPathList
  ' ' txtsummry.DictionaryPath = modBasic.$dictPathList
  ' ' txtanesnote.DictionaryPath = modBasic.$dictPathList
  ' ' txtprecomment.DictionaryPath = modBasic.$dictPathList
  ' ' txtpostcomment.DictionaryPath = modBasic.$dictPathList
  ' ' txtincision.DictionaryPath = modBasic.$dictPathList
  ' ' txtfindings.DictionaryPath = modBasic.$dictPathList
  ' ' txtprocedures.DictionaryPath = modBasic.$dictPathList
  ' ' txtclosure.DictionaryPath = modBasic.$dictPathList
  modLabSub.DisplayDefaultTestUnit(rbsi, rbmetric)

  ' xprelist = modSettings.ShowSettingFromFIle("ClinicForms/PreOperativeIndications")
  ' If xprelist Then
  '   cmbpreindication.List = modString.GetStringArrayFromFile(xprelist, True)
  ' Endif
  ' xonlist = modSettings.ShowSettingFromFIle("ClinicForms/OperativeIndications")
  ' If xonlist Then
  '   cmbonindication.List = modString.GetStringArrayFromFile(xonlist, True)
  ' Endif
  ' xpostlist = modSettings.ShowSettingFromFIle("ClinicForms/PostOperativeIndications")
  ' If xpostlist Then
  '   cmbpostindication.List = modString.GetStringArrayFromFile(xpostlist, True)
  ' Endif
  ' rbsurg.Value = True
  If modBasic.$PayableLockEntry = "Yes" Then
    btnselectpayto.Enabled = False
  Endif
  If modBasic.$ReferralLockEntry = "Yes" Then
    btnselectrefer.Enabled = False
  Endif
  If modBasic.$ShareProcedureAccess = "Yes" Then
    btnaddperson.Visible = True
    btnpersondelete.Visible = True
  Else
    btnaddperson.Visible = False
    btnpersondelete.Visible = False
  Endif

  If $UserRestrictPat Then
    RestrictUserAccessPat()
  Endif

  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    txtencid.SetFocus
  Endif

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

''====================== PATIENT PROFILE =================================
Public Sub txtencid_Activate()

  GetEncounterValue()

End

Public Sub btnencidsearch_Click()

  If Not txtencid.Text Then
    txtencid.Text = PatSearch("Encounter")
  Endif

End

Public Sub mnusearmulti_Click()

  If Not txtencid.Text Then
    txtencid.Text = GetEncid()
  Endif

End

Public Sub btnwebcam_Click()

  If txtencid.Text Then
    GetEncounterValue()
  Else
    txtencid.Text = QRScanValue("")
  Endif

End

Private Sub GetEncounterValue()

  Dim res As Result
  Dim xallow As Boolean

  If Not txtpatientname.Text Then
    If Not txtencid.Text Then Return
    If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
      txtencid.SetFocus
      Return
    Endif

    ' If modPatientSub.LockEncounterDesk(Trim(txtencid.Text)) = False Then
    '   txtencid.Text = ""
    '   Message.Warning(("Encounter Locked"), ("OK"))
    '   ' Balloon.Delay = modBasic.$BalloonDelay
    '   txtencid.SetFocus
    ' Endif

    dtdob.Tag = ""
    If txtencid.Text Then
      If txtencid.Text = modBasic.$EncIdPrefix Then
      Else
        modSettings.SaveValuesToLog("LastValue/Encounter", Trim(txtencid.Text))
      Endif
      res = modDatabase.$myConn.Exec("select fldpatientval,flduserid from tblencounter where fldencounterval=&1", Trim(txtencid.Text))
      If res.Available = False Then
        modLinkDB.CheckEncDataRemote(Trim(txtencid.Text))
        txtencid.SetFocus
      Else
        If modBasic.$LockToOwnConsultant = "Yes" Then
          If res["flduserid"] = modBasic.$lbluser Then
            xallow = True
          Else
            xallow = False
          Endif
        Else
          xallow = True
        Endif
        If xallow = True Then
          txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
          If txtpatientname.Text Then
            TabPanel1.Enabled = True
            txtgender.Text = modPatient.GetPatientSex(Trim(txtencid.Text))
            txtpatientaddress.Text = modPatient.GetPatientAddressByEnc(Trim(txtencid.Text))
            dtdob.Tag = modPatient.GetPatientBirthDay(Trim(txtencid.Text))
            modDateSub.GetAgeControlFromDate(dtdob.Tag, txtpatage, cmbpatageunit)

            $PatientNum = modPatient.GetPatientNoByEnc(Trim(txtencid.Text))
            $sTatus = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
            txtnow.Text = $sTatus
            txtbedno.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), $sTatus)
            txtpatdoa.Text = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(Trim(txtencid.Text)), gb.GeneralDate)
            txtpatweight.Value = modClinic.GetBodyWeight(Trim(txtencid.Text))
            btnconsult.Tag = modPatient.GetAttendingConsultant(Trim(txtencid.Text))
            btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
            modClinSub.GetPatientHeight(Trim(txtencid.Text), txtpatheight, cmbpatheightunit)
            modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
            UpdateTriage()
            Wait
            If modPatientSub.AllowEncIDHistory(Trim(txtencid.Text), modDatabase.$myConn) = True Then
              BlockDCButton()
              modImage.ShowPhotoSplash("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)))
              ''MAIN FORM
              BasicInfoPatient()
              txtencid.ReadOnly = True
            Else
              Me.Enabled = False
            Endif
          Else
            Message.Warning(("Encounter ID not found"), ("OK"))
            ' Balloon.Delay = modBasic.$BalloonDelay
            txtencid.SetFocus
          Endif
        Else
          Message.Warning("Not authorized", ("OK"))
        Endif
      Endif
    Endif
  Endif

End

Public Sub UpdateTriage()

  txtcolor.Background = modPatient.GetPatientColor(Trim(txtencid.Text))

End

Private Sub BlockDCButton()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  tlbtnaddheight.Enabled = xx
  tlbtnaddbed.Enabled = xx
  tlbtnadwt.Enabled = xx
  dtdob.Enabled = xx
  btnpic.Enabled = xx
  btnselectuser.Enabled = xx

End

Private Sub RestrictUserAccessPat()

  If $UserRestrictPat.Exist("Bed Assignment") Then
    tlbtnaddbed.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Weight") Then
    tlbtnadwt.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Height") Then
    tlbtnaddheight.Visible = False
  Endif

End

''------- Basic Parameters
Public Sub btnpic_Click()

  Dim hForm As FmPersonImage

  If txtencid.Text Then
    hForm = New FmPersonImage("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)), False)
    hForm.ShowModal
  Endif

End

Public Sub tlbtnaddheight_Click()

  If txtencid.Text Then
    If txtpatheight.Value Then
      If cmbpatheightunit.Text Then
        modClinSub.UpdatePatientHeight(Trim(txtencid.Text), txtpatheight.Value, cmbpatheightunit.Text)
        tlbtnaddheight.Enabled = False
        Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
        ' Balloon.Delay = modBasic.$BalloonDelay
      Endif
    Endif
  Endif

End

Public Sub tlbtnadwt_Click()

  If txtencid.Text Then
    If txtpatweight.Value Then
      modClinSub.AddGeneralParametersQuanti(Trim(txtencid.Text), "Body Weight", txtpatweight.Value)
      tlbtnadwt.Enabled = False
      Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub dtdob_Click()

  Dim dtdate As Date

  If txtencid.Text Then
    dtdate = GetDateValue("Date of Birth of " & txtpatientname.Text, "DOBirth", dtdob.Tag)
    If dtdate Then
      modPatientSub.UpdatePatDOB(Trim(txtencid.Text), dtdate)
      modDateSub.GetAgeControlFromDate(dtdate, txtpatage, cmbpatageunit)
      dtdob.Tag = dtdate
      Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

''------------Hospital related parameters
Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  If txtencid.Text Then
    xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$IPConsultUserList)
    If xMedUser And If xMedUser.Count Then
      btnconsult.Tag = xMedUser[0]
      btnconsult.Text = xMedUser[1]
    Else
      btnconsult.Tag = ""
      btnconsult.Text = ""
    Endif
    If btnconsult.Tag Then
      modPatientSub.UpdateAttendingConsultant(Trim(txtencid.Text), btnconsult.Tag)
      Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay
    Endif
  Endif

End

Public Sub btnsms_Click()

  Dim xval As String

  If btnconsult.Tag Then
    xval = modDevice.SendSMSToInpatDoc(Trim(txtencid.Text), modGeneral.GetUserContact(btnconsult.Tag))
    If xval Then
      Message.Info(xval, ("OK"))
    Endif
  Endif

End

Public Sub tlbtnaddbed_Click()

  If txtencid.Text Then
    If MMain.$SISHAppMode = "HIS" Then
      If modHelpVariable.$LogInCategory = "Clinician" Then
        If txtnow.Text = "Admitted" Then
          txtbedno.Text = GetBedNumber(Trim(txtencid.Text))
        Endif
      Endif
    Endif
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub tlbtnpayment_Click()

  If txtencid.Text Then
    modNonMedical.CurrentPayStatusMsg(Trim(txtencid.Text))
  Endif

End

Public Sub btnprofile_Click()

  Dim hForm As FmMinProfile

  hForm = New FmMinProfile(Trim(txtencid.Text))
  hForm.ShowModal()

End

''============================== MAIN FORM ================================
Private Sub BasicInfoPatient()

  If txtencid.Text Then
    modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
    GetDefaultBillingmodes()
    ' ButtonControl()
    ShowAddedProctable()
    modPatientSub.PopUpPatientForm(Trim(txtencid.Text), Me.Tag)
  Endif

End

Private Sub GetDefaultBillingmodes()

  Dim xpackage As String
  Dim resx As Result

  Select $sTatus
    Case "Admitted", "Discharged", "LAMA", "Death", "Refer", "Absconder"
      $billModeTest = modNonMedical.GetAutoIPBillingPack("Test", Trim(txtencid.Text))
      $billModeRadio = modNonMedical.GetAutoIPBillingPack("Radio", Trim(txtencid.Text))
      $billModePharmacy = modNonMedical.GetAutoIPBillingPack("Pharmacy", Trim(txtencid.Text))
      $billModeEquipment = modNonMedical.GetAutoIPBillingPack("Equipment", Trim(txtencid.Text))
      $billModeProcedure = modNonMedical.GetAutoIPBillingPack("Procedure", Trim(txtencid.Text))
      $billModeService = modNonMedical.GetAutoIPBillingPack("Service", Trim(txtencid.Text))
      $billModeOthers = modNonMedical.GetAutoIPBillingPack("Others", Trim(txtencid.Text))
    Case Else
      xpackage = modNonMedical.DefaultBillingScheme(Trim(txtencid.Text), modBasic.$compID)
      $billModeTest = xpackage
      $billModeRadio = xpackage
      $billModePharmacy = xpackage
      $billModeEquipment = xpackage
      $billModeProcedure = xpackage
      $billModeService = xpackage
      $billModeOthers = xpackage
  End Select

  resx = modDatabase.$myConn.Exec("select fldmode,fldbillingmode,fldacledger,fldbilltype,fldreference,fldlimit from tbldiscount where fldtype=&1", $billModePharmacy)
  If resx.Available Then
    ''billingmode
    If resx["fldbillingmode"] Then
      $PharmMode = resx["fldbillingmode"]
    Else
      $PharmMode = modPatient.GetPatBillingMode(Trim(txtencid.Text))
    Endif
    ''ledger A/C
    $LedgerAC = resx["fldacledger"]
    ''BillType
    $xBillType = resx["fldbilltype"]
    If Not $xBillType Then
      $xBillType = "Cash"
    Endif
  Endif

End

Public Sub mnulastencid_Click()

  txtencid.Text = modSettings.ShowLogValues("LastValue/Encounter")

End

' Private Sub ButtonControl()
'
'   Dim xx As Boolean
'
'   xx = modPatient.EnableClinicForm($Status)
'   ''procedure component
'   mnunewproc.Enabled = xx
'   btnsubChange.Enabled = xx
'   btncustonpoint.Enabled = xx
'   bnlistpoint.Enabled = xx
'   btnicdpoint.Enabled = xx
'   btndelcomponent.Enabled = xx
'   btncomment.Enabled = xx
'   ''preoperative
'   btnperson.Enabled = xx
'   btnprediscus.Enabled = xx
'   grdprelist.Enabled = xx
'   grdprexam.Enabled = xx
'   btnpreindication.Enabled = xx
'   btnprecomment.Enabled = xx
'   btnorderpre.Enabled = xx
'   btndosepre.Enabled = xx
'   grdpreitem.Enabled = xx
'   ''on procedure
'   grdonlist.Enabled = xx
'   grdonproc.Enabled = xx
'   btnsaveonprocindi.Enabled = xx
'   btnsavesummry.Enabled = xx
'   btnorderon.Enabled = xx
'   btndoseon.Enabled = xx
'   grdonpharmacy.Enabled = xx
'   btnaddperson.Enabled = xx
'   grdperson.Enabled = xx
'   ''anesthesia
'   grdaneslist.Enabled = xx
'   grdanes.Enabled = xx
'   btnsavetechniq.Enabled = xx
'   btnanesnote.Enabled = xx
'   btnorderanes.Enabled = xx
'   btndoseanes.Enabled = xx
'   grdanesitem.Enabled = xx
'   ''postoperative
'   grdpostlist.Enabled = xx
'   grdpostexam.Enabled = xx
'   btnpostindication.Enabled = xx
'   btnpostcomment.Enabled = xx
'   btnorderpost.Enabled = xx
'   btndosepost.Enabled = xx
'   grdpostitem.Enabled = xx
'   ''event timing
'   mnutiming.Enabled = xx
'   ''vital
'   mnuessent.Enabled = xx
'   ''monitoring
'   mnumonitor.Enabled = xx
'
'   If modBasic.$LockProcedCompInput = "Yes" Then
'     btnaddcompo.Enabled = False
'   Endif
'   If modBasic.$LockAnesTechnInput = "Yes" Then
'     btnaddtechniq.Enabled = False
'   Endif
'
'   If $UserRestrict Then
'     UserAccessRestrict()
'   Endif
'
' End

' Public Sub Form_KeyRelease()
'
'   If Key.Code = Key.F2 Then
'     TabPanel1.Index = 0
'     LoadTabPicture(TabPanel1.Index)
'
'   Else If Key.Code = Key.F3 Then
'     TabPanel1.Index = 1
'     If $ProcIndex Then
'       LoadTabPicture(TabPanel1.Index)
'       lstdiscuss.List = modPatPatho.GetDiscusPanels(Trim(txtencid.Text), $ProcIndex)
'       lstfinaldiagno.List = modPathoSub.GetFinalDiagnosisList(Trim(txtencid.Text))
'       txtprediscuss.RichText = GetLastValueProc("fldreport", "Pre-Operative Discussion")
'       txtprecomment.RichText = GetLastValueProc("fldreport", "Pre-Operative Note")
'       cmbpreindication.Text = GetLastValueProc("fldreportquali", "Pre-Operative Indication")
'       GetExamList("Pre-Operative", grdprelist)
'       FillExamtable("Pre-Operative Exam:" & CStr($ProcIndex), grdprexam)
'       FillDosingGrid("Current", "Pre-Operative", grdpreitem)
'     Endif
'
'   Else If Key.Code = Key.F4 Then
'     TabPanel1.Index = 2
'     If $ProcIndex Then
'       LoadTabPicture(TabPanel1.Index)
'       txtincision.RichText = GetLastValueProc("fldreport", "Incision")
'       txtfindings.RichText = GetLastValueProc("fldreport", "Findings")
'       txtprocedures.RichText = GetLastValueProc("fldreport", "Proedures")
'       txtclosure.RichText = GetLastValueProc("fldreport", "Closure")
'       txtsummry.RichText = GetLastValueProc("fldreport", "Operation Note")
'       cmbonindication.Text = GetLastValueProc("fldreportquali", "Operative Indication")
'       lstcomponent.List = modPatPatho.GetComponentProcedure(Trim(txtencid.Text), $ProcIndex)
'       GetExamList("Operative", grdonlist)
'       FillExamtable("Operative Exam:" & CStr($ProcIndex), grdonproc)
'       FillDosingGrid("Current", "Procedure", grdonpharmacy)
'       ShowCurrStockGrid()
'       ShowUsedGridViewList()
'     Endif
'
'   Else If Key.Code = Key.F5 Then
'     TabPanel1.Index = 3
'     If $ProcIndex Then
'       LoadTabPicture(TabPanel1.Index)
'       txtanesnote.RichText = GetLastValueProc("fldreport", "Anaesthesia Note")
'       cmbtechniq.Text = GetLastValueProc("fldreportquali", "Anaesthesia Technique")
'       GetExamList("Anaesthesia", grdaneslist)
'       FillExamtable("Anaesthesia:" & CStr($ProcIndex), grdanes)
'       FillDosingGrid("Current", "Anaesthesia", grdanesitem)
'     Endif
'
'   Else If Key.Code = Key.F6 Then
'     TabPanel1.Index = 4
'     If $ProcIndex Then
'       LoadTabPicture(TabPanel1.Index)
'       txtpostcomment.RichText = GetLastValueProc("fldreport", "Post-Operative Note")
'       cmbpostindication.Text = GetLastValueProc("fldreportquali", "Post-Operative Indication")
'       GetExamList("Post-Operative", grdpostlist)
'       FillExamtable("Post-Operative Exam:" & CStr($ProcIndex), grdpostexam)
'       FillDosingGrid("Current", "Post-Operative", grdpostitem)
'     Endif
'
'   Else If Key.Code = Key["X"] And If Key.Control Then
'     Me.Close()
'
'   Else
'     modGeneralmain.GoToNextControlTab()
'   Endif
'
' End
'
' Public Sub TabPanel1_Click()
'
'   If txtencid.Text And If $ProcIndex Then
'     LoadTabPicture(TabPanel1.Index)
'
'     If TabPanel1.Index = 0 Then
'        ShowSurgUser()
'
'     Else If TabPanel1.Index = 1 Then
'       lstdiscuss.List = modPatPatho.GetDiscusPanels(Trim(txtencid.Text), $ProcIndex)
'       lstfinaldiagno.List = modPathoSub.GetFinalDiagnosisList(Trim(txtencid.Text))
'       txtprediscuss.RichText = GetLastValueProc("fldreport", "Pre-Operative Discussion")
'       txtprecomment.RichText = GetLastValueProc("fldreport", "Pre-Operative Note")
'       cmbpreindication.Text = GetLastValueProc("fldreportquali", "Pre-Operative Indication")
'       GetExamList("Pre-Operative", grdprelist)
'       FillExamtable("Pre-Operative Exam:" & CStr($ProcIndex), grdprexam)
'       FillDosingGrid("Current", "Pre-Operative", grdpreitem)
'
'     Else If TabPanel1.Index = 2 Then
'       txtincision.RichText = GetLastValueProc("fldreport", "Incision")
'       txtfindings.RichText = GetLastValueProc("fldreport", "Findings")
'       txtprocedures.RichText = GetLastValueProc("fldreport", "Proedures")
'       txtclosure.RichText = GetLastValueProc("fldreport", "Closure")
'       txtsummry.RichText = GetLastValueProc("fldreport", "Operation Note")
'       cmbonindication.Text = GetLastValueProc("fldreportquali", "Operative Indication")
'       lstcomponent.List = modPatPatho.GetComponentProcedure(Trim(txtencid.Text), $ProcIndex)
'       GetExamList("Operative", grdonlist)
'       FillExamtable("Operative Exam:" & CStr($ProcIndex), grdonproc)
'       FillDosingGrid("Current", "Procedure", grdonpharmacy)
'       ShowCurrStockGrid()
'       ShowUsedGridViewList()
'
'     Else If TabPanel1.Index = 3 Then
'       txtanesnote.RichText = GetLastValueProc("fldreport", "Anaesthesia Note")
'       cmbtechniq.Text = GetLastValueProc("fldreportquali", "Anaesthesia Technique")
'       GetExamList("Anaesthesia", grdaneslist)
'       FillExamtable("Anaesthesia:" & CStr($ProcIndex), grdanes)
'       FillDosingGrid("Current", "Anaesthesia", grdanesitem)
'
'     Else If TabPanel1.Index = 4 Then
'       txtpostcomment.RichText = GetLastValueProc("fldreport", "Post-Operative Note")
'       cmbpostindication.Text = GetLastValueProc("fldreportquali", "Post-Operative Indication")
'       GetExamList("Post-Operative", grdpostlist)
'       FillExamtable("Post-Operative Exam:" & CStr($ProcIndex), grdpostexam)
'       FillDosingGrid("Current", "Post-Operative", grdpostitem)
'
'     Endif
'
'   Endif
'
' End

''============================== Menu ===============================
Public Sub mnunewproc_Click()

  Dim hForm As FmMajorProced

  If txtencid.Text Then
    If modNonMedical.AllowEntryWithDeposit(Trim(txtencid.Text), "Procedure") = True Then
      hForm = New FmMajorProced(Trim(txtencid.Text), $billModeProcedure)
      hForm.ShowModal
      ShowAddedProctable()
    Endif
  Endif

End

Public Sub mnuregister_Click()

  If Not txtencid.Text Or If txtencid.Text = modBasic.$EncIdPrefix Then
    If modBasic.$regF1Clinic = "Yes" Or If modBasic.$regF1Clinic = "Partial" Then
      txtencid.Text = RegistrationNewForm()
    Else If modBasic.$regF1Clinic = "Full" Then
      txtencid.Text = RegistrationForm(False)
    Endif
  Endif

End

Public Sub mnuwaiting_Click()

  Dim sOutstr As String

  If Not txtencid.Text Or If txtencid.Text = modBasic.$EncIdPrefix Then
    If modGlobalSetting.ShowSettingFromDB("GeneralSettings/OnlineAccess_ProcedureForm") = "Yes" Then
      sOutstr = RemoteRequest("Procedure")
      If sOutstr Then
        txtencid.Text = Split(sOutstr, "@")[0]
      Endif
    Endif
  Endif

End

Public Sub mnublank_Click()

  ' btnblank_Click()

End

Public Sub btnaddcompo_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("flditem", "tblprocedure")
  hForm.ShowModal

End

Public Sub mnucustompr_Click()

  Dim hCls As CReportCustom

  If TableView1.Selection.Count Then
    $rDataA1.MoveTo(TableView1.Selection[0])
    If txtencid.Text Then
      If modSettings.ShowSettingFromFIle("Procedure Report/Name") Then
        hCls = New CReportCustom(Trim(txtencid.Text), "Procedure Report", "ReportSize", MMain.$defUnit, "Procedure|" & CStr($rDataA1["fldid"]))
        hCls.Preview()
      Endif
    Endif
  Endif

End

''================================== First Tab ============================================
Public Sub dtneplan_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtplan.Value))
  If xx Then
    dtplan.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

' Public Sub cmbstatus_GotFocus()
'
'   If cmbprocedure.Text Then
'     If modNonMedical.GetControlServCombo(cmbprocedure.Text) = False Then
'       cmbprocedure.Text = ""
'       Balloon.Warning(("Item not listed"), cmbprocedure)
'       Balloon.Delay = modBasic.$BalloonDelay
'       cmbprocedure.SetFocus
'     Endif
'   Endif
'
' End

Public Sub btnselectpayto_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Payable User"), modBasic.$PayUserList)
  If xMedUser And If xMedUser.Count Then
    btnpayto.Tag = xMedUser[0]
    btnpayto.Text = xMedUser[1]
  Else
    btnpayto.Tag = ""
    btnpayto.Text = ""
  Endif

End

Public Sub btnpayto_Change()

  If btnpayto.Text = "" Then
    btnpayto.Tag = ""
  Endif

End

Public Sub btnselectrefer_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Referral User"), modBasic.$ReferUserList)
  If xMedUser And If xMedUser.Count Then
    btnrefer.Tag = xMedUser[0]
    btnrefer.Text = xMedUser[1]
  Else
    btnrefer.Tag = ""
    btnrefer.Text = ""
  Endif

End

Public Sub btnrefer_Change()

  If btnrefer.Text = "" Then
    btnrefer.Tag = ""
  Endif

End

Private Function CheckBoxPath(sText As String) As String

  Dim xpath As String

  If sText = "Waiting" Then
    xpath = "icons/unchecked.png"
  Else If sText = "Cleared" Then
    xpath = "icons/checked.png"
  Endif
  Return xpath

End

Public Sub ShowAddedProctable()

  Dim sql As String

  If modBasic.$LockToOwnProcedure = "Yes" Then
    sql = "select fldid,fldencounterval,fldnewdate,flditem,fldreportquali,flddetail,fldtime,fldid,fldstatus,fldgroupid from tblpatgeneral where fldencounterval=&1 and fldinput=&2 and fldcomp like &3 ORDER BY fldid DESC"
  Else
    sql = "select fldid,fldencounterval,fldnewdate,flditem,fldreportquali,flddetail,fldtime,fldid,fldstatus,fldgroupid from tblpatgeneral where fldencounterval=&1 and fldinput=&2 ORDER BY fldid DESC"
  Endif
  $rDataA1 = modDatabase.$myConn.Exec(sql, Trim(txtencid.Text), "Procedures", modBasic.$compID)
  $aMyFieldsA1 = New String[]
  modGridView.ReadSmallData(TableView1, $rDataA1, $aMyFieldsA1)

  With TableView1
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Hidden = True
    .Columns[6].Hidden = True
    .Columns[7].Hidden = True
    .Columns[8].Hidden = True
    .Columns[9].Hidden = True

    .Columns[2].Text = "Target Date"
    .Columns[3].Text = "Procedure"
    .Columns[4].Text = "Status"
  End With

End

Public Sub TableView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rDataA1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Text = modReportVar.GetDateTimeReport($rDataA1[$aMyFieldsA1[Column]], gb.GeneralDate)
  Else
    Data.Text = $rDataA1[$aMyFieldsA1[Column]]
  Endif

End

Public Sub btntabreport_Click()

  Dim xPath As String
  Dim abc As String[] = ["General:Status", "General:Personnel", "General:Summary", "Pre-Operative:Indication", "Pre-Operative:Discussion", "Pre-Operative:Discussion Panel", "Pre-Operative:Examination", "Pre-Operative:Medications", "Pre-Operative:Note", "Procedure:Components", "Procedure:Parameters", "Procedure:Medications", "Procedure:Incision", "Procedure:Findings", "Procedure:Proedures", "Procedure:Closure", "Procedure:Note", "Anaesthesia:Technique", "Anaesthesia:Parameters", "Anaesthesia:Medications", "Anaesthesia:Medications", "Anaesthesia:Note", "Post-Operative:Indication", "Post-Operative:Examination", "Post-Operative:Medications", "Post-Operative:Note"]
  Dim xxx As String[]

  If TableView1.Selection.Count Then
    $rDataA1.MoveTo(TableView1.Selection[0])
    xxx = SelectListView("Select Procedure Components", abc, False)
    If xxx Then
      xpath = modCHTMLPatient.ShowUniProcedureReport($rDataA1["fldid"], Trim(txtencid.Text), xxx)
      modControlSub.OpenHTMLPreview(Trim(txtencid.Text), xPath, "ReportSize")
    Endif
  Endif

End

' Public Sub TableView1_Select()
'
'   btnshowtable_Click()
'
' End

Public Sub TableView1_Select()

  Dim res As Result
  Dim res1 As Result

  If TableView1.Selection.Count Then
    $rDataA1.MoveTo(TableView1.Selection[0])
    $ProcIndex = 0
    $PositionList = New String[]
    res = modDatabase.$myConn.Exec("select fldid,fldnewdate,flditem,fldreportquali,fldtime,fldsave,flddetail,fldbillingmode,fldstatus,fldgroupid from tblpatgeneral where fldid=&1", $rDataA1["fldid"])
    If res.Available Then
      cmbstatus.Clear()
      If res!fldstatus = "Waiting" Then
        cmbstatus.List = ["Referred", "On Hold", "Cancelled", "Done"]
      Else
        cmbstatus.List = ["On Hold", "Done"]
      Endif

      $ProcIndex = res["fldid"]
      If res["fldgroupid"] Then
        $ProcBill = res["fldgroupid"]
      Endif
      cmbprocedure.Text = res["flditem"]
      cmbstatus.Text = res["fldreportquali"]
      dtplan.Value = res["fldnewdate"]
      txtcomment.RichText = res["flddetail"]
      txtbillmode.Text = res["fldbillingmode"]
      $ProcItem = res["flditem"]
      If $ProcIndex Then
        txtcomment.Enabled = True
        ' TabPanel2.Enabled = True
        ' TabPanel3.Enabled = True
        ' TabPanel4.Enabled = True
        ' TabPanel5.Enabled = True
        If cmbstatus.Text = "Done" Then
          btnaddperson.Enabled = False
        Else
          btnaddperson.Enabled = True
        Endif
      Endif

      res1 = modDatabase.$myConn.Exec("select fldpayto,fldrefer from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldparent=&3", txtencid.Text, "Procedures", res!fldid)
      If res1.Available Then
        btnrefer.Tag = res1!fldrefer
        btnrefer.Text = modGeneral.GetUserFullName(btnrefer.Tag)
        btnpayto.Tag = res1!fldpayto
        btnpayto.Text = modGeneral.GetUserFullName(btnpayto.Tag)
      Endif

      $PositionList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldusertype) as col from tblprocedureshare where flditemtype=&1 and fldbillingmode like &2 and (flditemname like &3 or flditemname=&4) and fldactive=&5", "Procedures", txtbillmode.Text, res["flditem"], "%", "Active"))
      ShowSurgUser()
    Endif
  Endif

End

Public Sub btnsubChange_Click()

  Dim res As Result

  If TableView1.Selection.Count Then
    $rDataA1.MoveTo(TableView1.Selection[0])
    If cmbstatus.Text Then

      modDatabase.$myConn.Begin
      res = modDatabase.$myConn.Edit("tblpatgeneral", "fldid=&1 and fldsave=&2 and fldreportquali<>&3", $rDataA1["fldid"], False, "Done")
      If res.Available Then
        res["fldnewdate"] = dtplan.Value
        res["fldreportquali"] = cmbstatus.Text
        res["flduserid"] = modBasic.$lbluser
        res["flduptime"] = Now()
        res["fldcomp"] = modBasic.$compID
        res["xyz"] = False
        res.Update()
        Wait
        If cmbstatus.Text = "Done" Then
          btnaddperson.Enabled = False
          SaveProcedureBilling($rDataA1["fldid"])
        Endif
      Endif
      modDatabase.$myConn.Commit

      ShowAddedProctable()
      Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
      ' Balloon.Delay = modBasic.$BalloonDelay

    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Private Sub SaveProcedureBilling(procIndex As Long)

  Dim res As Result
  Dim res1 As Result
  Dim xauto As String

  res = modDatabase.$myConn.Exec("select fldid,fldencounterval,fldnewdate,flditem,fldreportquali,fldtime from tblpatgeneral where fldid=&1 and fldencounterval=&2 and fldreportquali=&3 and fldinput=&4 and fldsave=&5 and fldstatus=&6", procIndex, Trim(txtencid.Text), "Done", "Procedures", False, "Waiting")
  If res.Available = True Then
    xauto = modBasic.$AutoBillProcedure
    If xauto = "Yes" Or If xauto = "Full" Then
      modBillings.GetAutoBillingEntry(res["fldencounterval"], $billModeProcedure, "Procedure", res["flditem"], 1, "Done", procIndex, True, False, btnpayto.Tag, btnrefer.Tag)                         ''
    Else If xauto = "Partial" Then
      modBillings.GetAutoBillingEntry(res["fldencounterval"], $billModeProcedure, "Procedure", res["flditem"], 1, "Punched", procIndex, False, False, btnpayto.Tag, btnrefer.Tag)
    Endif
    res1 = modDatabase.$myConn.Edit("tblpatgeneral", "fldid=&1", procIndex)
    res1["fldstatus"] = "Cleared"
    res1["fldsave"] = True
    res1["xyz"] = False
    res1.Update()
  Endif

End

Public Sub btncomment_Click()

  Dim res As Result

  If TableView1.Selection.Count Then
    $rDataA1.MoveTo(TableView1.Selection[0])
    res = modDatabase.$myConn.Edit("tblpatgeneral", "fldid=&1", $rDataA1["fldid"])
    res["flddetail"] = txtcomment.RichText
    res["xyz"] = False
    res.Update
    Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

''============================= Professional involved ====================================
Public Sub btnselectadd_Click()

  Dim xMedUser As String[]

  If modBasic.$PayableUserFormat = "Restricted" Then
    xMedUser = MedicalSelectedValue(("Select Sharing User"), modGeneral.CategoricalUserList("fldpayable", cmbpertype.Text))
  Else
    xMedUser = MedicalSelectedValue(("Select Sharing User"), modGeneral.CategoricalUserList("fldpayable"))
  Endif
  If xMedUser And If xMedUser.Count Then
    btnaddconsult.Tag = xMedUser[0]
    btnaddconsult.Text = xMedUser[1]
  Else
    btnaddconsult.Tag = ""
    btnaddconsult.Text = ""
  Endif

End

Public Sub cmbpertype_Click()

  Dim xval As String

  If cmbpertype.Text Then
    xval = GetDefaultUser(cmbpertype.Text)
    If xval Then
      btnaddconsult.Tag = xval
      btnaddconsult.Text = modGeneral.GetUserFullName(btnaddconsult.Tag)
      btnaddconsult.Enabled = False
      btnselectadd.Enabled = False
    Endif
  Endif

End

Private Function GetDefaultUser(xUserType As String) As String

  Dim res As Result
  Dim xval As String

  If $ProcBill Then
    res = modDatabase.$myConn.Exec("select flddefault from tblprocedureshare where flditemtype=&1 and fldbillingmode like &2 and (flditemname like &3 or flditemname=&4) and fldactive=&5 and fldusertype=&6", "Procedures", txtbillmode.Text, $ProcItem, "%", "Active", xUserType)
    If res.Available Then
      res.MoveFirst
      If res["flddefault"] Then
        xval = res["flddefault"]
      Else
        xval = ""
      Endif
    Else
      xval = ""
    Endif
  Endif
  Return xval

End

Public Sub btnaddperson_Click()

  If $ProcBill Then
    If cmbpertype.Text And If btnaddconsult.Tag Then
      If Not btnpayto.Tag Then
        modPatientGeneral.AddClinicalSharingUser("Procedures", $ProcBill, Trim(txtencid.Text), cmbpertype.Text, btnaddconsult.Tag, "", $sLevel, 100)
        ' ' modPatientGeneral.AddSubGeneralQualiData($ProcIndex, Trim(txtencid.Text), cmbpertype.Text, btnconsult.Tag, "")
        ShowSurgUser()
        cmbpertype.Text = ""
        btnaddconsult.Tag = ""
        btnaddconsult.Text = ""
        btnaddconsult.Enabled = True
        btnselectadd.Enabled = True
        If modBasic.$TabletModeEnable = "Yes" Then
        Else
          cmbpertype.SetFocus
        Endif
      Endif
    Endif
  Else
    Message.Warning("User Sharing can be added only after Billing", ("OK"))
  Endif

End

Private Sub ShowSurgUser()

  Dim posList As String[]

  $rDataAp = modDatabase.$myConn.Exec("select fldid,fldtime,fldusertype,fldvalue,fldreport from tblpatgenshare where flditemid=&1 and fldcategory=&2 and fldactive=&3", $ProcBill, "Procedures", $sLevel)
  $aMyFieldsAp = New String[]
  modGridView.ReadSmallData(grdperson, $rDataAp, $aMyFieldsAp)

  posList = New String[]
  For Each $rDataAp
    posList.Add($rDataAp["fldusertype"])
  Next
  cmbpertype.List = modString.GetRemainingArray($PositionList, posList)

  With grdperson
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"

    .Columns[2].Text = "Category"
    .Columns[3].Text = "User Name"
    .Columns[4].Text = "Description"
  End With

End

Public Sub grdperson_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rDataAp.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Text = modGeneral.GetUserFullName($rDataAp[$aMyFieldsAp[Column]])
  Else
    Data.Text = $rDataAp[$aMyFieldsAp[Column]]
  Endif

End

Public Sub btnpersoncomment_Click()

  Dim res As Result
  Dim xx As String

  If grdperson.Selection.Count Then
    $rDataAp.MoveTo(grdperson.Selection[0])
    xx = GetTextArea($rDataAp["fldvalue"], $rDataAp["fldreport"])
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatgenshare", "fldid=&1 and fldsave=&2", $rDataAp["fldid"], True)
      res["fldreport"] = xx
      res["flduptime"] = Now()
      res["xyz"] = False
      res.Update
      ShowSurgUser()
    Endif
  Endif

End

Public Sub btnpersondelete_Click()

  If grdperson.Selection.Count Then
    $rDataAp.MoveTo(grdperson.Selection[0])
    If cmbstatus.Text <> "Done" Then
      modDatabase.$myConn.Delete("tblpatgenshare", "fldid=&1 and fldsave=&2", $rDataAp["fldid"], True)
      ShowSurgUser()
    Endif
  Endif

End

Public Sub btnblank_Click()

  Me.Parent.DeleteChildren()
  modGeneralMain.LoadProcedureForm()

End

''============ Reports ==================
Public Sub mnuhistory_Click()

  Dim res As Result
  Dim hForm As FRequest
  Dim xpatno As String

  If txtencid.Text Then
    xpatno = $PatientNum
    If modPatientSub.GetPatPassCheck(modDatabase.$myConn, xpatno) = True Then
      res = modDatabase.$myConn.Exec("select fldencounterval,fldregdate,fldadmission,fldcurrlocat,flduserid,flddisctype from tblencounter where fldpatientval=&1 ORDER BY fldregdate", xpatno)
      hForm = New FRequest(res, "Patient Encounters", "PatientEncounters", False)
      hForm.ShowModal
    Endif
  Endif

End

''-------- summary icons
Public Sub btndatasumm_Click()

End

Public Sub btnpansumm_Click()

  txtcomment.RichText = txtcomment.RichText & Space(1) & modFillContainer.GetExtraTextArea("Procedure Summary", txtcomment.Text)

End

Public Sub btnexecsumm_Click()

  txtcomment.RichText = txtcomment.RichText & modString.TextToHTML(modCloudAI.GetPatCloudAIResponse(Trim(txtencid.Text)))

End

Public Sub btnattsumm_Click()

  txtcomment.RichText = txtcomment.RichText & DictionaryVIew(modBasic.$dictadvPath)

End
