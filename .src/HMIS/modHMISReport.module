' Gambas module file

Private $ColmHMIS11 As String[] = [("SNo"), ("First"), ("Repeat"), ("Name"), ("SurName"), ("Ethn"), ("Age(F)"), ("Age(M)"), ("District"), ("Municipality"), ("WardNo"), ("Contact"), ("Service"), ("Expense"), ("Refer In")]
Private $ColmHMIS13 As String[] = [("SNo"), ("Master"), ("First"), ("Repeat"), ("Name"), ("Ethn"), ("Age(F)"), ("Age(M)"), ("District<br>Ward"), ("Municipality<br>Contact"), ("Possible TB<br>Yes"), ("Possible TB<br>No"), ("Investigation"), ("Prov Diagnosis"), ("Treatment"), ("Procedure"), ("Gen Violence"), ("Scheme"), ("Refer In")]
Private $ColmHMIS81 As String[] = [("SNo"), ("DOA"), ("First"), ("Repeat"), ("Name"), ("Ethn"), ("National<br>ID"), ("0-7 days<br>Days(F)"), ("0-7 days<br>Days(M)"), ("8-28 days<br>Days(F)"), ("8-28 days<br>Days(M)"), ("29 days-11 Mon<br>Months(F)"), ("29 days-11 Mon<br>Months(M)"), (">=1 Year<br>Years(F)"), (">=1 Year<br>Years(M)"), ("Address"), ("Guardian"), ("Source of <br>Admission"), ("Ward"), ("Investigation"), ("Prov Diagnosis"), ("Surgery"), ("Police(Yes)"), ("Police(No)"), ("Remarks")]
Private $ColmHMIS82 As String[] = [("SNo"), ("IP No"), ("DOD"), ("DOA"), ("Length (days)"), ("Name"), ("Ethn"), ("National<br>ID"), ("0-7 days<br>Days(F)"), ("0-7 days<br>Days(M)"), ("8-28 days<br>Days(F)"), ("8-28 days<br>Days(M)"), ("29 days-11 Mon<br>Months(F)"), ("29 days-11 Mon<br>Months(M)"), (">=1 Year<br>Years(F)"), (">=1 Year<br>Years(M)"), ("TypeOf Care"), ("Ward<br>Bed No"), ("Surgery"), ("PostOp Infect<br>(Yes)"), ("PostOp Infect<br>(No)"), ("Final Diagnosis"), ("Outcome"), ("Died<48Hour"), ("Died>48Hour"), ("Cause of Death"), ("Exemption<br>(Full)"), ("Exemption<br>(Partial)"), ("Exempted<br>AMT"), ("Scheme Code"), ("Police(Yes)"), ("Police(No)")]
Private $ColmHMIS83 As String[] = [("SNo"), ("RegNo"), ("DOReg"), ("Name"), ("Ethn"), ("National<br>ID"), ("0-7 days<br>Days(F)"), ("0-7 days<br>Days(M)"), ("8-28 days<br>Days(F)"), ("8-28 days<br>Days(M)"), ("29 days-11 Mon<br>Months(F)"), ("29 days-11 Mon<br>Months(M)"), (">=1 Year<br>Years(F)"), (">=1 Year<br>Years(M)"), ("Address"), ("Guardian"), ("Source<br>(Self)"), ("Source<br>(Referred)"), ("Complaints"), ("Brought Dead"), ("Investigation"), ("Diagnosis"), ("Treatment"), ("Observation<br>(Yes)"), ("Observation<br>(No)"), ("DOD"), ("Outcome"), ("Cause of Death"), ("Exemption<br>(Full)"), ("Exemption<br>(Partial)"), ("Exempted<br>AMT"), ("Scheme Code"), ("Gen Violence"), ("Police(Yes)"), ("Police(No)")]

Private $ColmEWARS As String[] = [("SNo"), ("DOReg"), ("Week No"), ("RegNo"), ("RegType"), ("Name"), ("Age"), ("Sex"), ("District"), ("Municipality"), ("Ward"), ("Contact"), ("Disease Name"), ("ICDCode"), ("Diagnosis"), ("Laboratory"), ("Outcome"), ("Referred To")]
Private $ColmBipana As String[] = [("SNo"), ("Refer"), ("PatientID<br>New"), ("PatientID<br>Old"), ("Name"), ("Age<br>Female"), ("Age<br>Male"), ("Age<br>Other"), ("Citizenship"), ("Disease"), ("Amount"), ("Remarks")]

''=========================== SETTINGS ===========================
Public Function GetDBHMISettingList(sType As String, scategory As String) As String[]

  Dim res As Result
  Dim xx As String[]

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      res = modDatabase.$syConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2 and (fldhospcode like &3 or fldhospcode=&4)", sType, scategory, modBasic.$HospCode, "%")
    Else
      res = modDatabase.$syConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2", sType, scategory)
    Endif
  Else
    res = modDatabase.$syConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2", sType, scategory)
  Endif
  xx = modControlSub.GetDirectFillresult(res)
  Return xx

End

Public Function GetDBHMISettingQuery(sType As String, scategory As String) As String

  Dim sql As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      sql = db.Subst("(select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2 and (fldhospcode like &3 or fldhospcode=&4))", sType, scategory, modBasic.$HospCode, "%")
    Else
      sql = db.Subst("(select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2)", sType, scategory)
    Endif
  Else
    sql = db.Subst("(select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2)", sType, scategory)
  Endif
  Return sql

End

Public Function GetDBHMISettingValue(sType As String, scategory As String) As String

  Dim res As Result
  Dim xx As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      res = modDatabase.$syConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2 and (fldhospcode like &3 or fldhospcode=&4)", sType, scategory, modBasic.$HospCode, "%")
    Else
      res = modDatabase.$syConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2", sType, scategory)
    Endif
  Else
    res = modDatabase.$syConn.Exec("select fldvalue from tblhmissetting where fldtype=&1 and fldcategory=&2", sType, scategory)
  Endif
  If res.Available Then
    res.MoveLast
    If res["fldvalue"] Then
      xx = res["fldvalue"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetDBHMISettingCategory(sType As String, sItem As String) As String

  Dim res As Result
  Dim xx As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      res = modDatabase.$syConn.Exec("select fldcategory from tblhmissetting where fldtype=&1 and fldvalue=&2 and (fldhospcode like &3 or fldhospcode=&4)", sType, sItem, modBasic.$HospCode, "%")
    Else
      res = modDatabase.$syConn.Exec("select fldcategory from tblhmissetting where fldtype=&1 and fldvalue=&2", sType, sItem)
    Endif
  Else
    res = modDatabase.$syConn.Exec("select fldcategory from tblhmissetting where fldtype=&1 and fldvalue=&2", sType, sItem)
  Endif
  If res.Available Then
    res.MoveLast
    If res["fldcategory"] Then
      xx = res["fldcategory"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

''============================== REGISTER ============================================
Public Sub HMISRegister11(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, ageList As String[], ethList As String[], sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim agestring As String
  Dim xage As String
  Dim res As Result
  Dim i As Integer
  Dim rsx As String[]
  Dim xfoot As String
  Dim xexpense As Float
  Dim xrefer As String

  $BillingReport = New CReportHTMLong($ColmHMIS11, "", "")
  $BillingReport.UserData.Add("HMIS-1.1 (MASTER REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  i = 1
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldregistid as fldregistid,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldvisit as fldvisit,tblencounter.fldregdate as fldregdate,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptaddward as fldptaddward,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptbirday as fldptbirday,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 0, 730000)
  If res.Available Then
    For Each res
      xexpense = modNonMedical.TotalExpenseAmountbyPatient(modDatabase.$syConn, res["fldencounterval"])
      xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral Hospital")
      With asx
        .Add(CStr(i))
        If res["fldvisit"] = "NEW" Then
          If res["fldregistid"] Then
            .Add(CStr(res["fldregistid"]))
          Else
            .Add("")
          Endif
          .Add("")
        Else If res["fldvisit"] = "OLD" Then
          .Add("")
          If res["fldregistid"] Then
            .Add(CStr(res["fldregistid"]))
          Else
            .Add("")
          Endif
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]))
          .Add(modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"])
          .Add(res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])
        If DateDiff(res["fldptbirday"], res["fldregdate"], gb.Year) >= 1 Then
          xage = CStr(xage)
        Else
          xage = CStr(DateDiff(res["fldptbirday"], res["fldregdate"], gb.Month)) & "/12"
        Endif
        If res["fldptsex"] = "Female" Then
          .Add(xage)
          .Add("")
        Else If res["fldptsex"] = "Male" Then
          .Add("")
          .Add(xage)
        Endif
        .Add(res["fldptadddist"])
        If res["fldptaddward"] Then
          .Add(res["fldptaddvill"])
          .Add(res["fldptaddward"])
        Else
          If res["fldptaddvill"] Then
            rsx = Split(res["fldptaddvill"], "-")
            If rsx.Count = 1 Then
              .Add(rsx[0])
              .Add("")
            Else
              .Add(rsx[0])
              .Add(rsx[1])
            Endif
          Else
            .Add("")
            .Add("")
          Endif
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
        Else
          .Add(res["fldptcontact"])
        Endif
        .Add(modHMISRep.GetConsultationTypeONE(res["fldadmitlocat"]))
        If xexpense Then
          .Add(modReportVar.GetLocaleNumberFormat(xexpense, gb.Currency))
        Else
          .Add("Free")
        Endif
        .Add(xrefer)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xfoot = HMIS11FootSummary(xdtfir, xdtlast, sLocaType, sLocation, ageList, ethList)
  $BillingReport.AddSummary(xfoot)

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Private Function HMIS11FootSummary(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, ageList As String[], ethList As String[]) As String

  Dim aa As String
  Dim bb As String
  Dim cc As String
  Dim agecol As String[]
  Dim xage As String
  Dim ethcol As String[]
  Dim xeth As String
  Dim xx As String

  agecol = New String[]
  agecol.Add("Gender")
  For Each xage In ageList
    agecol.Add(Split(xage, ";")[0])
  Next
  agecol.Add("Total")

  ethcol = New String[]
  ethcol.Add("Gender")
  For Each xeth In ethList
    ethcol.Add(modMisc.GetEthnicCodeString(xeth))
  Next
  ethcol.Add("Total")

  xx = modRepoTemplete.HTMLTableSyntax()
  xx = xx & "<tr>" & gb.NewLine

  ' GetHospServiceSelectedOnly("%")
  aa = modString.GetRichTableStringFromVariant(agecol, modHMISReport.SubGetHospServiceSelectedOnly("%", ageList, xdtfir, xdtlast, sLocaType, sLocation))
  xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Total Service Recepients" & "</b><br>" & aa & "<br>" & "</td>" & gb.NewLine

  ' GetHospServiceSelectedOnly("NEW")
  bb = modString.GetRichTableStringFromVariant(agecol, modHMISReport.SubGetHospServiceSelectedOnly("NEW", ageList, xdtfir, xdtlast, sLocaType, sLocation))
  xx = xx & "<td style='vertical-align:top'>" & "<b>" & "New Service Recepients" & "</b><br>" & bb & "<br>" & "</td>" & gb.NewLine

  ' GetEthnicReport()
  cc = modString.GetRichTableStringFromVariant(ethcol, modHMISReport.SubGetEthnicReport(ethList, xdtfir, xdtlast, sLocaType, sLocation))
  xx = xx & "<td style='vertical-align:top'>" & "<b>" & "Service Recepients based on Ethnicity" & "</b><br>" & cc & "<br>" & "</td>" & gb.NewLine

  xx = xx & "</tr>" & gb.NewLine
  xx = xx & "</table>"

  Return xx

End

Public Function HMISRegister13(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer
  Dim agestring As String
  Dim xgenvio As String
  Dim xrefer As String
  Dim xcontact As String
  Dim xadvice As String

  Dim astr As String[]
  Dim xlabLst As String[]
  Dim xmedList As String[]

  $BillingReport = New CReportHTMLong($ColmHMIS13, "", "")
  $BillingReport.UserData.Add("HMIS-1.3 (OUT PATIENT REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblconsult", modDatabase.$syConn)

  i = 1
  res = modDatabase.$syConn.Exec("select tblconsult.fldencounterval as fldencounterval,tblconsult.fldconsultid as fldconsultid,tblconsult.fldconsultname as fldconsultname,tblconsult.fldconsulttime as fldconsulttime,tblconsult.fldcomment as fldcomment,tblencounter.fldpatientval as fldpatientval,tblencounter.fldregistid as fldregistid,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.flddisctype as flddisctype,tblencounter.fldvisit as fldvisit,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptaddward as fldptaddward,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptbirday as fldptbirday,tblpatientinfo.fldencrypt as fldencrypt from (tblconsult inner join tblencounter on tblconsult.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblconsult.fldconsulttime>=&1 and tblconsult.fldconsulttime<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblconsult"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 1825, 730000)
  If res.Available Then
    For Each res
      xgenvio = modPatient.GetDemographAccountValue(res["fldencounterval"], "Gender Based Violence")
      xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral Hospital")
      xlabLst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldencounterval=&1 and (flditemtype=&2 or flditemtype=&3)", res["fldencounterval"], "Diagnostic Tests", "Radio Diagnostics"))
      xmedList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddrug) as col from tblmedbrand where fldbrandid in(select flditem from tblpatdosing where fldencounterval=&1 and flditemtype=&2)", res["fldencounterval"], "Medicines"))
      xadvice = modPatPatho.ShowSelectedNotes(res["fldencounterval"], "Initial Planning")
      With asx
        .Add(CStr(i))
        If res["fldregistid"] Then
          .Add(CStr(res["fldregistid"]))
        Else
          .Add("")
        Endif
        If res["fldconsultname"] = res["fldadmitlocat"] Then
          .Add(res["fldconsultid"])
          .Add("")
        Else
          .Add("")
          If xrefer Then
            .Add("Refer in")
          Else
            .Add(res["fldconsultid"])
          Endif
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])
        If res["fldptsex"] = "Female" Then
          .Add(CStr(DateDiff(res["fldptbirday"], res["fldconsulttime"], gb.Year)))
          .Add("")
        Else If res["fldptsex"] = "Male" Then
          .Add("")
          .Add(CStr(DateDiff(res["fldptbirday"], res["fldconsulttime"], gb.Year)))
        Endif
        If sDecrypt = True Then
          xcontact = modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"])
        Else
          xcontact = res["fldptcontact"]
        Endif
        If res["fldptaddward"] Then
          .Add(res["fldptadddist"] & "<br>" & res["fldptaddward"])
          .Add(res["fldptaddvill"] & "<br>" & xcontact)
        Else
          If res["fldptaddvill"] Then
            astr = Split(res["fldptaddvill"], "-")
            If astr.Count = 1 Then
              .Add(res["fldptadddist"])
              .Add(astr[0] & "<br>" & xcontact)
            Else
              .Add(res["fldptadddist"] & "<br>" & astr[1])
              .Add(astr[0] & "<br>" & xcontact)
            Endif
          Else
            .Add(res["fldptadddist"])
            .Add("<br>" & xcontact)
          Endif
        Endif
        .Add("")  ''Possible tB patient
        .Add("")  ''Possible tB patient

        If xlabLst And If xlabLst.Count Then
          .Add(xlabLst.Join("; "))
        Else
          .Add("")
        Endif
        .Add(modHMISRep.GetDiagnosisTableEIGHT(res["fldencounterval"], "Provisional Diagnosis"))
        .Add(xmedList.Join("<br>") & "<br>" & xadvice)

        .Add(modPatPatho.PatSelectProcedureString(res["fldencounterval"], "Procedures", "Done"))
        If xgenvio = "Yes" Then
          .Add("X")
        Else
          .Add("")
        Endif
        .Add(modHMISRep.GetDiscountGradeEIGHT(res["flddisctype"]))
        .Add(xrefer)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister81(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer
  Dim xlabLst As String[]
  Dim agestring As String
  Dim xaddlst As String[]
  Dim xpolice As String
  Dim xnatnl As String
  Dim xsource As String

  $BillingReport = New CReportHTMLong($ColmHMIS81, "", "")
  $BillingReport.UserData.Add("HMIS-8.1 (PATIENT ADMISSION REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  i = 1
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldadmitid as fldadmitid,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldcurrlocat as fldcurrlocat,tblencounter.flddoa as flddoa,tblencounter.fldvisit as fldvisit,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptaddward as fldptaddward,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptguardian as fldptguardian,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddoa>=&1 and tblencounter.flddoa<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 0, 730000)
  If res.Available Then
    For Each res
      xlabLst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldencounterval=&1 and (flditemtype=&2 or flditemtype=&3)", res["fldencounterval"], "Diagnostic Tests", "Radio Diagnostics"))
      xpolice = modPatient.GetDemographAccountValue(res["fldencounterval"], "Police Case")
      xnatnl = modPatient.GetDemographAccountValue(res["fldencounterval"], "National ID")
      xsource = modPatient.GetDemographAccountValue(res["fldencounterval"], "Admission Source")
      With asx
        .Add(CStr(i))
        .Add(modHMISRep.GetDateFormatHMISEight(res["flddoa"]))
        If res["fldvisit"] = "NEW" Then
          .Add(res["fldadmitid"])
          .Add("")
        Else If res["fldvisit"] = "OLD" Then
          .Add("")
          .Add(res["fldadmitid"])
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])
        .Add(xnatnl)

        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "0-7 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "0-7 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "8-28 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "8-28 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "29 days-11 Months"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "29 days-11 Months"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", ">=1 Year"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", ">=1 Year"))

        If res["fldptaddward"] Then
          .Add(res["fldptadddist"] & "<br>" & res["fldptaddvill"] & "-" & res["fldptaddward"] & "<br>")
        Else
          If res["fldptaddvill"] Then
            xaddlst = Split(res["fldptaddvill"], "-")
            If xaddlst.Count = 1 Then
              .Add(res["fldptadddist"] & "<br>" & res["fldptaddvill"] & "<br>")
            Else
              .Add(res["fldptadddist"] & "<br>" & xaddlst[0] & "-" & xaddlst[1] & "<br>")
            Endif
          Else
            .Add(res["fldptadddist"])
          Endif
        Endif

        If sDecrypt = True Then
          .Add(res["fldptguardian"] & "<br>" & modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
        Else
          .Add(res["fldptguardian"] & "<br>" & res["fldptcontact"])
        Endif
        .Add(modHMISRep.GetAdmissionSourceEight(xsource))
        .Add(modGeneral.GetDepartmentNameFromBed(res["fldcurrlocat"]))

        If xlabLst And If xlabLst.Count Then
          .Add(xlabLst.Join("; "))
        Else
          .Add("")
        Endif
        .Add(modPatient.PatientFindingList(res["fldencounterval"], "Provisional Diagnosis").Join("<br>"))
        .Add(modPatPatho.PatSelectProcedureString(res["fldencounterval"], "Procedures", "Done"))

        If xpolice = "Yes" Then
          .Add("X")
          .Add("")
        Else
          .Add("")
          .Add("X")
        Endif
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister82(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim i As Integer
  Dim sDept As String
  Dim agestring As String
  Dim xpolice As String
  Dim xnatnl As String

  Dim xlive As Integer
  Dim xdisc As Float
  Dim xdisper As Float

  $BillingReport = New CReportHTMLong($ColmHMIS82, "", "")
  $BillingReport.UserData.Add("HMIS-8.2 (PATIENT DISCHARGE REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  i = 1
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldpatientval as fldpatientval,tblencounter.fldadmitid as fldadmitid,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldcurrlocat as fldcurrlocat,tblencounter.flddoa as flddoa,tblencounter.flddod as flddod,tblencounter.fldadmission as fldadmission,tblencounter.flddisctype as flddisctype,tblencounter.fldvisit as fldvisit,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptaddward as fldptaddward,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptbirday as fldptbirday,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", "Female", 0, 730000)
  If res.Available Then
    For Each res
      sDept = modGeneral.GetDepartmentNameFromBed(res["fldcurrlocat"])
      xdisc = modNonMedical.GetTotalDiscByEnc(res["fldencounterval"])
      xdisper = modNonMedical.GetAverageDiscountPerEnc(modDatabase.$syConn, res["fldencounterval"])
      xpolice = modPatient.GetDemographAccountValue(res["fldencounterval"], "Police Case")
      xnatnl = modPatient.GetDemographAccountValue(res["fldencounterval"], "National ID")
      With asx
        .Add(CStr(i))
        .Add(res["fldadmitid"])
        .Add(modHMISRep.GetDateFormatHMISEight(res["flddod"]))
        .Add(modHMISRep.GetDateFormatHMISEight(res["flddoa"]))
        If res["flddoa"] Then
          .Add(DateDiff(res["flddoa"], res["flddod"], gb.Day))
        Else
          .Add("")
        Endif
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])
        .Add(xnatnl)

        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "0-7 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "0-7 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "8-28 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "8-28 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "29 days-11 Months"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "29 days-11 Months"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", ">=1 Year"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", ">=1 Year"))

        .Add(modHMISRep.GetServiceDischargeEIGHT(sDept))
        .Add(sDept & "<br>" & res["fldcurrlocat"])

        .Add(modHMISRep.GetProcedureAllEIGHT(res["fldencounterval"])) ''surgery name
        .Add("")  ''Post up infection - Yes
        .Add("")   ''Post up infection - No

        .Add(modHMISRep.GetDiagnosisTableEIGHT(res["fldencounterval"], "Final Diagnosis"))
        .Add(modHMISRep.GetHMISOutcomeEIGHT(res["fldencounterval"], res["fldadmission"]))

        If res["fldadmission"] = "Death" Then
          xlive = DateDiff(res["flddoa"], res["flddod"], gb.Hour)
          If xlive < 48 Then
            .Add("X")
            .Add("")
            .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Death"))
          Else
            .Add("")
            .Add("X")
            .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Death"))
          Endif
        Else
          .Add("")
          .Add("")
          .Add("")
        Endif

        If xdisper = 0 Then
          .Add("")
          .Add("")
          .Add("")
        Else If xdisper = 100 Then
          .Add("X")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        Else
          .Add("")
          .Add("X")
          .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        Endif
        .Add(modHMISRep.GetDiscountGradeEIGHT(res["flddisctype"]))

        If xpolice = "Yes" Then
          .Add("X")
          .Add("")
        Else
          .Add("")
          .Add("X")
        Endif
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function HMISRegister83(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result
  Dim sql As String

  Dim agestring As String
  Dim xpolice As String
  Dim xnatnl As String
  Dim xrefer As String
  Dim xgenviol As String

  Dim i As Integer
  Dim xlabLst As String[]
  Dim xmedList As String[]

  Dim xaddlst As String[]
  Dim xdisc As Float
  Dim xdisper As Float

  $BillingReport = New CReportHTMLong($ColmHMIS83, "", "")
  $BillingReport.UserData.Add("HMIS-8.3 (EMERGENCY SERVICE REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  sql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")

  i = 1
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  res = modDatabase.$syConn.Exec("select tblencounter.fldencounterval as fldencounterval,tblencounter.fldpatientval as fldpatientval,tblencounter.fldadmitlocat as fldadmitlocat,tblencounter.fldcurrlocat as fldcurrlocat,tblencounter.flddoa as flddoa,tblencounter.flddod as flddod,tblencounter.fldregdate as fldregdate,tblencounter.fldadmission as fldadmission,tblencounter.flddisctype as flddisctype,tblpatientinfo.fldptnamefir as fldptnamefir,tblpatientinfo.fldptnamelast as fldptnamelast,tblpatientinfo.fldethniccode as fldethniccode,tblpatientinfo.fldptsex as fldptsex,tblpatientinfo.fldptaddvill as fldptaddvill,tblpatientinfo.fldptaddward as fldptaddward,tblpatientinfo.fldptadddist as fldptadddist,tblpatientinfo.fldptcontact as fldptcontact,tblpatientinfo.fldptguardian as fldptguardian,tblpatientinfo.fldencrypt as fldencrypt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblpatientinfo.fldptsex=&3 or tblpatientinfo.fldptsex=&4) and " & agestring & ">=&5 and " & agestring & "<&6 and tblencounter.fldadmitlocat in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Female", "Male", 0, 730000)
  If res.Available Then
    For Each res
      xmedList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddrug) as col from tblmedbrand where fldbrandid in(select flditem from tblpatdosing where fldencounterval=&1 and flditemtype=&2)", res["fldencounterval"], "Medicines"))
      xlabLst = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblpatbilling where fldencounterval=&1 and (flditemtype=&2 or flditemtype=&3)", res["fldencounterval"], "Diagnostic Tests", "Radio Diagnostics"))

      xdisc = modNonMedical.GetTotalDiscByEnc(res["fldencounterval"])
      xdisper = modNonMedical.GetAverageDiscountPerEnc(modDatabase.$syConn, res["fldencounterval"])
      xpolice = modPatient.GetDemographAccountValue(res["fldencounterval"], "Police Case")
      xnatnl = modPatient.GetDemographAccountValue(res["fldencounterval"], "National ID")
      xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral Hospital")
      xgenviol = modPatient.GetDemographAccountValue(res["fldencounterval"], "Gender Based Violence")
      With asx
        .Add(CStr(i))
        .Add(res["fldencounterval"])  ''change to tblopvisit.fldemerid
        .Add(modHMISRep.GetDateFormatHMISEight(res["fldregdate"]))
        If sDecrypt = True Then
          .Add(modPassword.DecryptPatData(res["fldptnamefir"], res["fldencrypt"]) & "<br>" & modPassword.DecryptPatData(res["fldptnamelast"], res["fldencrypt"]))
        Else
          .Add(res["fldptnamefir"] & "<br>" & res["fldptnamelast"])
        Endif
        .Add(res["fldethniccode"])
        .Add(xnatnl)

        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "0-7 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "0-7 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "8-28 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "8-28 days"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", "29 days-11 Months"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", "29 days-11 Months"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Female", ">=1 Year"))
        .Add(modHMISRep.GetHMISAgeFormatEight(res["fldencounterval"], "Male", ">=1 Year"))

        If res["fldptaddward"] Then
          .Add(res["fldptadddist"] & "<br>" & res["fldptaddvill"] & "-" & res["fldptaddward"] & "<br>")
        Else
          If res["fldptaddvill"] Then
            xaddlst = Split(res["fldptaddvill"], "-")
            If xaddlst.Count = 1 Then
              .Add(res["fldptadddist"] & "<br>" & res["fldptaddvill"] & "<br>")
            Else
              .Add(res["fldptadddist"] & "<br>" & xaddlst[0] & "-" & xaddlst[1] & "<br>")
            Endif
          Else
            .Add(res["fldptadddist"])
          Endif
        Endif

        If sDecrypt = True Then
          .Add(res["fldptguardian"] & "<br>" & modPassword.DecryptPatData(res["fldptcontact"], res["fldencrypt"]))
        Else
          .Add(res["fldptguardian"] & "<br>" & res["fldptcontact"])
        Endif
        .Add("")  ''source (self)
        .Add(xrefer)  ''source (Refer)
        .Add(modPatReports.GetPatientPresentingSymptomReport(res["fldencounterval"]).Join("<br>"))
        .Add("")  ''brought dead

        If xlabLst And If xlabLst.Count Then
          .Add(xlabLst.Join("; "))
        Else
          .Add("")
        Endif
        .Add(modHMISRep.GetDiagnosisTableEIGHT(res["fldencounterval"], "Provisional Diagnosis"))
        .Add(xmedList.Join("<br>"))

        .Add("")  ''observation (yes)
        .Add("")  ''observation (no)
        .Add(modHMISRep.GetDateFormatHMISEight(res["flddod"]))
        .Add(modHMISRep.GetHMISEmergencyOutcomeEIGHT(res["fldencounterval"], res["fldadmission"]))

        If res["fldadmission"] = "Death" Then
          .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Death"))
        Else
          .Add("")
        Endif

        If xdisper = 0 Then
          .Add("")
          .Add("")
          .Add("")
        Else If xdisper = 100 Then
          .Add("X")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        Else
          .Add("")
          .Add("X")
          .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        Endif
        .Add(modHMISRep.GetDiscountGradeEIGHT(res["flddisctype"]))

        If xgenviol = "Yes" Then
          .Add("X")
        Else
          .Add("")
        Endif
        If xpolice = "Yes" Then
          .Add("X")
          .Add("")
        Else
          .Add("")
          .Add("X")
        Endif
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function EWARSRegister(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim res As Result

  Dim agestring As String
  Dim i As Integer
  Dim xdiagno As String
  Dim xlab As String

  $BillingReport = New CReportHTMLong($ColmEWARS, "", "")
  $BillingReport.UserData.Add("EWARS REPORT", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  agestring = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  res = modDatabase.$syConn.Exec("select tblpatfindings.fldencounterval as fldencounterval,tblpatfindings.fldtype as fldtype,tblpatfindings.fldcodenew as fldcodenew,tblpatfindings.fldcode as fldcode,tblpatfindings.fldtime as fldtime from tblpatfindings where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and (tblpatfindings.fldtype=&3 or tblpatfindings.fldtype=&4) and tblpatfindings.fldcodenew in(select tblsurveillance.fldcodenew from tblsurveillance) and tblpatfindings.fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where (tblpatientinfo.fldptsex=&5 or tblpatientinfo.fldptsex=&6) and " & agestring & ">=&7 and " & agestring & "<&8)) and tblpatfindings.fldsave=&9" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", "Final Diagnosis", "Female", "Male", 0, 730000, True)

  i = 1
  If res.Available Then
    For Each res
      If res["fldtype"] = "Provisional Diagnosis" Then
        xdiagno = "Probable"
      Else If res["fldtype"] = "Final Diagnosis" Then
        xdiagno = "Confirmed"
      Endif
      xlab = modPatReports.GetLaboratoryHTMLTable(res["fldencounterval"], modLabTest.PaientAllTestNameArray(res["fldencounterval"]), MMain.$defUnit, "FitsrVal")
      With asx
        .Add(CStr(i))
        .Add(modPatient.GetRecordDate(res["fldencounterval"]))
        .Add("")
        .Add(res["fldencounterval"])
        .Add(modPatient.CurrentAdmissionStatus(res["fldencounterval"]))
        .Add(modPatient.GetPatientNameByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientAgeString(res["fldencounterval"], res["fldtime"]))
        .Add(modPatient.GetPatientSex(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatDistrictByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatFirAddressByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatWardAddressByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(modPatient.GetPatientContactByEnc(res["fldencounterval"], modDatabase.$syConn))
        .Add(res["fldcode"])
        .Add(res["fldcodenew"])
        .Add(xdiagno)
        .Add(xlab)   'lab
        .Add(modPatient.GetPatExitComment(res["fldencounterval"], "Discharged"))
        .Add(modPatient.GetReferLocation(res["fldencounterval"]))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

Public Function BipannaRegister(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim xDeptList As String[]
  Dim xpackage As String
  Dim i As Integer

  Dim res As Result
  Dim xrefer As String
  Dim xgender As String
  Dim xage As String
  Dim xcitizen As String
  Dim xfree As String
  Dim xbipcode As String
  Dim xexpense As Float
  Dim xvisit As String

  $BillingReport = New CReportHTMLong($ColmBipana, "", "")
  $BillingReport.UserData.Add("BIPANNA NAGARIK EXPENSE REPORT", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  xDeptList = modHMISReport.GetDBHMISettingList("SchemeTypes", "Bipanna Nagarik")

  i = 1
  For Each xpackage In xDeptList
    res = modDatabase.$syConn.Exec("select distinct(fldencounterval) as fldencounterval from tblpatbilling where flddisctype like &1 and fldtime>=&2 and fldtime<=&3 and fldsave=&4 and fldprint=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xpackage, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, True)

    If res.Available Then
      For Each res
        xvisit = modPatient.GetPatVisitHMIS(res["fldencounterval"])
        xbipcode = modPatient.GetDemographAccountValue(res["fldencounterval"], "Bipanna ID")
        xrefer = modPatient.GetDemographAccountValue(res["fldencounterval"], "Referral District")
        xgender = modPatient.GetPatientSex(res["fldencounterval"], modDatabase.$syConn)
        xage = modPatient.GetPatientAgeString(res["fldencounterval"], xdtlast)
        xcitizen = modPatient.GetDemographAccountValue(res["fldencounterval"], "Citizenship No")
        xfree = modPatient.GetDemographAccountValue(res["fldencounterval"], "Bipanna Scheme")
        xexpense = modHMISRep.GetCreditExpesnseSelectPackage(modDatabase.$syConn, res["fldencounterval"], xpackage, xdtfir, xdtlast)
        With asx
          .Add(CStr(i))
          .Add(xrefer)
          If xvisit = "OLD" Then
            .Add("")
            .Add(xbipcode)
          Else
            .Add(xbipcode)
            .Add("")
          Endif
          .Add(modPatient.GetPatientNameByEnc(res["fldencounterval"], modDatabase.$syConn))
          If xgender = "Female" Then
            .Add(xage)
            .Add("")
            .Add("")
          Else If xgender = "Male" Then
            .Add("")
            .Add(xage)
            .Add("")
          Else
            .Add("")
            .Add("")
            .Add(xage)
          Endif
          .Add(xcitizen)
          .Add(xfree)
          .Add(modReportVar.GetLocaleNumberFormat(xexpense, gb.Currency))
          .Add(res["fldencounterval"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
    Endif

  Next

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

''========================== Hospital service ========================
Public Function SubGetHospitalService(ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xval As String
  Dim asx As String[]
  Dim sexList As String[]
  Dim agestring As String
  Dim res As Result
  Dim resx As Result
  Dim res1 As Result
  Dim res1x As Result

  Dim Row As Integer
  Dim xmale As Integer
  Dim xfemale As Integer
  Dim nmale As Integer
  Dim nfemale As Integer
  Dim totxmale As Integer
  Dim totxfem As Integer
  Dim totnmale As Integer
  Dim totnfem As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sexList = ["Female", "Male"]
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  Row = 0
  totxmale = 0
  totxfem = 0
  totnmale = 0
  totnfem = 0
  xFinal = New Variant[]
  For Each xval In ageList
    xRowVal = New Collection
    asx = Split(xval, ";")
    xRowVal.Add(asx[0], CStr(0))

    nfemale = 0
    nmale = 0
    xmale = 0
    xfemale = 0

    res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldvisit=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Female", CInt(asx[1]), CInt(asx[2]), "NEW")                                                       ''
    If res.Available And If res["tot"] Then
      nfemale = nfemale + res["tot"]
    Endif

    resx = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldvisit=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", CInt(asx[1]), CInt(asx[2]), "NEW")                                                       ''
    If resx.Available And If resx["tot"] Then
      nmale = nmale + resx["tot"]
    Endif

    res1 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Female", CInt(asx[1]), CInt(asx[2]))                                                       ''
    If res1.Available And If res1["tot"] Then
      xfemale = xfemale + res1["tot"]
    Endif

    res1x = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Male", CInt(asx[1]), CInt(asx[2]))                                                       ''
    If res1x.Available And If res1x["tot"] Then
      xmale = xmale + res1x["tot"]
    Endif

    totxmale = totxmale + xmale
    totxfem = totxfem + xfemale
    totnmale = totnmale + nmale
    totnfem = totnfem + nfemale

    xRowVal.Add(nfemale, CStr(1))
    xRowVal.Add(nmale, CStr(2))
    xRowVal.Add(xfemale, CStr(3))
    xRowVal.Add(xmale, CStr(4))

    xFinal.Add(xRowVal)
  Next

  xRowVal = New Collection
  xRowVal.Add("Total", CStr(0))
  xRowVal.Add(totnfem, CStr(1))
  xRowVal.Add(totnmale, CStr(2))
  xRowVal.Add(totxfem, CStr(3))
  xRowVal.Add(totxmale, CStr(4))

  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetEmergencyServices(ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim xval As String
  Dim asx As String[]

  Dim sexList As String[]
  Dim sex As String
  Dim agestring As String
  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xmale As Integer
  Dim xfemale As Integer
  Dim xother As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")
  sexList = ["Female", "Male"]
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)

  xFinal = New Variant[]
  xmale = 0
  xfemale = 0
  xother = 0
  For Each xval In ageList
    xRowVal = New Collection
    asx = Split(xval, ";")
    xRowVal.Add(asx[0], CStr(0))

    k = 1
    For Each sex In sexList
      xcnt = 0

      res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldadmitlocat in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sex, CInt(asx[1]), CInt(asx[2]))                                                       ''
      If res["tot"] Then
        xcnt = xcnt + res["tot"]
      Endif

      xRowVal.Add(xcnt, CStr(k))

      If sex = "Male" Then
        xmale = xmale + xcnt
      Else If sex = "Female" Then
        xfemale = xfemale + xcnt
      Else If sex = "Other" Then
        xother = xother + xcnt
      Endif
      k = k + 1
    Next

    xFinal.Add(xRowVal)
  Next

  xRowVal = New Collection
  xRowVal.Add("Total", CStr(0))
  xRowVal.Add(xfemale, CStr(1))
  xRowVal.Add(xmale, CStr(2))

  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetRadiologyService(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim xval As String
  Dim res As Result
  Dim res1 As Result
  Dim xcnt As Integer
  Dim acnt As Integer
  Dim xformat As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection
  Dim aSource As String

  aSource = modSettings.ShowSettingFromFIle("HMISReporting/RadiologySource")
  xFinal = New Variant[]
  For Each xval In modHMISRep.$HMISDiagnosticList
    Select xval
      Case "X-ray", "Ultrasonogram (USG)", "Echocardiogram (Echo)", "Electro Encephalo Gram (EEG)", "Electrocardiogram (ECG)", "Trademill", "Computed Tomographic (CT) Scan", "Magnetic Resonance Imaging (MRI)"
        xformat = "Number"
      Case "Endoscopy", "Colonoscopy", "Bronchoscopy", "Nuclear Medicine", "Mammogram", "Cystoscopy", "DEXA Scan", "DTPA Scan", "Electroconvulsive Therapy (ECT)", "Transcranial Magnetic Simulation (TMS)"
        xformat = "Persons"
    End Select

    xRowVal = New Collection
    sql = modHMISReport.GetDBHMISettingQuery("DiagnosticServices", xval)

    xcnt = 0
    If xformat = "Persons" Then
      If aSource = "Service" Then
        res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname in " & sql & " and fldsave=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
      Else
        res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname in " & sql & " and fldsave=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
      Endif
    Else
      If aSource = "Service" Then
        res = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname in " & sql & " and fldsave=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
      Else
        res = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemname in " & sql & " and fldsave=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
      Endif
    Endif
    If res["tot"] Then
      xcnt = xcnt + res["tot"]
    Endif

    xRowVal.Add(xval, CStr(0))
    xRowVal.Add(xformat, CStr(1))
    xRowVal.Add(xcnt, CStr(2))

    xFinal.Add(xRowVal)
  Next

  acnt = 0
  xRowVal = New Collection
  res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xtot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Diagnostic Tests", True)
  If res1["xtot"] Then
    acnt = acnt + res1["xtot"]
  Endif
  xRowVal.Add("Total Laboratory service Provided", CStr(0))
  xRowVal.Add("Persons", CStr(1))
  xRowVal.Add(acnt, CStr(2))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Other Service Provided (if any)", CStr(0))
  xRowVal.Add("Persons", CStr(1))
  xRowVal.Add(0, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubFreeServiceForPoor(xList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim xType As String
  Dim res1 As Result
  Dim res2 As Result
  Dim aa As Integer
  Dim bb As Integer
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "Bipanna Nagarik")

  For Each xType In xList
    xRowVal = New Collection
    xRowVal.Add(xType, CStr(0))

    aa = 0
    res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype in " & sql & " and fldpatientval in(select fldpatientval from tblsociallist where fldscheme=&3) and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xType, "Female")
    If res1.Available And If res1["xcnt"] Then
      aa = res1["xcnt"]
    Endif

    bb = 0
    res2 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblencounter where fldregdate>=&1 and fldregdate<=&2  and flddisctype in " & sql & " and fldpatientval in(select fldpatientval from tblsociallist where fldscheme=&3) and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xType, "Male")
    If res2.Available And If res2["xcnt"] Then
      bb = res2["xcnt"]
    Endif

    xRowVal.Add(aa, CStr(1))
    xRowVal.Add(bb, CStr(2))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''======================== Indoor =================
Private Function GetTotalPatOutcome(dt1 As Date, dt2 As Date, sLocaType As String, sLocation As String, sGender As String, sMinage As Integer, sMaxage As Integer, sStatus As String, Optional sComment As String, Optional sComment1 As String) As Integer

  Dim res As Result
  Dim xx As Integer
  Dim agestring As String

  xx = 0
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  If sComment Then
    If sComment1 Then
      res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(tblencounter.fldencounterval)) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and (tblpatientdate.fldcomment=&4 or tblpatientdate.fldcomment=&5) and tblpatientinfo.fldptsex=&6 and " & agestring & ">=&7 and " & agestring & "<&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sStatus, sComment, sComment1, sGender, sMinage, sMaxage)
    Else
      res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(tblencounter.fldencounterval)) as cnt from (tblpatientdate inner join tblencounter on tblpatientdate.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and tblpatientdate.fldcomment=&4 and tblpatientinfo.fldptsex=&5 and " & agestring & ">=&6 and " & agestring & "<&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sStatus, sComment, sGender, sMinage, sMaxage)                                                   ''
    Endif
  Else
    res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(tblencounter.fldencounterval)) as cnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and tblpatientinfo.fldptsex=&4 and " & agestring & ">=&5 and " & agestring & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sStatus, sGender, sMinage, sMaxage)
  Endif
  If res.Available And If res["cnt"] Then
    xx = xx + res["cnt"]
  Endif
  Return xx

End

Private Function GetTotalDeathOutcome(dt1 As Date, dt2 As Date, sLocaType As String, sLocation As String, sGender As String, sMinage As Integer, sMaxage As Integer, sMinDy As Integer, Optional sMaxDy As Integer) As Integer

  Dim res As Result
  Dim xx As Integer
  Dim agestring As String

  Dim xdtstr As String

  xdtstr = modDate.GetSQLDateDiffStr("tblencounter.flddod", "tblencounter.fldregdate", modDatabase.$syConn)

  xx = 0
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  If sMaxDy Then
    res = modDatabase.$syConn.Exec("select count(tblencounter.fldencounterval) as cnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and tblpatientinfo.fldptsex=&4 and " & agestring & ">=&5 and " & agestring & "<&6 and " & xdtstr & ">=&7 and " & xdtstr & "<&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Death", sGender, sMinage, sMaxage, sMinDy, sMaxDy)
  Else
    res = modDatabase.$syConn.Exec("select count(tblencounter.fldencounterval) as cnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and tblpatientinfo.fldptsex=&4 and " & agestring & ">=&5 and " & agestring & "<&6 and " & xdtstr & ">=&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), "Death", sGender, sMinage, sMaxage, sMinDy)
  Endif
  If res.Available And If res["cnt"] Then
    xx = xx + res["cnt"]
  Endif
  Return xx

End

Public Function SubShowInpatientsOutcome(ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xval As String
  Dim asx As String[]

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xval In ageList
    xRowVal = New Collection
    asx = Split(xval, ";")
    xRowVal.Add(asx[0], CStr(0))

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Discharged", "Recovered", "Improved"), CStr(1))
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Discharged", "Recovered", "Improved"), CStr(2))

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Discharged", "Unchanged", "Worse"), CStr(3))
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Discharged", "Unchanged", "Worse"), CStr(4))

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Refer"), CStr(5))
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Refer"), CStr(6))

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "LAMA"), CStr(7))
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "LAMA"), CStr(8))

    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), "Absconder"), CStr(9))
    xRowVal.Add(GetTotalPatOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), "Absconder"), CStr(10))

    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), 0, 2), CStr(11))
    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), 0, 2), CStr(12))

    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Female", CInt(asx[1]), CInt(asx[2]), 2), CStr(13))
    xRowVal.Add(GetTotalDeathOutcome(xdtfir, xdtlast, sLocaType, sLocation, "Male", CInt(asx[1]), CInt(asx[2]), 2), CStr(14))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Private Function GetEncounterGestWeek(encid As String, sLocaType As String, sLocation As String) As Integer

  Dim rsx As Result
  Dim res As Result
  Dim xval As Integer

  rsx = modDatabase.$syConn.Exec("select fldgestation from tblobstetrics where flddelref in(select fldreference from tblconfinement where fldencounterval=&1)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid)
  If rsx.Available Then
    If rsx["fldgestation"] Then
      xval = rsx["fldgestation"]
    Else
      xval = 0
    Endif
  Else
    res = modDatabase.$syConn.Exec("select fldreportquanti from tblexamgeneral where fldencounterval=&1 and fldinput=&2 and fldtype=&3 and flditem=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid, "Obstetrics", "Quantitative", "Gestation")
    If res.Available Then
      If res["fldreportquanti"] Then
        xval = res["fldreportquanti"]
      Else
        xval = 0
      Endif
    Else
      xval = 0
    Endif
  Endif
  Return xval

End

Public Function SubGetGravidaReport(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim agefir As Integer
  Dim agesec As Integer
  Dim agethrd As Integer
  Dim agefour As Integer
  Dim xval As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldreference in(select flddelref from tblobstetrics where fldgravida=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), 1)
  If Not res1.Available Then
    res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquanti=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Quantitative", "Gravida", 1)
  Endif
  If res1.Available Then
    For Each res1
      xval = GetEncounterGestWeek(res1["col"], sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Primi(G=1)", CStr(0))
  xRowVal.Add(agefir, CStr(1))
  xRowVal.Add(agesec, CStr(2))
  xRowVal.Add(agethrd, CStr(3))
  xRowVal.Add(agefour, CStr(4))
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldreference in(select flddelref from tblobstetrics where fldgravida>=&3 and fldgravida<&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), 2, 5)
  If Not res2.Available Then
    res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquanti>=&6 and fldreportquanti<&7)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Quantitative", "Gravida", 2, 5)
  Endif
  If res2.Available Then
    For Each res2
      xval = GetEncounterGestWeek(res2["col"], sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Multi(G=1-4)", CStr(0))
  xRowVal.Add(agefir, CStr(1))
  xRowVal.Add(agesec, CStr(2))
  xRowVal.Add(agethrd, CStr(3))
  xRowVal.Add(agefour, CStr(4))
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldreference in(select flddelref from tblobstetrics where fldgravida>=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), 5)
  If Not res3.Available Then
    res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblexamgeneral where fldinput=&3 and fldtype=&4 and flditem=&5 and fldreportquanti>=&6)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Obstetrics", "Quantitative", "Gravida", 5)
  Endif
  If res3.Available Then
    For Each res3
      xval = GetEncounterGestWeek(res3["col"], sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Grand Multi(G>=5)", CStr(0))
  xRowVal.Add(agefir, CStr(1))
  xRowVal.Add(agesec, CStr(2))
  xRowVal.Add(agethrd, CStr(3))
  xRowVal.Add(agefour, CStr(4))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubFillMaternalAgeData(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim agefir As Integer
  Dim agesec As Integer
  Dim agethrd As Integer
  Dim agefour As Integer
  Dim xval As Integer
  Dim xstr As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xstr = modMedReports.GetAgeStringByTable("tblconfinement", modDatabase.$syConn)
  xFinal = New Variant[]
  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptbirday like &3 and " & xstr & "<&4))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%", 7300)
  If res1.Available Then
    For Each res1
      xval = GetEncounterGestWeek(res1["col"], sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("<20 Yrs", CStr(0))
  xRowVal.Add(agefir, CStr(1))
  xRowVal.Add(agesec, CStr(2))
  xRowVal.Add(agethrd, CStr(3))
  xRowVal.Add(agefour, CStr(4))
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptbirday like &3 and " & xstr & ">=&4 and " & xstr & "<&5))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%", 7300, 12775)
  If res2.Available Then
    For Each res2
      xval = GetEncounterGestWeek(res2["col"], sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("20-34 Yrs", CStr(0))
  xRowVal.Add(agefir, CStr(1))
  xRowVal.Add(agesec, CStr(2))
  xRowVal.Add(agethrd, CStr(3))
  xRowVal.Add(agefour, CStr(4))
  xFinal.Add(xRowVal)

  agefir = 0
  agesec = 0
  agethrd = 0
  agefour = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptbirday like &3 and " & xstr & ">=&4))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%", 12775)
  If res3.Available Then
    For Each res3
      xval = GetEncounterGestWeek(res3["col"], sLocaType, sLocation)
      If xval >= 148 And If xval < 196 Then
        agefir = agefir + 1
      Else If xval >= 196 And If xval < 259 Then
        agesec = agesec + 1
      Else If xval >= 259 And If xval < 294 Then
        agethrd = agethrd + 1
      Else If xval >= 294 Then
        agefour = agefour + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add(">=35 Yrs", CStr(0))
  xRowVal.Add(agefir, CStr(1))
  xRowVal.Add(agesec, CStr(2))
  xRowVal.Add(agethrd, CStr(3))
  xRowVal.Add(agefour, CStr(4))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetMedicoLegalCases(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  Dim res1 As Result
  Dim res2 As Result
  Dim xfemale As Integer
  Dim xmale As Integer

  xFinal = New Variant[]
  xfemale = 0
  xmale = 0
  xRowVal = New Collection
  res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpataccgeneral where fldtime>=&1 and fldtime<=&2 and fldinput=&3 and flditem=&4 and fldreportquali=&5 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Demographics", "Police Case", "Yes", "Female")
  If res1.Available And If res1["xcnt"] Then
    xfemale = res1["xcnt"]
  Endif
  res2 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpataccgeneral where fldtime>=&1 and fldtime<=&2 and fldinput=&3 and flditem=&4 and fldreportquali=&5 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Demographics", "Police Case", "Yes", "Male")
  If res2.Available And If res2["xcnt"] Then
    xmale = res2["xcnt"]
  Endif
  xRowVal.Add(xfemale, CStr(0))
  xRowVal.Add(xmale, CStr(1))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetProcedureReportHMIS(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sexList As String[] = ["Female", "Male"]
  Dim xgender As String
  Dim k As Integer
  Dim res1 As Result
  Dim res11 As Result
  Dim xmajer As Integer
  Dim xmajip As Integer

  Dim resy As Result
  Dim resz As Result
  Dim xinter As Integer
  Dim xintip As Integer

  Dim res2 As Result
  Dim xinpatot As Integer
  Dim res3 As Result
  Dim xtotopd As Integer
  Dim res4 As Result
  Dim xertot As Integer

  Dim res5 As Result
  Dim plastot As Integer
  Dim sql As String

  Dim xFinal As Variant[]
  Dim aRowVal As Collection
  Dim pRowVal As Collection
  Dim yRowVal As Collection
  Dim zRowVal As Collection
  Dim bRowVal As Collection
  Dim cRowVal As Collection
  Dim dRowVal As Collection
  Dim eRowVal As Collection
  Dim aSource As String

  aSource = modSettings.ShowSettingFromFIle("HMISReporting/ProcedureSource")
  sql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")
  xFinal = New Variant[]

  k = 1
  aRowVal = New Collection
  pRowVal = New Collection
  yRowVal = New Collection
  zRowVal = New Collection
  bRowVal = New Collection
  cRowVal = New Collection
  dRowVal = New Collection
  eRowVal = New Collection

  aRowVal.Add("Major:Emergency", CStr(0))
  pRowVal.Add("Major:Inpatients", CStr(0))

  yRowVal.Add("Intermediate:Emergency", CStr(0))
  zRowVal.Add("Intermediate:Inpatients", CStr(0))
  '
  bRowVal.Add("Minor:Outpatients", CStr(0))
  cRowVal.Add("Minor:Inpatients", CStr(0))
  dRowVal.Add("Minor:Emergency", CStr(0))

  eRowVal.Add("Plaster", CStr(0))

  For Each xgender In sexList
    xmajer = 0
    xmajip = 0
    xinter = 0
    xintip = 0
    xinpatot = 0
    xtotopd = 0
    xertot = 0
    plastot = 0

    If aSource = "Service" Then
      res1 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and fldinput=&3 and fldreportquali=&4 and flditem in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", "Done", "Major", xgender)
    Else
      res1 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Major", xgender)
    Endif
    If res1.Available And If res1["tot"] Then
      xmajip = res1["tot"]
    Endif
    ''res11   xmajer
    If aSource = "Service" Then
      res11 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and fldinput=&3 and fldreportquali=&4 and flditem in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", "Done", "Major", xgender)
    Else
      res11 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Major", xgender)
    Endif
    If res11.Available And If res11["tot"] Then
      xmajer = res11["tot"]
    Endif

    If aSource = "Service" Then
      resy = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Intermediate", xgender)
    Else
      resy = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Intermediate", xgender)
    Endif
    If resy.Available And If resy["tot"] Then
      xintip = resy["tot"]
    Endif
    '' resz  xinter
    If aSource = "Service" Then
      resz = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Intermediate", xgender)
    Else
      resz = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Intermediate", xgender)
    Endif
    If resz.Available And If resz["tot"] Then
      xinter = resz["tot"]
    Endif

    If aSource = "Service" Then
      res5 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Plaster", xgender)
    Else
      res5 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Plaster", xgender)
    Endif
    If res5.Available And If res5["tot"] Then
      plastot = res5["tot"]
    Endif

    If aSource = "Service" Then
      res2 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Minor", xgender)
    Else
      res2 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Minor", xgender)
    Endif
    If res2.Available And If res2["tot"] Then
      xinpatot = res2["tot"]
    Endif

    If aSource = "Service" Then
      res3 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Minor", xgender)
    Else
      res3 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Minor", xgender)
    Endif
    If res3.Available And If res3["tot"] Then
      xtotopd = res3["tot"]
    Endif

    If aSource = "Service" Then
      res4 = modDatabase.$syConn.Exec("select COUNT(fldid) as tot from tblpatgeneral where fldnewdate>=&1 and fldnewdate<=&2 and (fldinput=&3 or fldinput=&4) and fldreportquali=&5 and flditem in(select flditemname from tblservicecost where fldtarget=&6) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Minor Procedures", "Procedures", "Done", "Minor", xgender)
    Else
      res4 = modDatabase.$syConn.Exec("select SUM(flditemqty) as tot from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemtype=&3 and fldsave=&4 and flditemname in(select flditemname from tblservicecost where fldtarget=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Procedures", True, "Minor", xgender)
    Endif
    If res4.Available And If res4["tot"] Then
      xertot = res4["tot"]
    Endif

    aRowVal.Add(xmajer, CStr(k))
    pRowVal.Add(xmajip, CStr(k))

    yRowVal.Add(xinter, CStr(k))
    zRowVal.Add(xintip, CStr(k))

    bRowVal.Add(xtotopd - xertot, CStr(k))
    cRowVal.Add(xinpatot, CStr(k))
    dRowVal.Add(xertot, CStr(k))

    eRowVal.Add(plastot, CStr(k))

    k = k + 1
  Next
  aRowVal.Add(0, CStr(k))
  pRowVal.Add(0, CStr(k))
  yRowVal.Add(0, CStr(k))
  zRowVal.Add(0, CStr(k))
  bRowVal.Add(0, CStr(k))
  cRowVal.Add(0, CStr(k))
  dRowVal.Add(0, CStr(k))
  eRowVal.Add("**", CStr(k))

  xFinal.Add(aRowVal)
  xFinal.Add(pRowVal)
  xFinal.Add(yRowVal)
  xFinal.Add(zRowVal)
  xFinal.Add(bRowVal)
  xFinal.Add(cRowVal)
  xFinal.Add(dRowVal)
  xFinal.Add(eRowVal)

  Return xFinal

End

Public Function SubGetDeathReportHMIS(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1x As Result
  Dim res2x As Result
  Dim res3x As Result
  Dim res4x As Result
  Dim res5x As Result
  Dim res6x As Result

  Dim xstr As String
  Dim aa As Integer
  Dim xsex As String
  Dim sexList As String[] = ["Female", "Male"]
  Dim i As Integer
  Dim sql As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  xFinal = New Variant[]

  xRowVal = New Collection
  xRowVal.Add("Early Neonatal(0-6 days)", CStr(0))
  i = 1
  For Each xsex In sexList
    aa = 0
    res1x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4 and fldptbirday like &5 and " & xstr & ">=&6 and " & xstr & "<&7)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", xsex, "%", 0, 7)
    If res1x.Available Then
      If res1x["col"] Then
        aa = res1x["col"]
      Endif
    Endif
    xRowVal.Add(aa, CStr(i))
    i = i + 1
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Late Neonatal(7-27 days)", CStr(0))
  i = 1
  For Each xsex In sexList
    aa = 0
    res2x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4 and fldptbirday like &5 and " & xstr & ">=&6 and " & xstr & "<&7)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", xsex, "%", 7, 27)
    If res2x.Available Then
      If res2x["col"] Then
        aa = res2x["col"]
      Endif
    Endif
    xRowVal.Add(aa, CStr(i))
    i = i + 1
  Next
  xFinal.Add(xRowVal)

  ''delivery
  xRowVal = New Collection
  xRowVal.Add("Maternal (All)", CStr(0))
  aa = 0
  res3x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3 and fldencounterval in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death")
  If res3x.Available Then
    If res3x["col"] Then
      aa = res3x["col"]
    Endif
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(0, CStr(2))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Post Operative", CStr(0))
  i = 1
  For Each xsex In sexList
    aa = 0
    res4x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3 and fldencounterval in(select fldencounterval from tblpatgeneral where fldreportquali=&4) and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", "Done", xsex)
    If res4x.Available Then
      If res4x["col"] Then
        aa = res4x["col"]
      Endif
    Endif
    xRowVal.Add(aa, CStr(i))
    i = i + 1
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Emergency", CStr(0))
  sql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")
  i = 1
  For Each xsex In sexList
    aa = 0
    res5x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3 and fldadmitlocat in " & sql & " and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death(OPD)", xsex)
    If res5x.Available Then
      If res5x["col"] Then
        aa = res5x["col"]
      Endif
    Endif
    xRowVal.Add(aa, CStr(i))
    i = i + 1
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Inpatient", CStr(0))
  i = 1
  For Each xsex In sexList
    aa = 0
    res6x = modDatabase.$syConn.Exec("select count(fldencounterval) as col from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3 and flddoa IS NOT NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", xsex)
    If res6x.Available Then
      If res6x["col"] Then
        aa = res6x["col"]
      Endif
    Endif
    xRowVal.Add(aa, CStr(i))
    i = i + 1
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetFreeServicesHMIS(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xfree As String
  Dim xserql As String
  Dim xDepsql As String

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res5 As Result
  Dim totipd As Integer
  Dim totopd As Integer
  Dim toter As Integer
  Dim totrefer As Integer

  Dim xFinal As Variant[]
  Dim xRowLbl As Variant[]
  Dim xRowValop As Collection
  Dim xRowValip As Collection
  Dim xRowValer As Collection
  Dim xRowValref As Collection
  Dim k As Integer

  xDepsql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")

  xRowLbl = New Variant[]
  xRowValop = New Collection
  xRowValip = New Collection
  xRowValer = New Collection
  xRowValref = New Collection

  xRowValop.Add("Outpatients", CStr(0))
  xRowValip.Add("Inpatients", CStr(0))
  xRowValer.Add("Emergency", CStr(0))
  xRowValref.Add("Referred Out", CStr(0))

  k = 1
  For Each xfree In modHMISRep.$HMISSocialSecurity
    totipd = 0
    totopd = 0
    toter = 0
    totrefer = 0
    xserql = modHMISReport.GetDBHMISettingQuery("SocialSecurity", xfree)

    res1 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype in " & xserql & " and flddoa IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res1.Available And If res1["tot"] Then
      totipd = totipd + res1["tot"]
    Endif

    res5 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype in " & xserql & " and fldreferto IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res5.Available And If res5["tot"] Then
      totrefer = totrefer + res5["tot"]
    Endif

    res2 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype in " & xserql & " and flddoa IS NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res2.Available And If res2["tot"] Then
      totopd = totopd + res2["tot"]
    Endif

    res3 = modDatabase.$syConn.Exec("select count(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and flddisctype in " & xserql & " and flddoa IS NULL and fldadmitlocat in " & xDepsql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res3.Available And If res3["tot"] Then
      toter = toter + res3["tot"]
    Endif

    xRowValop.Add(totopd - toter, CStr(k))
    xRowValip.Add(totipd, CStr(k))
    xRowValer.Add(toter, CStr(k))
    xRowValref.Add(totrefer, CStr(k))

    k = k + 1
  Next

  xFinal = New Variant[]
  xFinal.Add(xRowValop)
  xFinal.Add(xRowValip)
  xFinal.Add(xRowValer)
  xFinal.Add(xRowValref)

  Return xFinal

End

Public Function SubGetCostExemptionReport(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim xparcount As Integer
  Dim xparamt As Float
  Dim xfullcount As Integer
  Dim xfullamt As Float

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xparcount = 0
  xparamt = 0
  res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as cnt,SUM(flddiscountamt) as tot from tblpatbilldetail where fldtime>=&1 and fldtime<=&2 and fldbilltype=&3 and fldsave=&4 and flddiscountamt>&5 and fldreceivedamt<>&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Cash", True, 0, 0)
  If res1["cnt"] Then
    xparcount = res1["cnt"]
  Endif
  If res1["tot"] Then
    xparamt = res1["tot"]
  Endif

  xfullcount = 0
  xfullamt = 0
  res2 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as cnt,SUM(flddiscountamt) as tot from tblpatbilldetail where fldtime>=&1 and fldtime<=&2 and fldbilltype=&3 and fldsave=&4 and flddiscountamt>&5 and fldreceivedamt=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Cash", True, 0, 0)
  If res2["cnt"] Then
    xfullcount = res2["cnt"]
  Endif
  If res2["tot"] Then
    xfullamt = res2["tot"]
  Endif

  xRowVal = New Collection
  xRowVal.Add("Partially", CStr(0))
  xRowVal.Add(xparcount, CStr(1))
  xRowVal.Add(Format(xparamt, gb.Fixed), CStr(2))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Completely", CStr(0))
  xRowVal.Add(xfullcount, CStr(1))
  xRowVal.Add(Format(xfullamt, gb.Fixed), CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

Private Function GetHMISAgeValue(agegroup As String) As String

  Dim xx As String

  If agegroup = "0-7 days" Then
    xx = "0;8"
  Else If agegroup = "8-28 days" Then
    xx = "8;29"
  Else If agegroup = "29 days-1 year" Then
    xx = "29;365"
  Else If agegroup = "1-4 years" Then
    xx = "365;1825"
  Else If agegroup = "5-14 years" Then
    xx = "1825;5475"
  Else If agegroup = "15-19 years" Then
    xx = "5475;7300"
  Else If agegroup = "20-29 years" Then
    xx = "7300;10950"
  Else If agegroup = "30-39 years" Then
    xx = "10950;14600"
  Else If agegroup = "40-49 years" Then
    xx = "14600;18250"
  Else If agegroup = "50-59 years" Then
    xx = "18250;21900"
  Else If agegroup = "60-69 years" Then
    xx = "21900;25550"
  Else If agegroup = ">= 70 years" Then
    xx = "25550;730000"
  Else
    xx = modMedReports.GetAgeValuefromgroup(agegroup)
  Endif
  Return xx

End

Public Function SubGetAgeWiseMorbidity(sType As String, ageList As String[], itmList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim aitem As String
  Dim asx As String[]
  Dim xage As String
  Dim agelim As String[]

  Dim xdtstr As String
  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xdtstr = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  xFinal = New Variant[]
  For Each aitem In itmList
    xRowVal = New Collection
    xRowVal.Add(aitem, CStr(0))
    xRowVal.Add(modPathology.GetNewDiagnoCodeValue(aitem), CStr(1))

    k = 2
    For Each xage In ageList
      asx = Split(xage, ":")   ''asx[1] is gender

      agelim = Split(GetHMISAgeValue(asx[0]), ";")   ''agelim[0] is min age agelim[1] is max age
      xcnt = 0
      If aitem = "QA40" Then
        If sType = "InPatient" Then
          res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddod IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Final Diagnosis", "Obstetrics", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)
        Else If sType = "Mortality" Then
          res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.fldadmission=&9" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Final Diagnosis", "Obstetrics", asx[1], CInt(agelim[0]), CInt(agelim[1]), True, "Death")
        Endif
      Else If aitem = "MG48" Then
        If sType = "InPatient" Then
          res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddod IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Final Diagnosis", "Other", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)
        Else If sType = "Mortality" Then
          res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.fldadmission=&9" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Final Diagnosis", "Other", asx[1], CInt(agelim[0]), CInt(agelim[1]), True, "Death")
        Endif
      Else
        If sType = "InPatient" Then
          res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddod IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Final Diagnosis", aitem & "%", asx[1], CInt(agelim[0]), CInt(agelim[1]), True)
        Else If sType = "Mortality" Then
          res = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew like &4 and tblpatientinfo.fldptsex like &5 and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.fldadmission=&9" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Final Diagnosis", aitem & "%", asx[1], CInt(agelim[0]), CInt(agelim[1]), True, "Death")
        Endif
      Endif
      If res["col"] Then
        xcnt = xcnt + res["col"]
      Endif
      xRowVal.Add(xcnt, CStr(k))

      k = k + 1
    Next

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''===================== Safe motherhood =============
Public Function SubANCVisitreportAge(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xstr As String
  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result
  Dim res5 As Result
  Dim res6 As Result
  Dim res7 As Result
  Dim res8 As Result

  Dim aa As Integer
  Dim bb As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  Dim xfourLst As String[] = ["16 weeks", "20-24 weeks", "32 weeks", "36 weeks"]
  Dim xeightLst As String[] = ["Upto 12 weeks", "16 weeks", "20-24 weeks", "28 weeks", "32 weeks", "34 weeks", "36 weeks", "38-40 weeks"]
  Dim I As Integer
  Dim xgroup As String

  For I = 0 To xfourLst.Max
    xfourLst[I] = "'" & xfourLst[I] & "'"
  Next
  For I = 0 To xeightLst.Max
    xeightLst[I] = "'" & xeightLst[I] & "'"
  Next

  xstr = modMedReports.GetAgeStringByTable("tblopvisit", modDatabase.$syConn)
  xgroup = modDataRepo.SerialField("tblopvisit")

  xFinal = New Variant[]

  ''anytime
  xRowVal = New Collection
  xRowVal.Add("First (Anytime)", CStr(0))
  aa = 0
  bb = 0
  res1 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldnotice=&4 and tblpatientinfo.fldptbirday like &5 and " & xstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "First Visit", "%", 7300)
  If res1.Available And If res1["xcnt"] Then
    aa = res1["xcnt"]
  Endif
  res2 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldnotice=&4 and tblpatientinfo.fldptbirday like &5 and " & xstr & ">=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "First Visit", "%", 7300)
  If res2.Available And If res2["xcnt"] Then
    bb = res2["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  ''upto 12 weeks
  xRowVal = New Collection
  xRowVal.Add("Upto 12 weeks", CStr(0))
  aa = 0
  bb = 0
  res5 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment=&4 and tblpatientinfo.fldptbirday like &5 and " & xstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "Upto 12 weeks", "%", 7300)
  If res5.Available And If res5["xcnt"] Then
    aa = res5["xcnt"]
  Endif
  res6 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment=&4 and tblpatientinfo.fldptbirday like &5 and " & xstr & ">=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "Upto 12 weeks", "%", 7300)
  If res6.Available And If res6["xcnt"] Then
    bb = res6["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  ''four times
  xRowVal = New Collection
  xRowVal.Add("Four times", CStr(0))
  aa = 0
  bb = 0
  res3 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment in(" & xfourLst.Join(",") & ") and tblpatientinfo.fldptbirday like &4 and " & xstr & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit") & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "%", 7300, 4)
  If res3.Available And If res3["xcnt"] Then
    aa = res3["xcnt"]
  Endif
  res4 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment in(" & xfourLst.Join(",") & ") and tblpatientinfo.fldptbirday like &4 and " & xstr & ">=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit") & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "%", 7300, 4)
  If res4.Available And If res4["xcnt"] Then
    bb = res4["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  ''eight times
  xRowVal = New Collection
  xRowVal.Add("Eight times", CStr(0))
  aa = 0
  bb = 0
  res7 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment in(" & xeightLst.Join(",") & ") and tblpatientinfo.fldptbirday like &4 and " & xstr & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit") & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "%", 7300, 8)
  If res7.Available And If res7["xcnt"] Then
    aa = res7["xcnt"]
  Endif
  res8 = modDatabase.$syConn.Exec("select COUNT(tblopvisit.fldencounterval) as xcnt from (tblopvisit inner join tblencounter on tblopvisit.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment in(" & xeightLst.Join(",") & ") and tblpatientinfo.fldptbirday like &4 and " & xstr & ">=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit") & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "%", 7300, 8)
  If res8.Available And If res8["xcnt"] Then
    bb = res8["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(bb, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubDeliverySPotAssist(sTypeList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xtype As String
  Dim xstr As String
  Dim res11 As Result
  Dim res12 As Result

  Dim aa As Integer
  Dim bb As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xstr = modMedReports.GetAgeStringByTable("tblconfinement", modDatabase.$syConn)
  For Each xtype In sTypeList
    aa = 0
    bb = 0
    xRowVal = New Collection
    xRowVal.Add(xtype, CStr(0))

    res11 = modDatabase.$syConn.Exec("select COUNT(tblconfinement.fldencounterval) as xcnt from (tblconfinement inner join tblencounter on tblconfinement.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblconfinement.flddeltime>=&1 and tblconfinement.flddeltime<=&2 and tblconfinement.flddelassist=&3 and tblpatientinfo.fldptbirday like &4 and " & xstr & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblconfinement"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xtype, "%", 7300)
    If res11.Available And If res11["xcnt"] Then
      aa = res11["xcnt"]
    Endif
    xRowVal.Add(aa, CStr(1))

    res12 = modDatabase.$syConn.Exec("select COUNT(tblconfinement.fldencounterval) as xcnt from (tblconfinement inner join tblencounter on tblconfinement.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblconfinement.flddeltime>=&1 and tblconfinement.flddeltime<=&2 and tblconfinement.flddelassist=&3 and tblpatientinfo.fldptbirday like &4 and " & xstr & ">=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblconfinement"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xtype, "%", 7300)
    If res12.Available And If res12["xcnt"] Then
      bb = res12["xcnt"]
    Endif
    xRowVal.Add(bb, CStr(2))
    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Private Function GetDeliveryTypeEnc(encid As String, sLocaType As String, sLocation As String) As String

  Dim res As Result
  Dim xval As String

  res = modDatabase.$syConn.Exec("select flddeltype from tblconfinement where fldencounterval=&1" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid)
  If res.Available Then
    res.MoveFirst
    If res["flddeltype"] Then
      xval = res["flddeltype"]
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Public Function SubDeliveryTypeReport(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xsponlist As String[]
  Dim xinstlist As String[]
  Dim xcesrlist As String[]
  Dim aVacumList As String[]
  Dim aForcepList As String[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim aaxdeltype As String
  Dim bbxdeltype As String
  Dim ccxdeltype As String

  Dim aaxsponval As Integer
  Dim aaxinstval As Integer
  Dim aaxcessval As Integer

  Dim bbxsponval As Integer
  Dim bbxinstval As Integer
  Dim bbxcessval As Integer

  Dim ccxsponval As Integer
  Dim ccxinstval As Integer
  Dim ccxcessval As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xsponlist = modHMISReport.GetDBHMISettingList("DeliveryTypes", "Spontaneous")
  aVacumList = modHMISReport.GetDBHMISettingList("DeliveryTypes", "Vacuum")
  aForcepList = modHMISReport.GetDBHMISettingList("DeliveryTypes", "Forceps")

  xinstlist = New String[]
  xinstlist.Insert(aVacumList)
  xinstlist.Insert(aForcepList)

  xcesrlist = modHMISReport.GetDBHMISettingList("DeliveryTypes", "Caeserian")
  xFinal = New Variant[]

  aaxsponval = 0
  aaxinstval = 0
  aaxcessval = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldpresent=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Cephalic")
  If res1.Available Then
    For Each res1
      aaxdeltype = GetDeliveryTypeEnc(res1["col"], sLocaType, sLocation)
      If aaxdeltype Then
        If xsponlist.Exist(aaxdeltype) = True Then
          aaxsponval = aaxsponval + 1
        Endif
        If xinstlist.Exist(aaxdeltype) = True Then
          aaxinstval = aaxinstval + 1
        Endif
        If xcesrlist.Exist(aaxdeltype) = True Then
          aaxcessval = aaxcessval + 1
        Endif
      Endif
    Next
  Endif

  bbxsponval = 0
  bbxinstval = 0
  bbxcessval = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldpresent=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Shoulder")
  If res2.Available Then
    For Each res2
      bbxdeltype = GetDeliveryTypeEnc(res2["col"], sLocaType, sLocation)
      If bbxdeltype Then
        If xsponlist.Exist(bbxdeltype) = True Then
          bbxsponval = bbxsponval + 1
        Endif
        If xinstlist.Exist(bbxdeltype) = True Then
          bbxinstval = bbxinstval + 1
        Endif
        If xcesrlist.Exist(bbxdeltype) = True Then
          bbxcessval = bbxcessval + 1
        Endif
      Endif
    Next
  Endif

  ccxsponval = 0
  ccxinstval = 0
  ccxcessval = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldpresent=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Breech")
  If res3.Available Then
    For Each res3
      ccxdeltype = GetDeliveryTypeEnc(res3["col"], sLocaType, sLocation)
      If ccxdeltype Then
        If xsponlist.Exist(ccxdeltype) = True Then
          ccxsponval = ccxsponval + 1
        Endif
        If xinstlist.Exist(ccxdeltype) = True Then
          ccxinstval = ccxinstval + 1
        Endif
        If xcesrlist.Exist(ccxdeltype) = True Then
          ccxcessval = ccxcessval + 1
        Endif
      Endif
    Next
  Endif

  xRowVal = New Collection
  xRowVal.Add("Spontaneous", CStr(0))
  xRowVal.Add(aaxsponval, CStr(1))
  xRowVal.Add(bbxsponval, CStr(2))
  xRowVal.Add(ccxsponval, CStr(3))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Vacuum/Forcep", CStr(0))
  xRowVal.Add(aaxinstval, CStr(1))
  xRowVal.Add(bbxinstval, CStr(2))
  xRowVal.Add(ccxinstval, CStr(3))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Surgery", CStr(0))
  xRowVal.Add(aaxcessval, CStr(1))
  xRowVal.Add(bbxcessval, CStr(2))
  xRowVal.Add(ccxcessval, CStr(3))
  xFinal.Add(xRowVal)

  Return xFinal

End

Private Function GetEncCountDel(encid As String, sLocaType As String, sLocation As String) As Integer

  Dim res As Result
  Dim xval As Integer

  res = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as col from tblconfinement where fldencounterval=&1 and flddelresult=&2" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), encid, "Live Baby")
  If res.Available Then
    If res["col"] Then
      xval = res["col"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function SubGetLiveDeliveryBabyQTY(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim xcount As Integer

  Dim xsingle As Integer
  Dim xdouble As Integer
  Dim xmultiple As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xsingle = 0
  xdouble = 0
  xmultiple = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby")
  If res1.Available Then
    For Each res1
      xcount = GetEncCountDel(res1["col"], sLocaType, sLocation)
      If xcount = 1 Then
        xsingle = xsingle + 1
      Else If xcount = 2 Then
        xdouble = xdouble + 1
      Else If xcount > 2 Then
        xmultiple = xmultiple + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Total Mothers", CStr(0))
  xRowVal.Add(xsingle, CStr(1))
  xRowVal.Add(xdouble, CStr(2))
  xRowVal.Add(xmultiple, CStr(3))
  xFinal.Add(xRowVal)

  xsingle = 0
  xdouble = 0
  xmultiple = 0
  res2 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", "Female")
  If res2.Available Then
    For Each res2
      xcount = GetEncCountDel(res2["col"], sLocaType, sLocation)
      If xcount = 1 Then
        xsingle = xsingle + 1
      Else If xcount = 2 Then
        xdouble = xdouble + 1
      Else If xcount > 2 Then
        xmultiple = xmultiple + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Live Baby(Female)", CStr(0))
  xRowVal.Add(xsingle, CStr(1))
  xRowVal.Add(xdouble, CStr(2))
  xRowVal.Add(xmultiple, CStr(3))
  xFinal.Add(xRowVal)

  xsingle = 0
  xdouble = 0
  xmultiple = 0
  res3 = modDatabase.$syConn.Exec("select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", "Male")
  If res3.Available Then
    For Each res3
      xcount = GetEncCountDel(res3["col"], sLocaType, sLocation)
      If xcount = 1 Then
        xsingle = xsingle + 1
      Else If xcount = 2 Then
        xdouble = xdouble + 1
      Else If xcount > 2 Then
        xmultiple = xmultiple + 1
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Live Baby(Male)", CStr(0))
  xRowVal.Add(xsingle, CStr(1))
  xRowVal.Add(xdouble, CStr(2))
  xRowVal.Add(xmultiple, CStr(3))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubBirthWeightreportCompli(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim xtotal As Integer
  Dim xrespd As Integer
  Dim xmajor As Integer
  Dim xminor As Integer
  Dim xother As Integer
  Dim xinfec As Integer

  Dim respList As String[]
  Dim majorList As String[]
  Dim minorList As String[]
  Dim otherList As String[]
  Dim infecList As String[]

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  respList = modHMISReport.GetDBHMISettingList("BabyConditions", "Asphyxia")
  majorList = modHMISReport.GetDBHMISettingList("BirthDeformity", "Major Malformations")
  minorList = modHMISReport.GetDBHMISettingList("BirthDeformity", "Minor Malformations")
  otherList = modHMISReport.GetDBHMISettingList("BirthDeformity", "Other Malformations")
  infecList = modHMISReport.GetDBHMISettingList("BabyConditions", "Infection")

  xFinal = New Variant[]

  xtotal = 0
  xtotal = 0
  xrespd = 0
  xmajor = 0
  xminor = 0
  xother = 0
  xinfec = 0
  res3 = modDatabase.$syConn.Exec("select fldencounterval,fldcomplication from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and flddelwt>=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", 2500)
  If res3.Available Then
    xtotal = res3.Count
    For Each res3
      If res3["fldcomplication"] Then
        If respList.Exist(res3["fldcomplication"]) = True Then
          xrespd = xrespd + 1
        Else If majorList.Exist(res3["fldcomplication"]) = True Then
          xmajor = xmajor + 1
        Else If minorList.Exist(res3["fldcomplication"]) = True Then
          xminor = xminor + 1
        Else If otherList.Exist(res3["fldcomplication"]) = True Then
          xother = xother + 1
        Else If infecList.Exist(res3["fldcomplication"]) = True Then
          xinfec = xinfec + 1
        Endif
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Normal(>=2.5Kg)", CStr(0))
  xRowVal.Add(xtotal, CStr(1))
  xRowVal.Add(xrespd, CStr(2))
  xRowVal.Add(xmajor, CStr(3))
  xRowVal.Add(xminor, CStr(4))
  xRowVal.Add(xother, CStr(5))
  xRowVal.Add(xinfec, CStr(6))
  xFinal.Add(xRowVal)

  xtotal = 0
  xtotal = 0
  xrespd = 0
  xmajor = 0
  xminor = 0
  xother = 0
  xinfec = 0
  res2 = modDatabase.$syConn.Exec("select fldencounterval,fldcomplication from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and flddelwt>=&4 and flddelwt<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", 1500, 2500)
  If res2.Available Then
    xtotal = res2.Count
    For Each res2
      If res2["fldcomplication"] Then
        If respList.Exist(res2["fldcomplication"]) = True Then
          xrespd = xrespd + 1
        Else If majorList.Exist(res2["fldcomplication"]) = True Then
          xmajor = xmajor + 1
        Else If minorList.Exist(res2["fldcomplication"]) = True Then
          xminor = xminor + 1
        Else If otherList.Exist(res2["fldcomplication"]) = True Then
          xother = xother + 1
        Else If infecList.Exist(res2["fldcomplication"]) = True Then
          xinfec = xinfec + 1
        Endif
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Low(1.5-2.5Kg)", CStr(0))
  xRowVal.Add(xtotal, CStr(1))
  xRowVal.Add(xrespd, CStr(2))
  xRowVal.Add(xmajor, CStr(3))
  xRowVal.Add(xminor, CStr(4))
  xRowVal.Add(xother, CStr(5))
  xRowVal.Add(xinfec, CStr(6))
  xFinal.Add(xRowVal)

  xtotal = 0
  xtotal = 0
  xrespd = 0
  xmajor = 0
  xminor = 0
  xother = 0
  xinfec = 0
  res1 = modDatabase.$syConn.Exec("select fldencounterval,fldcomplication from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3 and flddelwt<&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Live Baby", 1500)
  If res1.Available Then
    xtotal = res1.Count
    For Each res1
      If res1["fldcomplication"] Then
        If respList.Exist(res1["fldcomplication"]) = True Then
          xrespd = xrespd + 1
        Else If majorList.Exist(res1["fldcomplication"]) = True Then
          xmajor = xmajor + 1
        Else If minorList.Exist(res1["fldcomplication"]) = True Then
          xminor = xminor + 1
        Else If otherList.Exist(res1["fldcomplication"]) = True Then
          xother = xother + 1
        Else If infecList.Exist(res1["fldcomplication"]) = True Then
          xinfec = xinfec + 1
        Endif
      Endif
    Next
  Endif
  xRowVal = New Collection
  xRowVal.Add("Very Low(<1.5Kg)", CStr(0))
  xRowVal.Add(xtotal, CStr(1))
  xRowVal.Add(xrespd, CStr(2))
  xRowVal.Add(xmajor, CStr(3))
  xRowVal.Add(xminor, CStr(4))
  xRowVal.Add(xother, CStr(5))
  xRowVal.Add(xinfec, CStr(6))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubStillBirthsCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xStillType As String[] = ["Fresh Still Birth", "Macerated Still Birth"]
  Dim xstill As String
  Dim res As Result
  Dim aa As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  For Each xstill In xStillType
    aa = 0
    xRowVal = New Collection
    xRowVal.Add(xstill, CStr(0))

    res = modDatabase.$syConn.Exec("select COUNT(fldid) as xcnt from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and flddelresult=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), xstill)
    If res.Available And If res["xcnt"] Then
      aa = res["xcnt"]
    Endif
    xRowVal.Add(aa, CStr(1))
    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubObstetricComplications(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xList As String[]
  Dim xparam As String
  Dim xname As String
  Dim xcode As String

  Dim sql As String
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim aa As Integer
  Dim bb As Integer
  Dim cc As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xList = modHMISRep.GetHMISObsComplicationList()
  For Each xparam In xList
    xname = Split(xparam, ";")[0]
    xcode = Split(xparam, ";")[1]

    xRowVal = New Collection
    xRowVal.Add(xname, CStr(0))
    xRowVal.Add(xcode, CStr(1))

    sql = modHMISReport.GetDBHMISettingQuery("ObsComplications", xname)
    aa = 0
    res = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldpatientval)) as xcnt from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldtime>=&1 and fldtime<=&2 and fldhead in " & sql & ")" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If res.Available And If res["xcnt"] Then
      aa = aa + res["xcnt"]
    Endif

    bb = 0
    res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldpatientval)) as xcnt from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldtime>=&1 and fldtime<=&2 and fldhead in " & sql & " and fldrepquali=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Referred")
    If res1.Available And If res1["xcnt"] Then
      bb = bb + res1["xcnt"]
    Endif

    cc = 0
    res2 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldpatientval)) as xcnt from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldtime>=&1 and fldtime<=&2 and fldhead in " & sql & " and fldrepquali=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death")
    If res2.Available And If res2["xcnt"] Then
      cc = cc + res2["xcnt"]
    Endif

    xRowVal.Add(aa, CStr(2))
    xRowVal.Add(bb, CStr(3))
    xRowVal.Add(cc, CStr(4))

    xFinal.Add(xRowVal)

  Next

  Return xFinal

End

Public Function SubMaternalDeathCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim respre As Result
  Dim reson As Result
  Dim respost As Result
  Dim xprecnt As Integer
  Dim xoncnt As Integer
  Dim xpostcnt As Integer
  Dim sql As String
  Dim rql As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sql = modHMISReport.GetDBHMISettingQuery("ObstetricVisits", "ANC")
  rql = modHMISReport.GetDBHMISettingQuery("ObstetricVisits", "PNC")

  xFinal = New Variant[]
  xRowVal = New Collection
  xRowVal.Add("Health Facility", CStr(0))

  xprecnt = 0
  respre = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblopvisit where fldconsultname in " & sql & " and fldtime>=&1 and fldtime<=&2 and fldoutcome=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death")
  If respre.Available And If respre["col"] Then
    xprecnt = respre["col"]
  Endif
  xRowVal.Add(xprecnt, CStr(1))

  xoncnt = 0
  reson = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblconfinement where fldencounterval in(select fldencounterval from tblencounter where flddod>=&1 and flddod<=&2 and fldadmission=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death")
  If reson.Available And If reson["col"] Then
    xoncnt = reson["col"]
  Endif
  xRowVal.Add(xoncnt, CStr(2))

  xpostcnt = 0
  respost = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblopvisit where fldconsultname in " & rql & " and fldtime>=&1 and fldtime<=&2 and fldoutcome=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death")
  If respost.Available And If respre["col"] Then
    xpostcnt = respost["col"]
  Endif
  xRowVal.Add(xpostcnt, CStr(3))

  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Out of Health Facility", CStr(0))
  xRowVal.Add(0, CStr(1))
  xRowVal.Add(0, CStr(2))
  xRowVal.Add(0, CStr(3))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubNeonatalDeathCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim xstr As String
  Dim xfir As Integer
  Dim xlst As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xstr = modDate.GetSQLDateDiffStr("tblencounter.flddod", "tblpatientinfo.fldptbirday", modDatabase.$syConn)
  xFinal = New Variant[]
  xRowVal = New Collection
  xRowVal.Add("Health Facility", CStr(0))

  xfir = 0
  res1 = modDatabase.$syConn.Exec("select count(tblconfinement.fldbabypatno) as col from (tblconfinement inner join tblencounter on tblconfinement.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and " & xstr & ">=&4 and " & xstr & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblconfinement"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", 0, 8)
  If res1.Available And If res1["col"] Then
    xfir = res1["col"]
  Endif

  xlst = 0
  res2 = modDatabase.$syConn.Exec("select count(tblconfinement.fldbabypatno) as col from (tblconfinement inner join tblencounter on tblconfinement.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.flddod>=&1 and tblencounter.flddod<=&2 and tblencounter.fldadmission=&3 and " & xstr & ">=&4 and " & xstr & "<&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblconfinement"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Death", 8, 28)
  If res2.Available And If res2["col"] Then
    xlst = res2["col"]
  Endif

  xRowVal.Add(xfir, CStr(1))
  xRowVal.Add(xlst, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubPNCCheckreportAge(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xstr As String
  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result
  Dim res5 As Result
  Dim res6 As Result
  Dim res7 As Result
  Dim res8 As Result

  Dim aa As Integer
  Dim bb As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  Dim twoLst As String[] = ["3 days", "7-14 days"]
  Dim threeLst As String[] = ["Within 24 hour", "3 days", "7-14 days"]
  Dim xfourLst As String[] = ["Within 24 hour", "3 days", "7-14 days", "42 days"]
  Dim I As Integer
  Dim xgroup As String

  For I = 0 To twoLst.Max
    twoLst[I] = "'" & twoLst[I] & "'"
  Next
  For I = 0 To threeLst.Max
    threeLst[I] = "'" & threeLst[I] & "'"
  Next
  For I = 0 To xfourLst.Max
    xfourLst[I] = "'" & xfourLst[I] & "'"
  Next

  xstr = modMedReports.GetAgeStringByTable("tblopvisit", modDatabase.$syConn)
  xgroup = modDataRepo.SerialField()

  xFinal = New Variant[]

  ''first
  xRowVal = New Collection
  xRowVal.Add("First time", CStr(0))
  aa = 0
  bb = 0
  res1 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment=&4 and fldnotice=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "Within 24 hour", "This facility")
  If res1.Available And If res1["xcnt"] Then
    aa = res1["xcnt"]
  Endif
  res2 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment=&4 and fldnotice=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "Within 24 hour", "Home")
  If res2.Available And If res2["xcnt"] Then
    bb = res2["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(0, CStr(2))
  xRowVal.Add(bb, CStr(3))
  xRowVal.Add(0, CStr(4))
  xFinal.Add(xRowVal)

  ''two times
  xRowVal = New Collection
  xRowVal.Add("Two times", CStr(0))
  aa = 0
  bb = 0
  res5 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment in(" & twoLst.Join(",") & ") and fldnotice=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "This facility", 2)
  If res5.Available And If res5["xcnt"] Then
    aa = res5["xcnt"]
  Endif
  res6 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment in(" & twoLst.Join(",") & ") and fldnotice=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "Home", 2)
  If res6.Available And If res6["xcnt"] Then
    bb = res6["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(0, CStr(2))
  xRowVal.Add(bb, CStr(3))
  xRowVal.Add(0, CStr(4))
  xFinal.Add(xRowVal)

  ''three times
  xRowVal = New Collection
  xRowVal.Add("Three times", CStr(0))
  aa = 0
  bb = 0
  res3 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment in(" & threeLst.Join(",") & ") and fldnotice=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "This facility", 3)
  If res3.Available And If res3["xcnt"] Then
    aa = res3["xcnt"]
  Endif
  res4 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment in(" & threeLst.Join(",") & ") and fldnotice=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "Home", 3)
  If res4.Available And If res4["xcnt"] Then
    bb = res4["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(0, CStr(2))
  xRowVal.Add(bb, CStr(3))
  xRowVal.Add(0, CStr(4))
  xFinal.Add(xRowVal)

  ''four times
  xRowVal = New Collection
  xRowVal.Add("Four times", CStr(0))
  aa = 0
  bb = 0
  res7 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment in(" & xfourLst.Join(",") & ") and fldnotice=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "This facility", 4)
  If res7.Available And If res7["xcnt"] Then
    aa = res7["xcnt"]
  Endif
  res8 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname=&3 and fldcomment in(" & xfourLst.Join(",") & ") and fldnotice=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "PNC Visit", "Home", 4)
  If res8.Available And If res8["xcnt"] Then
    bb = res8["xcnt"]
  Endif
  xRowVal.Add(aa, CStr(1))
  xRowVal.Add(0, CStr(2))
  xRowVal.Add(bb, CStr(3))
  xRowVal.Add(0, CStr(4))
  xFinal.Add(xRowVal)

  Return xFinal

End

''fixed to DMNR
Public Function SubTransfusionCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim rtranpt As Result
  Dim xtranpt As Integer

  Dim xList As String[] = ["ANC%", "On Delivery", "PNC%"]
  Dim Column As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection
  Dim yRowVal As Collection
  Dim zRowVal As Collection

  xFinal = New Variant[]

  xRowVal = New Collection
  xRowVal.Add("Transfusion done", CStr(0))
  For Column = 0 To xList.Count - 1
    xtranpt = 0
    rtranpt = modDatabase.$syConn.Exec("select count(distinct(fldpatientval)) as col from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldhead=&1 and fldinput like &2 and fldmethod=&3 and fldtime>=&4 and fldtime<=&5)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Transfusion Date", xList[Column], "HMIS 3.61", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If rtranpt.Available And If rtranpt["col"] Then
      xtranpt = rtranpt["col"]
    Endif
    xRowVal.Add(xtranpt, CStr(Column + 1))
  Next
  xFinal.Add(xRowVal)

  yRowVal = New Collection
  For Column = 0 To xList.Count - 1
    xtranpt = 0
    rtranpt = modDatabase.$syConn.Exec("select count(distinct(fldpatientval)) as col from tblencounter where fldencounterval in(select fldencounterval from tblpatientexam where fldhead=&1 and fldinput like &2 and fldmethod=&3 and fldtime>=&4 and fldtime<=&5)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), "Hemorrhage", xList[Column], "HMIS 3.61", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    If rtranpt.Available And If rtranpt["col"] Then
      xtranpt = rtranpt["col"]
    Endif
    yRowVal.Add(xtranpt, CStr(Column + 1))
  Next

  zRowVal = New Collection
  zRowVal.Add("Transfusion not done", CStr(0))
  For Column = 0 To xList.Count - 1
    zRowVal.Add(yRowVal[Column + 1] - xRowVal[Column + 1], CStr(Column + 1))
  Next
  xFinal.Add(zRowVal)

  Return xFinal

End

''fixed to DMNR
Public Function SubMaternalIncentiveCount(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim aTypeList As String[] = ["Transport Incentive", "ANC Incentive"]
  Dim xeightLst As String[] = ["Upto 12 weeks", "16 weeks", "20-24 weeks", "28 weeks", "32 weeks", "34 weeks", "36 weeks", "38-40 weeks"]
  Dim xtype As String
  Dim res1 As Result
  Dim res2 As Result
  Dim xtot As Integer
  Dim xgot As Integer
  Dim xform As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection
  Dim I As Integer

  xform = modSettings.ShowSettingFromFIle("HMISReporting/IncentiveSource")
  For I = 0 To xeightLst.Max
    xeightLst[I] = "'" & xeightLst[I] & "'"
  Next

  xFinal = New Variant[]
  For Each xtype In aTypeList
    xRowVal = New Collection
    xRowVal.Add(xtype, CStr(0))

    xtot = 0
    If xtype = "Transport Incentive" Then
      res1 = modDatabase.$syConn.Exec("select count(distinct(fldpatientval)) as col from tblencounter where fldencounterval in(select fldencounterval from tblconfinement where flddeltime>=&1 and flddeltime<=&2)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    Else If xtype = "ANC Incentive" Then
      res1 = modDatabase.$syConn.Exec("select count(distinct(tblencounter.fldpatientval)) as col from tblencounter inner join tblopvisit on tblencounter.fldencounterval=tblopvisit.fldencounterval where tblopvisit.fldconsulttime>=&1 and tblopvisit.fldconsulttime<=&2 and tblopvisit.fldconsultname=&3 and tblopvisit.fldcomment in(" & xeightLst.Join(",") & ")" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblopvisit") & " GROUP BY tblopvisit.fldencounterval HAVING COUNT(*)=&5", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "ANC Visit", "%", 4)
    Endif
    If res1.Available And If res1["col"] Then
      xtot = res1["col"]
    Endif
    xRowVal.Add(xtot, CStr(1))

    xgot = 0
    If xform = "Billing" Then
      res2 = modDatabase.$syConn.Exec("select count(distinct(fldpayeradd)) as col from tblextrareceipt where flditemname=&1 and fldtime>=&2 and fldtime<=&3 and fldreference like &4 and fldpayeradd in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xtype, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "%")
    Else
      res2 = modDatabase.$syConn.Exec("select count(distinct(fldencounterval)) as col from tblpatientexam where fldhead=&1 and fldmethod=&2 and fldinput like &3 and fldtime>=&4 and fldtime<=&5 and fldencounterval in(select fldencounterval from tblconfinement)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), xtype, "HMIS 3.61", "PNC%", modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
    Endif
    If res2.Available And If res2["col"] Then
      xgot = res2["col"]
    Endif
    xRowVal.Add(xgot, CStr(2))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''================= Newborn care ========================
Public Function SubGetSickBabiesAdmittedNICU(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim yql As String
  Dim res1 As Result
  Dim res2 As Result
  Dim res1x As Result
  Dim res2x As Result
  Dim res1y As Result
  Dim res2y As Result
  Dim xmale As Integer
  Dim xfemale As Integer

  Dim res11 As Result
  Dim res22 As Result
  Dim xcondi As String
  Dim condList As String[]

  Dim res1a As Result
  Dim res2a As Result
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sql = modHMISReport.GetDBHMISettingQuery("InPatientDept", "SNCU/NICU/KMCU")
  xFinal = New Variant[]

  xmale = 0
  xfemale = 0
  xRowVal = New Collection
  xRowVal.Add("Total neonates admitted", CStr(0))
  res1 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Male")
  If res1.Available Then
    xmale = res1["xcnt"]
  Endif
  res2 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Female")
  If res2.Available Then
    xfemale = res2["xcnt"]
  Endif
  xRowVal.Add(xmale, CStr(1))
  xRowVal.Add(xfemale, CStr(2))
  xFinal.Add(xRowVal)

  xmale = 0
  xfemale = 0
  xRowVal = New Collection
  xRowVal.Add("Preterm", CStr(0))
  res1x = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where fldencounterval in(select fldencounterval from tblobstetrics where fldgestation<=&6)))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Male", 259)
  If res1x.Available Then
    xmale = res1x["xcnt"]
  Endif
  res2x = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where fldencounterval in(select fldencounterval from tblobstetrics where fldgestation<=&6)))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Female", 259)
  If res2x.Available Then
    xfemale = res2x["xcnt"]
  Endif
  xRowVal.Add(xmale, CStr(1))
  xRowVal.Add(xfemale, CStr(2))
  xFinal.Add(xRowVal)

  xmale = 0
  xfemale = 0
  xRowVal = New Collection
  xRowVal.Add("LBW", CStr(0))
  res1y = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where flddelwt<&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Male", 2500)
  If res1y.Available Then
    xmale = res1y["xcnt"]
  Endif
  res2y = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where flddelwt<&6))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Female", 2500)
  If res2y.Available Then
    xfemale = res2y["xcnt"]
  Endif
  xRowVal.Add(xmale, CStr(1))
  xRowVal.Add(xfemale, CStr(2))
  xFinal.Add(xRowVal)

  condList = modHMISRep.$HMISProblemsICU
  For Each xcondi In condList
    yql = modHMISReport.GetDBHMISettingQuery("BabyConditions", xcondi)
    xmale = 0
    xfemale = 0
    xRowVal = New Collection
    xRowVal.Add(xcondi, CStr(0))
    res11 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where fldcomplication in " & yql & "))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Male")
    If res11.Available Then
      xmale = res11["xcnt"]
    Endif
    res22 = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where fldcomplication in " & yql & "))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Female")
    If res22.Available Then
      xfemale = res22["xcnt"]
    Endif
    xRowVal.Add(xmale, CStr(1))
    xRowVal.Add(xfemale, CStr(2))
    xFinal.Add(xRowVal)
  Next

  xmale = 0
  xfemale = 0
  yql = modHMISReport.GetDBHMISettingQuery("BabyConditions", "Hypothermia")
  xRowVal = New Collection
  xRowVal.Add("Preterm/LBW/Hypothermia", CStr(0))
  res1a = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where flddelwt<&6 and fldencounterval in(select fldencounterval from tblobstetrics where fldgestation<=&7) and fldcomplication in " & yql & "))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Male", 2500, 259)
  If res1a.Available Then
    xmale = res1a["xcnt"]
  Endif
  res2a = modDatabase.$syConn.Exec("select COUNT(DISTINCT(fldencounterval)) as xcnt from tblpattiming where fldfirsttime>=&1 and fldfirsttime<=&2 and fldtype=&3 and fldfirstreport=&4 and flditem in " & sql & " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&5) and fldpatientval in(select fldbabypatno from tblconfinement where flddelwt<&6 and fldencounterval in(select fldencounterval from tblobstetrics where fldgestation<=&7) and fldcomplication in " & yql & "))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "General Services", "Bed", "Female", 2500, 259)
  If res2a.Available Then
    xfemale = res2a["xcnt"]
  Endif
  xRowVal.Add(xmale, CStr(1))
  xRowVal.Add(xfemale, CStr(2))
  xFinal.Add(xRowVal)

  Return xFinal

End

''================= NCD =================================
Private Function GetHMISAgeValueNCD(agegroup As String) As String

  Dim xx As String

  If agegroup = "<20 years" Then
    xx = "0;7300"
  Else If agegroup = "20-29 years" Then
    xx = "7300;10950"
  Else If agegroup = "30-69 years" Then
    xx = "10950;25550"
  Else If agegroup = ">= 70 years" Then
    xx = "25550;730000"
  Else
    xx = modMedReports.GetAgeValuefromgroup(agegroup)
  Endif
  Return xx

End

Public Function SubGetTreatmentNCDDetail(sFormat As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result

  Dim xgroup As String
  Dim grpList As String[]
  Dim Column As Integer
  Dim sexList As String[] = ["Male", "Female"]
  Dim xsex As String
  Dim newList As String[] = ["New", "Follow-up"]
  Dim xnew As String
  Dim ageList As String[] = ["<20 years", "20-29 years", "30-69 years", ">= 70 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xdtstr As String
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xdtstr = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  xFinal = New Variant[]
  grpList = modHMISRep.GetHMISDiseaseGroups(sFormat)
  If grpList And If grpList.Count Then
    For Each xgroup In grpList

      xRowVal = New Collection
      xRowVal.Add(xgroup, CStr(0))

      Column = 1
      For Each xnew In newList
        xcnt = 0
        res1 = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodenew in(select fldcodenew from tbldiagnogroup where fldgroupname=&4 and fldformat=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldfollow=&6) and fldsave=&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, xnew, True)
        If res1["col"] Then
          xcnt = res1["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      For Each xsex In sexList
        xcnt = 0
        res2 = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodenew in(select fldcodenew from tbldiagnogroup where fldgroupname=&4 and fldformat=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6)) and fldsave=&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, xsex, True)
        If res2["col"] Then
          xcnt = res2["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      For Each xage In ageList
        agelim = Split(GetHMISAgeValueNCD(xage), ";")
        xcnt = 0
        res3 = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblencounter.flddoa IS NULL and tblpatfindings.fldcodenew in(select tbldiagnogroup.fldcodenew from tbldiagnogroup where tbldiagnogroup.fldgroupname=&4 and tbldiagnogroup.fldformat=&5) and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, CInt(agelim[0]), CInt(agelim[1]), True)
        If res3["col"] Then
          xcnt = res3["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      xRowVal.Add("", CStr(Column))    ''Refer out
      xFinal.Add(xRowVal)

    Next
  Endif

  Return xFinal

End

Public Function SubGetTreatmentNCDShort(sFormat As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res2 As Result
  Dim res3 As Result

  Dim xgroup As String
  Dim grpList As String[]
  Dim Column As Integer
  Dim sexList As String[] = ["Male", "Female"]
  Dim xsex As String
  Dim ageList As String[] = ["<20 years", "20-29 years", "30-69 years", ">= 70 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xdtstr As String
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xdtstr = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  xFinal = New Variant[]
  grpList = modHMISRep.GetHMISDiseaseGroups(sFormat)
  If grpList And If grpList.Count Then
    For Each xgroup In grpList

      xRowVal = New Collection
      xRowVal.Add(xgroup, CStr(0))

      Column = 1
      For Each xsex In sexList
        xcnt = 0
        res2 = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodenew in(select fldcodenew from tbldiagnogroup where fldgroupname=&4 and fldformat=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&6)) and fldsave=&7" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, xsex, True)
        If res2["col"] Then
          xcnt = res2["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      For Each xage In ageList
        agelim = Split(GetHMISAgeValueNCD(xage), ";")
        xcnt = 0
        res3 = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblencounter.flddoa IS NULL and tblpatfindings.fldcodenew in(select tbldiagnogroup.fldcodenew from tbldiagnogroup where tbldiagnogroup.fldgroupname=&4 and tbldiagnogroup.fldformat=&5) and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, CInt(agelim[0]), CInt(agelim[1]), True)
        If res3["col"] Then
          xcnt = res3["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      xFinal.Add(xRowVal)

    Next
  Endif

  Return xFinal

End

Public Function SubGetTreatmentNCDDeath(sFormat As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res2 As Result
  Dim res3 As Result

  Dim xgroup As String
  Dim grpList As String[]
  Dim Column As Integer
  Dim sexList As String[] = ["Male", "Female"]
  Dim xsex As String
  Dim ageList As String[] = ["<20 years", "20-29 years", "30-69 years", ">= 70 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xdtstr As String
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xdtstr = modMedReports.GetAgeStringByTable("tblpatfindings", modDatabase.$syConn)
  xFinal = New Variant[]
  grpList = modHMISRep.GetHMISDiseaseGroups(sFormat)
  If grpList And If grpList.Count Then
    For Each xgroup In grpList

      xRowVal = New Collection
      xRowVal.Add(xgroup, CStr(0))

      Column = 1
      For Each xsex In sexList
        xcnt = 0
        res2 = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodenew in(select fldcodenew from tbldiagnogroup where fldgroupname=&4 and fldformat=&5) and fldencounterval in(select fldencounterval from tblencounter where flddoa IS NULL and fldadmission=&6 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7)) and fldsave=&8" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, "Death(OPD)", xsex, True)
        If res2["col"] Then
          xcnt = res2["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      For Each xage In ageList
        agelim = Split(GetHMISAgeValueNCD(xage), ";")
        xcnt = 0
        res3 = modDatabase.$syConn.Exec("select COUNT(tblpatfindings.fldid) as col from (tblpatfindings inner join tblencounter on tblpatfindings.fldencounterval=tblencounter.fldencounterval) inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblpatfindings.fldtime>=&1 and tblpatfindings.fldtime<=&2 and tblpatfindings.fldtype=&3 and tblpatfindings.fldcodenew in(select tbldiagnogroup.fldcodenew from tbldiagnogroup where tbldiagnogroup.fldgroupname=&4 and tbldiagnogroup.fldformat=&5) and " & xdtstr & ">=&6 and " & xdtstr & "<&7 and tblpatfindings.fldsave=&8 and tblencounter.flddoa IS NULL and tblencounter.fldadmission=&9" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblpatfindings"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", xgroup, sFormat, CInt(agelim[0]), CInt(agelim[1]), True, "Death(OPD)")
        If res3["col"] Then
          xcnt = res3["col"]
        Endif
        xRowVal.Add(xcnt, CStr(Column))
        Column = Column + 1
      Next

      xFinal.Add(xRowVal)

    Next
  Endif

  Return xFinal

End

''================== outpatient morbidity ====================
Public Function SubGetNewOPDMorbidity(sType As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim resx As Result
  Dim sexList As String[]
  Dim sex As String

  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  If sType = "Obstetrics Complications" Then
    sexList = ["Female"]
  Else
    sexList = ["Female", "Male"]
  Endif

  xFinal = New Variant[]
  resx = modDatabase.$syConn.Exec("select fldcodeid,flditemname,fldcodenew from tbldiagnogroup where fldgroupname=&1 and fldformat=&2", sType, "Diagnosis Groups")
  If resx.Available Then
    For Each resx
      xRowVal = New Collection
      If sType = "Obstetrics Complications" Then
        xRowVal.Add(resx["flditemname"], CStr(0))
        xRowVal.Add(resx["fldcodenew"], CStr(1))
      Else
        xRowVal.Add(resx["fldcodenew"], CStr(0))
        xRowVal.Add(resx["flditemname"], CStr(1))
      Endif

      k = 2
      For Each sex In sexList
        xcnt = 0
        res = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodenew like &4 and fldsave=&5 and fldcomp not in(select fldcomp from tbldepartment where fldactive=&6) and fldencounterval in(select fldencounterval from tblencounter where fldfollow=&7 and flddoa IS NULL and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&8))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", resx["fldcodenew"], True, "Emergency", "New", sex)  ''  and fldvisit=&7                     ''
        If res["col"] Then
          xcnt = xcnt + res["col"]
        Endif
        xRowVal.Add(xcnt, CStr(k))

        k = k + 1
      Next

      xFinal.Add(xRowVal)
    Next
  Endif

  Return xFinal

End

''================ emergency morbidity ============================
Public Function SubGetNewERMorbidity(sType As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim resx As Result
  Dim sexList As String[] = ["Female", "Male"]
  Dim sex As String

  Dim res As Result
  Dim k As Integer
  Dim xcnt As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  resx = modDatabase.$syConn.Exec("select fldcodeid,flditemname,fldcodenew from tbldiagnogroup where fldgroupname=&1 and fldformat=&2", sType, "Emergency Groups")
  If resx.Available Then
    For Each resx
      xRowVal = New Collection
      xRowVal.Add(resx["fldcodenew"], CStr(0))
      xRowVal.Add(resx["flditemname"], CStr(1))

      k = 2
      For Each sex In sexList
        xcnt = 0
        res = modDatabase.$syConn.Exec("select COUNT(fldid) as col from tblpatfindings where fldtime>=&1 and fldtime<=&2 and fldtype=&3 and fldcodenew like &4 and fldsave=&5 and fldcomp in(select fldcomp from tbldepartment where fldactive=&6) and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&7))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Provisional Diagnosis", resx["fldcodenew"], True, "Emergency", sex)
        If res["col"] Then
          xcnt = xcnt + res["col"]
        Endif
        xRowVal.Add(xcnt, CStr(k))

        k = k + 1
      Next

      xFinal.Add(xRowVal)
    Next
  Endif

  Return xFinal

End

''-================= Laboratory ========================
Public Function SubGetLaboratoryHMISReport(sType As String, sList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim isql As String
  Dim xTest As String

  Dim res1 As Result
  Dim res2 As Result
  Dim Row As Integer

  Dim xabn As Integer
  Dim xtot As Integer

  Dim aList As String[]
  Dim aTest As String
  Dim aSpec As String
  Dim ssql As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  If sType = "BACTERIOLOGY" Then
    aList = modHMISReport.GetDBHMISettingList("TestNames", "CultureSensitivity")
  Endif

  xFinal = New Variant[]
  For Each xTest In sList
    isql = modHMISReport.GetDBHMISettingQuery(modHMISRep.GetHMISLabItemHead(sType), xTest)

    xabn = 0
    xtot = 0

    res1 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid  in " & isql & " and fldtime_sample>=&1 and fldtime_sample<=&2 and fldsave_report=&3 and fldabnormal=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, True)
    If res1.Available Then
      If res1["col"] Then
        xabn = xabn + res1["col"]
      Endif
    Endif

    res2 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid  in " & isql & " and fldtime_sample>=&1 and fldtime_sample<=&2 and fldsave_report=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
    If res2.Available Then
      If res2["col"] Then
        xtot = xtot + res2["col"]
      Endif
    Endif

    xRowVal = New Collection
    xRowVal.Add(xTest, CStr(0))
    xRowVal.Add(xabn, CStr(1))
    xRowVal.Add(xtot, CStr(2))

    xFinal.Add(xRowVal)

  Next

  If sType = "BACTERIOLOGY" Then
    For Each aSpec In modHMISRep.$HMISCultureSpecimens
      xabn = 0
      xtot = 0
      ssql = modHMISReport.GetDBHMISettingQuery("Specimens", aSpec)

      For Each aTest In aList
        res1 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and fldsave_report=&4 and fldabnormal=&5 and fldsampletype  in " & ssql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), aTest, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, True)
        If res1.Available Then
          If res1["col"] Then
            xabn = xabn + res1["col"]
          Endif
        Endif
        res2 = modDatabase.$syConn.Exec("select count(fldid) as col from tblpatlabtest where fldtestid=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and fldsave_report=&4 and fldsampletype  in " & ssql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), aTest, modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True)
        If res2.Available Then
          If res2["col"] Then
            xtot = xtot + res2["col"]
          Endif
        Endif
      Next

      xRowVal = New Collection
      xRowVal.Add("Culture (" & aSpec & ")", CStr(0))
      xRowVal.Add(xabn, CStr(1))
      xRowVal.Add(xtot, CStr(2))

      xFinal.Add(xRowVal)

      Row = Row + 1
    Next
  Endif

  Return xFinal

End

''================== Geriatric =============================
Private Function GetHMISAgeValGeriatric(agegroup As String) As String

  Dim xx As String

  If agegroup = "60-69 years" Then
    xx = "21900;25550"
  Else If agegroup = "70-79 years" Then
    xx = "25550;29200"
  Else If agegroup = "80-84 years" Then
    xx = "29200;31025"
  Else If agegroup = ">= 85 years" Then
    xx = "31025;730000"
  Else
    xx = modMedReports.GetAgeValuefromgroup(agegroup)
  Endif
  Return xx

End

Public Function SubGetGeriatricAgeGrouping(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim sexList As String[] = ["Female", "Male", "Other"]
  Dim xsex As String
  Dim ageList As String[] = ["60-69 years", "70-79 years", "80-84 years", ">= 85 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xdtstr As String
  Dim xval As Integer

  Dim Column As Integer
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xdtstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValGeriatric(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("New", CStr(0))
      xval = 0
      res1 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as xcnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and tblpatientinfo.fldptsex=&4 and " & xdtstr & ">=&5 and " & xdtstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res1["xcnt"] Then
        xval = res1["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValGeriatric(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("Follow-up", CStr(0))
      xval = 0
      res2 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as xcnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblencounter.fldfollow=&3 and tblpatientinfo.fldptsex=&4 and " & xdtstr & ">=&5 and " & xdtstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Follow-up", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res2["xcnt"] Then
        xval = res2["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetGeriatricEthnicity(ethList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res As Result
  Dim xtot As Integer
  Dim i As Integer
  Dim xdtstr As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xdtstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)

  xRowVal = New Collection
  xRowVal.Add("No of new Visits", CStr(0))
  For i = 0 To ethList.Count - 1
    xtot = 0
    res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and (tblpatientinfo.fldethniccode=&4 or tblpatientinfo.fldethniccode=&5) and " & xdtstr & ">=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", ethList[i], "0" & ethList[i], 21900)
    If res.Available And If res["tot"] Then
      xtot = res["tot"]
    Endif
    xRowVal.Add(xtot, CStr(i + 1))
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Sub SubGetGeriatricHospDepartmen(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim xdtstr As String
  Dim yql As String
  Dim xopall As Integer
  Dim xemer As Integer
  Dim xinpat As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xdtstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  yql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")

  xopall = 0
  xemer = 0
  xinpat = 0

  res1 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and tblencounter.flddoa IS NULL and " & xdtstr & ">=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", 21900)
  If res1.Available And If res1["tot"] Then
    xopall = res1["tot"]
  Endif
  res2 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and tblencounter.flddoa IS NOT NULL and " & xdtstr & ">=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", 21900)
  If res2.Available And If res2["tot"] Then
    xinpat = res2["tot"]
  Endif
  res3 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and tblencounter.flddoa IS NULL and " & xdtstr & ">=&4 and tblencounter.fldadmitlocat in " & yql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", 21900)
  If res3.Available And If res3["tot"] Then
    xemer = res3["tot"]
  Endif

  xRowVal = New Collection
  xRowVal.Add("Indoor", CStr(0))
  xRowVal.Add(xinpat, CStr(1))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Outdoor", CStr(0))
  xRowVal.Add(xopall - xemer, CStr(1))
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Emergency", CStr(0))
  xRowVal.Add(xemer, CStr(1))
  xFinal.Add(xRowVal)

  Return xFinal

End

''================= OCMC ==============================
Private Function GetHMISAgeValOCMSSocial(agegroup As String) As String

  Dim xx As String

  If agegroup = "<10 years" Then
    xx = "0;3650"
  Else If agegroup = "10-14 years" Then
    xx = "3650;5475"
  Else If agegroup = "15-18 years" Then
    xx = "5475;6935"
  Else If agegroup = "19-49 years" Then
    xx = "6935;18250"
  Else If agegroup = "50-59 years" Then
    xx = "18250;21900"
  Else If agegroup = ">= 60 years" Then
    xx = "21900;730000"
  Else
    xx = modMedReports.GetAgeValuefromgroup(agegroup)
  Endif
  Return xx

End

Public Function SubGetOCMCAgeGroupingSex(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim res1 As Result
  Dim res2 As Result
  Dim sexList As String[] = ["Female", "Male", "Other"]
  Dim xsex As String
  Dim ageList As String[] = ["<10 years", "10-14 years", "15-18 years", "19-49 years", "50-59 years", ">= 60 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xdtstr As String
  Dim xval As Integer

  Dim Column As Integer
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xdtstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "OCMC")

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValOCMSSocial(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("New", CStr(0))
      xval = 0
      res1 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as xcnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and tblencounter.flddisctype in " & sql & " and tblpatientinfo.fldptsex=&4 and " & xdtstr & ">=&5 and " & xdtstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res1["xcnt"] Then
        xval = res1["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValOCMSSocial(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("Follow-up", CStr(0))
      xval = 0
      res2 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as xcnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblencounter.fldfollow=&3 and tblencounter.flddisctype in " & sql & " and tblpatientinfo.fldptsex=&4 and " & xdtstr & ">=&5 and " & xdtstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Follow-up", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res2["xcnt"] Then
        xval = res2["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetOCMCNewVariable(sType As String, xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xList As String[]
  Dim xitem As String
  Dim xfld As String
  Dim res1 As Result
  Dim xval As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]

  If sType = "Cause of violence" Then
    xList = modHMISRep.$HMISViolCauseOCMC
    xfld = "fldviocause"
  Else If sType = "Types of violence" Then
    xList = modHMISRep.$HMISViolTypeOCMC
    xfld = "fldviotype"
  Else If sType = "Disability" Then
    xList = modHMISRep.$HMISDisabilityOCMC
    xfld = "flddisability"
  Else If sType = "Service" Then
    xList = modHMISRep.$HMISServiceOCMC
    xfld = "fldservice"
  Endif

  For Each xitem In xList
    xRowVal = New Collection

    xRowVal.Add(xitem, CStr(0))
    xval = 0
    res1 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and fldencounterval in(select fldencounterval from tblgenviolence where " & xfld & "=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xitem)
    If res1["xcnt"] Then
      xval = res1["xcnt"]
    Endif
    xRowVal.Add(xval, CStr(1))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubGetOCMCPerpAgeSex(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim sexList As String[] = ["Female", "Male", "Other"]
  Dim xsex As String
  Dim ageList As String[] = ["<10 years", "10-14 years", "15-18 years", "19-49 years", "50-59 years", ">= 60 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xval As Integer

  Dim Column As Integer
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValOCMSSocial(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("New", CStr(0))
      xval = 0
      res1 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblgenviolence where fldencounterval in(select fldencounterval from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL)) and fldperpsex=&4 and fldperpage>=&5 and fldperpage<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res1["xcnt"] Then
        xval = res1["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
    xRowVal.Add("", CStr(Column))
    Column = Column + 1
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetOCMCPerpType(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim xList As String[]
  Dim xitem As String
  Dim res1 As Result
  Dim xval As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]

  xList = ["Within relatives", "Outside of relatives"]
  For Each xitem In xList
    xRowVal = New Collection

    xRowVal.Add(xitem, CStr(0))
    xval = 0
    res1 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as xcnt from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and fldencounterval in(select fldencounterval from tblgenviolence where fldrelation=&4)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xitem)
    If res1["xcnt"] Then
      xval = res1["xcnt"]
    Endif
    xRowVal.Add(xval, CStr(1))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubGetOCMCNewCaseEthnicity(ethList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res As Result
  Dim xtot As Integer
  Dim sql As String
  Dim xethn As String

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "OCMC")

  For Each xethn In ethList
    xRowVal = New Collection
    xRowVal.Add(modMisc.GetEthnicCodeString(xethn), CStr(0))
    xtot = 0
    res = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and fldpatientval in(select fldpatientval from tblpatientinfo where (fldethniccode=&4 or fldethniccode=&5)) and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xethn, "0" & xethn)
    If res.Available And If res["tot"] Then
      xtot = res["tot"]
    Endif
    xRowVal.Add(xtot, CStr(1))
    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

''==================== Social ====================================
Public Function SubGetSocialAgeGroupSex(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim res1 As Result
  Dim res2 As Result
  Dim sexList As String[] = ["Female", "Male", "Other"]
  Dim xsex As String
  Dim ageList As String[] = ["<10 years", "10-14 years", "15-18 years", "19-49 years", "50-59 years", ">= 60 years"]
  Dim xage As String
  Dim agelim As String[]
  Dim xdtstr As String
  Dim xval As Integer

  Dim Column As Integer
  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  xdtstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "Social Service")

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValOCMSSocial(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("New", CStr(0))
      xval = 0
      res1 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as xcnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and (tblencounter.fldfollow=&3 or tblencounter.fldfollow IS NULL) and tblencounter.flddisctype in " & sql & " and tblpatientinfo.fldptsex=&4 and " & xdtstr & ">=&5 and " & xdtstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res1["xcnt"] Then
        xval = res1["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  Column = 1
  For Each xage In ageList
    agelim = Split(GetHMISAgeValOCMSSocial(xage), ";")
    For Each xsex In sexList
      xRowVal.Add("Follow-up", CStr(0))
      xval = 0
      res2 = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as xcnt from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblencounter.fldfollow=&3 and tblencounter.flddisctype in " & sql & " and tblpatientinfo.fldptsex=&4 and " & xdtstr & ">=&5 and " & xdtstr & "<&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "Follow-up", xsex, CInt(agelim[0]), CInt(agelim[1]))
      If res2["xcnt"] Then
        xval = res2["xcnt"]
      Endif
      xRowVal.Add(xval, CStr(Column))
      Column = Column + 1
    Next
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetSocialEthnicity(ethList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res As Result
  Dim xtot As Integer
  Dim sql As String
  Dim i As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "Social Service")

  xRowVal = New Collection
  xRowVal.Add("No of new Visits", CStr(0))
  For i = 0 To ethList.Count - 1
    xtot = 0
    res = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and fldpatientval in(select fldpatientval from tblpatientinfo where (fldethniccode=&4 or fldethniccode=&5)) and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New", ethList[i], "0" & ethList[i])
    If res.Available And If res["tot"] Then
      xtot = res["tot"]
    Endif
    xRowVal.Add(xtot, CStr(i + 1))
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

Public Sub SubGetSocialHospDepartment(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim sql As String
  Dim yql As String
  Dim xopall As Integer
  Dim xemer As Integer
  Dim xinpat As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]
  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "Social Service")
  yql = modHMISReport.GetDBHMISettingQuery("OutPatientDept", "Emergency")

  xopall = 0
  xemer = 0
  xinpat = 0
  xRowVal = New Collection
  xRowVal.Add("No of new Visits", CStr(0))

  res1 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and flddoa IS NULL and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New")
  If res1.Available And If res1["tot"] Then
    xopall = res1["tot"]
  Endif
  res2 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and flddoa IS NOT NULL and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New")
  If res2.Available And If res2["tot"] Then
    xinpat = res2["tot"]
  Endif
  res3 = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and (fldfollow=&3 or fldfollow IS NULL) and fldadmitlocat in " & yql & " and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "New")
  If res3.Available And If res3["tot"] Then
    xemer = res3["tot"]
  Endif

  xRowVal.Add(xinpat, CStr(1))
  xRowVal.Add(xopall - xemer, CStr(2))
  xRowVal.Add(xemer, CStr(3))

  xFinal.Add(xRowVal)

  Return xFinal

End

Public Function SubGetSocialTargetGroup(schmList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim res1 As Result
  Dim res2 As Result
  Dim Column As Integer
  Dim sql As String
  Dim xval As Float

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  xFinal = New Variant[]

  xRowVal = New Collection
  xRowVal.Add("Total Amount Expenses(Nrs)", CStr(0))
  For Column = 0 To schmList.Count - 1
    sql = modHMISReport.GetDBHMISettingQuery("SocialServiceUnit", schmList[Column])
    xval = 0
    res1 = modDatabase.$syConn.Exec("select SUM(fldditemamt) as tot from tblpatbilling  where fldtime>=&1 and fldtime<=&2 and fldsave=&3 and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, "Credit")
    If res1.Available And If res1["tot"] Then
      xval = res1["tot"]
    Endif
    xRowVal.Add(xval, CStr(Column + 1))
  Next
  xFinal.Add(xRowVal)

  xRowVal = New Collection
  xRowVal.Add("Total Amount Exempted (NRs)", CStr(0))
  For Column = 0 To schmList.Count - 1
    sql = modHMISReport.GetDBHMISettingQuery("SocialServiceUnit", schmList[Column])
    res2 = modDatabase.$syConn.Exec("select SUM(fldditemamt*(1-(fldcashincredit/100))) as tot from tblpatbilling  where fldtime>=&1 and fldtime<=&2 and fldsave=&3 and fldbilltype=&4 and flddisctype in " & sql & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), True, "Credit")
    If res2.Available And If res2["tot"] Then
      xval = res2["tot"]
    Endif
    xRowVal.Add(xval, CStr(Column + 1))
  Next
  xFinal.Add(xRowVal)

  Return xFinal

End

''===================== Other Reports ======================
Public Function SubGetBipannaStatistics(xFreeList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sql As String
  Dim res As Result
  Dim xdistList As String[]

  Dim xFinaDist As String[]
  Dim xdistname As String
  Dim xdemog As String
  Dim res1 As Result
  Dim xdemotot As Integer
  Dim fintot As Integer
  Dim i As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sql = modHMISReport.GetDBHMISettingQuery("SchemeTypes", "Bipanna Nagarik")

  xdistList = New String[]
  res = modDatabase.$syConn.Exec("select distinct(fldptadddist) as col from tblpatientinfo where fldpatientval in(select fldpatientval from tblencounter where flddisctype in " & sql & " and fldregdate>=&1 and fldregdate<=&2 and fldvisit=&3)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "NEW")
  If res.Available Then
    xdistList.Insert(res.All("col"))
  Endif
  xFinaDist = modString.BinaryDistinctStringArray(xdistList)
  If xFinaDist Then
    xFinaDist.Sort()
  Endif

  xFinal = New Variant[]
  For Each xdistname In xFinaDist
    fintot = 0
    xRowVal = New Collection
    xRowVal.Add(xdistname, CStr(0))
    i = 1
    For Each xdemog In xFreeList
      xdemotot = 0

      res1 = modDatabase.$syConn.Exec("select count(fldencounterval) as xtot from tblencounter where flddisctype in " & sql & " and fldregdate>=&1 and fldregdate<=&2 and fldvisit=&3 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptadddist=&4) and fldencounterval in(select fldencounterval from tblpataccgeneral where fldinput=&5 and flditem=&6 and fldreportquali=&7)" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), "NEW", xdistname, "Demographics", "Bipanna Scheme", xdemog)
      If res1.Available Then
        xdemotot = xdemotot + res1["xtot"]
        fintot = fintot + res1["xtot"]
      Endif

      xRowVal.Add(xdemotot, CStr(i))
      i = i + 1
    Next
    xRowVal.Add(fintot, CStr(i))
    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubGetHospServiceSelectedOnly(sType As String, ageList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim asx As String[]
  Dim sexList As String[]
  Dim agestring As String
  Dim i As Integer
  Dim Row As Integer
  Dim xtot As Integer
  Dim atot As Integer

  Dim res As Result

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sexList = ["Female", "Male"]
  agestring = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)

  xFinal = New Variant[]
  For Row = 0 To sexList.Count - 1
    xRowVal = New Collection
    xRowVal.Add(sexList[Row], CStr(0))
    atot = 0

    For i = 0 To ageList.Count - 1
      asx = Split(ageList[i], ";")
      xtot = 0
      res = modDatabase.$syConn.Exec("select COUNT(tblencounter.fldencounterval) as tot from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptsex=&3 and " & agestring & ">=&4 and " & agestring & "<&5 and tblencounter.fldvisit like &6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation, "tblencounter"), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sexList[Row], CInt(asx[1]), CInt(asx[2]), sType)                                                       ''
      If res.Available And If res["tot"] Then
        xtot = xtot + res["tot"]
      Endif
      atot = atot + xtot
      xRowVal.Add(xtot, CStr(i + 1))

    Next

    xRowVal.Add(atot, CStr(ageList.Count + 1))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End

Public Function SubGetEthnicReport(ethList As String[], xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String) As Variant[]

  Dim sexList As String[]
  Dim res As Result
  Dim xtot As Integer
  Dim stot As Integer
  Dim Row As Integer
  Dim i As Integer

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  sexList = ["Female", "Male"]

  xFinal = New Variant[]
  For Row = 0 To sexList.Count - 1
    xRowVal = New Collection

    xRowVal.Add(sexList[Row], CStr(0))
    stot = 0

    For i = 0 To ethList.Count - 1
      xtot = 0
      res = modDatabase.$syConn.Exec("select COUNT(fldencounterval) as tot from tblencounter where fldregdate>=&1 and fldregdate<=&2 and fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex=&3 and (fldethniccode=&4 or fldethniccode=&5))" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sexList[Row], ethList[i], "0" & ethList[i])
      If res.Available And If res["tot"] Then
        xtot = xtot + res["tot"]
      Endif
      stot = stot + xtot
      xRowVal.Add(xtot, CStr(i + 1))

    Next

    xRowVal.Add(stot, CStr(ethList.Count + 1))

    xFinal.Add(xRowVal)
  Next

  Return xFinal

End
