' Gambas class file

Private $frmCall As String
Private $strParent As String

Private $sType As String
Private $tbl As String
Private $sVal As String

Public Sub _new(sTitle As String, frmCall As String, strParent As String)

  $strParent = strParent
  $frmCall = frmCall
  Me.Title = sTitle

  lbltitle.Text = $strParent

  ''examination
  If $frmCall = "Brady causing Diseases" Then
    $sType = "Disease"
    $tbl = "tblsyndrobrady"
  Else If $frmCall = "Tachy causing Diseases" Then
    $sType = "Disease"
    $tbl = "tblsyndrotachy"
  Else If $frmCall = "Brady causing Syndromes" Then
    $sType = "Syndrome"
    $tbl = "tblsyndrobrady"
  Else If $frmCall = "Tachy causing Syndromes" Then
    $sType = "Syndrome"
    $tbl = "tblsyndrotachy"
  Else If $frmCall = "Brady causing Drugs" Then
    $sType = "Drug"
    $tbl = "tblcodebrady"
  Else If $frmCall = "Tachy causing Drugs" Then
    $sType = "Drug"
    $tbl = "tblcodetachy"

    ''laboratory
  Else If $frmCall = "Hypo causing Diseases" Then
    $sType = "Disease"
    $tbl = "tblsyndrohypo"
  Else If $frmCall = "Hyper causing Diseases" Then
    $sType = "Disease"
    $tbl = "tblsyndrohyper"
  Else If $frmCall = "Hypo causing Syndromes" Then
    $sType = "Syndrome"
    $tbl = "tblsyndrohypo"
  Else If $frmCall = "Hyper causing Syndromes" Then
    $sType = "Syndrome"
    $tbl = "tblsyndrohyper"
  Else If $frmCall = "Hypo causing Drugs" Then
    $sType = "Drug"
    $tbl = "tblcodehypo"
  Else If $frmCall = "Hyper causing Drugs" Then
    $sType = "Drug"
    $tbl = "tblcodehyper"

    ''medicine compounding
  Else If $frmCall = "Compatible Drugs" Then
    $sType = "Drug"
    $tbl = "tblcompatdrug"
  Else If $frmCall = "Incompatible Drugs" Then
    $sType = "Drug"
    $tbl = "tblincompatdrug"
  Else If $frmCall = "Reconstitution Fluids" Then
    $sType = "Fluid"
    $tbl = "tblreconstfluid"
  Else If $frmCall = "Dilution Fluids" Then
    $sType = "Fluid"
    $tbl = "tbldilutionfluid"
  Else If $frmCall = "Compatible Fluids" Then
    $sType = "Fluid"
    $tbl = "tblcompatfluid"
  Else If $frmCall = "Incompatible Fluids" Then
    $sType = "Fluid"
    $tbl = "tblincompatfluid"

    ''medicine problems
  Else If $frmCall = "Drug Contraindication:Disease" Then
    $sType = "Disease"
    $tbl = "tblmedcontraindication"
  Else If $frmCall = "Drug Contraindication:Syndrome" Then
    $sType = "Syndrome"
    $tbl = "tblmedcontraindication"

  Else If $frmCall = "Drug Side Effects:Disease" Then
    $sType = "Disease"
    $tbl = "tblmedadveffect"
  Else If $frmCall = "Drug Side Effects:Symptom" Then
    $sType = "Symptom"
    $tbl = "tblmedadveffect"

  Else If $frmCall = "Laboratory Monitoring:Pre-Administration" Then
    $sType = "Laboratory"
    $tbl = "tblmedmonitor"
    $sVal = "Pre-Administration"
  Else If $frmCall = "Laboratory Monitoring:Post-Administration" Then
    $sType = "Laboratory"
    $tbl = "tblmedmonitor"
    $sVal = "Post-Administration"

  Endif

End

Public Sub btnaddnew_Click()

  Dim xxx As String[]
  Dim tablist As String[]
  Dim sName As String[]
  Dim xList As String[]

  xList = ListBox1.List
  If $sType = "Disease" Then
    xxx = New String[]
    sName = ICDTree(modDatabase.$icdConn, "Disease", modBasic.$ClinDiagnoChapterGrouped, modBasic.$FixDiagnoGroupOPD, modBasic.$FixDiagnoGroupER, modBasic.$ClinDiagnoSelectGrouped, modBasic.$ClinDiagnoSelectERGroup)
    If sName Then
      xxx.Add(sName[1])
    Endif
  Else If $sType = "Drug" Then
    tablist = modString.GetRemainingArray(modMedicine.GetGenericMedList(), ListBox1.List)
    xxx = GridListView(("Select Drugs"), tablist)
  Else If $sType = "Fluid" Then
    tablist = modString.GetRemainingArray(modMedicine.GetIVFluidList(), ListBox1.List)
    xxx = GridListView(("Select IV Fluids"), tablist)
  Else If $sType = "Syndrome" Then
    tablist = modString.GetRemainingArray(modMedicine.GetAllSYndomeList(), ListBox1.List)
    xxx = GridListView(("Select Syndrome"), tablist)
  Else If $sType = "Symptom" Then
    tablist = modString.GetRemainingArray(modMedicine.GetSymptomAllTypeList(), ListBox1.List)
    xxx = GridListView(("Select Symptom"), tablist)
  Else If $sType = "Laboratory" Then
    tablist = modString.GetRemainingArray(modMedicine.FillLabTestCombo("%"), ListBox1.List)
    xxx = GridListView(("Select Laboratory Tests"), tablist)
  Endif

  If xxx And If xxx.Count Then
    xList.Insert(xxx)
  Endif
  ListBox1.List = xList
  txtreference.SetFocus

End

Public Sub btnBrOK_Click()

  If ListBox1.Count Then
    If $sType = "Disease" Then
      InsertDIseaseData()
    Else If $sType = "Syndrome" Then
      InsertSyndromeData()
    Else If $sType = "Symptom" Then
      InsertSymptomData()

    Else If $sType = "Drug" Then
      InsertDrugFluidData()
    Else If $sType = "Fluid" Then
      InsertDrugFluidData()
    Else If $sType = "Laboratory" Then
      InsertLabMonitoring()
    Endif
  Endif

End

Private Sub InsertDIseaseData()

  Dim res As Result
  Dim sText As String

  For Each sText In ListBox1.List
    res = modDatabase.$medConn.Create($tbl)
    res["fldparent"] = $strParent
    res["fldtype"] = "Disease"
    res["fldchild"] = sText
    res["fldreference"] = txtreference.Text
    res.Update()
  Next
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub InsertSyndromeData()

  Dim res As Result
  Dim sText As String

  For Each sText In ListBox1.List
    res = modDatabase.$medConn.Create($tbl)
    res["fldparent"] = $strParent
    res["fldtype"] = "Syndrome"
    res["fldchild"] = sText
    res["fldreference"] = txtreference.Text
    res.Update()
  Next
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub InsertSymptomData()

  Dim res As Result
  Dim sText As String

  For Each sText In ListBox1.List
    res = modDatabase.$medConn.Create($tbl)
    If $frmCall = "Drug Side Effects:Symptom" Then
      res["fldparent"] = $strParent
      res["fldtype"] = "Symptom"
      res["fldchild"] = sText
      res["fldreference"] = txtreference.Text
    Endif
    res.Update()
  Next
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub InsertDrugFluidData()

  Dim res As Result
  Dim sText As String

  For Each sText In ListBox1.List
    res = modDatabase.$medConn.Create($tbl)
    res["fldparent"] = $strParent
    res["fldchild"] = sText
    res["fldreference"] = txtreference.Text
    res.Update()
  Next
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Private Sub InsertLabMonitoring()

  Dim res As Result
  Dim sText As String

  For Each sText In ListBox1.List
    res = modDatabase.$medConn.Create($tbl)
    res["fldparent"] = $strParent
    res["fldtype"] = $sVal
    res["fldchild"] = sText
    res["fldreference"] = txtreference.Text
    res.Update()
  Next
  Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
  ' Balloon.Delay = modBasic.$BalloonDelay

End

Public Sub btnBrCancel_Click()

  If ListBox1.Text Then
    ListBox1.Remove(ListBox1.Index)
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End
