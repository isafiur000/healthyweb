' Gambas class file

Private $RegistrationVar As String[] = ["{HospitalName}", "{HospitalAddress}", "{Department}", "{CurrentDate}", "{CurrentTime}", "{CurrentUser}", "{Encounter}", "{PatientNo}", "{PatientCode}", "{PatientName}", "{PatientAddress}", "{PatientDistrict}", "{PatientGuardian}", "{PatientDOB}", "{PatientAge}", "{AgeGroup}", "{AgeGroupCustom}", "{Age/Sex}", "{E-Mail}", "{ContactNo}", "{PatientFileNo}", "{PatientRelation}", "{RegdDepartment}", "{RegdDeptRoom}", "{RegdBillMode}", "{RegistrationDate}", "{RegistrationTime}", "{VisitMode}", "{Consultant}", "{ConsultantID}", "{RegdConsultationFree}", "{TotalPayment}"]                                                    ''
Private $xList As String[]

Public Sub _new()

  $xList = modNonMedical.FillCashModeCombo()
  $xList.Insert(["All", "None"])

  'formating
  cmbatch.List = ["Yes", "No"]
  cmbqty.List = ["Yes", "No"]
  cmbcategory.List = ["Yes", "No"]
  cmbshowtaxdisc.List = ["Always", "NotNull", "DiscOnly"]
  cmbdiscformat.List = ["Percent", "Amount"]
  cmbtaxformat.List = ["Percent", "Amount"]
  cmbcashcredit.List = ["Percent", "Amount"]
  cmbtaxsum.List = ["Always", "NotNull", "None"]
  cmbdiscsum.List = ["Always", "NotNull", "None"]
  cmbitemsuffix.List = ["Payable", "Referral", "Components", "None"]
  cmbmed.List = ["Brand", "Generic", "Both"]
  cmbdate.List = ["AD Date", "BS Date"]
  cmbgroupitem.List = ["Amount", "Category", "Group", "None"]
  cmbexpiry.List = ["mmm dd yyyy", "dd mmm yyyy", "dd-mm-yyyy", "mmm yyyy", "mm-yyyy", "No"]
  cmblocation.List = ["Comp ID", "Department"]
  cmbextrabill.List = ["Print", "Print+Print", "Save", "Print+Save", "None"]
  cmbextrefer.List = ["Yes", "No"]
  cmbregdslip.List = ["Sticker", "Prescription", "None"]
  cmbdischbill.List = ["Summary", "Detail"]
  cmbskiprint.List = ["Registration", "Discharge"]
  cmbitmselct.List = ["Current", "Multiple"]
  cmbshowMRP.List = ["Yes", "No"]

  ShowPrintingParam()

End

Public Sub IconPanel1_Click()

  If IconPanel1.Index = 0 Then
    ShowPrintingParam()
    GeneralBillSetting()

  Else If IconPanel1.Index = 1 Then
    cmblogo.List = ["Yes", "No"]
    cmbhosp.List = ["Yes", "No"]
    cmbdept.List = ["Yes", "No"]
    cmbaddress.List = ["Yes", "No"]
    cmbinvtypealign.List = AlignmentList()
    cmbportalqrform.List = ["Archive:All Categories", "Archive:Diagnostic Tests", "Archive:Radio Diagnostics", "Archive:General Reports"]
    ShowHeaderSett()
    ShowEndNote()

  Else If IconPanel1.Index = 2 Then
    cmblinheadcol11.List = HeaderList()
    cmblinheadcol12.List = HeaderList()
    cmblinheadcol21.List = HeaderList()
    cmblinheadcol22.List = HeaderList()
    cmblinheadcol31.List = HeaderList()
    cmblinheadcol32.List = HeaderList()

    cmblinfootcol11.List = FooterList()                       ''
    cmblinfootcol12.List = FooterList()
    cmblinfootcol21.List = FooterList()
    cmblinfootcol22.List = FooterList()
    cmblinfootcol31.List = FooterList()
    cmblinfootcol32.List = FooterList()
    cmblinfootcol41.List = FooterList()
    cmblinfootcol42.List = FooterList()

    cmblinfootcol11a.List = FooterList()                       ''
    cmblinfootcol12a.List = FooterList()
    cmblinfootcol21a.List = FooterList()
    cmblinfootcol22a.List = FooterList()
    cmblinfootcol31a.List = FooterList()
    cmblinfootcol32a.List = FooterList()
    cmblinfootcol41a.List = FooterList()
    cmblinfootcol42a.List = FooterList()

    cmblinefootend1.List = FooterList()
    cmblinefootend2.List = FooterList()
    cmblinefootendcol1.List = FooterList()
    cmblinefootendcol2.List = FooterList()

    SHowLineHeader()
    SHowLineFooter()
    SHowLineFooteCash()
    FooterEndLines()

  Else If IconPanel1.Index = 3 Then
    cmbtablelabel.List = ["Yes", "No"]
    cmbhidetable.List = ["Yes", "No"]
    cmbcolwid1.List = ["%", "px"]
    cmbcolwid2.List = ["%", "px"]
    cmbcolwid3.List = ["%", "px"]
    cmbcolwid4.List = ["%", "px"]
    cmbcolwid5.List = ["%", "px"]
    cmbcolwid6.List = ["%", "px"]

    cmbcolalign1.List = AlignmentList()
    cmbcolalign2.List = AlignmentList()
    cmbcolalign3.List = AlignmentList()
    cmbcolalign4.List = AlignmentList()
    cmbcolalign5.List = AlignmentList()
    cmbcolalign6.List = AlignmentList()
    cmbcolalign7.List = AlignmentList()
    cmbcolalign8.List = AlignmentList()

    cmbheadtablelabelalign.List = AlignmentList()
    cmbheadtabletextalign.List = AlignmentList()
    cmbfoottablelabelalign.List = AlignmentList()
    cmbfoottabletextalign.List = AlignmentList()
    cmbheadlabelwidth.List = ["%", "px"]
    cmbheadtextwidth.List = ["%", "px"]
    cmbfootlabelwidth.List = ["%", "px"]
    cmbfoottextwidth.List = ["%", "px"]

    HeaderTableSetting()
    FooterTableSetting()
    ShowTitleLabelSett()
    ShowColumnWidthSett()

  Else If IconPanel1.Index = 4 Then
    cmbinvoiceorient.List = ["Portrait", "Landscape"]
    cmbPDFbackground.List = ["Yes", "No"]
    cmbPDFImage.List = ["Yes", "No"]
    cmbPDFrotate.List = ["90", "180", "270", "None"]
    cmbPDpapsize.List = ["A3", "A4", "A5", "B3", "B4", "B5", "Letter", "Legal", "Tabloid"]
    cmbhtmlform.List = ["Yes", "No"]
    cmbhtmllink.List = ["Yes", "No"]
    cmbgrayscale.List = ["Yes", "No"]
    cmbinternalink.List = ["Yes", "No"]
    cmbPDFshrink.List = ["Enable", "Disable", "None"]
    cmblowquality.List = ["Enable", "Disable"]
    ShowInvoicePDF()
    GeneralPDFDesign()

  Else If IconPanel1.Index = 5 Then
    cmbpdfheadline.List = ["Yes", "No"]
    cmbpdfheadsource.List = ["Text", "HTML", "None"]
    PDFHeaderDesign()

  Else If IconPanel1.Index = 6 Then
    cmbpdfootline.List = ["Yes", "No"]
    cmbpdfootsource.List = ["Text", "HTML", "None"]
    PDFFooterDesign()

  Else If IconPanel1.Index = 7 Then
    cmbcontitle.List = ["BuiltIn", "External"]
    cmbconheader.List = ["BuiltIn", "External"]
    cmbcontable.List = ["BuiltIn", "External"]
    cmbconfooter.List = ["BuiltIn", "External"]

    cmbautopayble.List = $xList
    cmbautocalc.List = ["Calculator", "InvoiceInfo", "BlankForm"]
    cmbeditax.List = ["Percent", "Amount"]
    cmbwarncredit.List = ["Yes", "No"]
    cmbbillalert.List = ["Patient No", "Patient Code", "Data Repo", "None"]
    cmbdefitemtype.List = ["All", "Test", "Service", "Procedure", "Equipment", "Radio", "Others", "Package", "Group", "No Change"]
    cmbdefpharmtype.List = modMedicine.AllComboRoute()

    ShowDefaultComponent()
    ShowLineSpacing()
    GeneralBillSetting()
    CBMSSetting()
    SetQRCodeParam()

  Else If IconPanel1.Index = 8 Then
    cmbregistrepo.List = ["Yes", "No"]
    cmbautodemog.List = ["Acount", "Clinical", "Essential", "None"]
    cmbregdformauto.List = ["Yes", "No"]
    cmbquota.List = ["Yes", "No"]
    cmbconsultanlist.List = ["AllItems", "LockByQuota"]
    cmbdefsex.List = ["Male", "Female", "Other"]
    cmbdefdistrict.List = modBasic.$DistrictList
    cmbdefrelation.List = modBasic.$RelationList
    cmbdefdepart.List = modGeneral.RegistrationDeptList()
    cmbdefsearch.List = ["Regd No", "NHIS No", "Booking ID", "SS Unit", "Staff ID", "SS Fund"]
    cmbdefdepgroup.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldgroupname) as col from tbldeptgroup"))
    ShowRegistrationSettings()
    DisplayDefValues()

  Else If IconPanel1.Index = 9 Then
    cmbline1.List = $RegistrationVar
    cmbline2.List = $RegistrationVar
    cmbline3.List = $RegistrationVar
    cmbline4.List = $RegistrationVar
    cmbline5.List = $RegistrationVar
    cmbline6.List = $RegistrationVar
    cmbline7.List = $RegistrationVar
    cmbline8.List = $RegistrationVar
    cmbline9.List = $RegistrationVar
    ' cmbline10.List = $RegistrationVar

    cmbline11.List = $RegistrationVar
    cmbline12.List = $RegistrationVar
    cmbline13.List = $RegistrationVar
    cmbline14.List = $RegistrationVar
    cmbline15.List = $RegistrationVar
    cmbline16.List = $RegistrationVar
    cmbline17.List = $RegistrationVar
    cmbline18.List = $RegistrationVar
    cmbline19.List = $RegistrationVar
    ' cmbline20.List = $RegistrationVar

    cmbregdform.List = modMisc.CustomReportList()
    cmblaterform.List = modMisc.CustomReportList()

    ShowRegisSlip()
    ShowLaterRegist()

  Else If IconPanel1.Index = 10 Then
    cmblabelorient.List = ["Portrait", "Landscape"]
    cmbmultipdf.List = ["Continuous", "Separate"]
    cmblabelpapsize.List = ["A3", "A4", "A5", "B3", "B4", "B5", "Letter", "Legal", "Tabloid"]
    ShowLabelPDF()

  Endif

End

Private Function HeaderList() As String[]

  Dim xx As String[]

  xx = ["{PatientName}", "{Encounter}", "{InvoiceType}", "{InvoiceMode}", "{InvoiceNumber}", "{LedgerA/C}", "{InvRefNumber}", "{BillPrintCount}", "{BillDateTime}", "{BillUser}", "{PatientNo}", "{PatientCode}", "{PatientAddress}", "{PatientDistrict}", "{PatientGender}", "{PatientGuardian}", "{PatientDOB}", "{PatientAge}", "{AgeGroup}", "{AgeGroupCustom}", "{E-Mail}", "{ContactNo}", "{Age/Sex}", "{RegdBillMode}", "{ReferLabel}", "{PayableLabel}", "{ReturnBillNo}", "{ReturnReason}", "{DiscountTag}", "{CurrentDeposit}", "{NonInvoicedExpenses}", "{BalanceDeposit}", "{PatientBarCode}", "{PatientQRCode}", "{PatientImage}", "{ReturnDiscCode}", "{ReturnTaxCode}"]                                             ''
  Return xx

End

Private Function FooterList() As String[]

  Dim xx As String[]

  xx = ["{SubTotal}", "{Discount}", "{DiscountGroup}", "{TaxableAmt}", "{TotalTax}", "{TaxGroup}", "{TotalAmount}", "{ReceAmount}", "{AmtWord}", "{DueCredit}", "{DueAmount}", "{BillDateTime}", "{BillUser}", "{Note1}", "{NoteII}"]                                                 ''
  Return xx

End

Private Function AlignmentList() As String[]

  Dim xx As String[]

  xx = ["left", "center", "right"]
  Return xx

End

''---------------------------------- Tab 0 ----------------------------------------
Private Sub ShowPrintingParam()

  cmbatch.Text = modSettings.ShowSettingFromFIle("Invoice/ShowBatch")
  cmbexpiry.Text = modSettings.ShowSettingFromFIle("Invoice/ShowExpiry")
  cmbqty.Text = modSettings.ShowSettingFromFIle("Invoice/ShowQuantity")
  cmbcategory.Text = modSettings.ShowSettingFromFIle("Invoice/ShowDateTime")
  cmbshowtaxdisc.Text = modSettings.ShowSettingFromFIle("Invoice/ShowTaxDisc")
  cmbdiscformat.Text = modSettings.ShowSettingFromFIle("Invoice/DiscountFormat")
  cmbtaxformat.Text = modSettings.ShowSettingFromFIle("Invoice/TaxFormat")
  cmbcashcredit.Text = modSettings.ShowSettingFromFIle("Invoice/CashCreditFormat")
  cmbtaxsum.Text = modSettings.ShowSettingFromFIle("Invoice/ShowSumTax")
  cmbdiscsum.Text = modSettings.ShowSettingFromFIle("Invoice/ShowSumDiscount")
  cmbshowMRP.Text = modSettings.ShowSettingFromFIle("Invoice/ShowMaxRetailPrice")

  cmbmed.Text = modSettings.ShowSettingFromFIle("Invoice/MedicineName")
  cmbitemsuffix.Text = modSettings.ShowSettingFromFIle("Invoice/ParticularSuffix")
  cmbdate.Text = modSettings.ShowSettingFromFIle("Invoice/DateFormat")
  cmbgroupitem.Text = modSettings.ShowSettingFromFIle("Invoice/GroupItem")
  cmblocation.Text = modSettings.ShowSettingFromFIle("Invoice/BillingLocation")

  cmbextrabill.Text = modSettings.ShowSettingFromFIle("Invoice/ExtraCopy")
  cmbextrefer.Text = modSettings.ShowSettingFromFIle("Invoice/EnableExtraLabel")
  cmbregdslip.Text = modSettings.ShowSettingFromFIle("Invoice/PostInvoicePrint")
  cmbdischbill.Text = modSettings.ShowSettingFromFIle("Invoice/DischargeBillFormat")
  cmbskiprint.Text = modSettings.ShowSettingFromFIle("Invoice/SkipInvoicePrinting")
  cmbitmselct.Text = modSettings.ShowSettingFromFIle("Invoice/PharmacySelection")

End

Public Sub btnvarbatch_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowBatch", cmbatch.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvarexpiry_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowExpiry", cmbexpiry.Text)
  modBasic.$BillExpiryFormat = cmbexpiry.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvarqty_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowQuantity", cmbqty.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncategory_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowDateTime", cmbcategory.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvarmed_Click()

  modSettings.SaveSettingsToFile("Invoice/MedicineName", cmbmed.Text)
  modBasic.$BillMedicineFormat = cmbmed.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvardate_Click()

  modSettings.SaveSettingsToFile("Invoice/DateFormat", cmbdate.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndiscformat_Click()

  modSettings.SaveSettingsToFile("Invoice/DiscountFormat", cmbdiscformat.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntaxformat_Click()

  modSettings.SaveSettingsToFile("Invoice/TaxFormat", cmbtaxformat.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncashcredit_Click()

  modSettings.SaveSettingsToFile("Invoice/CashCreditFormat", cmbcashcredit.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnshowtaxdisc_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowTaxDisc", cmbshowtaxdisc.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndiscsum_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowSumDiscount", cmbdiscsum.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntaxsum_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowSumTax", cmbtaxsum.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnshowMRP_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowMaxRetailPrice", cmbshowMRP.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnitemsuffix_Click()

  modSettings.SaveSettingsToFile("Invoice/ParticularSuffix", cmbitemsuffix.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvargroup_Click()

  modSettings.SaveSettingsToFile("Invoice/GroupItem", cmbgroupitem.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnvarlocat_Click()

  modSettings.SaveSettingsToFile("Invoice/BillingLocation", cmblocation.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnextrabill_Click()

  modSettings.SaveSettingsToFile("Invoice/ExtraCopy", cmbextrabill.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnextrefer_Click()

  modSettings.SaveSettingsToFile("Invoice/EnableExtraLabel", cmbextrefer.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnregdslip_Click()

  modSettings.SaveSettingsToFile("Invoice/PostInvoicePrint", cmbregdslip.Text)
  modBasic.$BillWithInvoicePrint = cmbregdslip.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btndischbill_Click()

  modSettings.SaveSettingsToFile("Invoice/DischargeBillFormat", cmbdischbill.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnskiprint_Click()

  modSettings.SaveSettingsToFile("Invoice/SkipInvoicePrinting", cmbskiprint.Text)
  modBasic.$BillSkipPrinting = cmbskiprint.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnitmslct_Click()

  modSettings.SaveSettingsToFile("Invoice/PharmacySelection", cmbitmselct.Text)
  modBasic.$BillPharmSelection = cmbitmselct.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

''----------------------------------------------- Rate Plan --------------------------------------------------
Private Sub GeneralBillSetting()

  cmbdefitemtype.Text = modSettings.ShowSettingFromFIle("BillingSettings/DefaultServiceType")
  cmbdefpharmtype.Text = modSettings.ShowSettingFromFIle("BillingSettings/DefaultPharmacyType")

  cmbautopayble.Text = modSettings.ShowSettingFromFIle("BillingSettings/AutoDisplayPayable")
  cmbautocalc.Text = modSettings.ShowSettingFromFIle("BillingSettings/AfterPrintAutoDisplay")
  cmbeditax.Text = modSettings.ShowSettingFromFIle("BillingSettings/EditTaxDiscount")
  cmbwarncredit.Text = modSettings.ShowSettingFromFIle("BillingSettings/PastCreditsDisplay")

  cmbbillalert.Text = modSettings.ShowSettingFromFIle("HistoryAlert/PatientCode")

End

Public Sub btnbillalert_Click()

  modSettings.SaveSettingsToFile("HistoryAlert/PatientCode", cmbbillalert.Text)
  modBasic.$SalesHistoryAlert = cmbbillalert.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btneditax_Click()

  modSettings.SaveSettingsToFile("BillingSettings/EditTaxDiscount", cmbeditax.Text)
  modBasic.$BillEditTaxDiscForm = cmbeditax.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnautopayble_Click()

  modSettings.SaveSettingsToFile("BillingSettings/AutoDisplayPayable", cmbautopayble.Text)
  modBasic.$BillShowAutoPayable = cmbautopayble.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnautocalc_Click()

  modSettings.SaveSettingsToFile("BillingSettings/AfterPrintAutoDisplay", cmbautocalc.Text)
  modBasic.$BillAfterPrintDisplay = cmbautocalc.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnwarncredit_Click()

  modSettings.SaveSettingsToFile("BillingSettings/PastCreditsDisplay", cmbwarncredit.Text)
  modBasic.$BillWarnCredits = cmbwarncredit.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btndefitemtype_Click()

  modSettings.SaveSettingsToFile("BillingSettings/DefaultServiceType", cmbdefitemtype.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btndefpharmtype_Click()

  modSettings.SaveSettingsToFile("BillingSettings/DefaultPharmacyType", cmbdefpharmtype.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

''------------------------------------------------------------------------------------------
Public Sub btncbmssave_Click()

  If txtcbmsuser.Text Then
    modSettings.SaveSettingsToFile("CBMSAPI/UserName", Base64(txtcbmsuser.Text))
  Endif
  If txtcbmspass.Text Then
    modSettings.SaveSettingsToFile("CBMSAPI/Password", Base64(txtcbmspass.Text))
  Endif
  modSettings.SaveSettingsToFile("CBMSAPI/SalesURL", txtcbmsapi.Text)
  modSettings.SaveSettingsToFile("CBMSAPI/ReturnURL", txtcbmsapiret.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub lnkcbmsapi_Click()

  txtcbmsapi.Text = "https://cbapi.ird.gov.np/api/bill"

End

Public Sub lnkcbmsapiret_Click()

  txtcbmsapiret.Text = "https://cbapi.ird.gov.np/api/billreturn"

End

Private Sub CBMSSetting()

  If modSettings.ShowSettingFromFIle("CBMSAPI/UserName") Then
    txtcbmsuser.Text = UnBase64(modSettings.ShowSettingFromFIle("CBMSAPI/UserName"))
  Endif
  If modSettings.ShowSettingFromFIle("CBMSAPI/Password") Then
    txtcbmspass.Text = UnBase64(modSettings.ShowSettingFromFIle("CBMSAPI/Password"))
  Endif
  txtcbmsapi.Text = modSettings.ShowSettingFromFIle("CBMSAPI/SalesURL")
  txtcbmsapiret.Text = modSettings.ShowSettingFromFIle("CBMSAPI/ReturnURL")

End

''---------------------- Qr Code -------------------
Private Sub SetQRCodeParam()

  txtqrcodeshellpath.Text = modSettings.ShowSettingFromFIle("Invoice/QRCodeScript")
  txtqrcodeshellname.Text = modSettings.ShowSettingFromFIle("Invoice/QRCodeShell")

End

Public Sub btnqrcodeshellset_Click()

  modSettings.SaveSettingsToFile("Invoice/QRCodeScript", txtqrcodeshellpath.Text)
  modSettings.SaveSettingsToFile("Invoice/QRCodeShell", txtqrcodeshellname.Text)
  modBasic.$QRPaymentScript = txtqrcodeshellpath.Text
  modBasic.$QRPaymentShell = txtqrcodeshellname.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

''---------------------------- Tab 1 --------------------------
Private Sub ShowHeaderSett()

  cmbhosp.Text = modSettings.ShowSettingFromFIle("Invoice/Header_HospitalName")
  cmbaddress.Text = modSettings.ShowSettingFromFIle("Invoice/Header_HospitalAddress")
  cmbdept.Text = modSettings.ShowSettingFromFIle("Invoice/DepartmentName")
  txtnamefont.Text = modSettings.ShowSettingFromFIle("Invoice/HospitalName_Font")
  txtaddfont.Text = modSettings.ShowSettingFromFIle("Invoice/HospitalAddress_Font")
  txtdeptfont.Text = modSettings.ShowSettingFromFIle("Invoice/Department_Font")
  cmbinvtypealign.Text = modSettings.ShowSettingFromFIle("Invoice/InvoiceType_Align")
  txtinvtypefont.Text = modSettings.ShowSettingFromFIle("Invoice/InvoiceType_Font")

  cmblogo.Text = modSettings.ShowSettingFromFIle("Invoice/Header_Logo")
  If modSettings.ShowSettingFromFIle("Invoice/Header_LogoWidth") Then
    txtlogowidth.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/Header_LogoWidth"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/Header_LogoHeight") Then
    txtlogoheight.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/Header_LogoHeight"))
  Endif

  txtheaderpic.Text = modSettings.ShowSettingFromFIle("Invoice/Header_Picture")
  txtbackground.Text = modSettings.ShowSettingFromFIle("Invoice/Body_BackgroundPicture")
  txtfooterpict.Text = modSettings.ShowSettingFromFIle("Invoice/Footer_Picture")
  cmbportalqrform.Text = modSettings.ShowSettingFromFIle("Invoice/QRCodeLink")

End

Public Sub btnheaderpic_Click()

  modSettings.SaveSettingsToFile("Invoice/Header_Picture", txtheaderpic.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlogo_Click()

  modSettings.SaveSettingsToFile("Invoice/Header_Logo", cmblogo.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlogodiamension_Click()

  If txtlogowidth.Value Then
    modSettings.SaveSettingsToFile("Invoice/Header_LogoWidth", CStr(txtlogowidth.Value))
  Endif
  If txtlogoheight.Value Then
    modSettings.SaveSettingsToFile("Invoice/Header_LogoHeight", CStr(txtlogoheight.Value))
  Endif
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntitle_Click()

  modSettings.SaveSettingsToFile("Invoice/Header_HospitalName", cmbhosp.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnaddress_Click()

  modSettings.SaveSettingsToFile("Invoice/Header_HospitalAddress", cmbaddress.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndeptshow_Click()

  modSettings.SaveSettingsToFile("Invoice/DepartmentName", cmbdept.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnnamefont_Click()

  modSettings.SaveSettingsToFile("Invoice/HospitalName_Font", txtnamefont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnaddfont_Click()

  modSettings.SaveSettingsToFile("Invoice/HospitalAddress_Font", txtaddfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndeptfont_Click()

  modSettings.SaveSettingsToFile("Invoice/Department_Font", txtdeptfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btninvtypealign_Click()

  modSettings.SaveSettingsToFile("Invoice/InvoiceType_Align", cmbinvtypealign.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btninvtypefont_Click()

  modSettings.SaveSettingsToFile("Invoice/InvoiceType_Font", txtinvtypefont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnOkbackgrnd_Click()

  modSettings.SaveSettingsToFile("Invoice/Body_BackgroundPicture", txtbackground.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfootpic_Click()

  modSettings.SaveSettingsToFile("Invoice/Footer_Picture", txtfooterpict.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnportalqrform_Click()

  modSettings.SaveSettingsToFile("Invoice/QRCodeLink", cmbportalqrform.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''--------------------------------- End Note ----------------------------------------------------------------------
Private Sub ShowEndNote()

  txtnote1.Text = modSettings.ShowSettingFromFIle("Invoice/EndNoteI_Text")
  txtfont1.Text = modSettings.ShowSettingFromFIle("Invoice/EndNoteI_Font")
  txtnote2.Text = modSettings.ShowSettingFromFIle("Invoice/EndNoteII_Text")
  txtfont2.Text = modSettings.ShowSettingFromFIle("Invoice/EndNoteII_Font")
  ' txtnote1.Font = Font[txtfont1.Value]
  ' txtnote2.Font = Font[txtfont2.Value]

End

Public Sub btnnote1_Click()

  modSettings.SaveSettingsToFile("Invoice/EndNoteI_Text", Trim(txtnote1.Text))
  modSettings.SaveSettingsToFile("Invoice/EndNoteI_Font", txtfont1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnnote2_Click()

  modSettings.SaveSettingsToFile("Invoice/EndNoteII_Text", Trim(txtnote2.Text))
  modSettings.SaveSettingsToFile("Invoice/EndNoteII_Font", txtfont2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

''---------------------------- Tab 2 ---------------------------
Private Sub SHowLineHeader()

  txtlinheadcol11.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderLabel_Col11")
  cmblinheadcol11.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderText_Col11")

  txtlinheadcol12.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderLabel_Col12")
  cmblinheadcol12.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderText_Col12")

  txtlinheadcol21.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderLabel_Col21")
  cmblinheadcol21.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderText_Col21")

  txtlinheadcol22.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderLabel_Col22")
  cmblinheadcol22.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderText_Col22")

  txtlinheadcol31.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderLabel_Col31")
  cmblinheadcol31.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderText_Col31")

  txtlinheadcol32.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderLabel_Col32")
  cmblinheadcol32.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderText_Col32")

End

Public Sub btnlinheadcol11_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderLabel_Col11", txtlinheadcol11.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderText_Col11", cmblinheadcol11.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnlinheadcol12_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderLabel_Col12", txtlinheadcol12.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderText_Col12", cmblinheadcol12.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnlinheadcol21_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderLabel_Col21", txtlinheadcol21.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderText_Col21", cmblinheadcol21.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnlinheadcol22_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderLabel_Col22", txtlinheadcol22.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderText_Col22", cmblinheadcol22.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnlinheadcol31_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderLabel_Col31", txtlinheadcol31.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderText_Col31", cmblinheadcol31.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnlinheadcol32_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderLabel_Col32", txtlinheadcol32.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderText_Col32", cmblinheadcol32.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Private Sub SHowLineFooteCash()

  txtlinfootcol11a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col11_Cash")
  cmblinfootcol11a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col11_Cash")

  txtlinfootcol12a.Text = modSettings.ShowSettingFromFIle("Invoice/BiultIn_FooterLabel_Col12_Cash")
  cmblinfootcol12a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col12_Cash")

  txtlinfootcol21a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col21_Cash")
  cmblinfootcol21a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col21_Cash")

  txtlinfootcol22a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col22_Cash")
  cmblinfootcol22a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col22_Cash")

  txtlinfootcol31a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col31_Cash")
  cmblinfootcol31a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col31_Cash")

  txtlinfootcol32a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col32_Cash")
  cmblinfootcol32a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col32_Cash")

  txtlinfootcol41a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col41_Cash")
  cmblinfootcol41a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col41_Cash")

  txtlinfootcol42a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col42_Cash")
  cmblinfootcol42a.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col42_Cash")

End

Public Sub btnlinfootcol11a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col11_Cash", txtlinfootcol11a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col11_Cash", cmblinfootcol11a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol12a_Click()

  modSettings.SaveSettingsToFile("Invoice/BiultIn_FooterLabel_Col12_Cash", txtlinfootcol12a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col12_Cash", cmblinfootcol12a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol21a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col21_Cash", txtlinfootcol21a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col21_Cash", cmblinfootcol21a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol22a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col22_Cash", txtlinfootcol22a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col22_Cash", cmblinfootcol22a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol31a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col31_Cash", txtlinfootcol31a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col31_Cash", cmblinfootcol31a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol32a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col32_Cash", txtlinfootcol32a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col32_Cash", cmblinfootcol32a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol41a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col41_Cash", txtlinfootcol41a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col41_Cash", cmblinfootcol41a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol42a_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col42_Cash", txtlinfootcol42a.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col42_Cash", cmblinfootcol42a.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub SHowLineFooter()

  txtlinfootcol11.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col11_Credit")
  cmblinfootcol11.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col11_Credit")

  txtlinfootcol12.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col12_Credit")
  cmblinfootcol12.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col12_Credit")

  txtlinfootcol21.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col21_Credit")
  cmblinfootcol21.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col21_Credit")

  txtlinfootcol22.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col22_Credit")
  cmblinfootcol22.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col22_Credit")

  txtlinfootcol31.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col31_Credit")
  cmblinfootcol31.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col31_Credit")

  txtlinfootcol32.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col32_Credit")
  cmblinfootcol32.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col32_Credit")

  txtlinfootcol41.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col41_Credit")
  cmblinfootcol41.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col41_Credit")

  txtlinfootcol42.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterLabel_Col42_Credit")
  cmblinfootcol42.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterText_Col42_Credit")

End

Public Sub btnlinfootcol11_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col11_Credit", txtlinfootcol11.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col11_Credit", cmblinfootcol11.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol12_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col12_Credit", txtlinfootcol12.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col12_Credit", cmblinfootcol12.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol21_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col21_Credit", txtlinfootcol21.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col21_Credit", cmblinfootcol21.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol22_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col22_Credit", txtlinfootcol22.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col22_Credit", cmblinfootcol22.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol31_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col31_Credit", txtlinfootcol31.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col31_Credit", cmblinfootcol31.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol32_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col32_Credit", txtlinfootcol32.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col32_Credit", cmblinfootcol32.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol41_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col41_Credit", txtlinfootcol41.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col41_Credit", cmblinfootcol41.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinfootcol42_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterLabel_Col42_Credit", txtlinfootcol42.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterText_Col42_Credit", cmblinfootcol42.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub FooterEndLines()

  cmblinefootend1.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterEnd1")
  cmblinefootend2.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterEnd2")

  txtlinefootendcol1.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterEndCol1_Label")
  cmblinefootendcol1.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterEndCol1_Text")

  txtlinefootendcol2.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterEndCol2_Label")
  cmblinefootendcol2.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterEndCol2_Text")

End

Public Sub btnlinefootend1_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterEnd1", cmblinefootend1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinefootend2_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterEnd2", cmblinefootend2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinefootendcol1_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterEndCol1_Label", txtlinefootendcol1.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterEndCol1_Text", cmblinefootendcol1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlinefootendcol2_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterEndCol2_Label", txtlinefootendcol2.Text)
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterEndCol2_Text", cmblinefootendcol2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------ Tab 3 --------------------------
Private Sub HeaderTableSetting()

  txtheadtablelabelfont.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_LabelFont")
  txtheadtabletextfont.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_TextFont")

  cmbheadtablelabelalign.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_LabelAlignment")
  cmbheadtabletextalign.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_TextAlignment")

  cmbheadlabelwidth.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_LabelWidUnit")
  cmbheadtextwidth.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_TextWidUnit")

  If modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_LabelWidth") Then
    txtheadlabelwidth.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_LabelWidth"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_TextWidth") Then
    txtheadtextwidth.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BuiltIn_HeaderTable_TextWidth"))
  Endif

End

Public Sub btnheadtablelabelfont_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_LabelFont", txtheadtablelabelfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnheadtabletextfont_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_TextFont", txtheadtabletextfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnheadtablelabelalign_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_LabelAlignment", cmbheadtablelabelalign.Text)
  If txtheadlabelwidth.Value Then
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_LabelWidth", txtheadlabelwidth.Value)
  Else
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_LabelWidth", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_LabelWidUnit", cmbheadlabelwidth.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnheadtabletextalign_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_TextAlignment", cmbheadtabletextalign.Text)
  If txtheadtextwidth.Value Then
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_TextWidth", txtheadtextwidth.Value)
  Else
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_TextWidth", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_HeaderTable_TextWidUnit", cmbheadtextwidth.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub FooterTableSetting()

  txtfoottablelabelfont.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_LabelFont")
  txtfoottabletextfont.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_TextFont")

  cmbfoottablelabelalign.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_LabelAlignment")
  cmbfoottabletextalign.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_TextAlignment")

  If modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_LabelWidth") Then
    txtfootlabelwidth.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_LabelWidth"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_TextWidth") Then
    txtfoottextwidth.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_TextWidth"))
  Endif

  cmbfootlabelwidth.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_LabelWidUnit")
  cmbfoottextwidth.Text = modSettings.ShowSettingFromFIle("Invoice/BuiltIn_FooterTable_TextWidUnit")

End

Public Sub btnfoottablelabelfont_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_LabelFont", txtfoottablelabelfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoottabletextfont_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_TextFont", txtfoottabletextfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoottablelabelalign_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_LabelAlignment", cmbfoottablelabelalign.Text)
  If txtfootlabelwidth.Value Then
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_LabelWidth", txtfootlabelwidth.Value)
  Else
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_LabelWidth", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_LabelWidUnit", cmbfootlabelwidth.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfoottabletextalign_Click()

  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_TextAlignment", cmbfoottabletextalign.Text)
  If txtfoottextwidth.Value Then
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_TextWidth", txtfoottextwidth.Value)
  Else
    modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_TextWidth", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/BuiltIn_FooterTable_TextWidUnit", cmbfoottextwidth.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub ShowTitleLabelSett()

  cmbtablelabel.Text = modSettings.ShowSettingFromFIle("Invoice/ShowColumnTitle")
  txttablelabelfont.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnTitle_Font")
  cmbhidetable.Text = modSettings.ShowSettingFromFIle("Invoice/HideTable")

End

Public Sub btntablelabelsh_Click()

  modSettings.SaveSettingsToFile("Invoice/ShowColumnTitle", cmbtablelabel.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btntablelabelfont_Click()

  modSettings.SaveSettingsToFile("Invoice/ColumnTitle_Font", txttablelabelfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhidetable_Click()

  modSettings.SaveSettingsToFile("Invoice/HideTable", cmbhidetable.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''-------------------------------------------------------------
Private Sub ShowColumnWidthSett()

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth1_Value") Then
    txtcolwid1.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth1_Value"))
  Endif
  cmbcolwid1.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth1_Unit")
  cmbcolalign1.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign1")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth2_Value") Then
    txtcolwid2.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth2_Value"))
  Endif
  cmbcolwid2.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth2_Unit")
  cmbcolalign2.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign2")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth3_Value") Then
    txtcolwid3.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth3_Value"))
  Endif
  cmbcolwid3.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth3_Unit")
  cmbcolalign3.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign3")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth4_Value") Then
    txtcolwid4.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth4_Value"))
  Endif
  cmbcolwid4.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth4_Unit")
  cmbcolalign4.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign4")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth5_Value") Then
    txtcolwid5.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth5_Value"))
  Endif
  cmbcolwid5.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth5_Unit")
  cmbcolalign5.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign5")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth6_Value") Then
    txtcolwid6.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth6_Value"))
  Endif
  cmbcolwid6.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth6_Unit")
  cmbcolalign6.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign6")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth7_Value") Then
    txtcolwid7.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth7_Value"))
  Endif
  cmbcolwid7.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth7_Unit")
  cmbcolalign7.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign7")

  If modSettings.ShowSettingFromFIle("Invoice/ColumnWidth8_Value") Then
    txtcolwid8.Value = CFloat(modSettings.ShowSettingFromFIle("Invoice/ColumnWidth8_Value"))
  Endif
  cmbcolwid8.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnWidth8_Unit")
  cmbcolalign8.Text = modSettings.ShowSettingFromFIle("Invoice/ColumnAlign8")

End

Public Sub btncolwid1_Click()

  If txtcolwid1.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth1_Value", CStr(txtcolwid1.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth1_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth1_Unit", cmbcolwid1.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign1", cmbcolalign1.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid2_Click()

  If txtcolwid2.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth2_Value", CStr(txtcolwid2.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth2_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth2_Unit", cmbcolwid2.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign2", cmbcolalign2.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid3_Click()

  If txtcolwid3.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth3_Value", CStr(txtcolwid3.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth3_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth3_Unit", cmbcolwid3.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign3", cmbcolalign3.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid4_Click()

  If txtcolwid4.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth4_Value", CStr(txtcolwid4.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth4_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth4_Unit", cmbcolwid4.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign4", cmbcolalign4.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid5_Click()

  If txtcolwid5.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth5_Value", CStr(txtcolwid5.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth5_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth5_Unit", cmbcolwid5.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign5", cmbcolalign5.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid6_Click()

  If txtcolwid6.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth6_Value", CStr(txtcolwid6.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth6_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth6_Unit", cmbcolwid6.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign6", cmbcolalign6.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid7_Click()

  If txtcolwid7.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth7_Value", CStr(txtcolwid7.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth7_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth7_Unit", cmbcolwid7.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign7", cmbcolalign7.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncolwid8_Click()

  If txtcolwid8.Value Then
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth8_Value", CStr(txtcolwid8.Value))
  Else
    modSettings.SaveSettingsToFile("Invoice/ColumnWidth8_Value", "")
  Endif
  modSettings.SaveSettingsToFile("Invoice/ColumnWidth8_Unit", cmbcolwid8.Text)
  modSettings.SaveSettingsToFile("Invoice/ColumnAlign8", cmbcolalign8.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''-------------------- Tab 4 ----------------------
Private Sub ShowInvoicePDF()

  If modSettings.ShowSettingFromFIle("Invoice/PDF_BottomMargin") Then
    txtinvoicebottom.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/PDF_BottomMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/PDF_LeftMargin") Then
    txtinvoiceleft.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/PDF_LeftMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/PDF_RightMargin") Then
    txtinvoiceright.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/PDF_RightMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/PDF_TopMargin") Then
    txtinvoicetop.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/PDF_TopMargin"))
  Endif

  If modSettings.ShowSettingFromFIle("Invoice/PDF_PageHeight") Then
    txtinvoiceheight.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/PDF_PageHeight"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/PDF_PageWidth") Then
    txtinvoicewidth.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/PDF_PageWidth"))
  Endif

  cmbinvoiceorient.Text = modSettings.ShowSettingFromFIle("Invoice/PDF_Orientation")
  cmbPDpapsize.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_PaperSize")

End

Public Sub btncustomleft_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_LeftMargin", CStr(txtinvoiceleft.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomtop_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_TopMargin", CStr(txtinvoicetop.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomright_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_RightMargin", CStr(txtinvoiceright.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustombottom_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_BottomMargin", CStr(txtinvoicebottom.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomwidth_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_PageWidth", CStr(txtinvoicewidth.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomheight_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_PageHeight", CStr(txtinvoiceheight.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdforient_Click()

  modSettings.SaveSettingsToFile("Invoice/PDF_Orientation", cmbinvoiceorient.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFpapsize_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_PaperSize", cmbPDpapsize.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub GeneralPDFDesign()

  cmbPDFbackground.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_BackgroundPrint")
  cmbPDFImage.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_ImagePrint")
  txtstylesheet.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_JavaScript")
  cmbPDFrotate.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_Rotate")

  cmbhtmlform.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_EnableForm")
  cmbhtmllink.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_EnableExternalLink")
  cmbgrayscale.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_GrayscalePrint")
  cmbinternalink.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_EnableInternalLink")
  cmbPDFshrink.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_SmartShrinking")
  cmblowquality.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDF_LowQuality")

End

Public Sub btnPDFbackground_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_BackgroundPrint", cmbPDFbackground.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFImage_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_ImagePrint", cmbPDFImage.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFrotate_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_Rotate", cmbPDFrotate.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnstylesheet_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_JavaScript", txtstylesheet.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''new
Public Sub btnhtmlform_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_EnableForm", cmbhtmlform.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnhtmllink_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_EnableExternalLink", cmbhtmllink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btngrayscale_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_GrayscalePrint", cmbgrayscale.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnsmshrink_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_EnableInternalLink", cmbinternalink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFzoom_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_SmartShrinking", cmbPDFshrink.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlowquality_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDF_LowQuality", cmblowquality.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------------- Tab 5 ----------------------
Private Sub ShowPDFVariable()

  Dim xx As String

  xx = "[page]:the number of the pages currently being printed" & "<br>"
  xx = xx & "[frompage]:the  number  of  the  first  page  to  be printed" & "<br>"
  xx = xx & "[topage]:the number of the last page to be printed" & "<br>"
  xx = xx & "[date]:the current date in system local format" & "<br>"
  xx = xx & "[time]:the current time in system local format"
  Message.Info(xx, ("OK"))

End

Public Sub bkpdfheadtext2_Click()

  ShowPDFVariable()

End

Public Sub bkpdfheadtext3_Click()

  ShowPDFVariable()

End

Public Sub bkpdfheadtext1_Click()

  ShowPDFVariable()

End

Private Sub PDFHeaderDesign()

  cmbpdfheadsource.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_Source")

  txtpdfheadtextleft.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_LeftText")
  txtpdfheadtextcenter.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_CenterText")
  txtpdfheadtextright.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_RightText")
  txtpdfheadfont.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_Font")
  cmbpdfheadline.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_Line")
  If modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_Spacing") Then
    txtpdfheadspacing.Value = CInt(modSettings.ShowSettingFromFIle("Invoice" & "/PDFHeader_Spacing"))
  Endif

  modSettings.ShowCheckBox(chkpdfheadtitle, "Invoice" & "/PDFHeader_HTML_Title")
  modSettings.ShowCheckBox(chkpdfheadpatinfo, "Invoice" & "/PDFHeader_HTML_PatInfo")

End

Public Sub btnpdfheadfont_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_Font", txtpdfheadfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadline_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_Line", cmbpdfheadline.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadsour_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_Source", cmbpdfheadsource.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadtextleft_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_LeftText", txtpdfheadtextleft.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadtextcenter_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_CenterText", txtpdfheadtextcenter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadtextright_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_RightText", txtpdfheadtextright.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadsource_Click()

  modSettings.EnterCheckSetting(chkpdfheadtitle, "Invoice" & "/PDFHeader_HTML_Title")
  modSettings.EnterCheckSetting(chkpdfheadpatinfo, "Invoice" & "/PDFHeader_HTML_PatInfo")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfheadspacing_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFHeader_Spacing", CStr(txtpdfheadspacing.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''-------------------- Tab 6 ------------------
Public Sub bkpdfoottext_Click()

  ShowPDFVariable()

End

Public Sub bkpdfoottext1_Click()

  ShowPDFVariable()

End

Public Sub bkpdfoottext2_Click()

  ShowPDFVariable()

End

Private Sub PDFFooterDesign()

  cmbpdfootsource.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_Source")

  txtpdffoottextleft.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_LeftText")
  txtpdffoottextcenter.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_CanterText")
  txtpdffoottextright.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_RightText")
  txtpdfootfont.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_Font")
  cmbpdfootline.Text = modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_Line")
  If modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_Spacing") Then
    txtpdffootspacing.Value = CInt(modSettings.ShowSettingFromFIle("Invoice" & "/PDFFooter_Spacing"))
  Endif

  modSettings.ShowCheckBox(chkpdfootsigna, "Invoice" & "/PDFFooter_HTML_Signature")
  modSettings.ShowCheckBox(chkpdfootfoot, "Invoice" & "/PDFFooter_HTML_FooterImage")

End

Public Sub btnpdffoottextleft_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_LeftText", txtpdffoottextleft.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffoottextcenter_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_CanterText", txtpdffoottextcenter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffoottextright_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_RightText", txtpdffoottextright.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootfont_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_Font", txtpdfootfont.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootline_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_Line", cmbpdfootline.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootsour_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_Source", cmbpdfootsource.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdfootsource_Click()

  modSettings.EnterCheckSetting(chkpdfootsigna, "Invoice" & "/PDFFooter_HTML_Signature")
  modSettings.EnterCheckSetting(chkpdfootfoot, "Invoice" & "/PDFFooter_HTML_FooterImage")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdffootspacing_Click()

  modSettings.SaveSettingsToFile("Invoice" & "/PDFFooter_Spacing", CStr(txtpdffootspacing.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------- Tab 7 ----------------------
Private Sub ShowLineSpacing()

  If modSettings.ShowSettingFromFIle("Invoice/BlankLines_Address_Department") Then
    txtadd_dep.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BlankLines_Address_Department"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/BlankLines_Department_Header") Then
    txtdept_profile.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BlankLines_Department_Header"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/BlankLines_Header_Body") Then
    txtprofile_body.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BlankLines_Header_Body"))
  Endif
  If modSettings.ShowSettingFromFIle("Invoice/BlankLines_Body_Footer") Then
    txtbody_foot.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/BlankLines_Body_Footer"))
  Endif

End

Public Sub btnline1_Click()

  modSettings.SaveSettingsToFile("Invoice/BlankLines_Address_Department", CStr(txtadd_dep.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnline2_Click()

  modSettings.SaveSettingsToFile("Invoice/BlankLines_Department_Header", CStr(txtdept_profile.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnline3_Click()

  modSettings.SaveSettingsToFile("Invoice/BlankLines_Header_Body", CStr(txtprofile_body.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnline4_Click()

  modSettings.SaveSettingsToFile("Invoice/BlankLines_Body_Footer", CStr(txtbody_foot.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Private Sub ShowDefaultComponent()

  cmbcontitle.Text = modSettings.ShowSettingFromFIle("Invoice/Default_Title")
  cmbconheader.Text = modSettings.ShowSettingFromFIle("Invoice/Default_Header")
  cmbcontable.Text = modSettings.ShowSettingFromFIle("Invoice/Default_Table")
  cmbconfooter.Text = modSettings.ShowSettingFromFIle("Invoice/Default_Footer")
  ' cmbinvconversion.Text = modSettings.ShowSettingFromFIle("Invoice/TextFile_Source")
  ' If modSettings.ShowSettingFromFIle("Invoice/HTML-to-Text_Width") Then
  '   txthtmltexwid.Value = CInt(modSettings.ShowSettingFromFIle("Invoice/HTML-to-Text_Width"))
  ' Endif

End

Public Sub btncontitle_Click()

  modSettings.SaveSettingsToFile("Invoice/Default_Title", cmbcontitle.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnconheader_Click()

  modSettings.SaveSettingsToFile("Invoice/Default_Header", cmbconheader.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncontable_Click()

  modSettings.SaveSettingsToFile("Invoice/Default_Table", cmbcontable.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnconfooter_Click()

  modSettings.SaveSettingsToFile("Invoice/Default_Footer", cmbconfooter.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

' Public Sub btninvconversion_Click()
'
'   modSettings.SaveSettingsToFile("Invoice/TextFile_Source", cmbinvconversion.Text)
'   Message.Info(("Information updated"), btninvconversion)
'   'Balloon.Delay = modBasic.$BalloonDelay
'
' End
'
' Public Sub btnhtmtexwid_Click()
'
'   modSettings.SaveSettingsToFile("Invoice/HTML-to-Text_Width", CStr(txthtmltexwid.Value))
'   Message.Info(("Information updated"), btnhtmtexwid)
'   'Balloon.Delay = modBasic.$BalloonDelay
'
' End

''--------------------- Tab 8 -----------------------
Private Sub ShowRegistrationSettings()

  cmbregistrepo.Text = modSettings.ShowSettingFromFIle("RegistrationData/UseRepository")
  cmbautodemog.Text = modSettings.ShowSettingFromFIle("RegistrationForm/Auto_Demographics")
  cmbregdformauto.Text = modSettings.ShowSettingFromFIle("RegistrationForm/AutoPrint")
  modSettings.ShowCheckBox(chksticker, "RegistrationPrint/Sticker")
  modSettings.ShowCheckBox(chkbarcode, "RegistrationPrint/Barcode")

  cmbquota.Text = modSettings.ShowSettingFromFIle("CashRegistration/LimitRegistration")
  cmbconsultanlist.Text = modSettings.ShowSettingFromFIle("RegistrationForm/ConsultantList_Mode")

End

Public Sub btnregistrepo_Click()

  modSettings.SaveSettingsToFile("RegistrationData/UseRepository", cmbregistrepo.Text)
  modBasic.$RegistDataRepo = cmbregistrepo.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnautog_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/Auto_Demographics", cmbautodemog.Text)
  modBasic.$RegistAutoDemograph = cmbautodemog.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnregdformauto_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/AutoPrint", cmbregdformauto.Text)
  modBasic.$RegistAutoPrescription = cmbregdformauto.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnprint_Click()

  modSettings.EnterCheckSetting(chksticker, "RegistrationPrint/Sticker")
  modSettings.EnterCheckSetting(chkbarcode, "RegistrationPrint/Barcode")
  modBasic.$RegistAutoBarcode = modSettings.ShowSettingFromFIle("RegistrationPrint/Barcode")
  modBasic.$RegistAutoSticker = modSettings.ShowSettingFromFIle("RegistrationPrint/Sticker")
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnquota_Click()

  modSettings.SaveSettingsToFile("CashRegistration/LimitRegistration", cmbquota.Text)
  modBasic.$RegistLockToQuota = cmbquota.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnconsunlist_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/ConsultantList_Mode", cmbconsultanlist.Text)
  modBasic.$LockConsultant = cmbconsultanlist.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------------------ default values ------------------------------
Private Sub DisplayDefValues()

  cmbdefsex.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultGender")
  cmbdefdistrict.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultDistrict")
  cmbdefrelation.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultRelation")
  cmbdefdepart.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultDepartment")
  cmbdefdepgroup.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultDeptGroup")
  cmbdefcursor.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultCursor")
  cmbdefsearch.Text = modSettings.ShowSettingFromFIle("RegistrationForm/DefaultSearchBox")

End

Public Sub btndefsex_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultGender", cmbdefsex.Text)
  modBasic.$RegGender = cmbdefsex.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndefdistrict_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultDistrict", cmbdefdistrict.Text)
  modBasic.$RegDistrict = cmbdefdistrict.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndefrelation_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultRelation", cmbdefrelation.Text)
  modBasic.$RegRelation = cmbdefrelation.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndefdepart_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultDepartment", cmbdefdepart.Text)
  modBasic.$RegDepart = cmbdefdepart.Text
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub bntmdefdepgroup_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultDeptGroup", cmbdefdepgroup.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndefcursor_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultCursor", cmbdefcursor.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndefsearch_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/DefaultSearchBox", cmbdefsearch.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btndeptgroup_Click()

  Dim hForm As FmAddVarTwo
  Dim xx As String[]
  Dim yy As String[]

  xx = New String[]
  yy = modGeneral.GetDepartmentsForOPDBoth()
  hForm = New FmAddVarTwo("fldgroupname", "flditemname", "tbldeptgroup", xx, yy)
  hForm.ShowModal

End

''---------------------------- Tab 9 --------------------------
'' first slip
Private Sub ShowRegisSlip()

  cmbline1.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line1")
  cmbline2.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line2")
  cmbline3.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line3")
  cmbline4.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line4")
  cmbline5.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line5")
  cmbline6.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line6")
  cmbline7.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line7")
  cmbline8.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line8")
  cmbline9.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line9")
  cmbline10.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/Line10")

  txtfilefirst.Text = modSettings.ShowSettingFromFIle("RegistrationSlip/SlipPath")
  cmbregdform.Text = modSettings.ShowSettingFromFIle("RegistrationForm/Template")

End

Public Sub btnregdform_Click()

  modSettings.SaveSettingsToFile("RegistrationForm/Template", cmbregdform.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfile_Click()

  modSettings.SaveSettingsToFile("RegistrationSlip/SlipPath", txtfilefirst.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfirstsample_Click()

  txtfilefirst.Text = modHelpVariable.$htmlDirectory &/ "registration.tpl"

End

Public Sub btnset_Click()

  modSettings.SaveSettingsToFile("RegistrationSlip/Line1", cmbline1.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line2", cmbline2.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line3", cmbline3.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line4", cmbline4.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line5", cmbline5.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line6", cmbline6.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line7", cmbline7.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line8", cmbline8.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line9", cmbline9.Text)
  modSettings.SaveSettingsToFile("RegistrationSlip/Line10", cmbline10.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''' later slip
Private Sub ShowLaterRegist()

  cmbline11.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line1")
  cmbline12.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line2")
  cmbline13.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line3")
  cmbline14.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line4")
  cmbline15.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line5")
  cmbline16.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line6")
  cmbline17.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line7")
  cmbline18.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line8")
  cmbline19.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line9")
  cmbline20.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/Line10")

  txtfilelater.Text = modSettings.ShowSettingFromFIle("RegistrationLaterSlip/SlipPath")
  cmblaterform.Text = modSettings.ShowSettingFromFIle("RegistrationLaterForm/Template")

End

Public Sub btnsetlater_Click()

  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line1", cmbline11.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line2", cmbline12.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line3", cmbline13.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line4", cmbline14.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line5", cmbline15.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line6", cmbline16.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line7", cmbline17.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line8", cmbline18.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line9", cmbline19.Text)
  modSettings.SaveSettingsToFile("RegistrationLaterSlip/Line10", cmbline20.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnfilelater_Click()

  modSettings.SaveSettingsToFile("RegistrationLaterSlip/SlipPath", txtfilelater.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlatersample_Click()

  txtfilelater.Text = modHelpVariable.$htmlDirectory &/ "registration.tpl"

End

Public Sub btnlaterform_Click()

  modSettings.SaveSettingsToFile("RegistrationLaterForm/Template", cmblaterform.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''------------------ Tab 10 ---------------------
Private Sub ShowLabelPDF()

  If modSettings.ShowSettingFromFIle("Label/PDF_BottomMargin") Then
    txtlabelbottom.Value = CInt(modSettings.ShowSettingFromFIle("Label/PDF_BottomMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Label/PDF_LeftMargin") Then
    txtlabelleft.Value = CInt(modSettings.ShowSettingFromFIle("Label/PDF_LeftMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Label/PDF_RightMargin") Then
    txtlabelright.Value = CInt(modSettings.ShowSettingFromFIle("Label/PDF_RightMargin"))
  Endif
  If modSettings.ShowSettingFromFIle("Label/PDF_TopMargin") Then
    txtlabeltop.Value = CInt(modSettings.ShowSettingFromFIle("Label/PDF_TopMargin"))
  Endif

  If modSettings.ShowSettingFromFIle("Label/PDF_PageHeight") Then
    txtlabelheight.Value = CInt(modSettings.ShowSettingFromFIle("Label/PDF_PageHeight"))
  Endif
  If modSettings.ShowSettingFromFIle("Label/PDF_PageWidth") Then
    txtlabelwidth.Value = CInt(modSettings.ShowSettingFromFIle("Label/PDF_PageWidth"))
  Endif

  cmblabelorient.Text = modSettings.ShowSettingFromFIle("Label/PDF_Orientation")
  cmblabelpapsize.Text = modSettings.ShowSettingFromFIle("Label/PDF_PaperSize")
  cmbmultipdf.Text = modSettings.ShowSettingFromFIle("Label/PDF_MultiPage")

End

Public Sub btncustomleftlabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_LeftMargin", CStr(txtlabelleft.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomtoplabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_TopMargin", CStr(txtlabeltop.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnlabelpdfset_Click()

End

Public Sub btncustomrightlabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_RightMargin", CStr(txtlabelright.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustombottomlabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_BottomMargin", CStr(txtlabelbottom.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomwidthlabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_PageWidth", CStr(txtlabelwidth.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btncustomheightlabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_PageHeight", CStr(txtlabelheight.Value))
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnpdforientlabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_Orientation", cmblabelorient.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnPDFpapsizelabel_Click()

  modSettings.SaveSettingsToFile("Label/PDF_PaperSize", cmblabelpapsize.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnmultipdf_Click()

  modSettings.SaveSettingsToFile("Label/PDF_MultiPage", cmbmultipdf.Text)
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

''================== Web Buttons ==================
Public Sub Iconbutton1_Click()

  GetNormalButtons()
  IconPanel1.Index = 0
  Iconbutton1.Background = Color.LightGray

End

Public Sub Iconbutton2_Click()

  GetNormalButtons()
  IconPanel1.Index = 1
  Iconbutton2.Background = Color.LightGray

End

Public Sub Iconbutton3_Click()

  GetNormalButtons()
  IconPanel1.Index = 2
  Iconbutton3.Background = Color.LightGray

End

Public Sub Iconbutton4_Click()

  GetNormalButtons()
  IconPanel1.Index = 3
  Iconbutton4.Background = Color.LightGray

End

Public Sub Iconbutton5_Click()

  GetNormalButtons()
  IconPanel1.Index = 4
  Iconbutton5.Background = Color.LightGray

End

Public Sub Iconbutton6_Click()

  GetNormalButtons()
  IconPanel1.Index = 5
  Iconbutton6.Background = Color.LightGray

End

Public Sub Iconbutton7_Click()

  GetNormalButtons()
  IconPanel1.Index = 6
  Iconbutton7.Background = Color.LightGray

End

Public Sub Iconbutton8_Click()

  GetNormalButtons()
  IconPanel1.Index = 7
  Iconbutton8.Background = Color.LightGray

End

Public Sub Iconbutton9_Click()

  GetNormalButtons()
  IconPanel1.Index = 8
  Iconbutton9.Background = Color.LightGray

End

Public Sub Iconbutton10_Click()

  GetNormalButtons()
  IconPanel1.Index = 9
  Iconbutton10.Background = Color.LightGray

End

Public Sub Iconbutton11_Click()

  GetNormalButtons()
  IconPanel1.Index = 10
  Iconbutton11.Background = Color.LightGray

End

Private Sub GetNormalButtons()

  Iconbutton11.Background = Color.Default
  Iconbutton10.Background = Color.Default
  Iconbutton9.Background = Color.Default
  Iconbutton8.Background = Color.Default
  Iconbutton7.Background = Color.Default
  Iconbutton6.Background = Color.Default
  Iconbutton5.Background = Color.Default
  Iconbutton4.Background = Color.Default
  Iconbutton3.Background = Color.Default
  Iconbutton2.Background = Color.Default
  Iconbutton1.Background = Color.Default

End

Public Sub btnclose_Click()

  Me.Close()

End
