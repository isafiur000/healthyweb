' Gambas class file

''controls
Private aWebRowAll As New Object[50]
Private aWideRowAll As New Object[50]
Private aWebFrame As New Object[50]
Private aWebPanel As New Object[50]
Private aIndexLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aHTMLText As New Object[50]
Private aLineText As New Object[50]
Private aValueBox As New Object[50]
Private aUnitText As New Object[50]
Private aNullCheck As New Object[50]
Private aQuantiBox As New Object[50]
Private sButtonPlus As New Object[50]
Private sButtonMinus As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aQuantiUnit As New Object[50]
Private aClinBox As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aTextArea As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGridView As New Object[50]
Private aListBox As New Object[50]
Private aGenTextArea As New Object[50]
Private aCalcBox As New Object[50]
Private aCalcUnit As New Object[50]
Private aCalcNull As New Object[50]
Private aButtonBox As New Object[50]
Private aExpanFixed As New Object[50]
Private aHelpButton As New Object[50]
Private aWebSpace As New Object[50]

Private aWebBottom As New Object[50]
Private aValSlider As New Object[50]

''sub components
Private bHoriPanel As New Object[50, 50]
Private cHoriPanel As New Object[50, 50]
Private bExamLabel As New Object[50, 50]
Private bNameLabel As New Object[50, 50]
Private bDateBox As New Object[50, 50]
Private bBSDate As New Object[50, 50]
Private bComboBox As New Object[50, 50]
Private bDichoValue As New Object[50, 50]
Private bValueBox As New Object[50, 50]
Private bUnitText As New Object[50, 50]
Private bNullCheck As New Object[50, 50]
Private bLineText As New Object[50, 50]
Private bTextArea As New Object[50, 50]
Private bClinBox As New Object[50, 50]
Private bLeftRight As New Object[50, 50]
Private bHTMLText As New Object[50, 50]
Private bGenTextArea As New Object[50, 50]
Private bWebSpace As New Object[50, 50]

''other variables
Private $encid As String
Private $sTable As String
Private $sType As String
Private $idList As String[]
''Arrays
Private $sExamVar As Variant[]
Private AppFactor As Float
Private $compPhysiExamVar As Variant[]

Private $enableControl As Boolean
Private $viewSlider As Boolean

''----------------------------------------- create controls -----------------------------------------
Public Sub _new(encid As String, sTable As String, sType As String)

  Dim xoption As String

  $encid = encid
  $sTable = sTable
  $sType = sType
  modGeneralMain.GetOpenModalForm(Me)

  If $sType = "Group" Then
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldgroupname) as col from tblgroupexam where fldcomp=&1 or fldcomp=&2", modBasic.$compID, "%"))                           ''
  Else If $sType = "Scales" Then
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldcategory) as col from tblexam where fldoption=&1", "Clinical Scale"))
  Else If $sType = "All" Then
    $compPhysiExamVar = GetPhysicianExamVariant()
    cmbcategory.List = modString.GetListFromVariant($compPhysiExamVar, "fldgroupname", True)
  Endif

  xoption = modSettings.ShowSettingFromFIle("EntrySetting/AutoDisplayOptions")
  If xoption = "Yes" Then
    chkautoption.Value = True
  Else If xoption = "No" Then
    chkautoption.Value = False
  Endif
  If cmbcategory.List.Exist("Flagged") = True Then
    cmbcategory.Text = "Flagged"
  Else
    If cmbcategory.List.Count = 1 Then
      cmbcategory.Text = cmbcategory.List[0]
    Endif
  Endif

  AppFactor = 1.25
  If modBasic.$ClinSliderValue = "Enable" Then
    $viewSlider = True
  Else
    $viewSlider = False
  Endif

End

Private Function GetPhysicianExamVariant() As Variant[]

  Dim sColl As Collection
  Dim aVar As Variant[]

  aVar = New Variant[]
  For Each sColl In modFixPatho.$ExaminationCompVar
    If sColl["fldcategory"] = "Physician Examinations" Then
      aVar.Add(sColl)
    Endif
  Next

  Return aVar

End

Public Sub btnshowall_Click()

  GetSelectedRow()

End

Private Sub GetSelectedRow()

  ' ' lblitem.Text = ListBox1.Text
  If cmbcategory.Text Then
    Try $idList.Clear()
    Frame1.DeleteChildren()

    If $sType = "Group" Then
      $idList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldexamid from tblgroupexam where fldgroupname=&1", cmbcategory.Text))
    Else If $sType = "Scales" Then
      $idList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldexamid from tblexam where fldcategory=&1 and fldoption=&2", cmbcategory.Text, "Clinical Scale"))
    Else If $sType = "All" Then
      $idList = modString.GetListFromCompareVariant($compPhysiExamVar, "fldexamid", "fldgroupname", cmbcategory.Text, True)
      ' $idList = GetListExams()
    Endif

    If $idList.Count Then
      LoadFormData()
    Endif

  Endif

End

Private Sub LoadFormData()

  Dim idx As String
  Dim res As Result
  Dim sColl As Collection

  Dim xType As String
  Dim xOption As String
  Dim xitem As String
  Dim xopList As Variant[]
  Dim xSysCons As String
  Dim xcritval As Float
  Dim aColl As Collection

  $sExamVar = New Variant[]

  For Each idx In $idList
    xopList = New Variant[]
    If $sType = "All" Then
      For Each sColl In $compPhysiExamVar
        If sColl["fldexamid"] = idx And If sColl["fldgroupname"] = cmbcategory.Text Then
          xitem = sColl["fldexamid"]
          xSysCons = sColl["fldsysconst"]
          xType = sColl["fldtype"]
          xOption = sColl["fldtanswertype"]
          Break
        Endif
      Next
      If xSysCons Then
        res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption,fldsysconst,fldcritical from tblexam where fldsysconst=&1", xSysCons)
        If res.Available Then
          res.MoveFirst
          xType = res["fldtype"]
          xSysCons = res["fldsysconst"]
          xOption = res["fldoption"]
          Select res["fldoption"]
            Case "Clinical Scale"
              xopList = modAllExam.GetCLinicalScaleOptions("Exam", res["fldexamid"])
            Case "Fixed Components", "Left/Right Components"
              xopList = modFixClinic.GetSubExamCollection(res["fldexamid"])
            Case Else
              xopList = modAllExam.SelectExamOptionList("Exam", res["fldexamid"])
          End Select

          If res["fldcritical"] Then
            xcritval = res["fldcritical"]
          Endif
        Endif
      Endif

    Else
      res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption,fldsysconst,fldcritical from tblexam where fldexamid=&1", idx)
      If res.Available Then
        xitem = res["fldexamid"]
        xSysCons = res["fldsysconst"]
        xType = res["fldtype"]
        xOption = res["fldoption"]
        Select res["fldoption"]
          Case "Clinical Scale"
            xopList = modAllExam.GetCLinicalScaleOptions("Exam", res["fldexamid"])
          Case "Fixed Components", "Left/Right Components"
            xopList = modFixClinic.GetSubExamCollection(res["fldexamid"])
          Case Else
            xopList = modAllExam.SelectExamOptionList("Exam", res["fldexamid"])
        End Select

        If res["fldcritical"] Then
          xcritval = res["fldcritical"]
        Endif
      Endif

    Endif

    aColl = New Collection
    aColl.Add(xitem, "ExamName")
    aColl.Add(xType, "DataType")
    aColl.Add(xOption, "OptionType")
    If xopList And If xopList.Count Then
      aColl.Add(xopList, "OptionList")
    Else
      xopList = New Variant[]
      aColl.Add(xopList, "OptionList")
    Endif
    aColl.Add(xSysCons, "SysConstant")
    If xcritval Then
      aColl.Add(xcritval, "CritValue")
    Else
      aColl.Add(0, "CritValue")
    Endif
    $sExamVar.Add(aColl)

  Next
  CreateControls()

End

Private Sub CreateControls()

  Dim i As Integer
  Dim j As Integer

  For i = 0 To $sExamVar.Count - 1
    If i < 49 Then

      aWebRowAll[i] = New WebContainer(Frame1)

      ''Create controls
      aWebFrame[i] = New WebContainer(aWebRowAll[i])
      aIndexLabel[i] = New WebLabel(aWebFrame[i])
      aNameLabel[i] = New WebHtml(aWebFrame[i])

      If $sExamVar[i]["DataType"] = "Quantitative" Then
        aWebPanel[i] = New WebContainer(aWebRowAll[i])
        aAbnormCheck[i] = New WebCheckBox(aWebPanel[i])

        aQuantiBox[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroup"
        sButtonPlus[i] = New WebButton(aWebPanel[i]) As "PlusGroup"
        sButtonMinus[i] = New WebButton(aWebPanel[i]) As "MinusGroup"
        aQuantiUnit[i] = New WebLabel(aWebPanel[i])
        aQuantiMin[i] = New WebValueBox(aWebPanel[i])
        aQuantiMax[i] = New WebValueBox(aWebPanel[i])
        aHelpButton[i] = New WebButton(aWebPanel[i]) As "ButtonBoxgroup"
        aWideRowAll[i] = New WebContainer(Frame1)
        aWebBottom[i] = New WebContainer(Frame1)
        aValSlider[i] = New WebSlider(aWebBottom[i]) As "SliderGroup"
      Else
        Select $sExamVar[i]["OptionType"]
          Case "Sys Constant", "Multiple Selection", "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale", "Calculated", "ImageValue"
            aWebPanel[i] = New WebContainer(aWebRowAll[i])
            aAbnormCheck[i] = New WebCheckBox(aWebPanel[i])
            Select $sExamVar[i]["OptionType"]
              Case "Sys Constant"
                aGenTextArea[i] = New WebTextArea(aWebPanel[i])
              Case "Multiple Selection"
                aListBox[i] = New WebListBox(aWebPanel[i])
              Case "Date Time", "BS Date"
                aDateBox[i] = New WebDateBox(aWebPanel[i])
                aBSDate[i] = New WebButton(aWebPanel[i]) As "BSButton"
              Case "Single Selection"
                aComboBox[i] = New WebComboBox(aWebPanel[i])
              Case "Dichotomous"
                aDichoValue[i] = New DichotomousValue(aWebPanel[i])
              Case "Quantitative"
                aValueBox[i] = New WebValueBox(aWebPanel[i])
                aUnitText[i] = New WebTextBox(aWebPanel[i])
                aNullCheck[i] = New WebCheckBox(aWebPanel[i]) As "NullCheckBox"
              Case "Qualitative"
                aLineText[i] = New WebTextBox(aWebPanel[i])
              Case "Clinical Scale"
                aTextArea[i] = New WebTextArea(aWebPanel[i])
                aClinBox[i] = New WebValueBox(aWebPanel[i])
              Case "ImageValue"
                aButtonBox[i] = New WebButtonBox(aWebPanel[i]) As "ImageBoxGroup"
              Case "Calculated"
                aCalcBox[i] = New WebValueBox(aWebPanel[i]) As "CalcGroup"
                aCalcUnit[i] = New WebTextBox(aWebPanel[i]) As "CalcUnitGroup"
                aCalcNull[i] = New WebCheckBox(aWebPanel[i]) As "CalcCheckBox"
            End Select
            aHelpButton[i] = New WebButton(aWebPanel[i]) As "ButtonBoxgroup"
            aWideRowAll[i] = New WebContainer(Frame1)

          Case Else
            aWebPanel[i] = New WebContainer(aWebRowAll[i])
            aWideRowAll[i] = New WebContainer(Frame1)
            aAbnormCheck[i] = New WebCheckBox(aWideRowAll[i])
            Select $sExamVar[i]["OptionType"]
              Case "Text Table"
                aGridView[i] = New WebTable(aWideRowAll[i])

              Case "Fixed Components", "Left/Right Components"
                aExpanFixed[i] = New WebContainer(aWideRowAll[i]) As "ExpanderGroup"
                For j = 0 To $sExamVar[i]["OptionList"].Count - 1
                  bHoriPanel[i, j] = New WebContainer(aExpanFixed[i])
                  cHoriPanel[i, j] = New WebContainer(aExpanFixed[i])
                  bExamLabel[i, j] = New WebLabel(bHoriPanel[i, j])
                  bNameLabel[i, j] = New WebHtml(bHoriPanel[i, j])

                  Select $sExamVar[i]["OptionList"][j]["fldtanswertype"]
                    Case "Date Time", "BS Date"
                      bDateBox[i, j] = New WebDateBox(bHoriPanel[i, j])
                      bBSDate[i, j] = New WebButton(bHoriPanel[i, j]) As "SubDateButton"
                    Case "Single Selection"
                      bComboBox[i, j] = New WebComboBox(bHoriPanel[i, j]) As "SubComboGroup"
                    Case "Dichotomous"
                      bDichoValue[i, j] = New DichotomousValue(bHoriPanel[i, j])
                    Case "Quantitative"
                      bValueBox[i, j] = New WebValueBox(bHoriPanel[i, j])
                      bUnitText[i, j] = New WebTextBox(bHoriPanel[i, j])
                      bNullCheck[i, j] = New WebCheckBox(bHoriPanel[i, j])
                    Case "Qualitative"
                      bLineText[i, j] = New WebTextBox(bHoriPanel[i, j])
                    Case "Clinical Scale"
                      bTextArea[i, j] = New WebTextArea(bHoriPanel[i, j])
                      bClinBox[i, j] = New WebValueBox(bHoriPanel[i, j])
                    Case "Left and Right"
                      bLeftRight[i, j] = New LeftRightTextArea(cHoriPanel[i, j])
                    Case "RichText Area"
                      bHTMLText[i, j] = New WebTextHTML(cHoriPanel[i, j])
                    Case Else
                      bGenTextArea[i, j] = New WebTextArea(cHoriPanel[i, j])
                  End Select
                  bWebSpace[i, j] = New WebSeparator(aExpanFixed[i])
                Next

              Case "Left and Right"
                aLeftRight[i] = New LeftRightTextArea(aWideRowAll[i])
              Case "RichText Area"
                aHTMLText[i] = New WebTextHTML(aWideRowAll[i])
              Case Else
                aGenTextArea[i] = New WebTextArea(aWideRowAll[i])
            End Select
            aHelpButton[i] = New WebButton(aWideRowAll[i]) As "ButtonBoxgroup"
        End Select
      Endif

      aWebSpace[i] = New WebSeparator(Frame1)
    Endif
  Next
  $enableControl = False
  DIsplayTextForm()
  $enableControl = True

End

Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim xlimit As Float[]
  Dim asx As String[]
  Dim xcrit As Float
  Dim aCrlower As Float
  Dim aCrupper As Float

  Dim j As Integer
  Dim xopt As String

  For i = 0 To $sExamVar.Count - 1
    If i < 49 Then

      If $sExamVar[i]["DataType"] = "Quantitative" Then
        With aWebRowAll[i]
          .Arrangement = Arrange.Row
        End With
        With aWideRowAll[i]
          .Visible = False
        End With
      Else
        Select $sExamVar[i]["OptionType"]
          Case "Sys Constant", "Multiple Selection", "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale", "Calculated", "ImageValue"
            With aWebRowAll[i]
              .Arrangement = Arrange.Row
            End With
            With aWideRowAll[i]
              .Visible = False
            End With
          Case Else
            With aWebRowAll[i]
              .Arrangement = Arrange.Horizontal
            End With
            With aWideRowAll[i]
              .Arrangement = Arrange.Horizontal
            End With
        End Select
      Endif

      With aWebFrame[i]
        .Arrangement = Arrange.Horizontal
        .Class = "size-tablet less-container-margin"
      End With

      ''create index label
      With aIndexLabel[i]
        .Width = "2em"
        .Height = "2em"
        .Text = i + 1
        .Visible = False
        .Tag = i
      End With
      ''create Name Label
      With aNameLabel[i]
        .Expand = True
        .Font = "bold"
        .Text = "<p>" & $sExamVar[i]["ExamName"] & "</p>"
        .Tag = i
      End With

      If $sExamVar[i]["DataType"] = "Quantitative" Then
        With aWebPanel[i]
          .Arrangement = Arrange.Horizontal
          .Class = "size-tablet less-container-margin"
        End With
      Else
        Select $sExamVar[i]["OptionType"]
          Case "Sys Constant", "Multiple Selection", "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale", "Calculated", "ImageValue"
            With aWebPanel[i]
              .Arrangement = Arrange.Horizontal
              .Class = "size-tablet less-container-margin"
            End With
          Case Else
            With aWebPanel[i]
              .Visible = False
            End With
        End Select
      Endif

      If $sExamVar[i]["DataType"] = "Quantitative" Then
        xlimit = modClinic.GetBothQuantiExamVal($sExamVar[i]["ExamName"], $encid)
        xcrit = $sExamVar[i]["CritValue"]
        If xcrit Then
          aCrlower = xlimit[0] - xcrit * (xlimit[1] - xlimit[0])
          aCrupper = xlimit[1] + xcrit * (xlimit[1] - xlimit[0])
          If aCrupper = 0 Then
            aCrupper = 500
          Endif
        Else
          aCrlower = 0
          aCrupper = 500
        Endif
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .Width = "6em"
          .Height = "2em"
          .Text = "Flag"
          .Enabled = False
          .Tag = i

          If modBasic.$ClinFlagAbnormExam = "Disable" Then
            .Visible = False
          Else
            .Visible = True
          Endif
        End With

        ''create observation entry
        With aQuantiBox[i]
          .Width = "5em"
          .Height = "2em"
          .Tag = i
        End With
        With sButtonPlus[i]
          .Class = "transparent-control"
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/add"
          .Tag = i
        End With
        With sButtonMinus[i]
          .Class = "transparent-control"
          .Width = "2em"
          .Height = "2em"
          .Image = "icon:/small/remove"
          .Tag = i
        End With
        With aQuantiUnit[i]
          .Height = "2em"
          .Border = True
          .Expand = True
          .Text = ""
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .Width = "4em"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .Width = "4em"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With

        With aWebBottom[i]
          .Arrangement = Arrange.Horizontal
          .Class = "less-container-margin"
          .Visible = $viewSlider
        End With

        With aValSlider[i]
          .Expand = True
          .Height = "1em"
          .Tag = i
        End With
        aValSlider[i].MinValue = aCrlower
        aValSlider[i].MaxValue = aCrupper

      Else
        ''create abnormal checkbox
        With aAbnormCheck[i]
          .Width = "6em"
          .Height = "2em"
          .Text = "Flag"
          .Tag = i

          If modBasic.$ClinFlagAbnormExam = "Disable" Then
            .Visible = False
          Else
            .Visible = True
          Endif
        End With

        ''create observation entry
        If $sExamVar[i]["OptionType"] = "Multiple Selection" Then
          With aListBox[i]
            .Width = "75%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Mode = Select.Multiple
            ' .ScrollBar = Scroll.Both
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Single Selection" Then
          With aComboBox[i]
            .Width = "75%"
            .Height = "2em"
            .ReadOnly = False
            .List = $sExamVar[i]["OptionList"]
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Dichotomous" Then
          With aDichoValue[i]
            .Width = "75%"
            .Height = "2em"
            .List = $sExamVar[i]["OptionList"]
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Date Time" Then
          With aDateBox[i]
            .Width = "15em"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "2em"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "BS Date" Then
          With aDateBox[i]
            .Width = "15em"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "2em"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Clinical Scale" Then
          With aTextArea[i]
            .Width = "55%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With
          With aClinBox[i]
            .Width = "20%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Quantitative" Then
          With aValueBox[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
          End With
          With aUnitText[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
          End With
          With aNullCheck[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            .Value = False
            .Text = "Null"
          End With

        Else If $sExamVar[i]["OptionType"] = "ImageValue" Then
          With aButtonBox[i]
            .Expand = True
            .Height = "2em"
            .Border = True
            .Text = ""
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Calculated" Then
          If $sExamVar[i]["SysConstant"] Then
            asx = modString.SplitValueText($sExamVar[i]["SysConstant"])
          Else
            asx = ["", ""]
          Endif
          With aCalcBox[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            If asx[0] Then
              .Value = CFloat(asx[0])
            Endif
          End With
          With aCalcUnit[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            .Text = asx[1]
          End With
          With aCalcNull[i]
            .Width = "6em"
            .Height = "2em"
            .Border = True
            .Tag = i
            .Value = False
            .Text = "Null"
          End With

        Else If $sExamVar[i]["OptionType"] = "Qualitative" Then
          With aLineText[i]
            .Width = "75%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Text Table" Then
          ' DisplayAgegrid(Split($sExamVar[i]["OptionList"], ";"), "", aGridView[i])
          With aGridView[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 4) & "em"
            .Mode = Select.Multiple
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "Fixed Components" Then
          With aExpanFixed[i]
            .Arrangement = Arrange.Vertical
            .Expand = True
          End With
          ''----------- Fixed Components -----------------------
          For j = 0 To $sExamVar[i]["OptionList"].Count - 1
            With bHoriPanel[i, j]
              .Arrangement = Arrange.Horizontal
              .Class = "less-container-margin"
              .Expand = True
            End With

            xopt = $sExamVar[i]["OptionList"][j]["fldtanswertype"]
            Select xopt
              Case "Date Time", "BS Date", "Single Selection", "Dichotomous", "Quantitative", "Qualitative", "Clinical Scale"
                With cHoriPanel[i, j]
                  .Visible = False
                End With
              Case "Text Table", "RichText Area"
                With cHoriPanel[i, j]
                  .Arrangement = Arrange.Vertical
                  .Height = CStr((2 * Slider1.Value) + 4) & "em"
                End With
              Case Else
                With cHoriPanel[i, j]
                  .Arrangement = Arrange.Vertical
                  .Height = CStr((2 * Slider1.Value) + 4) & "em"
                End With
            End Select

            With bExamLabel[i, j]
              .Width = "2em"
              .Height = "2em"
              .Text = $sExamVar[i]["ExamName"]
              .Visible = False
              .Tag = [i, j]
            End With
            With bNameLabel[i, j]
              .Width = "50%"
              .Font = "bold"
              .Text = "<p>" & $sExamVar[i]["OptionList"][j]["fldsubexam"] & "</p>"
              .Tag = [i, j]
            End With

            ''subcomponents
            If xopt = "Single Selection" Then
              With bComboBox[i, j]
                .Width = "40%"
                .Height = "2em"
                .ReadOnly = False
                .List = modAllExam.SelectSubExamOptionList("Exam", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt)
                .Tag = [i, j]
              End With
            Else If xopt = "Dichotomous" Then
              With bDichoValue[i, j]
                .Width = "40%"
                .Height = "2em"
                .List = modAllExam.SelectSubExamOptionList("Exam", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt)
                .Tag = [i, j]
              End With
            Else If xopt = "Date Time" Then
              With bDateBox[i, j]
                .Width = "15em"
                .Height = "2em"
                .DateTime = True
                .Tag = [i, j]
              End With
              With bBSDate[i, j]
                .Width = "2em"
                .Height = "2em"
                .Image = "icon:/small/calendar"
                .Tag = [i, j]
              End With
            Else If xopt = "BS Date" Then
              With bDateBox[i, j]
                .Width = "15em"
                .Height = "2em"
                .DateTime = True
                .Tag = [i, j]
              End With
              With bBSDate[i, j]
                .Width = "2em"
                .Height = "2em"
                .Image = "icon:/small/calendar"
                .Tag = [i, j]
              End With
            Else If xopt = "Clinical Scale" Then
              With bTextArea[i, j]
                .Width = "30%"
                .Height = CStr(2 * Slider1.Value) & "em"
                .Tag = [i, j]
              End With
              With bClinBox[i, j]
                .Width = "4em"
                .Height = "2em"
                .Tag = [i, j]
              End With
            Else If xopt = "Quantitative" Then
              With bValueBox[i, j]
                .Width = "6em"
                .Height = "2em"
                .Border = True
                .Tag = [i, j]
              End With
              With bUnitText[i, j]
                .Width = "6em"
                .Height = "2em"
                .Border = True
                .Tag = [i, j]
              End With
            Else If xopt = "Qualitative" Then
              With bLineText[i, j]
                .Width = "40%"
                .Height = "2em"
                .Tag = [i, j]
              End With
            Else If xopt = "Left and Right" Then
              With bLeftRight[i, j]
                .Expand = True
                .Height = CStr((2 * Slider1.Value) + 4) & "em"
                .Tag = [i, j]
              End With
            Else If xopt = "RichText Area" Then
              With bHTMLText[i, j]
                .Expand = True
                .Height = CStr((2 * Slider1.Value) + 4) & "em"
                ' .DictionaryPath = modBasic.$dictPathList
                .Tag = [i, j]
              End With
            Else
              With bGenTextArea[i, j]
                .Expand = True
                .Height = CStr((2 * Slider1.Value) + 4) & "em"
                ' .DictionaryPath = modBasic.$dictPathList
                .Tag = [i, j]
              End With
            Endif

            With bWebSpace[i, j]
              .Height = "1em"
            End With
          Next
          ''-------- end of fixed components ----------------

        Else If $sExamVar[i]["OptionType"] = "Left/Right Components" Then

        Else If $sExamVar[i]["OptionType"] = "Left and Right" Then
          With aLeftRight[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 4) & "em"
            .Tag = i
          End With

        Else If $sExamVar[i]["OptionType"] = "RichText Area" Then
          With aHTMLText[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 4) & "em"
            ' .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Else
          With aGenTextArea[i]
            ' .Width = "75%"
            .Expand = True
            .Height = CStr((2 * Slider1.Value) + 2) & "em"
            .Wrap = True
            .Tag = i
          End With

        Endif
      Endif

      ''create help button
      With aHelpButton[i]
        .Class = "toolButton"
        .Width = "2em" ''5 * AppFactor
        .Height = "2em"
        .Text = ""
        .image = "icon:/small/info"
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With
      If $sExamVar[i]["OptionType"] = "Fixed Components" Or If $sExamVar[i]["OptionType"] = "Left/Right Components" Then
        aHelpButton[i].Enabled = False
      Endif

      With aWebSpace[i]
        .Height = "1em"
      End With

    Endif
  Next

End

Public Sub PlusGroup_Click()

  Dim i As Integer

  i = Last.Tag
  aQuantiBox[i].Value = aQuantiBox[i].Value + 1

End

Public Sub MinusGroup_Click()

  Dim i As Integer

  i = Last.Tag
  aQuantiBox[i].Value = aQuantiBox[i].Value - 1

End

Public Sub BSButton_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBox[j].Value))
  If xx Then
    aDateBox[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub SubDateButton_Click()

  Dim asx As Integer[]
  Dim xx As String
  Dim Row As Integer
  Dim Col As Integer

  asx = Last.Tag
  Row = asx[0]
  Col = asx[1]
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(bDateBox[Row, Col].Value))
  If xx Then
    bDateBox[Row, Col].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub chkautoption_Click()

  modSettings.EnterCheckSetting(chkautoption, "EntrySetting/AutoDisplayOptions")

End

Public Sub btnrefresh_Click()

  If cmbcategory.Text Then
    modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
    Frame1.DeleteChildren()
    LoadFormData()
  Endif

End

Private Function GetCalculateValue(sLine As String) As Float

  Dim i As Integer
  Dim xval As Float

  If sLine Then
    For i = 0 To $sExamVar.Count - 1
      If aValueBox[i] Then
        If (String.InStr(sLine, $sExamVar[i]["ExamName"]) > 0) Then                                   ''
          sLine = Replace(sLine, "{" & $sExamVar[i]["ExamName"] & "}", CStr(aValueBox[i].Value))
        Endif
      Endif
    Next
    If (String.InStr(sLine, "$Calc[") > 0) Then
      sLine = modReportVar.GetReportCalculation(sLine)
    Endif
    xval = CFloat(sLine)

  Else
    xval = 0
  Endif

  Return xval

End

Public Sub ImageBoxGroup_Click()

End

Public Sub btnBrChange_Click()

  Me.Close()

End

Public Sub btnBrOK_Click()

  FillGenExams($sTable)
  btnBrOK.Enabled = False
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub SliderGroup_Change()

  Dim j As Integer

  j = Last.Tag
  If aQuantiBox[j] Then
    If $enableControl = True Then
      aQuantiBox[j].Value = aValSlider[j].Value
    Endif
  Endif

End

Public Sub QuantiGroup_Change()

  Dim j As Integer

  j = Last.Tag

  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif

  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Private Sub FillGenExams(sTable As String)

  Dim i As Integer
  ' Dim xval As String

  For i = 0 To $sExamVar.Count - 1
    If i < 49 Then
      If $sExamVar[i]["DataType"] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modClinSub.AddQuantiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aQuantiBox[i].Value, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
        Endif
      Else
        If $sExamVar[i]["OptionType"] = "Multiple Selection" Then
          If aListBox[i].Count Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aListBox[i].List.Join(gb.NewLine), aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Text Table" Then
          ' xval = GetTableData(Split($sExamVar[i]["OptionList"]), aGridView[i])
          ' If xval Then
          '   modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], modString.GetTableFormatFromText(xval), aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          ' Endif
        Else If $sExamVar[i]["OptionType"] = "Single Selection" Then
          If aComboBox[i].Text Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aComboBox[i].Text, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aDichoValue[i].Value, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aLeftRight[i].DataText, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Date Time" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "BS Date" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Quantitative" Then
          If aValueBox[i].Value Or If aNullCheck[i].Value Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "ImageValue" Then
          If aButtonBox[i].Text Then

          Endif
        Else If $sExamVar[i]["OptionType"] = "Calculated" Then
          If aCalcBox[i].Value Or If aCalcNull[i].Value Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], CStr(aCalcBox[i].Value) & Space(1) & aCalcUnit[i].Text, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Qualitative" Then
          If aLineText[i].Text Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aLineText[i].Text, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else If $sExamVar[i]["OptionType"] = "Clinical Scale" Then
          If aTextArea[i].Text Then
            modClinSub.AddClinicExam($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aTextArea[i].Text, aClinBox[i].Value, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"], "Regular")
          Endif

        Else If $sExamVar[i]["OptionType"] = "Fixed Components" Then
          AddSubComponents(i, sTable)

        Else If $sExamVar[i]["OptionType"] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aHTMLText[i].RichText, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Else
          If aGenTextArea[i].Text Then
            modClinSub.AddQualiData($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], aGenTextArea[i].Text, aAbnormCheck[i].Value, sTable, $sExamVar[i]["SysConstant"])
          Endif
        Endif
      Endif
    Endif
  Next

End

Private Sub AddSubComponents(i As Integer, sType As String)

  Dim j As Integer
  Dim res As Result
  Dim rex As Result
  Dim xhash As String
  Dim xopt As String

  xhash = modApplication.GetMD5SumString($encid & "|" & $sExamVar[i]["ExamName"] & "|" & modString.GetNowString())
  modClinSub.AddClinicExam($encid, "", $sExamVar[i]["ExamName"], $sExamVar[i]["OptionType"], "", 0, aAbnormCheck[i].Value, sType, $sExamVar[i]["SysConstant"], "Regular", xhash)
  rex = modDatabase.$myConn.Exec("select fldid from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldfilepath=&3", $encid, $sExamVar[i]["ExamName"], xhash)
  If rex.Available Then
    rex.MoveFirst

    For j = 0 To $sExamVar[i]["OptionList"].Count - 1
      xopt = $sExamVar[i]["OptionList"][j]["fldtanswertype"]
      If xopt = "Single Selection" Then
        If bComboBox[i, j].Text Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bComboBox[i, j].Text)
        Endif
      Else If xopt = "Dichotomous" Then
        If bDichoValue[i, j].Value Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bDichoValue[i, j].Value)
        Endif
      Else If xopt = "Date Time" Then
        If bDateBox[i, j].Value Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, modDate.DateStringForExam(bDateBox[i, j].Value))
        Endif
      Else If xopt = "BS Date" Then
        If bDateBox[i, j].Value Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, modDate.ConvertToLocaldate(bDateBox[i, j].Value))
        Endif
      Else If xopt = "Clinical Scale" Then
        If bTextArea[i, j].Text Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bTextArea[i, j].Text)
        Endif
      Else If xopt = "Quantitative" Then
        If bValueBox[i, j].Value Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, CStr(bValueBox[i, j].Value) & Space(1) & bUnitText[i, j].Text)
        Endif
      Else If xopt = "Qualitative" Then
        If bLineText[i, j].Text Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bLineText[i, j].Text)
        Endif
      Else If xopt = "Left and Right" Then
        If bLeftRight[i, j].DataText Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bLeftRight[i, j].DataText)
        Endif
      Else If xopt = "RichText Area" Then
        If bHTMLText[i, j].Text Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bHTMLText[i, j].RichText)
        Endif
      Else
        If bGenTextArea[i, j].Text Then
          modClinSub.InsertComponentExams($encid, rex["fldid"], $sExamVar[i]["ExamName"], $sExamVar[i]["OptionList"][j]["fldsubexam"], xopt, bGenTextArea[i, j].Text)
        Endif
      Endif
    Next

  Endif

End

Private Sub SetQualitativeAbnormal(i As Integer)

  If $sExamVar[i]["OptionType"] = "Single Selection" Then
    If aComboBox[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $sExamVar[i]["ExamName"], aComboBox[i].Text, $sExamVar[i]["OptionType"])
    Endif
  Else If $sExamVar[i]["OptionType"] = "Dichotomous" Then
    If aDichoValue[i].Value Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $sExamVar[i]["ExamName"], aDichoValue[i].Value, $sExamVar[i]["OptionType"])
    Endif
  Else If $sExamVar[i]["OptionType"] = "Left and Right" Then
    If aLeftRight[i].DataText Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $sExamVar[i]["ExamName"], aLeftRight[i].DataText, $sExamVar[i]["OptionType"])
    Endif
  Else If $sExamVar[i]["OptionType"] = "Qualitative" Then
    If aLineText[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $sExamVar[i]["ExamName"], aLineText[i].Text, $sExamVar[i]["OptionType"])
    Endif
  Else If $sExamVar[i]["OptionType"] = "No Selection" Then
    If aGenTextArea[i].Text Then
      aAbnormCheck[i].Value = modAllExam.SelectExamAbnormal("Exam", $sExamVar[i]["ExamName"], aGenTextArea[i].Text, $sExamVar[i]["OptionType"])
    Endif
  Endif

End

''-----------------------------help options  --------------------------------------
Public Sub ButtonBoxgroup_Click()

  Dim j As Integer

  j = Last.Tag
  OpenOption(j)
  If $sExamVar[j]["DataType"] = "Quantitative" Then
  Else
    SetQualitativeAbnormal(j)
  Endif

End

Private Sub OpenOption(j As Integer)

  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String
  Dim xopt As String[]
  Dim xflot As Variant[]

  If $sExamVar[j]["DataType"] = "Quantitative" Then
    xflot = GetQuantiValues("Exam", $encid, $sExamVar[j]["ExamName"], 0, 0, aQuantiBox[j].Value)
    If xflot Then
      aQuantiBox[j].Value = xflot[0]
    Endif

  Else
    If $sExamVar[j]["OptionList"] Then
      xopt = $sExamVar[j]["OptionList"]

      If $sExamVar[j]["OptionType"] = "Single Selection" Then
        sVal = SubChoose(xopt, "Single Selection", $sExamVar[j]["ExamName"])
        If sVal Then
          aComboBox[j].Text = sVal.Join(";")
        Endif

      Else If $sExamVar[j]["OptionType"] = "Dichotomous" Then

      Else If $sExamVar[j]["OptionType"] = "Multiple Selection" Then
        sVal = SubChoose(xopt, "Multiple Selection", $sExamVar[j]["ExamName"])
        If sVal Then
          aListBox[j].List = sVal
        Endif

      Else If $sExamVar[j]["OptionType"] = "Text Table" Then
        ' xval = TableEntry(xopt, $sExamVar[j]["ExamName"], "")
        ' If xval Then
        '   DisplayAgegrid(Split($sExamVar[j]["OptionList"], ";"), xval, aGridView[j])
        ' Endif

      Else If $sExamVar[j]["OptionType"] = "Clinical Scale" Then
        sVal = SubChoose(xopt, "Clinical Scale", $sExamVar[j]["ExamName"])
        If sVal Then
          aClinBox[j].Value = sVal[0]
          aTextArea[j].Text = sVal[1]
        Endif

      Else If $sExamVar[j]["OptionType"] = "Date Time" Then
        aDateBox[j].Value = Now()

      Else If $sExamVar[j]["OptionType"] = "BS Date" Then
        aDateBox[j].Value = Now()

      Else If $sExamVar[j]["OptionType"] = "Visual Input" Then
        sPath = modImage.DisplayVisualData(cmbcategory.Text, "", $sExamVar[j]["ExamName"], $sExamVar[j]["OptionType"])
        If sPath Then
          xval = CVisualValue(cmbcategory.Text, sPath, aGenTextArea[j].Text)
          If xval Then
            aGenTextArea[j].Text = xval
          Endif
        Endif

      Endif
    Endif

  Endif

End

Public Sub ComboGroup_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

Public Sub DichoText_Click()

  Dim j As Integer

  j = Last.Tag
  SetQualitativeAbnormal(j)

End

' Public Sub ComboGroup_GotFocus()
'
'   Dim j As Integer
'
'   j = Last.Tag
'   If modBasic.$TabletModeEnable = "Yes" Then
'     If Not aComboBox[j].Text Then
'       aComboBox[j].Popup
'     Endif
'   Endif
'
' End
'
' Public Sub ComboGroup_KeyRelease()
'
'   Dim j As Integer
'
'   j = Last.Tag
'   modFillContainer.AutoFillComboBox(aComboBox[j])
'
' End
'
' Private Sub OpenAutoOptions(j As Integer)
'
'   If chkautoption.Value = True Then
'     OpenOption(j - 1)
'   Endif
'
' End
'

''======================= For GridView (copied from TextTable)=================
' Private Sub DisplayAgegrid(sColumns As String[], sTable As String, GridView1 As GridView)
'
'   Dim $ageFile As String[]
'   Dim sline As String
'   Dim sCol As String[]
'   Dim Row As Integer
'   Dim Column As Integer
'
'   GridView1.Clear
'   GridView1.Columns.Count = sColumns.Count
'   GridView1.Count = Split(sTable, gb.NewLine).Count - 1
'
'   Row = 0
'   $ageFile = Split(sTable, gb.NewLine)
'   For Each sline In $ageFile
'     sCol = Split(sline, ";")
'     If sline = $ageFile[0] Then
'     Else
'       For Column = 0 To sCol.Count - 1
'         GridView1[Row - 1, Column].Text = sCol[Column]
'       Next
'     Endif
'     Row = Row + 1
'   Next
'
'   For Column = 0 To sColumns.Count - 1
'     GridView1.Columns[Column].Text = sColumns[Column]
'     ' Try GridView1.Columns.Width = CInt(Floor(Frame1.Width / sCol.Count))
'   Next
'
' End
'
' Private Function GetTableData(sColumns As String[], GridView1 As GridView) As String
'
'   Dim Row As Integer
'   Dim Column As Integer
'   Dim sCol As String[]
'   Dim sRow As String[]
'   Dim xval As String
'
'   sRow = New String[]
'   sRow.Add(sColumns.Join(";"))
'   For Row = 0 To GridView1.Count - 1
'     sCol = New String[]
'     For Column = 0 To GridView1.Columns.Count - 1
'       sCol.Add(GridView1[Row, Column].Text)
'     Next
'     sRow.Add(sCol.Join(";"))
'   Next
'   xval = sRow.Join(gb.NewLine)
'   Return xval
'
' End

Public Sub WebForm_Open()

  Dim xoption As String

  xoption = modSettings.ShowSettingFromFIle("EntrySetting/AutoDisplayOptions")
  If xoption = "Yes" Then
    chkautoption.Value = True
  Else If xoption = "No" Then
    chkautoption.Value = False
  Endif

End

''======================= For All Exams ==============
' Private Function GetItemListData()
'
'   Dim xcategory As String[]
'   Dim xx As String
'   Dim asx As String[]
'   Dim xval As String[]
'
'   xcategory = New String[]
'   xcategory.Add("Flagged")
'   xval = New String[]
'   For Each xx In $ItemList
'     If xx Then
'       asx = Split(xx, "|")
'
'       If asx[0] Then
'         If xcategory.Count = 0 Then
'           xcategory.Add(asx[0])
'         Else
'           If xcategory.Exist(asx[0]) = False Then
'             xcategory.Add(asx[0])
'           Endif
'         Endif
'       Endif
'
'     Endif
'   Next
'   cmbcategory.List = xcategory
'
' End

' Private Function GetListExams() As String[]
'
'   Dim xval As String[]
'   Dim xx As String
'   Dim asx As String[]
'
'   xval = New String[]
'   If cmbcategory.Text = "Flagged" Then
'     For Each xx In $ItemListFlag
'       If xx Then
'         asx = Split(xx, "|")
'         If xval.Count = 0 Then
'           xval.Add(asx[1])
'         Else
'           If xval.Exist(asx[1]) = False Then
'             xval.Add(asx[1])
'           Endif
'         Endif
'       Endif
'     Next
'
'   Else
'     For Each xx In $ItemList
'       If xx Then
'         asx = Split(xx, "|")
'         If asx[0] = cmbcategory.Text Then
'           If xval.Count = 0 Then
'             xval.Add(asx[1])
'           Else
'             If xval.Exist(asx[1]) = False Then
'               xval.Add(asx[1])
'             Endif
'           Endif
'         Endif
'       Endif
'     Next
'
'   Endif
'
'   Return xval
'
' End

Public Sub btnfill_Click()

  Dim j As Integer
  Dim res As Result

  For j = 0 To $sExamVar.Count - 1
    If j < 49 Then
      res = modDatabase.$myConn.Exec("select flddetail from tblexam where fldexamid=&1", $sExamVar[j]["ExamName"])
      If res.Available Then

        For Each res
          If aHTMLText[j] Then
            If Not aHTMLText[j].Text Then
              aHTMLText[j].RichText = res["flddetail"]
            Endif
          Else If aGenTextArea[j] Then
            If Not aGenTextArea[j].Text Then
              aGenTextArea[j].Text = res["flddetail"]
            Endif
          Else If aComboBox[j] Then
            If Not aComboBox[j].Text Then
              aComboBox[j].Text = res["flddetail"]
            Endif
          Else If aDichoValue[j] Then
            If Not aDichoValue[j].Value Then
              aDichoValue[j].Value = res["flddetail"]
            Endif
          Else If aLineText[j] Then
            If Not aLineText[j].Text Then
              aLineText[j].Text = res["flddetail"]
            Endif
          Endif
        Next

      Endif
    Endif
  Next

End

''-------------- icons
Public Sub btnpanexam_Click()

End

Public Sub btnexecexam_Click()

End

Public Sub btnattexam_Click()

End
