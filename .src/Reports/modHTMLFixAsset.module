' Gambas module file

''------------- Fixed Assets -----------------
Public Function FixedAssetsReport(sType As String, sText As String, sLocaType As String, sLocation As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res1 As Result
  Dim i As Integer
  Dim xfld As String
  Dim yfld As String
  Dim xList As String[]
  Dim xitem As String
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  $BillingReport = New CReportHTML([("SNo"), ("Category"), ("Ledger"), ("Particulars"), ("Code"), ("Specs"), ("Mfg"), ("Model"), ("Serial"), ("PurDate"), ("Payment"), ("QTY"), ("Rate"), ("Disc"), ("Tax"), ("Extra"), ("Total"), ("Condition"), ("Remarks")], "", "")
  $BillingReport.UserData.Add("FIXED ASSETS REPORT :" & sType, "PARAM1")
  $BillingReport.UserData.Add("DATE: " & modReportVar.GetDateTimeReport(Now(), gb.MediumDate), "PARAM2")

  If sType = "Category" Then
    xfld = "fldgroup"
    yfld = "fldcomp"
  Else If sType = "Location" Then
    xfld = "fldcomp"
    yfld = "fldgroup"
  Else If sType = "Invoice" Then
    xfld = "fldbillno"
    yfld = "fldgroup"
  Endif
  If sText = "%" Then
    xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec(Subst("select distinct(&1) as col from tblassetsentry", xfld)))
  Else
    xList = New String[]
    xList.Add(sText)
  Endif

  For Each xitem In xList
    $BillingReport.AddSection(xitem, True)

    i = 1
    res1 = modDatabase.$syConn.Exec(Subst("select fldledger,fldcode,flditemname,fldspecs,fldmanufacturer,fldmodel,fldserial,fldpurdate,fldcondition,fldqty,fldunit,flditemrate,fldditemamt,fldpayment,fldtaxamt,flddiscamt,fldexpense,fldcomment,&1 as col2 from tblassetsentry where &2", yfld, xfld) & "=&1" & RepoStr, xitem)
    If res1.Available Then
      For Each res1
        With asx
          .Add(modReportVar.GetLocaleNumberFormat(i, 0))
          .Add(res1["col2"])
          .Add(res1["fldledger"])
          .Add(res1["flditemname"])
          .Add(res1["fldcode"])
          .Add(res1["fldspecs"])
          .Add(res1["fldmanufacturer"])
          .Add(res1["fldmodel"])
          .Add(res1["fldserial"])
          .Add(modReportVar.GetDateTimeReport(res1["fldpurdate"], gb.MediumDate))
          .Add(res1["fldpayment"])
          If res1["fldqty"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldqty"], -2) & Space(1) & res1["fldunit"])
          Else
            .Add("")
          Endif
          If res1["flditemrate"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["flditemrate"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["flddiscamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["flddiscamt"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["fldtaxamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldtaxamt"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["fldexpense"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldexpense"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["fldditemamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldditemamt"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          .Add(res1["fldcondition"])
          .Add(res1["fldcomment"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
      With asx
        .Add("")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next

  Return $BillingReport.NewHTMLPath()

End

Public Function FixedAssetsReportDate(sType As String, dt1 As Date, dt2 As Date, sLocaType As String, sLocation As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res1 As Result
  Dim i As Integer
  Dim xfld As String
  Dim yfld As String
  Dim xList As String[]
  Dim xitem As String
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  $BillingReport = New CReportHTML([("SNo"), ("Category"), ("Ledger"), ("Particulars"), ("Code"), ("Specs"), ("Mfg"), ("Model"), ("Serial"), ("PurDate"), ("Payment"), ("QTY"), ("Rate"), ("Disc"), ("Tax"), ("Extra"), ("Total"), ("Condition"), ("Remarks")], "", "")
  $BillingReport.UserData.Add("FIXED ASSETS REPORT :" & sType, "PARAM1")
  $BillingReport.UserData.Add("DATE: " & modReportVar.GetDateTimeReport(Now(), gb.MediumDate), "PARAM2")

  If sType = "Category" Then
    xfld = "fldgroup"
    yfld = "fldcomp"
  Else If sType = "Location" Then
    xfld = "fldcomp"
    yfld = "fldgroup"
  Else If sType = "Invoice" Then
    xfld = "fldbillno"
    yfld = "fldgroup"
  Endif
  xList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec(Subst("select distinct(&1) as col from tblassetsentry", xfld)))

  For Each xitem In xList
    $BillingReport.AddSection(xitem, True)

    i = 1
    res1 = modDatabase.$syConn.Exec(Subst("select fldledger,fldcode,flditemname,fldspecs,fldmanufacturer,fldmodel,fldserial,fldpurdate,fldcondition,fldqty,fldunit,flditemrate,fldditemamt,fldpayment,fldtaxamt,flddiscamt,fldexpense,fldcomment,&1 as col2 from tblassetsentry where &2", yfld, xfld) & "=&1 and fldpurdate>=&2 and fldpurdate<=&3" & RepoStr, xitem, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2))
    If res1.Available Then
      For Each res1
        With asx
          .Add(modReportVar.GetLocaleNumberFormat(i, 0))
          .Add(res1["col2"])
          .Add(res1["fldledger"])
          .Add(res1["flditemname"])
          .Add(res1["fldcode"])
          .Add(res1["fldspecs"])
          .Add(res1["fldmanufacturer"])
          .Add(res1["fldmodel"])
          .Add(res1["fldserial"])
          .Add(modReportVar.GetDateTimeReport(res1["fldpurdate"], gb.MediumDate))
          .Add(res1["fldpayment"])
          If res1["fldqty"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldqty"], -2) & Space(1) & res1["fldunit"])
          Else
            .Add("")
          Endif
          If res1["flditemrate"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["flditemrate"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["flddiscamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["flddiscamt"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["fldtaxamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldtaxamt"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["fldexpense"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldexpense"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res1["fldditemamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldditemamt"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          .Add(res1["fldcondition"])
          .Add(res1["fldcomment"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
      With asx
        .Add("")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
        .Add("****")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

  Next

  Return $BillingReport.NewHTMLPath()

End
