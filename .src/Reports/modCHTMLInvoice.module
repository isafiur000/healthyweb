' Gambas module file

' Private $ProgressBar1 As ProgressBar

''--------------------------------- FAST REPORTS -------------------------------------
Public Function ShowTotalInvoicebyPatient(encid As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim RepoPath As String
  Dim sql As String
  Dim res As Result
  Dim sql1 As String
  Dim res1 As Result
  Dim xmode As String
  Dim xmodeList As String[]
  Dim ymodeList As String[]
  Dim rsx As Result
  Dim rsx1 As Result

  Dim subtotal As Float
  Dim tax As Float
  Dim disc As Float
  Dim tot As Float
  Dim crdt As Float
  Dim recv As Float
  Dim xfinal As Float

  $BillingReport = New CReportHTML([("DATE"), ("TYPE"), ("INVOICE"), ("ACCOUNT"), ("GROSS"), ("DISCOUNT"), ("TAX"), ("SUBTOTAL"), ("CREDIT"), ("CASH"), ("USER"), ("STATE"), ("REFERENCE")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("INVOICES/RECEIPTS", "PARAM1")

  xfinal = 0
  $BillingReport.AddSection("INVOICES", True)
  rsx = modDatabase.$syConn.Exec("select distinct(fldcomp) as col from tblpatbilldetail where fldencounterval=&1", encid)
  xmodeList = modControlSub.GetDirectFillresultNoNull(rsx)
  For Each xmode In xmodeList
    If sType = "Admitted" Then
      sql = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tblpatbilldetail where fldencounterval=&1 and fldcomp=&2 and fldprevdeposit=&3 ORDER BY fldtime"                                                                    '''
      res = modDatabase.$syConn.Exec(sql, encid, xmode, 2)
    Else If sType = "Discharged" Then
      sql = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tblpatbilldetail where fldencounterval=&1 and fldcomp=&2 and fldprevdeposit=&3 ORDER BY fldtime"                                                                    '''
      res = modDatabase.$syConn.Exec(sql, encid, xmode, 3)
    Else If sType = "Registered" Then
      sql = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tblpatbilldetail where fldencounterval=&1 and fldcomp=&2 and fldprevdeposit=&3 ORDER BY fldtime"                                                                    '''
      res = modDatabase.$syConn.Exec(sql, encid, xmode, 1)
    Else
      sql = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tblpatbilldetail where fldencounterval=&1 and fldcomp=&2 ORDER BY fldtime"                                                                    '''
      res = modDatabase.$syConn.Exec(sql, encid, xmode)
    Endif
    If res.Available Then
      $BillingReport.AddChapter(xmode)

      subtotal = 0
      tax = 0
      disc = 0
      tot = 0
      crdt = 0
      recv = 0
      For Each res
        subtotal = subtotal + res["flditemamt"]
        tax = tax + res["fldtaxamt"]
        disc = disc + res["flddiscountamt"]
        tot = tot + res["chrgeamt"]
        crdt = crdt + res["fldcredit"]
        recv = recv + res["recvamt"]
        With asx
          .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
          .Add(res["fldbilltype"])
          .Add(res["fldbillno"])
          .Add(res["fldbankname"])
          If res["flditemamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["flditemamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res["flddiscountamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["flddiscountamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res["fldtaxamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res["chrgeamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["chrgeamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res["fldcredit"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["fldcredit"], gb.Currency))
          Else
            .Add("")
          Endif
          If res["recvamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["recvamt"], gb.Currency))
          Else
            .Add("")
          Endif
          .Add(res["flduserid"])
          If res["fldprevdeposit"] Then
            If res["fldprevdeposit"] = 1 Then
              .Add("OP")
            Else If res["fldprevdeposit"] > 1 Then
              .Add("IP")
            Endif
          Else
            .Add("-")
          Endif
          .Add(res["fldchequeno"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
      xfinal = xfinal + recv
      With asx
        .Add("TOTAL")
        .Add("")
        .Add("")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(subtotal, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(disc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(crdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(recv, gb.Currency))
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
  Next

  ''blank line
  With asx
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  $BillingReport.AddSection("RECEIPTS", True)
  rsx1 = modDatabase.$syConn.Exec("select distinct(fldcomp) as col from tbltempbilldetail where fldencounterval=&1", encid)
  ymodeList = modControlSub.GetDirectFillresultNoNull(rsx1)
  For Each xmode In ymodeList
    If sType = "Admitted" Then
      sql1 = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tbltempbilldetail where fldencounterval=&1 and fldcomp=&2 and fldprevdeposit=&3 ORDER BY fldtime"                                                                    '''
      res1 = modDatabase.$syConn.Exec(sql1, encid, xmode, 2)
    Else If sType = "Discharged" Then
      sql1 = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tbltempbilldetail where fldencounterval=&1 and fldcomp=&2 and fldprevdeposit=&3 ORDER BY fldtime"                                                                    '''
      res1 = modDatabase.$syConn.Exec(sql1, encid, xmode, 3)
    Else If sType = "Registered" Then
      sql1 = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tbltempbilldetail where fldencounterval=&1 and fldcomp=&2 and fldprevdeposit=&3 ORDER BY fldtime"                                                                    '''
      res1 = modDatabase.$syConn.Exec(sql1, encid, xmode, 1)
    Else
      sql1 = "select fldtime,fldbillno,flditemamt,fldtaxamt,flddiscountamt,fldchargedamt as chrgeamt,(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as fldcredit,(fldreceivedamt+fldcurdeposit) as recvamt,fldbilltype,fldchequeno,fldbankname,flduserid,fldcomp,fldprevdeposit from tbltempbilldetail where fldencounterval=&1 and fldcomp=&2 ORDER BY fldtime"                                                                    '''
      res1 = modDatabase.$syConn.Exec(sql1, encid, xmode)
    Endif
    If res1.Available Then
      $BillingReport.AddChapter(xmode)

      subtotal = 0
      tax = 0
      disc = 0
      tot = 0
      crdt = 0
      recv = 0
      For Each res1
        subtotal = subtotal + res1["flditemamt"]
        tax = tax + res1["fldtaxamt"]
        disc = disc + res1["flddiscountamt"]
        tot = tot + res1["chrgeamt"]
        crdt = crdt + res1["fldcredit"]
        recv = recv + res1["recvamt"]
        With asx
          .Add(modReportVar.GetDateTimeReport(res1["fldtime"], gb.GeneralDate))
          .Add(res1["fldbilltype"])
          .Add(res1["fldbillno"])
          .Add(res1["fldbankname"])
          If res1["flditemamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["flditemamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res1["flddiscountamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["flddiscountamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res1["fldtaxamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldtaxamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res1["chrgeamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["chrgeamt"], gb.Currency))
          Else
            .Add("")
          Endif
          If res1["fldcredit"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldcredit"], gb.Currency))
          Else
            .Add("")
          Endif
          If res1["recvamt"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res1["recvamt"], gb.Currency))
          Else
            .Add("")
          Endif
          .Add(res1["flduserid"])
          If res1["fldprevdeposit"] Then
            If res1["fldprevdeposit"] = 1 Then
              .Add("OP")
            Else If res1["fldprevdeposit"] > 1 Then
              .Add("IP")
            Endif
          Else
            .Add("-")
          Endif
          .Add(res1["fldchequeno"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
      xfinal = xfinal + recv
      With asx
        .Add("TOTAL")
        .Add("")
        .Add("")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(subtotal, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(disc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(crdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(recv, gb.Currency))
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
  Next

  ''blank line
  With asx
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  ''blank line
  With asx
    .Add("CASH TOTAL")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(xfinal, gb.Currency))
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function BillDepartmentWise($con As Connection, billno As String, encid As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]
  Dim res As Result

  Dim xtot As Float
  Dim xtax As Float
  Dim xdisc As Float
  Dim xcredt As Float
  Dim xcash As Float

  Dim altot As Float
  Dim altax As Float
  Dim aldisc As Float
  Dim alcrdt As Float
  Dim alcash As Float

  Dim i As Integer
  Dim res1 As Result
  Dim extax As Float
  Dim exdisc As Float

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("GROSS"), ("DISCOUNT"), ("TAX"), ("CREDIT"), ("CASH")], "PatientReport", encid)
  $BillingReport.UserData.Add("INVOICE", "Report")
  $BillingReport.UserData.Add(billno, "PARAM1")

  altax = 0
  aldisc = 0
  alcrdt = 0
  alcash = 0
  res = $con.Exec("select " & modNonMedical.CashCreditBillSQL() & ",tblreportgroup.fldgroup as fldgroup from tblpatbilling inner join tblreportgroup on tblpatbilling.flditemname=tblreportgroup.flditemname where tblpatbilling.fldbillno=&1 GROUP BY tblreportgroup.fldgroup", billno)
  If res.Available Then
    i = 1
    For Each res

      xtot = 0
      xtax = 0
      xdisc = 0
      xcredt = 0
      xcash = 0
      If res["duemt"] Then
        xtot = res["duemt"]
      Endif
      If res["disctot"] Then
        xdisc = res["disctot"]
      Endif
      If res["taxtot"] Then
        xtax = res["taxtot"]
      Endif
      If res["xcredit"] Then
        xcredt = res["xcredit"]
      Endif
      If res["xcash"] Then
        xcash = res["xcash"]
      Endif

      altot = altot + xtot
      altax = altax + xtax
      aldisc = aldisc + xdisc
      alcrdt = alcrdt + xcredt
      alcash = alcash + xcash
      With asx
        .Add(CStr(i))
        .Add(res["fldgroup"])
        .Add(modReportVar.GetLocaleNumberFormat(xtot, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xcredt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xcash, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1

    Next
  Endif

  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("SUBTOTAL")
    .Add(modReportVar.GetLocaleNumberFormat(altot, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(aldisc, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(altax, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(alcrdt, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(alcash, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  extax = 0
  exdisc = 0
  If sType = "Invoice" Then
    res1 = $con.Exec("select fldtaxamt,flddiscountamt,flditemamt from tblpatbilldetail where fldbillno=&1", billno)
  Else If sType = "Receipt" Then
    res1 = $con.Exec("select fldtaxamt,flddiscountamt,flditemamt from tbltempbilldetail where fldbillno=&1", billno)
  Endif
  If res1.Available Then
    extax = altax - res1["fldtaxamt"]
    exdisc = aldisc - res1["flddiscountamt"]
    With asx
      .Add("")
      .Add("EXTRA")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(exdisc, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(extax, gb.Currency))
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  With asx
    .Add("")
    .Add("GRAND TOTAL")
    .Add(modReportVar.GetLocaleNumberFormat(altot + extax - exdisc, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(res1["flddiscountamt"], gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(res1["fldtaxamt"], gb.Currency))
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

'--------------------------------- SLOW REPORTS ---------------------------------------
Public Function ShowPendingExpensebyPatient($con As Connection, encid As String, sType As String, xmodeList As String[]) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim RepoVal As Float

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("RATE"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("NON-INVOICED ITEMS", "PARAM1")

  RepoVal = modSourceInvoice.GetPendingExpensebyPatient($BillingReport, $con, encid, sType, xmodeList)

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowSummaryExpensebyPatient($con As Connection, encid As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim RepoPath As String
  Dim rsx As Result
  Dim rsy As Result
  Dim i As Integer
  Dim xdoa As Date

  Dim xcreditot As Float
  Dim xcashtot As Float
  Dim xdeposit As Float
  Dim xinvpay As Float
  Dim xdueclr As Float
  Dim xcshcrdt As Float
  Dim xcashpay As Float

  $BillingReport = New CReportHTML([("SNo"), ("Particulars"), ("SubTotal"), ("Discount"), ("Tax"), ("Total")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXPENSE SUMMARY : " & UCase(sType), "PARAM1")

  xdoa = modPatient.GetAdmissionDate(encid)
  xdeposit = modNonMedical.GetPatientDeposit($con, encid)
  If sType = "Admitted" And If xdoa Then
  Else
    xcshcrdt = modNonMedical.GetCashinCreditAmtbyPatient($con, encid)
    xdueclr = modNonMedical.GetDueClearPaidAmtbyPatient($con, encid)
    xcashpay = modNonMedical.GetCashBillAmtbyPatient($con, encid)
    xinvpay = modNonMedical.InvoicePaidAmountbyPatient($con, encid)
  Endif

  ''credit
  $BillingReport.AddChapter("CREDIT EXPENSES")
  i = 1
  xcreditot = 0
  If sType = "Admitted" Then
    If xdoa Then
      rsx = $con.Exec("select flditemtype,SUM(flditemrate*flditemqty) as itemtot,SUM(flddiscamt) as dscamt,SUM(fldtaxamt) as taxamt,SUM(fldditemamt) as totamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and fldtime>=&4 GROUP BY flditemtype", encid, True, "Credit", xdoa)
    Endif
  Else
    rsx = $con.Exec("select flditemtype,SUM(flditemrate*flditemqty) as itemtot,SUM(flddiscamt) as dscamt,SUM(fldtaxamt) as taxamt,SUM(fldditemamt) as totamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 GROUP BY flditemtype", encid, True, "Credit")
  Endif
  If rsx And If rsx.Available Then
    For Each rsx
      If rsx["itemtot"] Then
        xcreditot = xcreditot + rsx["totamt"]
        With asx
          .Add(CStr(i))
          .Add(rsx["flditemtype"])
          .Add(modReportVar.GetLocaleNumberFormat(rsx["itemtot"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rsx["dscamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rsx["taxamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rsx["totamt"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Endif
    Next
  Endif
  With asx
    .Add("")
    .Add(modString.HTMLBlankSpace(5) & "TOTAL CREDIT")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(xcreditot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  $BillingReport.AddChapter("CREDIT PAYMENTS")
  ''extra cash in credit bills
  If sType = "Admitted" And If xdoa Then
  Else
    With asx
      .Add("")
      .Add("CASH IN CREDIT")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xcshcrdt, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("CREDIT CLEARED")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xdueclr, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add(modString.HTMLBlankSpace(5) & "PENDING CREDIT")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xcreditot - (xcshcrdt + xdueclr), gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  ''separator
  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  ''cash
  $BillingReport.AddChapter("CASH EXPENSES")
  i = 1
  xcashtot = 0
  If sType = "Admitted" Then
    If xdoa Then
      rsy = $con.Exec("select flditemtype,SUM(flditemrate*flditemqty) as itemtot,SUM(flddiscamt) as dscamt,SUM(fldtaxamt) as taxamt,SUM(fldditemamt) as totamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and fldtime>=&4 GROUP BY flditemtype", encid, True, "Cash", xdoa)
    Endif
  Else
    rsy = $con.Exec("select flditemtype,SUM(flditemrate*flditemqty) as itemtot,SUM(flddiscamt) as dscamt,SUM(fldtaxamt) as taxamt,SUM(fldditemamt) as totamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 GROUP BY flditemtype", encid, True, "Cash")
  Endif
  If rsy And If rsy.Available Then
    For Each rsy
      If rsy["itemtot"] Then
        xcashtot = xcashtot + rsy["totamt"]
        With asx
          .Add(CStr(i))
          .Add(rsy["flditemtype"])
          .Add(modReportVar.GetLocaleNumberFormat(rsy["itemtot"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rsy["dscamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rsy["taxamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rsy["totamt"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Endif
    Next
  Endif
  With asx
    .Add("")
    .Add(modString.HTMLBlankSpace(5) & "TOTAL CASH")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(xcashtot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  $BillingReport.AddChapter("CASH PAYMENTS")
  With asx
    .Add("")
    .Add("DEPOSITS")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(xdeposit, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  If sType = "Admitted" And If xdoa Then
  Else
    With asx
      .Add("")
      .Add("CASH PAYMENTS")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xcashpay, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add(modString.HTMLBlankSpace(5) & "CASH PENDING")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xcashtot - (xcashpay + xdeposit), gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  ''separator
  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  ''grand total payment
  $BillingReport.AddChapter("SUMMARY")
  If sType = "Admitted" Then
  Else
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("TOTAL PAYMENTS")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xdeposit + xinvpay, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowCreditSelExpensebyPatient($con As Connection, encid As String, sType As String, xmode As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]

  Dim subtot As Float
  Dim xtax As Float
  Dim xdisc As Float
  Dim tot As Float

  Dim asubtot As Float
  Dim atax As Float
  Dim adisc As Float
  Dim atot As Float

  Dim xdoa As Date
  Dim xCategList As String[]
  Dim xcateg As String
  Dim i As Integer

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("RATE"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("EXPENSE DETAIL : " & UCase(sType) & " ", "Report")
  $BillingReport.UserData.Add("CREDIT: " & xmode, "PARAM1")

  xdoa = modPatient.GetAdmissionDate(encid)
  xCategList = modControlSub.GetDirectFillresult($con.Exec("select distinct(flditemtype) as col from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flddisctype like &4", encid, True, "Credit", xmode))
  subtot = 0
  xtax = 0
  xdisc = 0
  tot = 0
  For Each xcateg In xCategList
    asubtot = 0
    atax = 0
    adisc = 0
    atot = 0
    i = 1

    If sType = "Admitted" Then
      If xdoa Then
        res = $con.Exec("select flditemname,AVG(flditemrate) as flditemrate,SUM(flditemqty) as flditemqty,SUM(flditemrate*flditemqty) as totamt,SUM(fldtaxamt) as fldtaxamt,SUM(flddiscamt) as flddiscamt,SUM(fldditemamt) as fldditemamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemtype=&4 and flddisctype like &5 and fldtime>=&6 GROUP BY flditemname", encid, True, "Credit", xcateg, xmode, xdoa)
      Endif
    Else
      res = $con.Exec("select flditemname,AVG(flditemrate) as flditemrate,SUM(flditemqty) as flditemqty,SUM(flditemrate*flditemqty) as totamt,SUM(fldtaxamt) as fldtaxamt,SUM(flddiscamt) as flddiscamt,SUM(fldditemamt) as fldditemamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemtype=&4 and flddisctype like &5 GROUP BY flditemname", encid, True, "Credit", xcateg, xmode)
    Endif
    If res And If res.Available Then
      $BillingReport.AddChapter(xcateg)
      For Each res
        If res["totamt"] Then
          asubtot = asubtot + res["totamt"]
        Endif
        If res["fldtaxamt"] Then
          atax = atax + res["fldtaxamt"]
        Endif
        If res["flddiscamt"] Then
          adisc = adisc + res["flddiscamt"]
        Endif
        If res["fldditemamt"] Then
          atot = atot + res["fldditemamt"]
        Endif
        With asx
          .Add(CStr(i))
          .Add(res["flditemname"])
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["flddiscamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next 'ends res
    Endif

    subtot = subtot + asubtot
    xtax = xtax + atax
    xdisc = xdisc + adisc
    tot = tot + atot
    With asx
      .Add("")
      .Add(modString.HTMLBlankSpace(5) & "SUBTOTAL")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(adisc, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(atax, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(atot, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  With asx
    .Add("")
    .Add("SUBTOTAL")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(subtot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("DISCOUNT")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("TOTAL TAX")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("NETTOTAL")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowCreditSelExpensebyPatientDetail($con As Connection, encid As String, sType As String, xmode As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]

  Dim subtot As Float
  Dim xtax As Float
  Dim xdisc As Float
  Dim tot As Float

  Dim asubtot As Float
  Dim atax As Float
  Dim adisc As Float
  Dim atot As Float

  Dim xdoa As Date
  Dim xCategList As String[]
  Dim xcateg As String
  Dim i As Integer

  $BillingReport = New CReportHTML([("SNO"), ("DATE"), ("PARTICULARS"), ("RATE"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("EXPENSE DETAIL : " & UCase(sType) & " ", "Report")
  $BillingReport.UserData.Add("CREDIT: " & xmode, "PARAM1")

  xdoa = modPatient.GetAdmissionDate(encid)
  xCategList = modControlSub.GetDirectFillresult($con.Exec("select distinct(flditemtype) as col from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flddisctype like &4", encid, True, "Credit", xmode))

  subtot = 0
  xtax = 0
  xdisc = 0
  tot = 0
  For Each xcateg In xCategList
    asubtot = 0
    atax = 0
    adisc = 0
    atot = 0
    i = 1

    If sType = "Admitted" Then
      If xdoa Then
        res = $con.Exec("select flditemname,flditemrate,flditemqty,(flditemrate*flditemqty) as totamt,fldtaxamt,flddiscamt,fldditemamt,fldtime from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemtype=&4 and flddisctype like &5 and fldtime>=&6", encid, True, "Credit", xcateg, xmode, xdoa)
      Endif
    Else
      res = $con.Exec("select flditemname,flditemrate,flditemqty,(flditemrate*flditemqty) as totamt,fldtaxamt,flddiscamt,fldditemamt,fldtime from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemtype=&4 and flddisctype like &5", encid, True, "Credit", xcateg, xmode)
    Endif
    If res And If res.Available Then
      $BillingReport.AddChapter(xcateg)
      For Each res
        If res["totamt"] Then
          asubtot = asubtot + res["totamt"]
        Endif
        If res["fldtaxamt"] Then
          atax = atax + res["fldtaxamt"]
        Endif
        If res["flddiscamt"] Then
          adisc = adisc + res["flddiscamt"]
        Endif
        If res["fldditemamt"] Then
          atot = atot + res["fldditemamt"]
        Endif
        With asx
          .Add(CStr(i))
          .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.MediumDate))
          .Add(res["flditemname"])
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["flddiscamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next 'ends res
    Endif

    subtot = subtot + asubtot
    xtax = xtax + atax
    xdisc = xdisc + adisc
    tot = tot + atot
    With asx
      .Add("")
      .Add("")
      .Add(modString.HTMLBlankSpace(5) & "SUBTOTAL")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(adisc, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(atax, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(atot, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  With asx
    .Add("")
    .Add("")
    .Add("SUBTOTAL")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(subtot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("")
    .Add("DISCOUNT")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("")
    .Add("TOTAL TAX")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("")
    .Add("NETTOTAL")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add("...")
    .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowTotalExpensebyPatient($con As Connection, encid As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim RepoVal As Float

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("RATE"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXPENSE DETAIL : " & UCase(sType), "PARAM1")

  RepoVal = modSourceInvoice.GetTotalExpensebyPatient($BillingReport, $con, encid, sType)
  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowTotalGroupbyPatient($con As Connection, encid As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]
  Dim tot As Float
  Dim xdisc As Float
  Dim xtax As Float
  Dim atot As Float
  Dim adisc As Float
  Dim atax As Float

  Dim xmode As String
  Dim xmodeList As String[] = ["Credit", "Cash"]
  Dim xdoa As Date
  Dim xCategList As String[]
  Dim xcateg As String
  Dim i As Integer

  Dim xdueclr As Float
  Dim xcshcrdt As Float
  Dim xdeposit As Float
  Dim xcashtot As Float
  Dim xinvpay As Float

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXPENSE DETAIL : " & UCase(sType), "PARAM1")

  xdoa = modPatient.GetAdmissionDate(encid)
  xdeposit = modNonMedical.GetPatientDeposit($con, encid)
  If sType = "Admitted" And If xdoa Then
  Else
    xcshcrdt = modNonMedical.GetCashinCreditAmtbyPatient($con, encid)
    xdueclr = modNonMedical.GetDueClearPaidAmtbyPatient($con, encid)
    xcashtot = modNonMedical.GetCashBillAmtbyPatient($con, encid)
    xinvpay = modNonMedical.InvoicePaidAmountbyPatient($con, encid)
  Endif

  For Each xmode In xmodeList
    $BillingReport.AddSection(xmode, True)

    xCategList = modControlSub.GetDirectFillresult($con.Exec("select distinct(fldgroup) as col from tblreportgroup where flditemname in(select flditemname from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3)", encid, True, xmode))
    i = 1
    xdisc = 0
    xtax = 0
    tot = 0
    For Each xcateg In xCategList
      adisc = 0
      atax = 0
      atot = 0
      If sType = "Admitted" Then
        If xdoa Then
          res = $con.Exec("select AVG(flditemrate) as flditemrate,SUM(flditemqty) as flditemqty,SUM(fldtaxamt) as fldtaxamt,SUM(flddiscamt) as flddiscamt,SUM(fldditemamt) as fldditemamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemname in(select flditemname from tblreportgroup where fldgroup=&4) and fldtime>=&5", encid, True, xmode, xcateg, xdoa)
        Endif
      Else
        res = $con.Exec("select AVG(flditemrate) as flditemrate,SUM(flditemqty) as flditemqty,SUM(fldtaxamt) as fldtaxamt,SUM(flddiscamt) as flddiscamt,SUM(fldditemamt) as fldditemamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemname in(select flditemname from tblreportgroup where fldgroup=&4)", encid, True, xmode, xcateg)
      Endif
      If res And If res.Available Then
        If res["flddiscamt"] Then
          adisc = adisc + res["flddiscamt"]
        Endif
        If res["fldtaxamt"] Then
          atax = atax + res["fldtaxamt"]
        Endif
        If res["fldditemamt"] Then
          atot = atot + res["fldditemamt"]
        Endif

        xdisc = xdisc + adisc
        xtax = xtax + atax
        tot = tot + atot
        With asx
          .Add(CStr(i))
          .Add(xcateg)
          .Add(modReportVar.GetLocaleNumberFormat(adisc, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(atax, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(atot, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Endif
    Next

    With asx
      .Add("")
      .Add("TOTAL " & UCase(xmode))
      .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    ''for admitted/complete
    If xmode = "Cash" Then
      With asx
        .Add("")
        .Add("DEPOSITS")
        .Add("")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(xdeposit, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''for complete only
    If sType = "Admitted" And If xdoa Then
    Else
      If xmode = "Credit" Then
        With asx
          .Add("")
          .Add("CASH IN CREDIT")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcshcrdt, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CREDIT CLEARED")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdueclr, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("PENDING CREDIT")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(tot - (xcshcrdt + xdueclr), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()

      Else If xmode = "Cash" Then
        With asx
          .Add("")
          .Add("CASH PAYMENTS")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcashtot, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CASH PENDING")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(tot - (xcashtot + xdeposit), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
    Endif

    With asx
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  If sType = "Admitted" And If xdoa Then
  Else
    ''grand summary
    With asx
      .Add("")
      .Add("TOTAL PAYMENTS")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xdeposit + xinvpay, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowExtraExpensePatient($con As Connection, encid As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]
  Dim tot As Float

  Dim res4 As Result
  Dim res5 As Result

  Dim beditem As String
  Dim unitrate As String
  Dim xhr As Float
  Dim xrate As Float
  Dim xdscamt As Float
  Dim xtaxamt As Float
  Dim xtotamt As Float

  $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXTRA EXPENSE", "PARAM1")

  tot = 0
  $BillingReport.AddChapter("BED CHARGES")
  res4 = $con.Exec("select fldid,flditem,flddisctype,fldfirsttime,fldfirstreport from tblpattiming where fldencounterval=&1 and fldtype=&2 and fldfirstsave=&3 and fldsecondsave=&4 and fldfirstreport=&5", encid, "General Services", True, False, "Bed")
  If res4.Available Then
    res4.MoveFirst
    unitrate = ""
    xhr = 0
    xrate = 0
    xdscamt = 0
    xtaxamt = 0
    xtotamt = 0

    beditem = modNonMedical.GetIPDepartChargeRate(res4["flditem"], res4["flddisctype"])
    unitrate = modNonMedical.GetBillingTargeDept(beditem, "General Services")
    xhr = modPatPatho.GetBedChargeDurationSetting(unitrate, res4["fldfirsttime"], Now(), True)
    xrate = modNonMedical.GetCashBillItemCost(beditem, "General Services")
    xdscamt = modNonMedical.DiscPercentForCategoryValue(encid, res4["flddisctype"], "General Services", beditem, modNonMedical.GetDiscBindBillMode(res4["flddisctype"]))
    xtaxamt = modNonMedical.ShowTaxValues("General Services", beditem)
    xtotamt = (xrate * xhr) * (1 - xdscamt / 100) * (1 + xtaxamt / 100)
    tot = tot + xtotamt
    With asx
      .Add(modReportVar.GetDateTimeReport(res4["fldfirsttime"], gb.GeneralDate))
      .Add(beditem)
      .Add(modReportVar.GetLocaleNumberFormat(xrate, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xdscamt, -2))
      .Add(modReportVar.GetLocaleNumberFormat(xtaxamt, -2))
      .Add(modReportVar.GetLocaleNumberFormat(xhr, -2))
      .Add(modReportVar.GetLocaleNumberFormat(xtotamt, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  $BillingReport.AddChapter("EQUIPMENTS")
  res5 = $con.Exec("select fldid,flditem,flddisctype,fldfirsttime from tblpattiming where fldencounterval=&1 and fldtype=&2 and fldfirstsave=&3 and fldsecondsave=&4", encid, "Equipment", True, False)
  If res5.Available Then
    For Each res5
      unitrate = ""
      xhr = 0
      xrate = 0
      xdscamt = 0
      xtaxamt = 0
      xtotamt = 0

      unitrate = modNonMedical.GetBillingTargeDept(res5["flditem"], "Equipment")
      xhr = modPatPatho.GetEquipmentDurationSetting(unitrate, res5["fldfirsttime"], Now(), True)
      xrate = modNonMedical.GetCashBillItemCost(res5["flditem"], "Equipment")
      xdscamt = modNonMedical.DiscPercentForCategoryValue(encid, res5["flddisctype"], "Equipment", res5["flditem"], modNonMedical.GetDiscBindBillMode(res5["flddisctype"]))
      xtaxamt = modNonMedical.ShowTaxValues("Equipment", res5["flditem"])
      xtotamt = (xrate * xhr) * (1 - xdscamt / 100) * (1 + xtaxamt / 100)
      tot = tot + xtotamt
      With asx
        .Add(modReportVar.GetDateTimeReport(res5["fldfirsttime"], gb.GeneralDate))
        .Add(res5["flditem"])
        .Add(modReportVar.GetLocaleNumberFormat(xrate, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xdscamt, -2))
        .Add(modReportVar.GetLocaleNumberFormat(xtaxamt, -2))
        .Add(modReportVar.GetLocaleNumberFormat(xhr, -2))
        .Add(modReportVar.GetLocaleNumberFormat(xtotamt, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  With asx
    .Add("")
    .Add("TOTAL")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowTotalExpenseDatebyPatient($con As Connection, encid As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim rs As Result
  Dim res As Result
  Dim asx As New String[0]
  Dim tot As Float
  Dim xx As Float
  Dim xsub As Float
  Dim dtval As Date[]
  Dim xdt As Date
  Dim res1 As Result
  Dim xsub1 As Float
  Dim xx1 As Float
  Dim xpaymnt As Float
  Dim xinvpay As Float
  Dim xdeposit As Float

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  $BillingReport = New CReportHTML([("Date"), ("Particulars"), ("Rate"), ("Disc%"), ("Tax%"), ("QTY"), ("Total"), ("Invoice")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXPENSE", "PARAM1")

  rs = $con.Exec("select fldtime from tblpatbilling where fldencounterval=&1 and fldsave=&2", encid, True)
  If rs.Available Then
    dtval = New Date[]
    For Each rs
      If dtval.Count = 0 Then
        dtval.Add(modDate.StartSqlDate(rs["fldtime"]))
      Else
        If dtval.Exist(modDate.StartSqlDate(rs["fldtime"])) = False Then
          dtval.Add(modDate.StartSqlDate(rs["fldtime"]))
        Endif
      Endif
    Next

    tot = 0
    For Each xdt In dtval
      ''Billing
      res = $con.Exec("select fldditemamt as tot,fldtime,flditemtype,flditemname,flditemrate,fldtaxper,flddiscper,flditemqty,fldstatus,fldbillno from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldtime>=&3 and fldtime<=&4 and flditemqty>&5", encid, True, modDate.StartSqlDate(xdt), modDate.EndSqlDate(xdt), 0)
      xx = 0
      If res.Available Then
        $BillingReport.AddSection(modReportVar.GetDateTimeReport(xdt, gb.MediumDate) & " BILLING", True)
        For Each res
          xsub = 0
          If res.Available = True Then
            If res["tot"] Then
              xsub = res["tot"]
            Endif
          Endif
          xx = xx + xsub
          With asx
            .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.MediumTime))
            .Add(res["flditemname"])
            .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(res["flddiscper"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxper"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(xsub, gb.Currency))
            .Add(res["fldbillno"])
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Next 'ends res

        tot = tot + xx
        With asx
          .Add("SubTotal")
          .Add(modReportVar.GetDateTimeReport(xdt, gb.MediumDate) & " BILLING")
          .Add("..")
          .Add("..")
          .Add("..")
          .Add("..")
          .Add(modReportVar.GetLocaleNumberFormat(xx, gb.Currency))
          .Add("..")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''Return
      res1 = $con.Exec("select fldditemamt as tot,fldtime,flditemtype,flditemname,flditemrate,fldtaxper,flddiscper,flditemqty,fldstatus,fldbillno from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldtime>=&3 and fldtime<=&4 and flditemqty<&5", encid, True, modDate.StartSqlDate(xdt), modDate.EndSqlDate(xdt), 0)
      xx1 = 0
      If res1.Available Then
        $BillingReport.AddSection(modReportVar.GetDateTimeReport(xdt, gb.MediumDate) & "RETURN", True)
        For Each res1
          xsub1 = 0
          If res1.Available = True Then
            If res1["tot"] Then
              xsub1 = res1["tot"]
            Endif
          Endif
          xx1 = xx1 + xsub1
          With asx
            .Add(modReportVar.GetDateTimeReport(res1["fldtime"], gb.MediumTime))
            .Add(res1["flditemname"])
            .Add(modReportVar.GetLocaleNumberFormat(res1["flditemrate"], gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(res1["flddiscper"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(res1["fldtaxper"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(res1["flditemqty"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(xsub1, gb.Currency))
            .Add(res1["fldbillno"])
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Next 'ends res1

        tot = tot + xx1
        With asx
          .Add("SubTotal")
          .Add(modReportVar.GetDateTimeReport(xdt, gb.MediumDate) & "RETURN")
          .Add("..")
          .Add("..")
          .Add("..")
          .Add("..")
          .Add(modReportVar.GetLocaleNumberFormat(xx1, gb.Currency))
          .Add("..")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ' If MMain.$IsGUIApp = True Then
      '   $ProgressBar1.Value = (rs.Index + 1) / rs.Count
      '   Wait
      ' Endif
    Next 'ends rs
  Endif

  With asx
    .Add("Grand Total")
    .Add("ALL EXPENSES")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  '''--------------payments
  xdeposit = modNonMedical.GetPatientDeposit($con, encid)
  xinvpay = modNonMedical.InvoicePaidAmountbyPatient($con, encid)
  xpaymnt = xdeposit + xinvpay
  $BillingReport.AddSection("PAYMENTS", True)
  With asx
    .Add("")
    .Add("DEPOSITS")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add(modReportVar.GetLocaleNumberFormat(xdeposit, gb.Currency))
    .Add("..")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("INVOICE PAYMENTS")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add("..")
    .Add(modReportVar.GetLocaleNumberFormat(xinvpay, gb.Currency))
    .Add("..")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  With asx
    .Add("Grand Total")
    .Add("ALL PAYMENTS")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add(modReportVar.GetLocaleNumberFormat(xpaymnt, gb.Currency))
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  ' ''-----------curr surplus
  ' With asx
  '   .Add("***")
  '   .Add("SURPLUS AMOUNT")
  '   .Add("***")
  '   .Add("***")
  '   .Add("***")
  '   .Add("***")
  '   .Add(modReportVar.GetLocaleNumberFormat(xpaymnt - tot, gb.Currency))
  '   .Add("***")
  ' End With
  ' $BillingReport.Add(asx)
  ' asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowSummExpenseAllEncPatient($con As Connection, encounter As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]
  Dim tot As Float
  Dim xdisc As Float
  Dim xtax As Float

  Dim xmode As String
  Dim xmodeList As String[] = ["Credit", "Cash"]
  Dim i As Integer

  Dim xdueclr As Float
  Dim xcshcrdt As Float
  Dim xdeposit As Float
  Dim xcashtot As Float
  Dim xinvpay As Float

  Dim encid As String
  Dim encList As String[]
  Dim e As Integer

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encounter)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXPENSE", "PARAM1")

  e = 0
  encList = modPatient.GetEncListFromEncSetting(encounter, $con)
  For Each encid In encList
    $BillingReport.AddSection(encid & " (" & modReportVar.GetDateTimeReport(modPatient.GetRecordDate(encid), gb.MediumDate) & ")", True)

    xdeposit = modNonMedical.GetPatientDeposit($con, encid)
    xcshcrdt = modNonMedical.GetCashinCreditAmtbyPatient($con, encid)
    xdueclr = modNonMedical.GetDueClearPaidAmtbyPatient($con, encid)
    xcashtot = modNonMedical.GetCashBillAmtbyPatient($con, encid)
    xinvpay = modNonMedical.InvoicePaidAmountbyPatient($con, encid)
    For Each xmode In xmodeList
      $BillingReport.AddChapter(UCase(xmode) & " EXPENSES")

      i = 1
      xdisc = 0
      xtax = 0
      tot = 0
      res = $con.Exec("select fldacledger,SUM(flditemqty) as flditemqty,SUM(fldtaxamt) as fldtaxamt,SUM(flddiscamt) as flddiscamt,SUM(fldditemamt) as fldditemamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 GROUP BY fldacledger", encid, True, xmode)
      If res.Available Then
        For Each res
          If res["flddiscamt"] Then
            xdisc = xdisc + res["flddiscamt"]
          Endif
          If res["fldtaxamt"] Then
            xtax = xtax + res["fldtaxamt"]
          Endif
          If res["fldditemamt"] Then
            tot = tot + res["fldditemamt"]
          Endif
          With asx
            .Add(CStr(i))
            .Add(res["fldacledger"])
            .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
            .Add(modReportVar.GetLocaleNumberFormat(res["flddiscamt"], gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
          End With
          $BillingReport.Add(asx)
          asx.Clear()
          i = i + 1
        Next 'ends res
      Endif
      With asx
        .Add("")
        .Add("TOTAL " & UCase(xmode) & " EXPENSES")
        .Add("...")
        .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      $BillingReport.AddChapter(UCase(xmode) & " PAYMENTS")
      If xmode = "Credit" Then
        With asx
          .Add("")
          .Add("CASH IN CREDIT")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcshcrdt, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CREDIT CLEARED")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdueclr, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("PENDING CREDIT")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(tot - (xcshcrdt + xdueclr), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()

      Else If xmode = "Cash" Then
        With asx
          .Add("")
          .Add("DEPOSITS")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdeposit, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CASH PAYMENTS")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcashtot, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CASH PENDING")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(tot - (xcashtot + xdeposit), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      With asx
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next

    $BillingReport.AddChapter("SUMMARY")
    ''grand summary
    With asx
      .Add("")
      .Add("TOTAL PAYMENTS")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xdeposit + xinvpay, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    ' If MMain.$IsGUIApp = True Then
    '   $ProgressBar1.Value = (e + 1) / encList.Count
    '   Wait
    ' Endif
  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowTotalExpenseAllEncPatient($con As Connection, encounter As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]
  Dim tot As Float
  Dim xdisc As Float
  Dim xtax As Float
  Dim atot As Float
  Dim adisc As Float
  Dim atax As Float

  Dim xmode As String
  Dim xmodeList As String[] = ["Credit", "Cash"]
  Dim xdoa As Date
  Dim xCategList As String[]
  Dim xcateg As String
  Dim i As Integer

  Dim xdueclr As Float
  Dim xcshcrdt As Float
  Dim xdeposit As Float
  Dim xcashtot As Float
  Dim xinvpay As Float

  Dim encid As String
  Dim encList As String[]
  Dim e As Integer

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("RATE"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encounter)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("EXPENSE", "PARAM1")

  e = 0
  encList = modPatient.GetEncListFromEncSetting(encounter, $con)
  For Each encid In encList
    $BillingReport.AddSection(encid & " (" & modReportVar.GetDateTimeReport(modPatient.GetRecordDate(encid), gb.MediumDate) & ")", True)

    xdoa = modPatient.GetAdmissionDate(encid)
    xdeposit = modNonMedical.GetPatientDeposit($con, encid)
    xcshcrdt = modNonMedical.GetCashinCreditAmtbyPatient($con, encid)
    xdueclr = modNonMedical.GetDueClearPaidAmtbyPatient($con, encid)
    xcashtot = modNonMedical.GetCashBillAmtbyPatient($con, encid)
    xinvpay = modNonMedical.InvoicePaidAmountbyPatient($con, encid)
    For Each xmode In xmodeList
      $BillingReport.AddChapter(UCase(xmode) & " EXPENSES")
      xCategList = modControlSub.GetDirectFillresult($con.Exec("select distinct(flditemtype) as col from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3", encid, True, xmode))
      i = 1
      xdisc = 0
      xtax = 0
      tot = 0
      For Each xcateg In xCategList
        adisc = 0
        atax = 0
        atot = 0

        res = $con.Exec("select flditemname,AVG(flditemrate) as flditemrate,SUM(flditemqty) as flditemqty,SUM(fldtaxamt) as fldtaxamt,SUM(flddiscamt) as flddiscamt,SUM(fldditemamt) as fldditemamt from tblpatbilling where fldencounterval=&1 and fldsave=&2 and fldbilltype=&3 and flditemtype=&4 GROUP BY flditemname", encid, True, xmode, xcateg)
        If res.Available Then
          $BillingReport.AddChapter(xcateg)
          For Each res
            If res["flddiscamt"] Then
              adisc = adisc + res["flddiscamt"]
            Endif
            If res["fldtaxamt"] Then
              atax = atax + res["fldtaxamt"]
            Endif
            If res["fldditemamt"] Then
              atot = atot + res["fldditemamt"]
            Endif
            With asx
              .Add(CStr(i))
              .Add(res["flditemname"])
              .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
              .Add(modReportVar.GetLocaleNumberFormat(res["flddiscamt"], gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
            End With
            $BillingReport.Add(asx)
            asx.Clear()
            i = i + 1
          Next 'ends res

          xdisc = xdisc + adisc
          xtax = xtax + atax
          tot = tot + atot
          With asx
            .Add("")
            .Add(modString.HTMLBlankSpace(5) & "SUBTOTAL")
            .Add("")
            .Add("")
            .Add(modReportVar.GetLocaleNumberFormat(adisc, gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(atax, gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(atot, gb.Currency))
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Endif
      Next
      With asx
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      With asx
        .Add("")
        .Add("TOTAL " & UCase(xmode) & " EXPENSES")
        .Add("...")
        .Add("...")
        .Add(modReportVar.GetLocaleNumberFormat(xdisc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      $BillingReport.AddChapter(UCase(xmode) & " PAYMENTS")
      If xmode = "Credit" Then
        With asx
          .Add("")
          .Add("CASH IN CREDIT")
          .Add("")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcshcrdt, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CREDIT CLEARED")
          .Add("")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdueclr, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("PENDING CREDIT")
          .Add("")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(tot - (xcshcrdt + xdueclr), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()

      Else If xmode = "Cash" Then
        With asx
          .Add("")
          .Add("DEPOSITS")
          .Add("")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xdeposit, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CASH PAYMENTS")
          .Add("")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcashtot, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("CASH PENDING")
          .Add("")
          .Add("")
          .Add("")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(tot - (xcashtot + xdeposit), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      With asx
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next

    $BillingReport.AddChapter("SUMMARY")
    ''grand summary
    With asx
      .Add("")
      .Add("TOTAL PAYMENTS")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xdeposit + xinvpay, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    ' If MMain.$IsGUIApp = True Then
    '   $ProgressBar1.Value = (e + 1) / encList.Count
    '   Wait
    ' Endif

  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowItemDispensedByPatient($con As Connection, encid As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]
  Dim totamt As Float
  Dim totcrdt As Float
  Dim totcash As Float
  Dim xmode As String
  Dim xmodeList As String[] = ["Credit", "Cash"]

  If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
    $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("BATCH"), ("EXPIRY"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL"), ("CREDIT"), ("CASH"), ("INVOICE"), ("SCHEME")], "PatientReport", encid)
  Else
    $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL"), ("CREDIT"), ("CASH"), ("INVOICE"), ("SCHEME")], "PatientReport", encid)
  Endif
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add(sType, "PARAM1")

  For Each xmode In xmodeList
    $BillingReport.AddChapter(UCase(xmode))
    res = $con.Exec("select fldid,fldtime,fldcomp,flditemname,flditemno,flditemrate,fldtaxper,flddiscper,flditemqty,fldditemamt,flduserid,fldstatus,fldbillno,flddisctype," & modNonMedical.CashCreditRow() & " from tblpatbilling where fldencounterval=&1 and fldsave=&2 and flditemtype=&3 and fldbilltype=&4 ORDER BY fldtime", encid, True, sType, xmode)                                                                                        ''
    totamt = 0
    totcrdt = 0
    totcash = 0
    If res And If res.Available Then
      For Each res
        totamt = totamt + res["fldditemamt"]
        If res["xcredit"] Then
          totcrdt = totcrdt + res["xcredit"]
        Endif
        If res["xcash"] Then
          totcash = totcash + res["xcash"]
        Endif
        With asx
          .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
          .Add(res["flditemname"])
          If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
            .Add(modStock.GetBatchFromStockNo(res["flditemno"]))
            .Add(modReportVar.GetDateTimeReport(modStock.GetExpiryFromStockNo(res["flditemno"]), gb.MediumDate))
          Endif
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["flddiscper"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxper"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
          If res["xcredit"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["xcredit"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res["xcash"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["xcash"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          .Add(res["fldbillno"])
          .Add(res["flddisctype"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
    Endif

    With asx
      .Add("...")
      .Add("TOTAL " & UCase(xmode))
      If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
        .Add("...")
        .Add("...")
      Endif
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add(modReportVar.GetLocaleNumberFormat(totamt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(totcrdt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(totcash, gb.Currency))
      .Add("...")
      .Add("...")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowItemDispensedByPatientAllEnc($con As Connection, encounter As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]
  Dim totamt As Float
  Dim totcrdt As Float
  Dim totcash As Float

  Dim encid As String
  Dim encList As String[]

  If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
    $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("BATCH"), ("EXPIRY"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL"), ("CREDIT"), ("CASH"), ("INVOICE"), ("SCHEME")], "PatientReport", encounter)
  Else
    $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL"), ("CREDIT"), ("CASH"), ("INVOICE"), ("SCHEME")], "PatientReport", encounter)
  Endif
  $BillingReport.UserData.Add(sType, "Report")
  $BillingReport.UserData.Add("DISPENSED", "PARAM1")

  encList = modPatient.GetEncListFromEncSetting(encounter, $con)
  For Each encid In encList
    $BillingReport.AddSection(encid & " (" & modReportVar.GetDateTimeReport(modPatient.GetRecordDate(encid), gb.MediumDate) & ")", True)

    res = $con.Exec("select fldid,fldtime,fldcomp,flditemname,flditemno,flditemrate,fldtaxper,flddiscper,flditemqty,fldditemamt,flduserid,fldstatus,fldbillno,flddisctype," & modNonMedical.CashCreditRow() & " from tblpatbilling where fldencounterval=&1 and fldsave=&2 and flditemtype=&3 ORDER BY fldtime", encid, True, sType)                                                                                        ''
    totamt = 0
    totcrdt = 0
    totcash = 0
    If res And If res.Available Then
      For Each res
        totamt = totamt + res["fldditemamt"]
        If res["xcredit"] Then
          totcrdt = totcrdt + res["xcredit"]
        Endif
        If res["xcash"] Then
          totcash = totcash + res["xcash"]
        Endif

        With asx
          .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
          .Add(res["flditemname"])
          If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
            .Add(modStock.GetBatchFromStockNo(res["flditemno"]))
            .Add(modReportVar.GetDateTimeReport(modStock.GetExpiryFromStockNo(res["flditemno"]), gb.MediumDate))
          Endif
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["flddiscper"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxper"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
          If res["xcredit"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["xcredit"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res["xcash"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["xcash"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          .Add(res["fldbillno"])
          .Add(res["flddisctype"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
    Endif

    With asx
      .Add("...")
      .Add("...")
      If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
        .Add("...")
        .Add("...")
      Endif
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add(modReportVar.GetLocaleNumberFormat(totamt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(totcrdt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(totcash, gb.Currency))
      .Add("...")
      .Add("...")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function ShowItemDispensedByPatCodeAllEnc($con As Connection, patcode As String, sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim res As Result
  Dim asx As New String[0]
  Dim totamt As Float
  Dim totcrdt As Float
  Dim totcash As Float

  Dim encounter As String
  Dim encid As String
  Dim encList As String[]

  encounter = modPatient.GetLastEncoutnerFromPatCode(patcode)
  If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
    $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("BATCH"), ("EXPIRY"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL"), ("CREDIT"), ("CASH"), ("INVOICE"), ("SCHEME")], "PatientReport", encounter)
  Else
    $BillingReport = New CReportHTML([("DATE"), ("PARTICULARS"), ("RATE"), ("DISC%"), ("TAX%"), ("QTY"), ("TOTAL"), ("CREDIT"), ("CASH"), ("INVOICE"), ("SCHEME")], "PatientReport", encounter)
  Endif
  $BillingReport.UserData.Add(sType, "Report")
  $BillingReport.UserData.Add(patcode, "PARAM1")

  encList = modPatient.GetEncListFromPatCode(patcode)
  For Each encid In encList
    $BillingReport.AddChapter("Encounter : " & encid & modString.HTMLBlankSpace(3) & modPatient.GetPatientNameByEnc(encid))
    res = $con.Exec("select fldid,fldtime,fldcomp,flditemname,flditemno,flditemrate,fldtaxper,flddiscper,flditemqty,fldditemamt,flduserid,fldstatus,fldbillno,flddisctype," & modNonMedical.CashCreditRow() & " from tblpatbilling where fldencounterval=&1 and fldsave=&2 and flditemtype=&3 ORDER BY fldtime", encid, True, sType)                                                                                        ''
    totamt = 0
    totcrdt = 0
    totcash = 0
    If res And If res.Available Then
      For Each res
        totamt = totamt + res["fldditemamt"]
        If res["xcredit"] Then
          totcrdt = totcrdt + res["xcredit"]
        Endif
        If res["xcash"] Then
          totcash = totcash + res["xcash"]
        Endif
        With asx
          .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
          .Add(res["flditemname"])
          If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
            .Add(modStock.GetBatchFromStockNo(res["flditemno"]))
            .Add(modReportVar.GetDateTimeReport(modStock.GetExpiryFromStockNo(res["flditemno"]), gb.MediumDate))
          Endif
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemrate"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["flddiscper"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxper"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["flditemqty"], -2))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldditemamt"], gb.Currency))
          If res["xcredit"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["xcredit"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          If res["xcash"] Then
            .Add(modReportVar.GetLocaleNumberFormat(res["xcash"], gb.Currency))
          Else
            .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
          Endif
          .Add(res["fldbillno"])
          .Add(res["flddisctype"])
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
    Endif

    With asx
      .Add("...")
      .Add("...")
      If sType = "Medicines" Or If sType = "Surgicals" Or If sType = "Extra Items" Then
        .Add("...")
        .Add("...")
      Endif
      .Add("...")
      .Add("...")
      .Add("...")
      .Add("...")
      .Add(modReportVar.GetLocaleNumberFormat(totamt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(totcrdt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(totcash, gb.Currency))
      .Add("...")
      .Add("...")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

''======================== User Collection Report ========================================
Public Function GetSummaryInvoiceContentBetweenUser($con As Connection, bill1 As String, bill2 As String, recp1 As String, recp2 As String, sUserLst As String[], sComp As String, $tblpatbilling As String, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]
  Dim sUser As String
  Dim bilid1 As Long
  Dim bilid2 As Long
  Dim recpid1 As Long
  Dim recpid2 As Long

  Dim rex As Result
  Dim rex1 As Result
  Dim rex2 As Result
  Dim i As Integer
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result
  Dim j As Integer

  Dim num As Integer
  Dim tax As Float
  Dim dsc As Float
  Dim tot As Float

  Dim xnum As Integer
  Dim xtax As Float
  Dim xdsc As Float
  Dim xtot As Float

  Dim anum As Float
  Dim atax As Float
  Dim adisc As Float
  Dim atot As Float

  Dim xBillTypList As String[] = ["Credit", "Cash"]
  Dim xbillType As String

  bilid1 = modNonMedical.GetBillIDFromBillNo(bill1, $tblpatbilldetail)
  bilid2 = modNonMedical.GetBillIDFromBillNo(bill2, $tblpatbilldetail)
  recpid1 = modNonMedical.GetBillIDFromReceipt(recp1, $tbltempbilldetail)
  recpid2 = modNonMedical.GetBillIDFromReceipt(recp2, $tbltempbilldetail)

  $BillingReport = New CReportHTML([("SNo"), ("Particulars"), ("Count"), ("Discount"), ("Tax"), ("Total")], "", "")
  $BillingReport.UserData.Add("LOCATION : " & sComp, "PARAM1")
  $BillingReport.UserData.Add("INVOICE: " & GetInvoiceTwoRange($con, $tblpatbilldetail, bilid1, bilid2) & "<br>" & "RECEIPT: " & GetInvoiceTwoRange($con, $tbltempbilldetail, recpid1, recpid2), "PARAM2")

  For Each sUser In sUserLst
    $BillingReport.AddSection(sUser & " [" & UCase(modGeneral.GetUserFullName(sUser)) & "]", True)

    For Each xbillType In xBillTypList

      num = 0
      tax = 0
      dsc = 0
      tot = 0
      If bilid1 And If bilid2 Then
        rex = $con.Exec("select distinct(t1.flditemname) as flditemname from " & $tblpatbilling & " AS t1 inner join " & $tblpatbilldetail & " AS t2 ON t1.fldbillno=t2.fldbillno where t2.fldid>=&1 and t2.fldid<=&2 and t2.flduserid like &3 and t2.fldcomp like &4 and t2.fldbilltype like &5", bilid1, bilid2, sUser, sComp, xbillType)
        If rex.Available Then
          $BillingReport.AddChapter(xbillType & " Invoice")
          i = 1
          For Each rex

            anum = 0
            atax = 0
            adisc = 0
            atot = 0
            rex2 = $con.Exec("select SUM(t1.flditemqty) as cnum,SUM(t1.fldditemamt) as itemtot,SUM(t1.flddiscamt) as disctot,SUM(t1.fldtaxamt) as taxtot from " & $tblpatbilling & " AS t1 inner join " & $tblpatbilldetail & " AS t2 ON t1.fldbillno=t2.fldbillno where t2.flduserid like &1 and t2.fldid>=&2 and t2.fldid<=&3 and t2.fldcomp like &5 and t2.fldbilltype=&6 and t1.flditemname=&4", sUser, bilid1, bilid2, rex["flditemname"], sComp, xbillType)                  ''
            If rex2.Available Then
              If rex2["cnum"] Then
                anum = rex2["cnum"]
              Endif
              If rex2["taxtot"] Then
                atax = rex2["taxtot"]
              Endif
              If rex2["disctot"] Then
                adisc = rex2["disctot"]
              Endif
              If rex2["itemtot"] Then
                atot = rex2["itemtot"]
              Endif
              num = num + anum
              tax = tax + atax
              dsc = dsc + adisc
              tot = tot + atot
              With asx
                .Add(CStr(i))
                .Add(rex["flditemname"])
                .Add(modReportVar.GetLocaleNumberFormat(anum, 0))
                .Add(modReportVar.GetLocaleNumberFormat(adisc, gb.Currency))
                .Add(modReportVar.GetLocaleNumberFormat(atax, gb.Currency))
                .Add(modReportVar.GetLocaleNumberFormat(atot, gb.Currency))
              End With
              $BillingReport.Add(asx)
              asx.Clear()
              i = i + 1
            Endif

          Next
        Endif

        ''deposit
        rex1 = $con.Exec("select SUM(fldcurdeposit) as fldcurdeposit from " & $tblpatbilldetail & " where fldid>=&1 and fldid<=&2 and flduserid like &3 and fldcomp like &4 and fldbilltype like &5", bilid1, bilid2, sUser, sComp, xbillType)
        If rex1.Available Then
          If rex1["fldcurdeposit"] Then
            With asx
              .Add("")
              .Add(sUser & " : INVOICE DEPOSIT")
              .Add("...")
              .Add("...")
              .Add("...")
              .Add(modReportVar.GetLocaleNumberFormat(rex1["fldcurdeposit"], gb.Currency))
            End With
            $BillingReport.Add(asx)
            asx.Clear()
          Endif
        Endif

      Endif

      With asx
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      If recpid1 And If recpid2 Then
        res = $con.Exec("select distinct(flditemname) as flditemname from " & $tblpatbilling & " where fldbillno in(select fldbillno from " & $tbltempbilldetail & " where fldid>=&1 and fldid<=&2 and flduserid like &3 and fldcomp like &4 and fldbilltype like &5)", recpid1, recpid2, sUser, sComp, xbillType)
        If res.Available Then
          $BillingReport.AddChapter(xbillType & " Receipt")
          j = 1
          For Each res

            anum = 0
            atax = 0
            adisc = 0
            atot = 0
            res2 = $con.Exec("select SUM(flditemqty) as cnum,SUM(fldditemamt) as itemtot,SUM(flddiscamt) as disctot,SUM(fldtaxamt) as taxtot from " & $tblpatbilling & " where fldbillno in(select fldbillno from " & $tbltempbilldetail & " where flduserid like &1 and fldid>=&2 and fldid<=&3 and fldcomp like &5 and fldbilltype like &6) and flditemname=&4", sUser, recpid1, recpid2, res["flditemname"], sComp, xbillType)                  ''
            If res2.Available Then
              If res2["cnum"] Then
                anum = res2["cnum"]
              Endif
              If res2["taxtot"] Then
                atax = res2["taxtot"]
              Endif
              If res2["disctot"] Then
                adisc = res2["disctot"]
              Endif
              If res2["itemtot"] Then
                atot = res2["itemtot"]
              Endif
              num = num + anum
              tax = tax + atax
              dsc = dsc + adisc
              tot = tot + atot
              With asx
                .Add(CStr(j))
                .Add(res["flditemname"])
                .Add(modReportVar.GetLocaleNumberFormat(anum, 0))
                .Add(modReportVar.GetLocaleNumberFormat(adisc, gb.Currency))
                .Add(modReportVar.GetLocaleNumberFormat(atax, gb.Currency))
                .Add(modReportVar.GetLocaleNumberFormat(atot, gb.Currency))
              End With
              $BillingReport.Add(asx)
              asx.Clear()
              j = j + 1
            Endif

          Next
        Endif

        ''deposit
        res1 = $con.Exec("select SUM(fldcurdeposit) as fldcurdeposit from " & $tbltempbilldetail & " where fldid>=&1 and fldid<=&2 and flduserid like &3 and fldcomp like &4 and fldbilltype like &5", recpid1, recpid2, sUser, sComp, xbillType)
        If res1.Available Then
          If res1["fldcurdeposit"] Then
            With asx
              .Add("")
              .Add(sUser & " : RECEIPT DEPOSIT")
              .Add("...")
              .Add("...")
              .Add("...")
              .Add(modReportVar.GetLocaleNumberFormat(res1["fldcurdeposit"], gb.Currency))
            End With
            $BillingReport.Add(asx)
            asx.Clear()
          Endif
        Endif

      Endif

      With asx
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
        .Add("...")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      xnum = xnum + num
      xtax = xtax + tax
      xdsc = xdsc + dsc
      xtot = xtot + tot
      With asx
        .Add("")
        .Add(sUser & " : Total (Itemwise)")
        .Add(modReportVar.GetLocaleNumberFormat(num, 0))
        .Add(modReportVar.GetLocaleNumberFormat(dsc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(tot, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      If bilid1 And If bilid2 Then
        With asx
          .Add("")
          .Add(sUser & " : Invoice Total (Actual)")
          .Add("...")
          .Add("...")
          .Add("...")
          .Add(modReportVar.GetLocaleNumberFormat(modNonMedical.GetInvoiceAmountBetweenBills(sUser, bill1, bill2, "%", $tblpatbilldetail), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      If recpid1 And If recpid2 Then
        With asx
          .Add("")
          .Add(sUser & " : Receipt Total (Actual)")
          .Add("...")
          .Add("...")
          .Add("...")
          .Add(modReportVar.GetLocaleNumberFormat(modNonMedical.GetReceiptAmountBetweenBills(sUser, recp1, recp2, "%", $tbltempbilldetail), gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Next
    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function SummaryReceiveBillingSIngleUser($con As Connection, bill1 As String, bill2 As String, recp1 As String, recp2 As String, sUserLst As String[], sComp As String, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]
  Dim sUser As String
  Dim res As Result
  Dim res1 As Result
  Dim xx As String
  Dim lst As String[] = ["Deposit Received", "Deposit Return", "Counter Sales", "Counter Return", "Pharmacy Sales", "Pharmacy Return", "Due Clearance"]
  Dim bilid1 As Long
  Dim bilid2 As Long
  Dim recpid1 As Long
  Dim recpid2 As Long
  Dim xgrand As Float

  Dim totamt As Float
  Dim xtax As Float
  Dim xdsc As Float
  Dim xitem As Float
  Dim totmt As Float

  Dim pqty As Float
  Dim pitem As Float
  Dim ptax As Float
  Dim pdisc As Float
  Dim ptot As Float
  Dim precv As Float

  Dim xBillTypList As String[] = ["Credit", "Cash"]
  Dim xbillType As String

  bilid1 = modNonMedical.GetBillIDFromBillNo(bill1, $tblpatbilldetail)
  bilid2 = modNonMedical.GetBillIDFromBillNo(bill2, $tblpatbilldetail)
  recpid1 = modNonMedical.GetBillIDFromReceipt(recp1, $tbltempbilldetail)
  recpid2 = modNonMedical.GetBillIDFromReceipt(recp2, $tbltempbilldetail)

  $BillingReport = New CReportHTML([("SOURCE"), ("CATEGORY"), ("COUNT"), ("GROSS"), ("DISCOUNT"), ("TAX"), ("NETTOTAL"), ("RECEIVED")], "", "")
  $BillingReport.UserData.Add("LOCATION : " & sComp, "PARAM1")
  $BillingReport.UserData.Add("INVOICE: " & GetInvoiceTwoRange($con, $tblpatbilldetail, bilid1, bilid2) & "<br>" & "RECEIPT: " & GetInvoiceTwoRange($con, $tbltempbilldetail, recpid1, recpid2), "PARAM2")

  For Each sUser In sUserLst
    $BillingReport.AddSection(sUser & " [" & UCase(modGeneral.GetUserFullName(sUser)) & "]", True)
    xgrand = 0

    For Each xbillType In xBillTypList
      $BillingReport.AddChapter(xbillType)

      pqty = 0
      pitem = 0
      ptax = 0
      pdisc = 0
      ptot = 0
      precv = 0
      For Each xx In lst

        If bilid1 And If bilid2 Then
          totamt = 0
          xtax = 0
          xdsc = 0
          xitem = 0
          totmt = 0
          If xx = "Deposit Received" Then
            res = $con.Exec("select count(fldid) as cnum,SUM(flditemamt) as itemtot,SUM(fldtaxamt) as tax,SUM(flddiscountamt) as dsc,SUM(flditemamt+fldtaxamt-flddiscountamt) as totamt,SUM(fldreceivedamt+fldcurdeposit) as totrcv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6 and fldcurdeposit>&7", modBillLock.InvSign("Cash Deposit") & "%", bilid1, bilid2, sUser, sComp, xbillType, 0)
          Else If xx = "Deposit Return" Then
            res = $con.Exec("select count(fldid) as cnum,SUM(flditemamt) as itemtot,SUM(fldtaxamt) as tax,SUM(flddiscountamt) as dsc,SUM(flditemamt+fldtaxamt-flddiscountamt) as totamt,SUM(fldreceivedamt+fldcurdeposit) as totrcv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6 and fldcurdeposit<&7", modBillLock.InvSign("Cash Deposit") & "%", bilid1, bilid2, sUser, sComp, xbillType, 0)
          Else
            res = $con.Exec("select count(fldid) as cnum,SUM(flditemamt) as itemtot,SUM(fldtaxamt) as tax,SUM(flddiscountamt) as dsc,SUM(flditemamt+fldtaxamt-flddiscountamt) as totamt,SUM(fldreceivedamt+fldcurdeposit) as totrcv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6", modBillLock.InvSign(xx) & "%", bilid1, bilid2, sUser, sComp, xbillType)                                                  ''
          Endif
          If res.Available Then
            If res["itemtot"] Then
              xitem = res["itemtot"]
            Endif
            If res["tax"] Then
              xtax = res["tax"]
            Endif
            If res["dsc"] Then
              xdsc = res["dsc"]
            Endif
            If res["totamt"] Then
              totmt = res["totamt"]
            Endif
            If res["totrcv"] Then
              totamt = res["totrcv"]
            Endif

            pqty = pqty + res["cnum"]
            pitem = pitem + xitem
            ptax = ptax + xtax
            pdisc = pdisc + xdsc
            ptot = ptot + totmt
            precv = precv + totamt
            xgrand = xgrand + totamt
          Endif
          If res["cnum"] Then
            With asx
              .Add("Invoice")
              .Add(xx)
              .Add(res["cnum"])
              .Add(modReportVar.GetLocaleNumberFormat(xitem, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(xdsc, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(totmt, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(totamt, gb.Currency))
            End With
            $BillingReport.Add(asx)
            asx.Clear()
          Endif
        Endif

        If recpid1 And If recpid2 Then
          totamt = 0
          xtax = 0
          xdsc = 0
          xitem = 0
          totmt = 0
          If xx = "Deposit Received" Then
            res1 = $con.Exec("select count(fldid) as cnum,SUM(flditemamt) as itemtot,SUM(fldtaxamt) as tax,SUM(flddiscountamt) as dsc,SUM(flditemamt+fldtaxamt-flddiscountamt) as totamt,SUM(fldreceivedamt+fldcurdeposit) as totrcv from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6 and fldcurdeposit>&7", modBillLock.ReceiptSign("Cash Deposit") & "%", recpid1, recpid2, sUser, sComp, xbillType, 0)
          Else If xx = "Deposit Return" Then
            res1 = $con.Exec("select count(fldid) as cnum,SUM(flditemamt) as itemtot,SUM(fldtaxamt) as tax,SUM(flddiscountamt) as dsc,SUM(flditemamt+fldtaxamt-flddiscountamt) as totamt,SUM(fldreceivedamt+fldcurdeposit) as totrcv from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6 and fldcurdeposit<&7", modBillLock.ReceiptSign("Cash Deposit") & "%", recpid1, recpid2, sUser, sComp, xbillType, 0)
          Else
            res1 = $con.Exec("select count(fldid) as cnum,SUM(flditemamt) as itemtot,SUM(fldtaxamt) as tax,SUM(flddiscountamt) as dsc,SUM(flditemamt+fldtaxamt-flddiscountamt) as totamt,SUM(fldreceivedamt+fldcurdeposit) as totrcv from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6", modBillLock.ReceiptSign(xx) & "%", recpid1, recpid2, sUser, sComp, xbillType)                                                  ''
          Endif
          If res1.Available Then
            If res1["itemtot"] Then
              xitem = res1["itemtot"]
            Endif
            If res1["tax"] Then
              xtax = res1["tax"]
            Endif
            If res1["dsc"] Then
              xdsc = res1["dsc"]
            Endif
            If res1["totamt"] Then
              totmt = res1["totamt"]
            Endif
            If res1["totrcv"] Then
              totamt = res1["totrcv"]
            Endif

            pqty = pqty + res1["cnum"]
            pitem = pitem + xitem
            ptax = ptax + xtax
            pdisc = pdisc + xdsc
            ptot = ptot + totmt
            precv = precv + totamt
            xgrand = xgrand + totamt
          Endif
          If res1["cnum"] Then
            With asx
              .Add("Receipt")
              .Add(xx)
              .Add(res1["cnum"])
              .Add(modReportVar.GetLocaleNumberFormat(xitem, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(xdsc, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(xtax, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(totmt, gb.Currency))
              .Add(modReportVar.GetLocaleNumberFormat(totamt, gb.Currency))
            End With
            $BillingReport.Add(asx)
            asx.Clear()
          Endif
        Endif

      Next

      ''summary
      With asx
        .Add("")
        .Add("SUBTOTAL")
        .Add(pqty)
        .Add(modReportVar.GetLocaleNumberFormat(pitem, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(pdisc, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(ptax, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(ptot, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(precv, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Next

    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("")
      .Add("TOTAL : " & sUser)
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xgrand, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function GetItemAmtByParam(sCon As Connection, sTable As String, grpname As String, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, xbilType As String, Optional sBillTable As String) As Float

  Dim res As Result
  Dim atot As Float
  Dim xbillTable As String

  If sBillTable Then
    xbillTable = sBillTable
  Else
    xbillTable = "tblpatbilling"
  Endif
  res = sCon.Exec("select sum(fldditemamt) as tot from " & xbillTable & " where flditemname in(select flditemname from tblreportgroup where fldgroup like &1) and fldbillno in(" & Subst("select fldbillno from &1", sTable) & " where fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6)", grpname, bilid1, bilid2, sUser, sComp, xbilType)
  If res.Available Then
    If res["tot"] Then
      atot = res["tot"]
    Else
      atot = 0
    Endif
  Else
    atot = 0
  Endif

  Return atot

End

Public Function GetItemAmtByParamState(sCon As Connection, sTable As String, grpname As String, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, xbilType As String, xState As String, Optional sBillTable As String) As Float

  Dim res As Result
  Dim atot As Float
  Dim xbillTable As String

  If sBillTable Then
    xbillTable = sBillTable
  Else
    xbillTable = "tblpatbilling"
  Endif
  If xState = "OPD" Then
    res = sCon.Exec("select sum(fldditemamt) as tot from " & xbillTable & " where flditemname in(select flditemname from tblreportgroup where fldgroup like &1) and fldbillno in(" & Subst("select fldbillno from &1", sTable) & " where fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6 and fldprevdeposit=&7)", grpname, bilid1, bilid2, sUser, sComp, xbilType, 1)
  Else If xState = "IPD" Then
    res = sCon.Exec("select sum(fldditemamt) as tot from " & xbillTable & " where flditemname in(select flditemname from tblreportgroup where fldgroup like &1) and fldbillno in(" & Subst("select fldbillno from &1", sTable) & " where fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldbilltype like &6 and fldprevdeposit>&7)", grpname, bilid1, bilid2, sUser, sComp, xbilType, 1)
  Endif
  If res.Available Then
    If res["tot"] Then
      atot = res["tot"]
    Else
      atot = 0
    Endif
  Else
    atot = 0
  Endif

  Return atot

End

Public Function GetNullAmtByParam(sCon As Connection, sTable As String, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, xbilType As String, Optional sBillTable As String) As Float

  Dim res As Result
  Dim atot As Float
  Dim xbillTable As String

  If sBillTable Then
    xbillTable = sBillTable
  Else
    xbillTable = "tblpatbilling"
  Endif
  res = sCon.Exec("select sum(fldditemamt) as tot from " & xbillTable & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(" & Subst("select fldbillno from &1", sTable) & " where fldid>=&1 and fldid<=&2 and flduserid like &3 and fldcomp like &4 and fldbilltype like &5)", bilid1, bilid2, sUser, sComp, xbilType)
  If res.Available Then
    If res["tot"] Then
      atot = res["tot"]
    Else
      atot = 0
    Endif
  Else
    atot = 0
  Endif

  Return atot

End

Public Function GetNullAmtByParamState(sCon As Connection, sTable As String, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, xbilType As String, xState As String, Optional sBillTable As String) As Float

  Dim res As Result
  Dim atot As Float
  Dim xbillTable As String

  If sBillTable Then
    xbillTable = sBillTable
  Else
    xbillTable = "tblpatbilling"
  Endif
  If xState = "OPD" Then
    res = sCon.Exec("select sum(fldditemamt) as tot from " & xbillTable & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(" & Subst("select fldbillno from &1", sTable) & " where fldid>=&1 and fldid<=&2 and flduserid like &3 and fldcomp like &4 and fldbilltype like &5 and fldprevdeposit=&6)", bilid1, bilid2, sUser, sComp, xbilType, 1)
  Else If xState = "IPD" Then
    res = sCon.Exec("select sum(fldditemamt) as tot from " & xbillTable & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(" & Subst("select fldbillno from &1", sTable) & " where fldid>=&1 and fldid<=&2 and flduserid like &3 and fldcomp like &4 and fldbilltype like &5 and fldprevdeposit>&6)", bilid1, bilid2, sUser, sComp, xbilType, 1)
  Endif
  If res.Available Then
    If res["tot"] Then
      atot = res["tot"]
    Else
      atot = 0
    Endif
  Else
    atot = 0
  Endif

  Return atot

End

Public Function GetSummaryInvoiceContentBetweenGroupUser($con As Connection, bill1 As String, bill2 As String, recp1 As String, recp2 As String, sUserLst As String[], sComp As String, $tblpatbilling As String, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]
  Dim sUser As String
  Dim bilid1 As Long
  Dim bilid2 As Long
  Dim recpid1 As Long
  Dim recpid2 As Long

  Dim grpname As String
  Dim grpList As String[]

  Dim rex1 As Result
  Dim rex2 As Result
  Dim resc As Result

  Dim comcrdt As Float
  Dim comcash As Float
  Dim comtotl As Float

  Dim usrcrdt As Float
  Dim usrcash As Float
  Dim usrtotl As Float

  Dim acrdt As Float
  Dim acash As Float
  Dim atotl As Float

  Dim xcrdtcash As Float
  Dim xPackList As String[]
  Dim xscheme As String
  Dim recr As Result
  Dim xcredtot As Float

  Dim xprevdepo As Float
  Dim xcurrdepo As Float

  bilid1 = modNonMedical.GetBillIDFromBillNo(bill1, $tblpatbilldetail)
  bilid2 = modNonMedical.GetBillIDFromBillNo(bill2, $tblpatbilldetail)
  recpid1 = modNonMedical.GetBillIDFromReceipt(recp1, $tbltempbilldetail)
  recpid2 = modNonMedical.GetBillIDFromReceipt(recp2, $tbltempbilldetail)

  $BillingReport = New CReportHTML([("CATEGORY"), ("CREDIT"), ("CASH"), ("TOTAL")], "", "")
  $BillingReport.UserData.Add("LOCATION : " & sComp, "PARAM1")
  $BillingReport.UserData.Add("INVOICE: " & GetInvoiceTwoRange($con, $tblpatbilldetail, bilid1, bilid2) & "<br>" & "RECEIPT: " & GetInvoiceTwoRange($con, $tbltempbilldetail, recpid1, recpid2), "PARAM2")
  grpList = modNonMedical.GetGroupNameAccount()

  For Each sUser In sUserLst
    $BillingReport.AddSection(sUser & " [" & UCase(modGeneral.GetUserFullName(sUser)) & "]", True)

    comcrdt = 0
    comcash = 0
    comtotl = 0

    ''invoice
    If bilid1 And If bilid2 Then
      $BillingReport.AddChapter("INVOICE")
      usrcrdt = 0
      usrcash = 0
      usrtotl = 0

      ''departments
      For Each grpname In grpList
        acrdt = 0
        acash = 0
        atotl = 0
        acrdt = GetItemAmtByParam($con, $tblpatbilldetail, grpname, bilid1, bilid2, sUser, sComp, "Credit", $tblpatbilling)
        acash = GetItemAmtByParam($con, $tblpatbilldetail, grpname, bilid1, bilid2, sUser, sComp, "Cash", $tblpatbilling)
        atotl = acrdt + acash
        usrcrdt = usrcrdt + acrdt
        usrcash = usrcash + acash
        usrtotl = usrtotl + atotl
        If acrdt Or If acash Then
          With asx
            .Add(modString.HTMLBlankSpace(5) & grpname)
            .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Endif
      Next

      acrdt = 0
      acash = 0
      atotl = 0
      acrdt = GetNullAmtByParam($con, $tblpatbilldetail, bilid1, bilid2, sUser, sComp, "Credit", $tblpatbilling)
      acash = GetNullAmtByParam($con, $tblpatbilldetail, bilid1, bilid2, sUser, sComp, "Cash", $tblpatbilling)
      atotl = acrdt + acash
      usrcrdt = usrcrdt + acrdt
      usrcash = usrcash + acash
      usrtotl = usrtotl + atotl
      If acrdt Or If acash Then
        With asx
          .Add(modString.HTMLBlankSpace(5) & "Not Grouped")
          .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''cash from credit
      xcrdtcash = 0
      xcrdtcash = modIDFinance.GetIDInvoiceCreditCash($con, bilid1, bilid2, sUser, sComp, "", "", $tblpatbilldetail)
      If xcrdtcash Then
        usrcrdt = usrcrdt - xcrdtcash
        usrcash = usrcash + xcrdtcash
        usrtotl = usrtotl + 0
        With asx
          .Add(modString.HTMLBlankSpace(5) & "Cash From Credit Invoice")
          .Add(0 - xcrdtcash)
          .Add(modReportVar.GetLocaleNumberFormat(xcrdtcash, gb.Currency))
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''sub total summary
      If usrcrdt Or If usrcash Then
        With asx
          .Add("Sub Total")
          .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("")
          .Add("")
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''due clearance
      resc = $con.Exec("select sum(fldreceivedamt) as totrecv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5", "DCL%", bilid1, bilid2, sUser, sComp)
      If resc.Available And If resc["totrecv"] Then
        usrcash = usrcash + resc["totrecv"]
        usrtotl = usrtotl + resc["totrecv"]
        With asx
          .Add("Due Clearance")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
      ''deposit taken
      rex1 = $con.Exec("select SUM(fldcurdeposit) as totdepo from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit>&4 and flduserid like &5 and fldcomp like &6", "DEP%", bilid1, bilid2, 0, sUser, sComp)
      If rex1.Available And If rex1["totdepo"] Then
        usrcash = usrcash + rex1["totdepo"]
        usrtotl = usrtotl + rex1["totdepo"]
        With asx
          .Add("Deposit Taken")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
      ''deposit return
      rex2 = $con.Exec("select SUM(fldcurdeposit) as totdepo from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit<&4 and flduserid like &5 and fldcomp like &6", "DEP%", bilid1, bilid2, 0, sUser, sComp)
      If rex2.Available And If rex2["totdepo"] Then
        usrcash = usrcash + rex2["totdepo"]
        usrtotl = usrtotl + rex2["totdepo"]
        With asx
          .Add("Deposit Return")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      comcrdt = comcrdt + usrcrdt
      comcash = comcash + usrcash
      comtotl = comtotl + usrtotl
      With asx
        .Add("Invoice Total")
        .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("Total Cash from Invoice")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(modNonMedical.GetInvoiceAmountBetweenBills(sUser, bill1, bill2, sComp, $tblpatbilldetail), gb.Currency))
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif   ''end invoice

    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    '''Credit sales report
    $BillingReport.AddChapter("CREDIT SALES")
    xPackList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldacledger as col from tblacledger"))
    xcredtot = 0
    For Each xscheme In xPackList
      recr = $con.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as xtot from " & $tblpatbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and fldbankname=&4 and flduserid like &5 and fldcomp like &6", bilid1, bilid2, "Credit", xscheme, sUser, sComp)
      If recr.Available And If recr["xtot"] Then
        xcredtot = xcredtot + recr["xtot"]
        With asx
          .Add(modString.HTMLBlankSpace(5) & xscheme)
          .Add(modReportVar.GetLocaleNumberFormat(recr["xtot"], gb.Currency))
          .Add("")
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
    Next
    With asx
      .Add("Total Credit Sales")
      .Add(modReportVar.GetLocaleNumberFormat(xcredtot, gb.Currency))
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    ''receipt
    If recpid1 And If recpid2 Then
      $BillingReport.AddChapter("RECEIPT")
      usrcrdt = 0
      usrcash = 0
      usrtotl = 0

      ''departments
      For Each grpname In grpList
        acrdt = 0
        acash = 0
        atotl = 0
        acrdt = GetItemAmtByParam($con, $tbltempbilldetail, grpname, recpid1, recpid2, sUser, sComp, "Credit", $tblpatbilling)
        acash = GetItemAmtByParam($con, $tbltempbilldetail, grpname, recpid1, recpid2, sUser, sComp, "Cash", $tblpatbilling)
        atotl = acrdt + acash
        usrcrdt = usrcrdt + acrdt
        usrcash = usrcash + acash
        usrtotl = usrtotl + atotl
        If acrdt Or If acash Then
          With asx
            .Add(modString.HTMLBlankSpace(5) & grpname)
            .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
            .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Endif
      Next

      acrdt = 0
      acash = 0
      atotl = 0
      acrdt = GetNullAmtByParam($con, $tbltempbilldetail, recpid1, recpid2, sUser, sComp, "Credit", $tblpatbilling)
      acash = GetNullAmtByParam($con, $tbltempbilldetail, recpid1, recpid2, sUser, sComp, "Cash", $tblpatbilling)
      atotl = acrdt + acash
      usrcrdt = usrcrdt + acrdt
      usrcash = usrcash + acash
      usrtotl = usrtotl + atotl
      If acrdt Or If acash Then
        With asx
          .Add(modString.HTMLBlankSpace(5) & "Not Grouped")
          .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''sub total summary
      If usrcrdt Or If usrcash Then
        With asx
          .Add("Sub Total")
          .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("")
          .Add("")
          .Add("")
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''due clearance
      resc = $con.Exec("select sum(fldreceivedamt) as totrecv from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5", "TCL%", recpid1, recpid2, sUser, sComp)
      If resc.Available And If resc["totrecv"] Then
        usrcash = usrcash + resc["totrecv"]
        usrtotl = usrtotl + resc["totrecv"]
        With asx
          .Add("Due Clearance")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''previous deposit
      If $tblpatbilling = "tblpatbilling" Then
        xprevdepo = GetPreviousDepositUserComp($con, recp1, sUser, sComp)
        xcurrdepo = xprevdepo
        With asx
          .Add("(Opening Deposit)")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xprevdepo, gb.Currency))
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
      ''deposit taken
      rex1 = $con.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit>&4 and flduserid like &5 and fldcomp like &6", "DET%", recpid1, recpid2, 0, sUser, sComp)
      If rex1.Available And If rex1["totdepo"] Then
        usrcash = usrcash + rex1["totdepo"]
        usrtotl = usrtotl + rex1["totdepo"]
        xcurrdepo = xcurrdepo + rex1["totdepo"]
        With asx
          .Add("Deposit Collected")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
      ''deposit return
      rex2 = $con.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit<&4 and flduserid like &5 and fldcomp like &6", "DET%", recpid1, recpid2, 0, sUser, sComp)
      If rex2.Available And If rex2["totdepo"] Then
        usrcash = usrcash + rex2["totdepo"]
        usrtotl = usrtotl + rex2["totdepo"]
        xcurrdepo = xcurrdepo + rex2["totdepo"]
        With asx
          .Add("Deposit Returned")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
      ''balance deposit
      If $tblpatbilling = "tblpatbilling" Then
        With asx
          .Add("(Closing Deposit)")
          .Add("")
          .Add(modReportVar.GetLocaleNumberFormat(xcurrdepo, gb.Currency))
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

      ''total summary
      With asx
        .Add("")
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

      comcrdt = comcrdt + usrcrdt
      comcash = comcash + usrcash
      comtotl = comtotl + usrtotl
      With asx
        .Add("Receipt Total")
        .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("Total Cash from Receipts")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(modNonMedical.GetReceiptAmountBetweenBills(sUser, recp1, recp2, sComp, $tbltempbilldetail), gb.Currency))
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif    ''receipt

    With asx
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Grand Total")
      .Add(modReportVar.GetLocaleNumberFormat(comcrdt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(comcash, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(comtotl, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("***")
      .Add("***")
      .Add("***")
      .Add("***")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

  Next

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function GetInvoiceTwoRange($con As Connection, sTable As String, sFir As Long, sLast As Long) As String

  Dim res As Result
  Dim xfir As String
  Dim yfir As String
  Dim xlast As String
  Dim ylast As String
  Dim xxx As String
  Dim yyy As String

  res = $con.Exec(Subst("select fldbillno from &1", sTable) & " where fldid>=&1 and fldid<=&2 ORDER BY fldid ASC", sFir, sLast)
  If res.Available Then
    res.MoveFirst
    xfir = res["fldbillno"]
    res.MoveNext
    If res.Count > 1 Then
      yfir = res["fldbillno"]
    Endif

    res.MoveLast
    ylast = res["fldbillno"]
    res.MovePrevious
    If res.Count > 1 Then
      xlast = res["fldbillno"]
    Endif

    If yfir Then
      xxx = xfir & "; " & yfir
    Else
      xxx = xfir
    Endif
    If xlast Then
      yyy = xlast & "; " & ylast
    Else
      yyy = ylast
    Endif
  Endif
  Return xxx & " TO " & yyy

End

Public Function GetPreviousDepositUserComp($con As Connection, sRecpNo As String, sUser As String, sComp As String) As Float

  Dim recpid As Long
  Dim res As Result
  Dim xdepo As Float

  recpid = modNonMedical.GetBillIDFromReceipt(sRecpNo)
  res = $con.Exec("select SUM(fldcurdeposit) as totdepo from tbltempbilldetail where fldid<&1 and flduserid like &2 and fldcomp like &3", recpid, sUser, sComp)
  If res.Available Then
    If res["totdepo"] Then
      xdepo = res["totdepo"]
    Else
      xdepo = 0
    Endif
  Else
    xdepo = 0
  Endif
  Return xdepo

End

''--------------------------- Invoice detail ----------------------------
Public Function ExportInvoiceDepartments($con As Connection, sType As String, dtfirst As Date, dtLast As Date, sLocaType As String, sLocation As String, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim xFieldList As String[]
  Dim res As Result
  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim RepoPath As String

  Dim grpList As String[]
  Dim accList As String[]
  Dim hdr As String[]

  Dim yitem As String
  Dim zitem As String
  Dim aColl As Collection
  Dim sumColl As Collection
  Dim i As Integer

  Dim xitemamt As Float
  Dim discamt As Float
  Dim taxamt As Float
  Dim curdepo As Float
  Dim xcredit As Float
  Dim xcash As Float
  Dim RepoStr1 As String
  Dim RepoStr2 As String

  ' $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  ' $ProgressBar1.Tag = "Const"

  grpList = modNonMedical.GetGroupNameAccount()
  accList = modControlSub.GetDirectFillresult($con.Exec("select distinct(fldacledger) as col from tblacledger"))
  hdr = New String[]
  hdr.Add("SNo")
  hdr.Add("Encounter")
  hdr.Add("Invoice")
  hdr.Add("First Name")
  hdr.Add("Sur Name")
  hdr.Add("Age")
  hdr.Add("Gender")
  hdr.Add("Ethnicity")
  hdr.Add("District")
  hdr.Add("Municipality")
  hdr.Add("Ward")

  hdr.Add("State")
  hdr.Add("Account")
  For Each yitem In grpList
    hdr.Add(yitem)
  Next

  hdr.Add("SubTotal")
  hdr.Add("Discount")
  hdr.Add("Tax")
  hdr.Add("Deposit")
  hdr.Add("Credit")
  hdr.Add("Cash")

  $BillingReport = New CReportHTML(hdr, "", "")
  $BillingReport.UserData.Add("INVOICE DESCRIPTION", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfirst, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtLast, gb.MediumDate), "PARAM2")

  If MMain.$WebReport = "Multiple" Then
    RepoStr1 = modDataRepo.GetWhereStringRepo(sLocaType, sLocation, $tblpatbilldetail)
    RepoStr2 = modDataRepo.GetWhereStringRepo(sLocaType, sLocation, $tbltempbilldetail)
  Else
    RepoStr1 = ""
    RepoStr2 = ""
  Endif
  xFieldList = ["fldtime", "fldtime", "fldbillno", "fldencounterval", "fldencounterval", "fldbilltype", "fldbankname", "fldchequeno", "flditemamt", "flddiscountamt", "fldtaxamt", "fldchargedamt", "fldreceivedamt", "fldcurdeposit", "flduserid", "fldbilltype", "fldtaxamt", "flddiscountamt", "fldbillno", "flddiscountgroup", "fldcomp", "fldprevdeposit"]
  If sType = "Invoice" Then
    res = $con.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2" & RepoStr1, modDate.StartSqlDate(dtfirst), modDate.EndSqlDate(dtLast))
  Else If sType = "Receipt" Then
    res = $con.Exec("select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2" & RepoStr2, modDate.StartSqlDate(dtfirst), modDate.EndSqlDate(dtLast))
  Else If sType = "Both" Then
    res = $con.Exec("select " & xFieldList.Join(",") & " from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2" & RepoStr1 & " UNION ALL " & "select " & xFieldList.Join(",") & " from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2" & RepoStr2, modDate.StartSqlDate(dtfirst), modDate.EndSqlDate(dtLast))
  Endif

  i = 1
  xitemamt = 0
  discamt = 0
  taxamt = 0
  curdepo = 0
  xcredit = 0
  xcash = 0
  sumColl = New Collection
  For Each res
    xitemamt = xitemamt + res["flditemamt"]
    discamt = discamt + res["flddiscountamt"]
    taxamt = taxamt + res["fldtaxamt"]
    curdepo = curdepo + res["fldcurdeposit"]
    xcredit = xcredit + res["flditemamt"] + res["fldtaxamt"] - res["flddiscountamt"] - res["fldreceivedamt"]
    xcash = xcash + res["fldreceivedamt"] + res["fldcurdeposit"]

    With asx
      .Add(CStr(i))
      .Add(res["fldencounterval"])
      .Add(res["fldbillno"])

      modPatient.GetPatientDataColl(res["fldencounterval"])
      .Add(modPatient.GetPatientFirstNameEnc(res["fldencounterval"], $con))
      .Add(modPatient.GetPatientLastNameEnc(res["fldencounterval"], $con))
      .Add(modPatient.GetPatientAgeString(res["fldencounterval"], modPatient.GetRecordDate(res["fldencounterval"])))
      .Add(modPatient.GetPatientSex(res["fldencounterval"], $con))
      .Add(modPatient.GetPatientEthnicity(res["fldencounterval"], $con))
      .Add(modPatient.GetPatDistrictByEnc(res["fldencounterval"], $con))
      .Add(modPatient.GetPatFirAddressByEnc(res["fldencounterval"], $con))
      .Add(modPatient.GetPatWardAddressByEnc(res["fldencounterval"], $con))

      If res["fldprevdeposit"] = 1 Then
        .Add("OPD")
      Else If res["fldprevdeposit"] > 1 Then
        .Add("IPD")
      Endif
      .Add(res["fldbankname"])

      aColl = New Collection
      aColl = GetInvoiceGroupNetAmount($con, res["fldbillno"])
      For Each zitem In grpList
        If aColl[zitem] Then
          .Add(modReportVar.GetLocaleNumberFormat(aColl[zitem], gb.Currency))
          If sumColl.Exist(zitem) Then
            sumColl[zitem] = sumColl[zitem] + aColl[zitem]
          Else
            sumColl.Add(aColl[zitem], zitem)
          Endif
        Else
          .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
        Endif
      Next

      .Add(modReportVar.GetLocaleNumberFormat(res["flditemamt"], gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(res["flddiscountamt"], gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(res["fldtaxamt"], gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(res["fldcurdeposit"], gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(res["flditemamt"] + res["fldtaxamt"] - res["flddiscountamt"] - res["fldreceivedamt"], gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(res["fldreceivedamt"] + res["fldcurdeposit"], gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    ' $ProgressBar1.Value = (res.Index + 1) / res.Count
    Wait
    i = i + 1
  Next

  With asx
    .Add("")
    .Add("")
    .Add("<b>GRAND TOTAL</b>")

    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")

    For Each zitem In grpList
      If sumColl[zitem] Then
        .Add(modReportVar.GetLocaleNumberFormat(sumColl[zitem], gb.Currency))
      Else
        .Add(modReportVar.GetLocaleNumberFormat(0, gb.Currency))
      Endif
    Next

    .Add(modReportVar.GetLocaleNumberFormat(xitemamt, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(discamt, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(taxamt, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(curdepo, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(xcredit, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(xcash, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Private Function GetInvoiceGroupNetAmount($con As Connection, billno As String) As Collection

  Dim res As Result
  Dim sColl As Collection

  sColl = New Collection
  res = $con.Exec("select SUM(tblpatbilling.flditemrate*tblpatbilling.flditemqty) as dueamt,tblreportgroup.fldgroup as fldgroup from tblpatbilling inner join tblreportgroup on tblpatbilling.flditemname=tblreportgroup.flditemname where tblpatbilling.fldbillno=&1 GROUP BY tblreportgroup.fldgroup", billno)
  If res.Available Then
    For Each res
      sColl.Add(res["dueamt"], res["fldgroup"])
    Next
  Endif

  Return sColl

End

''=================== Combination =======================
Public Function ShowCombinedInPatientExp($con As Connection, encid As String, sType As String, xmodeList As String[]) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim RepoPath As String
  Dim RepoVal As Float
  Dim RepoExp As Float

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("RATE"), ("QTY"), ("DISC"), ("TAX"), ("TOTAL")], "PatientReport", encid)
  $BillingReport.UserData.Add("REPORT", "Report")
  $BillingReport.UserData.Add("NON-INVOICED ITEMS", "PARAM1")

  RepoExp = modSourceInvoice.GetTotalExpensebyPatient($BillingReport, $con, encid, sType)
  With asx
    .Add("* * *")
    .Add("* * *")
    .Add("* * *")
    .Add("* * *")
    .Add("* * *")
    .Add("* * *")
    .Add("* * *")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  $BillingReport.AddChapter("")
  RepoVal = modSourceInvoice.GetPendingExpensebyPatient($BillingReport, $con, encid, sType, xmodeList)

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End
