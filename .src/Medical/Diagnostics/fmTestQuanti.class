' Gambas class file

Private $rData As Result
Private $aMyFields As String[]

Public Sub _new(sItemName As String)

  lbltestname.Text = sItemName

  cmbagegroup.List = modMedicine.AgeGroupListShortAll()
  cmbgender.List = ["Male", "Female", "Both Sex"]
  cmbmethod.List = modFixLab.GetTestExamEquipments("Test")
  rbmetric.Value = True
  BlankAll()
  ShowTestLimit()
  If modHelpVariable.$LogInCategory = "Medical" Then
    Panel2.Enabled = True
  Else
    Panel2.Enabled = False
  Endif

End

Public Sub btnmethod_Click()

  Dim hForm As FmAddVariable1

  hForm = New FmAddVariable1("fldmethod", "fldcateg", "Test", "tbltestmethod")
  hForm.ShowModal
  cmbmethod.List = modFixLab.GetTestExamEquipments("Test")

End

Public Sub btnBrOK_Click()

  Dim res As Result

  If cmbagegroup.Text And If cmbgender.Text Then
    res = modDatabase.$medConn.Create("tbltestlimit")
    res["fldtestid"] = lbltestname.Text
    res["fldmethod"] = cmbmethod.Text
    res["fldminimum"] = txtlowest.Value
    res["fldmaximum"] = txthighest.Value
    res["fldsensitivity"] = txtsensi.Value
    res["fldspecificity"] = txtspecif.Value
    res["fldptsex"] = cmbgender.Text
    res["fldagegroup"] = cmbagegroup.Text
    res["fldconvfactor"] = txtconvfactor.Value
    res["fldsinormal"] = txtsinorm.Value
    res["fldsihigh"] = txtsihigh.Value
    res["fldsilow"] = txtsilow.Value
    res["fldsiunit"] = txtsiunit.Text
    res["fldmetnormal"] = txtmetnorm.Value
    res["fldmethigh"] = txtmethigh.Value
    res["fldmetlow"] = txtmetlow.Value
    res["fldmetunit"] = txtmetunit.Text
    res.Update()
    ShowTestLimit()
    BlankAll()
    Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif
  cmbmethod.SetFocus

End

Private Sub BlankAll()

  txtsensi.Value = 0
  txtspecif.Value = 0
  cmbagegroup.text = ""
  txtconvfactor.value = 0
  txtsinorm.value = 0
  txtsihigh.value = 0
  txtsilow.value = 0
  txtsiunit.text = ""
  txtmetnorm.value = 0
  txtmethigh.value = 0
  txtmetlow.value = 0
  txtmetunit.text = ""
  cmbgender.Text = ""
  txtlowest.Value = 0
  txthighest.Value = 0

End

'''metric to si
Public Sub txtmethigh_Activate()

  If txtconvfactor.Value <> 0 Then
    txtsihigh.Value = txtmethigh.Value * txtconvfactor.Value
  Endif

End

Public Sub txtmetlow_Activate()

  If txtconvfactor.Value <> 0 Then
    txtsilow.Value = txtmetlow.Value * txtconvfactor.Value
  Endif

End

Public Sub txtmetnorm_Activate()

  If txtmethigh.Value < txtmetlow.Value Then
    txtmetlow.Value = 0
    Message.Warning(("Lower Limit greater than Upper Limit"), ("OK"))
    txtmetlow.SetFocus
  Else
    If txtconvfactor.Value <> 0 Then
      txtsinorm.Value = txtmetnorm.Value * txtconvfactor.Value
    Endif
  Endif

End

''si to metric
Public Sub txtsihigh_Activate()

  If txtconvfactor.Value <> 0 Then
    txtmethigh.Value = txtsihigh.Value / txtconvfactor.Value
  Endif

End

Public Sub txtsilow_Activate()

  If txtconvfactor.Value <> 0 Then
    txtmetlow.Value = txtsilow.Value / txtconvfactor.Value
  Endif

End

Public Sub txtsinorm_Activate()

  If txtsihigh.Value < txtsilow.Value Then
    txtsilow.Value = 0
    Message.Warning(("Lower Limit greater than Upper Limit"), ("OK"))
    txtsilow.SetFocus
  Else
    If txtconvfactor.Value <> 0 Then
      txtmetnorm.Value = txtsinorm.Value / txtconvfactor.Value
    Endif
  Endif

End

Public Sub rbsi_Click()

  ShowTestLimit()

End

Public Sub rbmetric_Click()

  ShowTestLimit()

End

Private Sub ShowTestLimit()

  Dim sql As String

  If rbmetric.Value = True Then
    sql = "select fldid,fldptsex,fldagegroup,fldmetnormal,fldmetlow,fldmethigh,fldmetunit,fldconvfactor,fldmethod,fldsensitivity,fldspecificity from tbltestlimit where fldtestid=&1"
  Else If rbsi.Value = True Then
    sql = "select fldid,fldptsex,fldagegroup,fldsinormal,fldsilow,fldsihigh,fldsiunit,fldconvfactor,fldmethod,fldsensitivity,fldspecificity from tbltestlimit where fldtestid=&1"
  Endif
  $rData = modDatabase.$medConn.Exec(sql, lbltestname.Text)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(85 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(60 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(60 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(60 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(60 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Hidden = True
    .Columns[8].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(60 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Width = CStr(60 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Gender"
    .Columns[2].Text = "AgeGroup"
    .Columns[3].Text = "Mean"
    .Columns[4].Text = "Lower"
    .Columns[5].Text = "Upper"
    .Columns[6].Text = "Unit"
    .Columns[8].Text = "Method"
    .Columns[9].Text = "Sens"
    .Columns[10].Text = "Spec"
  End With

  FillDrugCausingHypo()
  FillDrugCausingHyper()
  FillSyndroCausingHypo()
  FillSyndroCausingHyper()

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData[$aMyFields[Column]]

End

' Public Sub cmbagegroup_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbagegroup)
'   modFillContainer.RestrictComboToContent(cmbagegroup)
'
' End
'
' Public Sub cmbgender_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbgender)
'   modFillContainer.RestrictComboToContent(cmbgender)
'
' End

Public Sub GridView1_Select()

  Dim sql As String
  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])

    sql = "select fldtestid,fldptsex,fldagegroup,fldconvfactor,fldsinormal,fldsihigh,fldsilow,fldsiunit,fldmetnormal,fldmethigh,fldmetlow,fldmetunit,fldmethod,fldsensitivity,fldspecificity,fldminimum,fldmaximum from tbltestlimit where fldid=&1"                                                        ''
    res = modDatabase.$medConn.Exec(sql, $rData["fldid"])
    If res.Available Then
      lbltestname.Text = res["fldtestid"]
      cmbagegroup.text = res["fldagegroup"]
      cmbgender.Text = res["fldptsex"]
      txtconvfactor.value = res["fldconvfactor"]

      txtsinorm.value = res["fldsinormal"]
      txtsihigh.value = res["fldsihigh"]
      txtsilow.value = res["fldsilow"]
      txtsiunit.text = res["fldsiunit"]

      txtmetnorm.value = res["fldmetnormal"]
      txtmethigh.value = res["fldmethigh"]
      txtmetlow.value = res["fldmetlow"]
      txtmetunit.text = res["fldmetunit"]
      cmbmethod.Text = res["fldmethod"]

      If res["fldsensitivity"] Then
        txtsensi.Value = res["fldsensitivity"]
      Endif
      If res["fldspecificity"] Then
        txtspecif.Value = res["fldspecificity"]
      Endif
      If res["fldminimum"] Then
        txtlowest.Value = res["fldminimum"]
      Endif
      If res["fldmaximum"] Then
        txthighest.Value = res["fldmaximum"]
      Endif
    Endif

  Endif

End

Public Sub btnBrChange_Click()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    res = modDatabase.$medConn.Edit("tbltestlimit", "fldid=&1", $rData["fldid"])
    res["fldmethod"] = cmbmethod.Text
    res["fldminimum"] = txtlowest.Value
    res["fldmaximum"] = txthighest.Value
    res["fldsensitivity"] = txtsensi.Value
    res["fldspecificity"] = txtspecif.Value
    res["fldptsex"] = cmbgender.Text
    res["fldagegroup"] = cmbagegroup.Text
    res["fldconvfactor"] = txtconvfactor.Value
    res["fldsinormal"] = txtsinorm.Value
    res["fldsihigh"] = txtsihigh.Value
    res["fldsilow"] = txtsilow.Value
    res["fldsiunit"] = txtsiunit.Text
    res["fldmetnormal"] = txtmetnorm.Value
    res["fldmethigh"] = txtmethigh.Value
    res["fldmetlow"] = txtmetlow.Value
    res["fldmetunit"] = txtmetunit.Text
    res.Update()
    ShowTestLimit()
    Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
    cmbmethod.SetFocus
  Endif

End

Public Sub btnBrCancel_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modDatabase.$medConn.Delete("tbltestlimit", "fldid=&1", $rData["fldid"])
    BlankAll()
    ShowTestLimit()
    Me.Exec("Toastify({text: 'Information updated', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

''-------------------- cause -------------------
' Public Sub tlbtndrughypo_Click()
'
'   Dim hForm As FmRefTextEntry
'
'   If btnBrOK.Text = Add Then
'     hForm = New FmRefTextEntry(("Select Drugs causing Hypo"), "Hypo causing Drugs", lbltestname.Text)
'     hForm.ShowModal
'     FillDrugCausingHypo()
'   Endif
'
' End
'
' Public Sub tlbtndrughyper_Click()
'
'   Dim hForm As FmRefTextEntry
'
'   If btnBrOK.Text = Add Then
'     hForm = New FmRefTextEntry(("Select Drugs causing Hyper"), "Hyper causing Drugs", lbltestname.Text)
'     hForm.ShowModal
'     FillDrugCausingHyper()
'   Endif
'
' End
'
' Public Sub tlbtnsyndrohypo_Click()
'
'   Dim hForm As FmRefTextEntry
'
'   If btnBrOK.Text = Add Then
'     hForm = New FmRefTextEntry(("Select Syndromes with decreased"), "Hypo causing Syndromes", lbltestname.Text)
'     hForm.ShowModal
'     FillSyndroCausingHypo()
'   Endif
'
' End
'
' Public Sub tlbtnsyndrohyper_Click()
'
'   Dim hForm As FmRefTextEntry
'
'   If btnBrOK.Text = Add Then
'     hForm = New FmRefTextEntry(("Select Syndromes with increased"), "Hyper causing Syndromes", lbltestname.Text)
'     hForm.ShowModal
'     FillSyndroCausingHyper()
'   Endif
'
' End
'
' Public Sub tlbtndisehypo_Click()
'
'   Dim hForm As FmRefTextEntry
'
'   If btnBrOK.Text = Add Then
'     hForm = New FmRefTextEntry(("Select ICD Disease with decreased"), "Hypo causing Diseases", lbltestname.Text)
'     hForm.ShowModal
'     FillSyndroCausingHypo()
'   Endif
'
' End
'
' Public Sub tlbtndisehyper_Click()
'
'   Dim hForm As FmRefTextEntry
'
'   If btnBrOK.Text = Add Then
'     hForm = New FmRefTextEntry(("Select ICD Disease with increased"), "Hyper causing Diseases", lbltestname.Text)
'     hForm.ShowModal
'     FillSyndroCausingHyper()
'   Endif
'
' End

Public Sub FillDrugCausingHypo()

  Dim sql As String
  Dim tbl As String
  Dim res As Result

  tbl = "tblcodehypo"
  sql = "select fldchild as col from " & tbl & " where fldparent=&1"
  res = modDatabase.$medConn.Exec(sql, lbltestname.Text)
  modFillContainer.FillListBox(lstdrughypo, res, False)

End

Public Sub FillDrugCausingHyper()

  Dim sql As String
  Dim tbl As String
  Dim res As Result

  tbl = "tblcodehyper"
  sql = "select fldchild as col from " & tbl & " where fldparent=&1"
  res = modDatabase.$medConn.Exec(sql, lbltestname.Text)
  modFillContainer.FillListBox(lstdrughyper, res, False)

End

Public Sub FillSyndroCausingHypo()

  Dim sql As String
  Dim tbl As String
  Dim res As Result

  tbl = "tblsyndrohypo"
  sql = "select fldchild as col from " & tbl & " where fldparent=&1"
  res = modDatabase.$medConn.Exec(sql, lbltestname.Text)
  modFillContainer.FillListBox(lstsyndrohypo, res, False)

End

Public Sub FillSyndroCausingHyper()

  Dim sql As String
  Dim tbl As String
  Dim res As Result

  tbl = "tblsyndrohyper"
  sql = "select fldchild as col from " & tbl & " where fldparent=&1"
  res = modDatabase.$medConn.Exec(sql, lbltestname.Text)
  modFillContainer.FillListBox(lstsyndrohyper, res, False)

End

Public Sub tlbtndeldrughypo_Click()

  modDatabase.$medConn.Delete("tblcodehypo", "fldparent=&1 and fldchild=&2", lbltestname.Text, lstdrughypo.Text)
  FillDrugCausingHypo()

End

Public Sub tlbtndeldrughyper_Click()

  modDatabase.$medConn.Delete("tblcodehyper", "fldparent=&1 and fldchild=&2", lbltestname.Text, lstdrughyper.Text)
  FillDrugCausingHyper()

End

Public Sub tlbtndelsyndro_Click()

  modDatabase.$medConn.Delete("tblsyndrohypo", "fldparent=&1 and fldchild=&2", lbltestname.Text, lstsyndrohypo.Text)
  FillSyndroCausingHypo()

End

Public Sub tlbtndelsyndrohyper_Click()

  modDatabase.$medConn.Delete("tblsyndrohyper", "fldparent=&1 and fldchild=&2", lbltestname.Text, lstsyndrohyper.Text)
  FillSyndroCausingHyper()

End
