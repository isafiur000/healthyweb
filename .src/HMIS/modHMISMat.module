' Gambas module file

Public Function HMISRegister36(xdtfir As Date, xdtlast As Date, sLocaType As String, sLocation As String, sDecrypt As Boolean, Optional sPatNo As String) As String

  Dim $BillingReport As CReportHTMLong
  Dim asx As New String[0]
  Dim xPath As String
  Dim i As Integer
  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result

  ''start data
  Dim aCol As Collection
  Dim leftVar As Variant[]
  Dim midVar As Variant[]
  Dim rightVar As Variant[]

  ''demographics
  Dim leftstr1 As String
  Dim midstr1 As String
  Dim rightstr1 As String

  Dim xleft As String
  Dim xmid As String
  Dim xright As String
  Dim xtable As String

  Dim xlmp As String[]
  Dim xedd As String[]

  ''mid portion (cisits and delivery)
  Dim leftstr2 As String
  Dim midstr2 As String
  Dim midstr22 As String
  Dim midstr23 As String
  Dim rightstr2 As String

  Dim ancList As String[] = ["First ANC Visit", "Upto 12 weeks", "16 weeks", "20-24 weeks", "28 weeks", "32 weeks", "34 weeks", "36 weeks", "38-40 weeks", "Four Times", "Eight Times"]
  Dim xanc As String
  Dim ancMedList As String[] = ["TD 1 dose", "TD 2 dose", "TD 2+ dose", "Albendazole"]
  Dim xmed As String
  Dim ancdate As Date
  Dim anclocal As String[]
  Dim xiron As String
  Dim xcalc As String
  Dim xmedDate As String

  Dim pncList As String[] = ["Within 24 hour", "3 days", "7-14 days", "42 days", "Three Times", "Four Times"]
  Dim xpnc As String
  Dim pncdate As Date
  Dim pnclocal As String[]

  ''complication and HIV
  Dim leftstr3 As String
  Dim midone3 As String
  Dim midtwo3 As String
  Dim rightstr3 As String

  Dim xantComplList As String[] = ["Ectopic pregnancy", "Abortion complication", "Pre-eclampsia", "Pre-eclampsia", "Hyperemesis grivadarum", "Antepartum haemorrhage", "Gestational Hypertension", "Other complications"]
  Dim xantCompl As String
  Dim xantArr As String[]

  Dim xdelComplList As String[] = ["Pre-eclampsia", "Eclampsia", "Prolonged labour", "Obstructed Labor", "Ruptured uterus", "Other complications"]
  Dim xdelCompl As String
  Dim xdelArr As String[]

  Dim xpostComplList As String[] = ["Pre-eclampsia", "Eclampsia", "Postpartum haemorrhage", "Retained placenta", "Pueperal sepsis", "C-Section Wound Infection", "Other complications"]
  Dim xpostCompl As String
  Dim xpostArr As String[]

  ''HIV testing
  Dim xHIVExmList As String[] = ["HIV Testing Date", "HIV Report", "HIV Treatment/Refer Date", "HIV Referral Facility", "Syphilis Testing Date", "Syphilis Report", "Syphilis Treatment Date", "Syphilis Referral Facility"]
  Dim xHIVExam As String
  Dim xHIVal As String

  ''delivery
  Dim rDel As Result
  Dim xpresent As String
  Dim xdeltype As String
  Dim xbabystate As String
  Dim xattend As String
  Dim xattname As String
  Dim xdelplace As String
  Dim xlabour As String
  Dim xgestage As Integer
  Dim xtermage As String
  Dim xstill As String

  Dim deldate As String
  Dim deladmit As String
  Dim deldisc As String
  Dim xdischge As String

  Dim xpresList As String[] = ["Cephalic", "Breech", "Shoulder"]
  Dim xlaborList As String[] = ["Spontaneous", "Augmentation", "Induced Labour"]
  Dim xdeltypeLst As String[] = ["Spontaneous", "Vacuum", "Forceps", "Caeserian"]
  Dim xbabcondLst As String[] = ["Normal", "Infection", "Asphyxia", "Hypothermia", "Jaundice"]
  Dim xprofList As String[] = ["SBA trained ANM", "Skilled Health Professional", "Other Health Professional"]
  Dim xdelspotLst As String[] = ["This facility", "Other facility", "Home"]
  Dim xstateList As String[] = ["Recovered", "Stable", "Referred out", "LAMA", "Absconded", "Died"]
  Dim xtermList As String[] = ["Pre Term", "Term"]
  Dim xstilList As String[] = ["Fresh Still Birth", "Macerated Still Birth"]

  Dim xprestable As String
  Dim xlabortable As String
  Dim xdeltypetable As String
  Dim xbabyconditable As String
  Dim xdelspotable As String
  Dim xstatetable As String
  Dim xtermtable As String
  Dim xstilltable As String

  Dim xproftable As String
  Dim xdelwttable As String

  ''start
  $BillingReport = New CReportHTMLong(["S No", "Maternal and Neonatal Register"], "", "")
  $BillingReport.UserData.Add("HMIS-3.6 (MATERNAL AND NEWBORN SERVICE REGISTER)", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(xdtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(xdtlast, gb.MediumDate), "PARAM2")
  $BillingReport.CreateHTMLFile()

  i = 1
  If sPatNo Then
    res = modDatabase.$syConn.Exec("select distinct(flddelref) as flddelref from tblobstetrics where fldtime>=&1 and fldtime<=&2 and fldpatientval=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast), sPatNo)
  Else
    res = modDatabase.$syConn.Exec("select distinct(flddelref) as flddelref from tblobstetrics where fldtime>=&1 and fldtime<=&2 and fldpatientval IS NOT NULL" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), modDate.StartSqlDate(xdtfir), modDate.EndSqlDate(xdtlast))
  Endif
  If res.Available Then
    For Each res

      leftstr1 = ""
      midstr1 = ""
      rightstr1 = ""
      xleft = ""
      xmid = ""
      xright = ""
      leftstr3 = ""
      midone3 = ""
      midtwo3 = ""
      rightstr3 = ""

      res2 = modDatabase.$syConn.Exec("select fldpatientval,fldencounterval,fldgravida,fldparity,fldlast,fldexpect,flddelref,fldtime from tblobstetrics where flddelref=&1 and fldpatientval IS NOT NULL", res["flddelref"])
      If res2.Available Then
        res1 = modDatabase.$syConn.Exec("select fldpatientval,fldptnamefir,fldptnamelast,fldethniccode,fldptaddvill,fldptaddward,fldptadddist,fldptcontact,fldptguardian,fldrelation,fldptbirday,fldencrypt from tblpatientinfo where fldpatientval=&1", res2["fldpatientval"])
        If res1.Available Then

          ''top demographic
          leftVar = New Variant[]
          aCol = New Collection
          aCol.Add("MR No.: " & modPatient.GetPatientHMISRegValue(res2["fldencounterval"]), CStr(0))
          If sDecrypt = True Then
            aCol.Add("Name: " & modPassword.DecryptPatData(res1["fldptnamefir"], res1["fldencrypt"]) & modString.HTMLBlankSpace(1) & modPassword.DecryptPatData(res1["fldptnamelast"], res1["fldencrypt"]), CStr(1))
          Else
            aCol.Add("Name: " & res1["fldptnamefir"] & modString.HTMLBlankSpace(1) & res1["fldptnamelast"], CStr(1))
          Endif
          leftVar.Add(aCol)
          aCol = New Collection
          If res2["flddelref"] Then
            aCol.Add("Service No.: " & res2["flddelref"], CStr(0))
          Else
            aCol.Add("Service No.: ", CStr(0))
          Endif
          If res1["fldptguardian"] Then
            aCol.Add("Husband: " & res1["fldptguardian"], CStr(1))
          Else
            aCol.Add("Husband: " & "", CStr(1))
          Endif
          leftVar.Add(aCol)
          leftstr1 = modString.GetRichTableNoHeadFromVariant(2, leftVar)

          midVar = New Variant[]
          aCol = New Collection
          If res1["fldethniccode"] Then
            aCol.Add("Ethn.: " & res1["fldethniccode"], CStr(0))
          Else
            aCol.Add("Ethn.: ", CStr(0))
          Endif
          aCol.Add("Age.: " & modDate.GetAgeString(res1["fldptbirday"], res2["fldtime"]), CStr(1))
          If res1["fldptcontact"] Then
            If sDecrypt = True Then
              aCol.Add("Contact: " & modPassword.DecryptPatData(res1["fldptcontact"], res1["fldencrypt"]), CStr(2))
            Else
              aCol.Add("Contact: " & res1["fldptcontact"], CStr(2))
            Endif
          Else
            aCol.Add("Contact: ", CStr(2))
          Endif
          midVar.Add(aCol)
          aCol = New Collection
          If res1["fldptadddist"] Then
            aCol.Add("District: " & res1["fldptadddist"], CStr(0))
          Else
            aCol.Add("District: ", CStr(0))
          Endif
          If res1["fldptaddvill"] Then
            aCol.Add("Municipality: " & res1["fldptaddvill"], CStr(1))
          Else
            aCol.Add("Municipality: ", CStr(1))
          Endif
          If res1["fldptaddward"] Then
            aCol.Add("Ward No.: " & res1["fldptaddward"], CStr(2))
          Else
            aCol.Add("Ward No.: ", CStr(2))
          Endif
          midVar.Add(aCol)
          midstr1 = modString.GetRichTableNoHeadFromVariant(3, midVar)

          rightVar = New Variant[]
          aCol = New Collection
          aCol.Add("Gravida", CStr(0))
          aCol.Add(res2["fldgravida"], CStr(1))
          aCol.Add("LMP", CStr(2))
          If res2["fldlast"] Then
            xlmp = Split(modDate.ConvertToLocaldate(res2["fldlast"]), "/")
            aCol.Add(xlmp[2], CStr(3))
            aCol.Add(xlmp[1], CStr(4))
            aCol.Add(xlmp[0], CStr(5))
          Else
            aCol.Add("", CStr(3))
            aCol.Add("", CStr(4))
            aCol.Add("", CStr(5))
          Endif
          rightVar.Add(aCol)
          aCol = New Collection
          aCol.Add("Para", CStr(0))
          aCol.Add(res2["fldparity"], CStr(1))
          aCol.Add("EDD", CStr(2))
          If res2["fldexpect"] Then
            xedd = Split(modDate.ConvertToLocaldate(res2["fldexpect"]), "/")
            aCol.Add(xedd[2], CStr(3))
            aCol.Add(xedd[1], CStr(4))
            aCol.Add(xedd[0], CStr(5))
          Else
            aCol.Add("", CStr(3))
            aCol.Add("", CStr(4))
            aCol.Add("", CStr(5))
          Endif
          rightVar.Add(aCol)
          rightstr1 = modString.GetRichTableNoHeadFromVariant(6, rightVar)

          leftstr2 = ""
          ''ANCvisit
          leftVar = New Variant[]
          For Each xanc In ancList
            aCol = New Collection
            aCol.Add(xanc, CStr(0))
            ancdate = GetMaternalVisitConsDate(res1["fldpatientval"], "ANC Visit", xanc, res2["fldlast"], sLocaType, sLocation)
            If ancdate Then
              anclocal = Split(modDate.ConvertToLocaldate(ancdate), "/")
              aCol.Add(anclocal[2], CStr(1))
              aCol.Add(anclocal[1], CStr(2))
              aCol.Add(anclocal[0], CStr(3))
            Else
              aCol.Add("", CStr(1))
              aCol.Add("", CStr(2))
              aCol.Add("", CStr(3))
            Endif
            Select xanc
              Case "First ANC Visit", "Upto 12 weeks", "Four Times", "Eight Times"
                aCol.Add("", CStr(4))
                aCol.Add("", CStr(5))
              Case Else
                xiron = GetMaternalExamDirect(xanc, "Iron and Folic Acid tablets", res1["fldpatientval"], sLocaType, sLocation)
                xcalc = GetMaternalExamDirect(xanc, "Iron and Folic Acid tablets", res1["fldpatientval"], sLocaType, sLocation)
                aCol.Add(xiron, CStr(4))
                aCol.Add(xcalc, CStr(5))
            End Select
            leftVar.Add(aCol)
          Next
          For Each xmed In ancMedList
            aCol = New Collection
            aCol.Add(xmed, CStr(0))
            xmedDate = GetMaternalExamValue("ANC Visit", xmed, res1["fldpatientval"], sLocaType, sLocation)
            If xmedDate Then
              anclocal = Split(xmedDate, "/")
              aCol.Add(anclocal[2], CStr(1))
              aCol.Add(anclocal[1], CStr(2))
              aCol.Add(anclocal[0], CStr(3))
            Else
              aCol.Add("", CStr(1))
              aCol.Add("", CStr(2))
              aCol.Add("", CStr(3))
            Endif
            If xmed = "TD 1 dose" Then
              aCol.Add("Blood", CStr(4))
              aCol.Add("", CStr(5))
            Else If xmed = "TD 2 dose" Then
              aCol.Add("Advice", CStr(4))
              aCol.Add("", CStr(5))
            Else
              aCol.Add("", CStr(4))
              aCol.Add("", CStr(5))
            Endif
            leftVar.Add(aCol)
          Next
          leftstr2 = modString.GetRichTableStringFromVariant(["ANC Visit", "Day", "Mon", "Year", "Iron", "Cal"], leftVar)

          ''PNC
          rightstr2 = ""
          rightVar = New Variant[]
          For Each xpnc In pncList
            aCol = New Collection
            aCol.Add(xpnc, CStr(0))
            pncdate = GetMaternalVisitConsDate(res1["fldpatientval"], "PNC Visit", xpnc, res2["fldlast"], sLocaType, sLocation)
            If pncdate Then
              pnclocal = Split(modDate.ConvertToLocaldate(pncdate), "/")
              aCol.Add(pnclocal[2], CStr(1))
              aCol.Add(pnclocal[1], CStr(2))
              aCol.Add(pnclocal[0], CStr(3))
            Else
              aCol.Add("", CStr(1))
              aCol.Add("", CStr(2))
              aCol.Add("", CStr(3))
            Endif
            aCol.Add("", CStr(4))
            rightVar.Add(aCol)
          Next
          aCol = New Collection
          aCol.Add("Vitamin A", CStr(0))
          xmedDate = GetMaternalExamValue("PNC Visit", "Vitamin A", res1["fldpatientval"], sLocaType, sLocation)
          If xmedDate Then
            pnclocal = Split(xmedDate, "/")
            aCol.Add(pnclocal[2], CStr(1))
            aCol.Add(pnclocal[1], CStr(2))
            aCol.Add(pnclocal[0], CStr(3))
          Else
            aCol.Add("", CStr(1))
            aCol.Add("", CStr(2))
            aCol.Add("", CStr(3))
          Endif
          aCol.Add("", CStr(4))
          rightVar.Add(aCol)
          rightstr2 = modString.GetRichTableStringFromVariant(["PNC Visit", "Day", "Mon", "Year", "Newborn"], rightVar)

          ''DELIVERY
          midstr2 = ""
          rDel = modDatabase.$syConn.Exec("select fldencounterval,flddeltime,fldpresent,flddeltype,flddelresult,flddelphysician,flddelassist,flddelspot,fldcomplication,flddeformity,fldlabour,flddelwt,fldbabypatno,fldcomment,flddelnurse from tblconfinement where fldreference=&1", res["flddelref"])
          If rDel.Available Then
            rDel.MoveFirst
            If rDel["fldpresent"] Then
              xpresent = rDel["fldpresent"]
            Else
              xpresent = ""
            Endif
            If rDel["flddeltype"] Then
              xdeltype = modHMISReport.GetDBHMISettingCategory("DeliveryTypes", rDel["flddeltype"])
            Else
              xdeltype = ""
            Endif
            If rDel["fldcomplication"] Then
              xbabystate = modHMISReport.GetDBHMISettingCategory("BabyConditions", rDel["fldcomplication"])
            Else
              xbabystate = ""
            Endif
            If rDel["flddelassist"] Then
              xattend = rDel["flddelassist"]
            Else
              xattend = ""
            Endif
            If rDel["flddelspot"] Then
              xdelplace = rDel["flddelspot"]
            Else
              xdelplace = ""
            Endif
            If rDel["flddelnurse"] Then
              xattname = rDel["flddelnurse"]
            Else
              xattname = ""
            Endif
            If rDel["fldlabour"] Then
              xlabour = modHMISReport.GetDBHMISettingCategory("LabourInduction", rDel["fldlabour"])
            Else
              xlabour = ""
            Endif
            If rDel["flddelresult"] Then
              If rDel["flddelresult"] = "Live Baby" Then
                xgestage = DateDiff(res2["fldlast"], rDel["flddeltime"], gb.Day)
                If xgestage < 259 Then
                  xtermage = "Pre Term"
                Else
                  xtermage = "Term"
                Endif
              Else
                xstill = rDel["flddelresult"]
              Endif
            Else
              xtermage = ""
              xstill = ""
            Endif
            xdischge = GetMaternalDischargeState(rDel["fldencounterval"])
            deldate = modDate.ConvertToLocaldate(rDel["flddeltime"])
            deladmit = modDate.ConvertToLocaldate(modPatient.GetAdmissionDate(rDel["fldencounterval"]))
            deldisc = modDate.ConvertToLocaldate(modPatient.GetDischargeDate(rDel["fldencounterval"]))

          Else
            xpresent = ""
            xdeltype = ""
            xbabystate = ""
            xattend = ""
            xdelplace = ""
            xattname = ""
            xlabour = ""
            xgestage = 0
            xdischge = ""
            deldate = ""
            deladmit = ""
            deldisc = ""
            xtermage = ""
            xstill = ""
          Endif

          xprestable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xpresent, xpresList))
          xlabortable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xlabour, xlaborList))
          xdeltypetable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xdeltype, xdeltypeLst))
          xbabyconditable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xbabystate, xbabcondLst))
          xdelspotable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xdelplace, xdelspotLst))
          xstatetable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xdischge, xstateList))
          xtermtable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xtermage, xtermList))
          xstilltable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xstill, xstilList))

          xproftable = modString.GetRichTableNoHeadFromVariant(2, GetMaternalValueTable(xattend, xprofList))
          xdelwttable = modString.GetRichTableStringFromVariant(["Gender", "Count", "Birth Wt", "Malformation"], GetMaternalBabyProfile(res["flddelref"]))

          midstr2 = modRepoTemplete.HTMLTableSyntax()
          midstr2 = midstr2 & "<tr>" & gb.NewLine
          midstr2 = midstr2 & "<td>" & "Admission Date" & "</td>" & gb.NewLine
          midstr2 = midstr2 & "<td>" & "Delivery Date" & "</td>" & gb.NewLine
          midstr2 = midstr2 & "<td>" & "Discharge Date" & "</td>" & gb.NewLine
          midstr2 = midstr2 & "</tr>" & gb.NewLine

          midstr2 = midstr2 & "<tr>" & gb.NewLine
          midstr2 = midstr2 & "<td>" & deladmit & "</td>" & gb.NewLine
          midstr2 = midstr2 & "<td>" & deldate & "</td>" & gb.NewLine
          midstr2 = midstr2 & "<td>" & deldisc & "</td>" & gb.NewLine
          midstr2 = midstr2 & "</tr>" & gb.NewLine
          midstr2 = midstr2 & "</table>"

          midstr22 = modRepoTemplete.HTMLTableSyntax()
          midstr22 = midstr22 & "<tr>" & gb.NewLine
          midstr22 = midstr22 & "<td>" & "<b>Foetal Presentation</b>" & "<br>" & xprestable & "<b>Newborn Condition</b>" & "<br>" & xbabyconditable & "</td>" & gb.NewLine
          midstr22 = midstr22 & "<td>" & "<b>Labour Induction</b>" & "<br>" & xlabortable & "<b>Live Baby</b>" & "<br>" & xtermtable & "<b>Still Births</b>" & "<br>" & xstilltable & "</td>" & gb.NewLine
          midstr22 = midstr22 & "<td>" & "<b>Delivery Type</b>" & "<br>" & xdeltypetable & "<b>Delivery Spot</b>" & "<br>" & xdelspotable & "</td>" & gb.NewLine
          midstr22 = midstr22 & "<td>" & "<b>Discharge Type</b>" & "<br>" & xstatetable & "</td>" & gb.NewLine
          midstr22 = midstr22 & "</tr>" & gb.NewLine
          midstr22 = midstr22 & "</table>"

          midstr23 = modRepoTemplete.HTMLTableSyntax()
          midstr23 = midstr23 & "<tr>" & gb.NewLine
          midstr23 = midstr23 & "<td>" & "<b>Live Baby Weight</b>" & xdelwttable & "</td>" & gb.NewLine
          midstr23 = midstr23 & "<td>" & "<b>Birth Attendant</b>" & xproftable & "</td>" & gb.NewLine
          midstr23 = midstr23 & "<td>" & "" & "</td>" & gb.NewLine
          midstr23 = midstr23 & "</tr>" & gb.NewLine
          midstr23 = midstr23 & "</table>"

          ''ANC complication
          leftVar = New Variant[]
          For Each xantCompl In xantComplList
            xantArr = GetMaternalComplicationArray("ANC Visit", xantCompl, res1["fldpatientval"], res2["fldlast"], sLocaType, sLocation)
            aCol = New Collection
            aCol.Add(xantCompl, CStr(0))
            If xantArr Then
              aCol.Add(xantArr[0], CStr(1))
              aCol.Add(xantArr[1], CStr(2))
              aCol.Add(xantArr[2], CStr(3))
            Else
              aCol.Add("", CStr(1))
              aCol.Add("", CStr(2))
              aCol.Add("", CStr(3))
            Endif
            leftVar.Add(aCol)
          Next
          leftstr3 = modString.GetRichTableStringFromVariant(["ANC Complications", "Month", "Treat", "Refer"], leftVar)

          ''HIV tests
          midVar = New Variant[]
          For Each xHIVExam In xHIVExmList
            xHIVal = GetMaternalExamValue("ANC Visit", xHIVExam, res1["fldpatientval"], sLocaType, sLocation)
            aCol = New Collection
            aCol.Add(xHIVExam, CStr(0))
            aCol.Add(xHIVal, CStr(1))
            midVar.Add(aCol)
          Next
          midone3 = modString.GetRichTableStringFromVariant(["Variable", "Value"], midVar)

          ''Del complication
          midVar = New Variant[]
          For Each xdelCompl In xdelComplList
            xdelArr = GetMaternalComplicationArray("On Delivery", xdelCompl, res1["fldpatientval"], res2["fldlast"], sLocaType, sLocation)
            aCol = New Collection
            aCol.Add(xdelCompl, CStr(0))
            If xdelArr Then
              aCol.Add(xdelArr[0], CStr(1))
              aCol.Add(xdelArr[1], CStr(2))
              aCol.Add(xdelArr[2], CStr(3))
            Else
              aCol.Add("", CStr(1))
              aCol.Add("", CStr(2))
              aCol.Add("", CStr(3))
            Endif
            midVar.Add(aCol)
          Next
          midtwo3 = modString.GetRichTableStringFromVariant(["Del Complications", "Month", "Treat", "Refer"], midVar)

          ''PNC complication
          rightVar = New Variant[]
          For Each xpostCompl In xpostComplList
            xpostArr = GetMaternalComplicationArray("PNC Visit", xpostCompl, res1["fldpatientval"], res2["fldlast"], sLocaType, sLocation)
            aCol = New Collection
            aCol.Add(xpostCompl, CStr(0))
            If xpostArr Then
              aCol.Add(xpostArr[0], CStr(1))
              aCol.Add(xpostArr[1], CStr(2))
              aCol.Add(xpostArr[2], CStr(3))
            Else
              aCol.Add("", CStr(1))
              aCol.Add("", CStr(2))
              aCol.Add("", CStr(3))
            Endif
            rightVar.Add(aCol)
          Next
          rightstr3 = modString.GetRichTableStringFromVariant(["PNC Complications", "Month", "Treat", "Refer"], rightVar)

        Endif
      Endif

      ''left side
      xleft = leftstr2

      ''mid side
      xmid = midstr2 & midstr22 & midstr23

      ''right side
      xright = rightstr2

      ''sum up table
      xtable = modRepoTemplete.HTMLTableSyntax()
      ''header
      xtable = xtable & "<tr>" & gb.NewLine
      xtable = xtable & "<td>" & leftstr1 & "</td>" & gb.NewLine
      xtable = xtable & "<td>" & midstr1 & "</td>" & gb.NewLine
      xtable = xtable & "<td>" & rightstr1 & "</td>" & gb.NewLine
      xtable = xtable & "</tr>" & gb.NewLine
      ''main table
      xtable = xtable & "<tr>" & gb.NewLine
      xtable = xtable & "<td>" & "<b>Antepartum</b>" & "<br>" & xleft & "</td>" & gb.NewLine
      xtable = xtable & "<td>" & "<b>Intrapartum</b>" & "<br>" & xmid & "</td>" & gb.NewLine
      xtable = xtable & "<td>" & "<b>Postpartum</b>" & "<br>" & xright & "</td>" & gb.NewLine
      xtable = xtable & "</tr>" & gb.NewLine
      ''complication
      xtable = xtable & "<tr>" & gb.NewLine
      xtable = xtable & "<td>" & "<b>Complication during Pregnancy</b>" & "<br>" & leftstr3 & "</td>" & gb.NewLine

      xtable = xtable & "<td>" & gb.NewLine
      xtable = xtable & modRepoTemplete.HTMLTableSyntax()
      xtable = xtable & "<tr>" & gb.NewLine
      xtable = xtable & "<td>" & "<b>HIV/Syphilis Examination</b>" & "<br>" & midone3 & "</td>" & gb.NewLine
      xtable = xtable & "<td>" & "<b>Complication during Delivery</b>" & "<br>" & midtwo3 & "</td>" & gb.NewLine
      xtable = xtable & "</tr>" & gb.NewLine
      xtable = xtable & "</table>"
      xtable = xtable & "</td>" & gb.NewLine

      xtable = xtable & "<td>" & "<b>Complication after Delivery</b>" & "<br>" & rightstr3 & "</td>" & gb.NewLine
      xtable = xtable & "</tr>" & gb.NewLine
      ''end of table
      xtable = xtable & "</table>"

      ''add to Class
      With asx
        .Add(CStr(i))
        .Add(xtable)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("")
        .Add("X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1

    Next
  Endif

  xPath = $BillingReport.NewHTMLPath()
  Return xPath

End

''---------------------- Modules -----------------------------
Private Function GetMaternalVisitConsDate(patNo As String, consultname As String, sComment As String, LMPDate As Date, sLocaType As String, sLocation As String) As Date

  Dim res As Result
  Dim xx As Date
  Dim xgroup As String

  Dim xfouranc As String[] = ["16 weeks", "20-24 weeks", "32 weeks", "36 weeks"]
  Dim xeightanc As String[] = ["Upto 12 weeks", "16 weeks", "20-24 weeks", "28 weeks", "32 weeks", "34 weeks", "36 weeks", "38-40 weeks"]
  Dim threepnc As String[] = ["Within 24 hour", "3 days", "7-14 days"]
  Dim xfourpnc As String[] = ["Within 24 hour", "3 days", "7-14 days", "42 days"]
  Dim I As Integer

  For I = 0 To xfouranc.Max
    xfouranc[I] = "'" & xfouranc[I] & "'"
  Next
  For I = 0 To xeightanc.Max
    xeightanc[I] = "'" & xeightanc[I] & "'"
  Next
  For I = 0 To threepnc.Max
    threepnc[I] = "'" & threepnc[I] & "'"
  Next
  For I = 0 To xfourpnc.Max
    xfourpnc[I] = "'" & xfourpnc[I] & "'"
  Next

  xgroup = modDataRepo.SerialField()
  Select sComment
    Case "First ANC Visit"
      res = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldconsultname=&2 and fldnotice=&3 and fldstatus=&4 and fldconsulttime>=&5 and fldconsulttime<=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), patNo, consultname, "First Visit", "Done", LMPDate, DateAdd(LMPDate, gb.Year, 1))
    Case "Three Times"
      res = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldconsultname=&2 and fldcomment in(" & threepnc.Join(",") & ") and fldstatus=&3 and fldconsulttime>=&4 and fldconsulttime<=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", patNo, consultname, "Done", LMPDate, DateAdd(LMPDate, gb.Year, 1), 3)

    Case "Four Times"
      If consultname = "ANC Visit" Then
        res = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldconsultname=&2 and fldcomment in(" & xfouranc.Join(",") & ") and fldstatus=&3 and fldconsulttime>=&4 and fldconsulttime<=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", patNo, consultname, "Done", LMPDate, DateAdd(LMPDate, gb.Year, 1), 4)
      Else If consultname = "PNC Visit" Then
        res = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldconsultname=&2 and fldcomment in(" & xfourpnc.Join(",") & ") and fldstatus=&3 and fldconsulttime>=&4 and fldconsulttime<=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", patNo, consultname, "Done", LMPDate, DateAdd(LMPDate, gb.Year, 1), 4)
      Endif

    Case "Eight Times"
      res = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldconsultname=&2 and fldcomment in(" & xeightanc.Join(",") & ") and fldstatus=&3 and fldconsulttime>=&4 and fldconsulttime<=&5" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " GROUP BY " & xgroup & " HAVING COUNT(*)=&6", patNo, consultname, "Done", LMPDate, DateAdd(LMPDate, gb.Year, 1), 8)

    Case Else
      res = modDatabase.$syConn.Exec("select fldconsulttime from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldconsultname=&2 and fldcomment=&3 and fldstatus=&4 and fldconsulttime>=&5 and fldconsulttime<=&6" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation), patNo, consultname, sComment, "Done", LMPDate, DateAdd(LMPDate, gb.Year, 1))

  End Select

  If res.Available Then
    res.MoveLast
    If res["fldconsulttime"] Then
      xx = res["fldconsulttime"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Private Function GetMaternalComplicationArray(sDept As String, sName As String, sPatNo As String, xLast As Date, sLocaType As String, sLocation As String) As String[]

  Dim res As Result
  Dim sql As String
  Dim xancLst As String[] = ["Upto 12 weeks", "16 weeks", "20-24 weeks", "28 weeks", "32 weeks", "34 weeks", "36 weeks", "38-40 weeks"]
  Dim xpncLst As String[] = ["Within 24 hour", "3 days", "7-14 days", "42 days"]
  Dim I As Integer
  Dim xxx As String[]
  Dim xmon As Integer

  For I = 0 To xancLst.Max
    xancLst[I] = "'" & xancLst[I] & "'"
  Next
  For I = 0 To xpncLst.Max
    xpncLst[I] = "'" & xpncLst[I] & "'"
  Next

  sql = modHMISReport.GetDBHMISettingQuery("ObsComplications", sName)
  If sDept = "ANC Visit" Then
    res = modDatabase.$syConn.Exec("select fldtime,fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead in " & sql & " and fldmethod=&2 and fldinput in(" & xancLst.Join(",") & ")" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, "HMIS 3.61")
  Else If sDept = "PNC Visit" Then
    res = modDatabase.$syConn.Exec("select fldtime,fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead in " & sql & " and fldmethod=&2 and fldinput in(" & xpncLst.Join(",") & ")" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, "HMIS 3.61")
  Else If sDept = "On Delivery" Then
    res = modDatabase.$syConn.Exec("select fldtime,fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead in " & sql & " and fldmethod=&2 and fldinput=&3" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, "HMIS 3.61", "On Delivery")
  Endif
  If res.Available Then
    res.MoveFirst
    xmon = DateDiff(xLast, res["fldtime"], gb.Month)
    res.MoveLast
    If res["fldrepquali"] And If res["fldrepquali"] = "Treatment" Then
      xxx = [xmon, "X", "."]
    Else If res["fldrepquali"] And If res["fldrepquali"] = "Referred" Then
      xxx = [xmon, ".", "X"]
    Else
      xxx = [xmon, ".", "."]
    Endif
  Endif
  Return xxx

End

Private Function GetMaternalExamValue(sDept As String, sName As String, sPatNo As String, sLocaType As String, sLocation As String) As String

  Dim res As Result
  Dim xancLst As String[] = ["Upto 12 weeks", "16 weeks", "20-24 weeks", "28 weeks", "32 weeks", "34 weeks", "36 weeks", "38-40 weeks"]
  Dim xpncLst As String[] = ["Within 24 hour", "3 days", "7-14 days", "42 days"]
  Dim I As Integer
  Dim xval As String

  For I = 0 To xancLst.Max
    xancLst[I] = "'" & xancLst[I] & "'"
  Next
  For I = 0 To xpncLst.Max
    xpncLst[I] = "'" & xpncLst[I] & "'"
  Next

  If sDept = "ANC Visit" Then
    res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead=&2 and fldmethod=&3 and fldinput in(" & xancLst.Join(",") & ")" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, sName, "HMIS 3.61")
  Else If sDept = "PNC Visit" Then
    res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead=&2 and fldmethod=&3 and fldinput in(" & xpncLst.Join(",") & ")" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, sName, "HMIS 3.61")
  Else If sDept = "On Delivery" Then
    res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead=&2 and fldmethod=&3 and fldinput=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, sName, "HMIS 3.61", "On Delivery")
  Endif
  If res.Available Then
    res.MoveFirst
    If res["fldrepquali"] Then
      xval = res["fldrepquali"]
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Private Function GetMaternalExamDirect(sDeptVal As String, sName As String, sPatNo As String, sLocaType As String, sLocation As String) As String

  Dim res As Result
  Dim xval As String

  res = modDatabase.$syConn.Exec("select fldrepquali from tblpatientexam where fldencounterval in(select fldencounterval from tblencounter where fldpatientval=&1) and fldhead=&2 and fldmethod=&3 and fldinput=&4" & modDataRepo.GetWhereStringRepo(sLocaType, sLocation) & " ORDER BY fldtime ASC", sPatNo, sName, "HMIS 3.61", sDeptVal)
  If res.Available Then
    res.MoveFirst
    If res["fldrepquali"] Then
      xval = res["fldrepquali"]
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Private Function GetMaternalValueTable(sValue As String, sList As String[]) As Variant[]

  Dim xitem As String
  Dim sVar As Variant[]
  Dim aCol As Collection

  sVar = New Variant[]
  For Each xitem In sList
    If sValue Then
      aCol = New Collection
      aCol.Add(xitem, CStr(0))
      If xitem = sValue Then
        aCol.Add("X", CStr(1))
      Else
        aCol.Add(".", CStr(1))
      Endif
      sVar.Add(aCol)

    Else
      aCol = New Collection
      aCol.Add(xitem, CStr(0))
      aCol.Add(".", CStr(1))
      sVar.Add(aCol)

    Endif
  Next

  Return sVar

End

Private Function GetMaternalDischargeState(encid As String) As String

  Dim xstatus As String
  Dim xoutc As String
  Dim xdisc As String

  xstatus = modPatient.CurrentAdmissionStatus(encid)
  Select xstatus
    Case "Discharged"
      xdisc = modPatient.GetPatExitComment(encid, "Discharged")
      If xdisc = "Recovered" Then
        xoutc = "Recovered"
      Else If xdisc = "Improved" Then
        xoutc = "Recovered"
      Else If xdisc = "Unchanged" Then
        xoutc = "Stable"
      Else If xdisc = "Worse" Then
        xoutc = ""
      Endif
    Case "Refer"
      xoutc = "Referred out"
    Case "Absconder"
      xoutc = "Absconded"
    Case "Death"
      xoutc = "Died"
    Case "LAMA"
      xoutc = "LAMA"
  End Select

  Return xoutc

End

Private Function GetMaternalBabyProfile(xrefNo As String) As Variant[]

  Dim sVar As Variant[]
  Dim aColl As Collection
  Dim sgenList As String[] = ["Female", "Male"]
  Dim xgender As String

  Dim res1 As Result
  Dim xcount As String
  Dim res2 As Result
  Dim wtLst As String[]
  Dim res3 As Result
  Dim xdefLst As String[]
  Dim xdeform As String

  sVar = New Variant[]
  For Each xgender In sgenList
    aColl = New Collection
    aColl.Add(xgender, CStr(0))
    res1 = modDatabase.$syConn.Exec("select COUNT(fldbabypatno) as xcnt  from tblconfinement where fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&1) and fldreference=&2", xgender, xrefNo)
    If res1.Available And If res1["xcnt"] Then
      xcount = CStr(res1["xcnt"])
    Else '
      xcount = ""
    Endif
    aColl.Add(xcount, CStr(1))

    wtLst = New String[]
    res2 = modDatabase.$syConn.Exec("select flddelwt from tblconfinement where fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&1) and fldreference=&2", xgender, xrefNo)
    If res2.Available Then
      For Each res2
        If res2["flddelwt"] Then
          wtLst.Add(CStr(res2["flddelwt"]))
        Endif
      Next
    Endif
    aColl.Add(wtLst.Join(";"), CStr(2))

    xdefLst = New String[]
    res3 = modDatabase.$syConn.Exec("select flddeformity from tblconfinement where fldbabypatno in(select fldpatientval from tblpatientinfo where fldptsex=&1) and fldreference=&2", xgender, xrefNo)
    If res3.Available Then
      For Each res3
        If res3["flddeformity"] Then
          xdeform = modHMISReport.GetDBHMISettingCategory("BirthDeformity", res3["flddeformity"])
          If xdeform = "Major Malformations" Then
            xdefLst.Add("Major")
          Else If xdeform = "Minor Malformations" Then
            xdefLst.Add("Minor")
          Else If xdeform = "Other Malformations" Then
            xdefLst.Add("Other")
          Endif
        Endif
      Next
    Endif
    aColl.Add(xdefLst.Join(";"), CStr(3))

    sVar.Add(aColl)
  Next

  Return sVar

End
