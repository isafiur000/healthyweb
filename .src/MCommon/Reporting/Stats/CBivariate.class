' Gambas class file

Private $ReportPath As String
Private ReportFile As File

Private sColl As New Collection
Private xsortVar As New String[]

Private aColl As New Collection
Private aArry As New String[]

Public Sub _new()

  $ReportPath = Temp()
  ReportFile = Open $ReportPath For Write Create

End

Public Sub Add(sArry As Variant[])

  Dim aa As Variant
  Dim bb As Variant

  Dim aafinal As String
  Dim bbfinal As String
  Dim afinalx As Variant
  Dim bfinalx As Variant

  Dim pprow As String
  Dim ppcol As String
  Dim xindep As String
  Dim xoutdep As String

  ' ' modCustPatient.AddFormatCrossVarRowToList
  If modCustPatient.$CrossUseGridValRow = "Yes" Then
    If modCustPatient.$CrossGridRow Then
      aa = sArry[0]
    Else
      aa = modCustPatient.CrossRowGridValue(sArry[0])
    Endif
  Else
    aa = modCustPatient.CrossRowChartValue(sArry[0])
  Endif
  ' ' modCustPatient.AddFormatCrossVarColumnToList
  If modCustPatient.$CrossUseGridValCol = "Yes" Then
    If modCustPatient.$CrossGridColumn Then
      bb = sArry[1]
    Else
      bb = modCustPatient.CrossColGridValue(sArry[1])
    Endif
  Else
    bb = modCustPatient.CrossColChartValue(sArry[1])
  Endif

  ' ' modPSPP.GetCrossTabStats
  afinalx = modCustPatient.FormatCrossRow(aa)
  aafinal = CStr(afinalx)
  If aafinal = "__" Then
    aafinal = ""
  Endif

  bfinalx = modCustPatient.FormatCrossColumn(bb)
  bbfinal = CStr(bfinalx)
  If bbfinal = "__" Then
    bbfinal = ""
  Endif

  ''select analysis
  If modCustPatient.$CrossIndepType = "String" And If modCustPatient.$CrossOutcomeType = "Nominal" Then
    If Len(aafinal) And If Len(bbfinal) Then
      ''for variable coding
      If Not sColl.Exist(Quote(aafinal)) Then
        sColl[Quote(aafinal)] = True
        xsortVar.Add(Quote(aafinal))
      Endif
      ''for data list
      Write #ReportFile, Quote(aafinal) & gb.Tab & Quote(bbfinal) & gb.NewLine
    Endif

  Else If modCustPatient.$CrossIndepType = "String" And If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    If Len(aafinal) And If Len(bbfinal) Then
      ''for variable coding
      If Not sColl.Exist(Quote(aafinal)) Then
        sColl[Quote(aafinal)] = True
        xsortVar.Add(Quote(aafinal))
      Endif
      ''for data list
      Write #ReportFile, Quote(aafinal) & gb.Tab & Quote(bbfinal) & gb.NewLine
      If Not aColl.Exist(bbfinal) Then
        aColl[bbfinal] = True
        aArry.Add(bbfinal)
      Endif
    Endif

  Else If modCustPatient.$CrossIndepType = "String" And If modCustPatient.$CrossOutcomeType = "Scale" Then
    If TypeOf(bbfinal) = gb.Float Or If TypeOf(bbfinal) = gb.Integer Then
      ppcol = Format(bbfinal, gb.Fixed)
    Else If TypeOf(bbfinal) = gb.String Then
      If Len(bbfinal) Then
        If IsNumber(bbfinal) Then
          ppcol = Format(bbfinal, gb.Fixed)
        Endif
      Endif
    Endif
    xoutdep = modCustPatient.GetLimitCrossOutcome(ppcol)
    If Len(aafinal) And If xoutdep Then
      ''for variable coding
      If Not sColl.Exist(Quote(aafinal)) Then
        sColl[Quote(aafinal)] = True
        xsortVar.Add(Quote(aafinal))
      Endif
      ''for data list
      Write #ReportFile, Quote(aafinal) & gb.Tab & xoutdep & gb.NewLine
    Endif

  Else If modCustPatient.$CrossIndepType = "Numerical" And If modCustPatient.$CrossOutcomeType = "Scale" Then
    If TypeOf(aafinal) = gb.Float Or If TypeOf(aafinal) = gb.Integer Then
      pprow = Format(aafinal, gb.Fixed)
    Else If TypeOf(aafinal) = gb.String Then
      If Len(aafinal) Then
        If IsNumber(aafinal) Then
          pprow = Format(aafinal, gb.Fixed)
        Endif
      Endif
    Endif
    xindep = modCustPatient.GetLimitCrossIndep(pprow)
    If TypeOf(bbfinal) = gb.Float Or If TypeOf(bbfinal) = gb.Integer Then
      ppcol = Format(bbfinal, gb.Fixed)
    Else If TypeOf(bbfinal) = gb.String Then
      If Len(bbfinal) Then
        If IsNumber(bbfinal) Then
          ppcol = Format(bbfinal, gb.Fixed)
        Endif
      Endif
    Endif
    xoutdep = modCustPatient.GetLimitCrossOutcome(ppcol)
    If xindep And If xoutdep Then
      Write #ReportFile, xindep & gb.Tab & xoutdep & gb.NewLine
    Endif
  Endif

End

Public Function GetGroups() As String[]

  Return xsortVar

End

Public Function DistinctValues() As String[]

  Return aArry

End

Public Function GetSPSSFile() As String

  Close #ReportFile
  Return $ReportPath

End
