' Gambas class file

Private $newCon As Connection

Public Sub _new()

  cmbtypeA.List = ["sqlite3", "mysql", "postgresql", "odbc"]
  rbhosp.Value = True
  rbinnodb.Value = True

End

Public Sub cmbtypeA_Click()

  If cmbtypeA.Text = "sqlite3" Then
    txtserverA.Text = User.Home &/ "/html/docs"
  Else
    txtserverA.Text = ""
  Endif

End

Public Sub btncreate_Click()

  If rbmemory.Value = True Then
    modDBTables.$DbEngine = "HEAP"
  Else
    modDBTables.$DbEngine = ""
  Endif
  $newCon = modDBApp.OpenConnection(cmbtypeA.Text, txtserverA.Text, "", txtuserA.Text, txtpassA.text)
  If $newCon.Opened = True Then
    If Not modDatabase.$myConn.Databases.Exist(txtdbA.Text) Then
      $newCon.Databases.Add(txtdbA.Text)
    Endif
    Try $newCon.Close()
    Me.Exec("Toastify({text: 'Database created', duration: 3000}).showToast()")
  Endif

End

Public Sub btnstruct_Click()

  $newCon = modDBApp.OpenConnection(cmbtypeA.Text, txtserverA.Text, txtdbA.Text, txtuserA.Text, txtpassA.text)
  If rbextern.Value = True Then
    CreateExternalTables($newCon)
  Else
    If rbrepo.Value = True Then
      modDBTables.$DbFormat = "REP"
    Else
      modDBTables.$DbFormat = "HIS"
    Endif
    If chkselect.Value = True Then
      CreateApplicationTables($newCon)
    Else
      modDBGroup.CreateDatabaseForSish($newCon)
    Endif
  Endif
  Try $newCon.Close()
  Message.Info(("Tables creation completed"), ("OK"))

End

Public Sub btntemplate_Click()

  If Exist(txttemplate.Text) Then
    $newCon = modDBApp.OpenConnection(cmbtypeA.Text, txtserverA.Text, txtdbA.Text, txtuserA.Text, txtpassA.text)
    If $newCon.Opened = True Then
      $newCon.ApplyTemplate(File.Load(txttemplate.Text))
    Endif
  Endif
  Try $newCon.Close()

End

Private Sub CreateApplicationTables(sCon As Connection)

  Dim xList As String[]
  Dim aList As String[]
  Dim aTable As String

  aList = modDBApp.FillDBTables(modDatabase.$myConn, True)
  xList = SelectListView("select Tables", aList, False)
  If xList Then
    For Each aTable In xList
      modDBGroup.CreateRequiredTable(sCon, aTable)
    Next
  Endif

End

Private Sub CreateExternalTables(sCon As Connection)

  Dim xList As String[]
  Dim aList As String[] = ["tbladvertise", "tbladlinks", "tblbsdate", "tblicddisease", "tblicdconversion"]
  Dim aTable As String

  xList = SelectListView("select Tables", aList, False)
  If xList Then
    For Each aTable In xList
      If aTable = "tbladvertise" Then
        modDBExternal.CREATEtbladvertise(sCon)
      Else If aTable = "tbladlinks" Then
        modDBExternal.CREATEtbladlinks(sCon)
      Else If aTable = "tblbsdate" Then
        modDBExternal.CREATEtblbsdate(sCon)
      Else If aTable = "tblicddisease" Then
        modDBExternal.CREATEtblicddisease(sCon)
      Else If aTable = "tblicdconversion" Then
        modDBExternal.CREATEtblicdconversion(sCon)
      Endif
    Next
  Endif

End
