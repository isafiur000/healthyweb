' Gambas class file

Private $FixedFormats As String[] = ["Common", "Claim Code", "Accident SSF", "Medical SSF", "MedExtra SSF", "Critical SSF", "Staff List"]
Private $OptionList As Variant[]
Private xGridData As Variant[]

Public Sub _new()

  rbhistory.Value = True
  cmbgender.List = ["Male", "Female", "Both Sex"]
  LoadFormats()

End

Public Sub btnclose_Click()

  Me.Close()

End

Private Function GetDefTable() As String

  Dim sTable As String

  If rbhistory.Text Then
    sTable = "tblhistory"
  Else If rbdischarge.Value Then
    sTable = "tbldischarge"
  Endif

  Return sTable

End

Private Function GetFormatList(sTable As String) As String[]

  Dim res As Result
  Dim sList As String[]

  sList = $FixedFormats.Copy()
  res = modDatabase.$syConn.Exec(Subst("select distinct(fldformat) as col from &1", sTable))
  If res.Available Then
    For Each res
      If sList.Exist(res["col"]) = False Then
        sList.Add(res["col"])
      Endif
    Next
  Endif

  Return sList

End

Public Sub rbhistory_Click()

  LoadFormats()

End

Public Sub rbdischarge_Click()

  LoadFormats()

End

Private Sub LoadFormats()

  Dim sTable As String

  sTable = GetDefTable()
  If sTable Then
    cmbformat.List = GetFormatList(sTable)
  Endif

End

Private Sub ShowParameters()

  Dim xxx As String[]
  Dim xList As String[]

  xxx = New String[]
  If cmbformat.Text Then
    If rbhistory.Value Then
      xList = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select flditem as col from tblhistory where fldformat like &1 and fldgender=&2", cmbformat.Text, cmbgender.Text))
      If xList.Exist("History of Illness") = False Then
        xxx.Add("History of Illness")
      Endif
    Else If rbdischarge.Value Then
      xList = modControlSub.GetDirectFillresultNoNull(modDatabase.$myConn.Exec("select flditem as col from tbldischarge where fldformat like &1 and fldgender=&2", cmbformat.Text, cmbgender.Text))       ''
    Endif

    xxx.Insert(xList)
    ListBox1.List = xxx
  Endif

End

Public Sub btnshow_Click()

  ShowParameters()

End

Public Sub btnaddtest_Click()

  Dim sTable As String
  Dim res1 As Result

  If txtsubtest.Text And If cmbformat.Text Then
    sTable = GetDefTable()
    If sTable Then
      res1 = modDatabase.$medConn.Create(sTable)
      res1["flditem"] = Trim(txtsubtest.Text)
      res1["fldformat"] = cmbformat.Text
      res1["fldgender"] = cmbgender.Text
      res1["flddetail"] = ""
      res1["fldoptions"] = ""
      res1.Update()
      ShowParameters()
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
      txtsubtest.Text = ""
    Endif
  Endif

End

Public Sub ListBox1_Select()

  ShowItemOptions()

End

''------------------ Show Option Grid ----------------------
Private Sub ShowItemOptions()

  Dim res As Result
  Dim xVar As Variant[]

  $OptionList = New Variant[]
  If ListBox1.Text Then
    res = modDatabase.$myConn.Exec(Subst("select fldid,flddetail,fldoptions from &1", GetDefTable()) & " where flditem=&1 and fldformat like &2 and fldgender=&3", ListBox1.Text, cmbformat.Text, cmbgender.Text)             ''
    If res.Available Then
      res.MoveFirst
      txtdetail.RichText = res["flddetail"]
      If res["fldoptions"] Then
        Try xVar = JSON.Decode(res["fldoptions"])
        If xVar Then
          $OptionList = xVar
        Endif
      Endif
    Else
      txtdetail.RichText = ""
    Endif
  Endif
  SetOptionGrid()

End

Private Sub SetOptionGrid()

  GridView1.Clear()
  GridView1.Columns.Count = 4
  If $OptionList.Count Then
    GridView1.Count = $OptionList.Count
    LoadVariableToGrid($OptionList, GridView1)
  Else
    GridView1.Count = 0
  Endif

  With GridView1
    .Columns[0].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Hidden = True

    .Columns[0].Text = "Variable"
    .Columns[1].Text = "Value"
    .Columns[2].Text = "Options"
  End With

End

Private Sub LoadVariableToGrid(xFinal As Variant[], xGridView As WebTable)

  xGridData = xFinal
  xGridView.SetFocus

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  modGridView.GridViewDecoration(Data, Row)
  If Column = 0 Then
    Data.Text = xGridData[Row]["Variable"]
  Else If Column = 1 Then
    Data.Text = xGridData[Row]["Value"]
  Else If Column = 2 Then
    Data.Text = xGridData[Row]["Option"]
  Else If Column = 3 Then
    Data.Text = xGridData[Row]["Select"]
  Endif

End

Public Sub GridView1_Select()

  If xGridData And If xGridData.Count Then
    txtvariable.Text = xGridData[GridView1.Selection[0]]["Variable"]
    txtvalues.Text = xGridData[GridView1.Selection[0]]["Value"]
    txtoptions.Text = xGridData[GridView1.Selection[0]]["Option"]
    txtselect.Text = xGridData[GridView1.Selection[0]]["Select"]
  Endif

End

Public Sub btnaddoption_Click()

  Dim sColl As Collection

  sColl = New Collection
  If txtvalues.Text Then
    sColl.Add(Trim(txtvariable.Text), "Variable")
    sColl.Add(Trim(txtvalues.Text), "Value")
    sColl.Add(Trim(txtoptions.Text), "Option")
    sColl.Add(Trim(txtselect.Text), "Select")
    $OptionList.Add(sColl)
    SetOptionGrid()
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    txtvalues.Text = ""
    txtoptions.Text = ""
  Endif

End

Public Sub btndeloption_Click()

  If GridView1.Selection.Count Then
    $OptionList.Remove(GridView1.Selection[0])
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information deleted", modBasic.$BalloonDelay))
    SetOptionGrid()
  Endif

End

'-------------------------- Main procedures ---------------------
Public Sub btnBrOK_Click()

  Dim res As Result
  Dim res1 As Result

  If ListBox1.Text And If cmbformat.Text And If cmbgender.Text Then
    res = modDatabase.$medConn.Edit(GetDefTable(), "flditem=&1 and fldformat like &2 and fldgender=&3", ListBox1.Text, cmbformat.Text, cmbgender.Text)
    If res.Available Then
      res["flddetail"] = txtdetail.RichText
      res["fldoptions"] = JSON.Encode($OptionList)
      res.Update()
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
    Else
      res1 = modDatabase.$medConn.Create(GetDefTable())
      res1["flditem"] = ListBox1.Text
      res1["fldformat"] = cmbformat.Text
      res1["fldgender"] = cmbgender.Text
      res1["flddetail"] = txtdetail.RichText
      res1["fldoptions"] = JSON.Encode($OptionList)
      res1.Update()
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif
  txtsubtest.SetFocus

End

Public Sub btnBrCancel_Click()

  If ListBox1.Text And If cmbformat.Text And If cmbgender.Text Then
    modDatabase.$medConn.Delete(GetDefTable(), "flditem=&1 and fldformat=&2 and fldgender=&3", ListBox1.Text, cmbformat.Text, cmbgender.Text)
    txtdetail.RichText = ""
    ShowParameters()
    GridView1.Clear()
    $OptionList = New Variant[]
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information deleted", modBasic.$BalloonDelay))
  Endif

End

Public Sub txtsubtest_LostFocus()

  txtsubtest.Text = String.UCaseFirst(txtsubtest.Text)

End

Public Sub btndefaultlist_Click()

  Dim xList As String[] = ["Past History", "Treatment History", "Medication History", "Personal History", "Surgical History", "Occupational History", "Social History", "Family History"]
  Dim xItem As String
  Dim yList As String[] = ["Condition of Discharge", "Advice on Discharge"]
  Dim yItem As String
  Dim res As Result
  Dim res1 As Result

  For Each xItem In xList
    res = modDatabase.$medConn.Edit("tblhistory", "flditem=&1 and fldformat=&2", xItem, "Common")
    If Not res.Available Then
      res1 = modDatabase.$medConn.Create("tblhistory")
      res1["flditem"] = xItem
      res1["fldformat"] = "Common"
      res1["fldgender"] = "Both Sex"
      res1["flddetail"] = ""
      res1["fldoptions"] = ""
      res1.Update()
    Endif
  Next

  For Each yItem In yList
    res = modDatabase.$medConn.Edit("tbldischarge", "flditem=&1 and fldformat=&2", yItem, "Common")
    If Not res.Available Then
      res1 = modDatabase.$medConn.Create("tbldischarge")
      res1["flditem"] = yItem
      res1["fldformat"] = "Common"
      res1["fldgender"] = "Both Sex"
      res1["flddetail"] = ""
      res1["fldoptions"] = ""
      res1.Update()
    Endif
  Next
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End

Public Sub btnclaim_Click()

  Dim xList As String[] = ["Co-Morbidity Disease"]
  Dim xItem As String
  Dim yList As String[] = ["ICU Note", "Ventilator Note", "BIPAP/CPAP Note", "Operation Description", "Condition of Discharge", "Follow Up Advice"]
  Dim yItem As String
  Dim res As Result
  Dim res1 As Result

  For Each xItem In xList
    res = modDatabase.$medConn.Edit("tblhistory", "flditem=&1 and fldformat=&2", xItem, "Claim Code")
    If Not res.Available Then
      res1 = modDatabase.$medConn.Create("tblhistory")
      res1["flditem"] = xItem
      res1["fldformat"] = "Claim Code"
      res1["fldgender"] = "Both Sex"
      res1["flddetail"] = ""
      res1["fldoptions"] = ""
      res1.Update()
    Endif
  Next

  For Each yItem In yList
    res = modDatabase.$medConn.Edit("tbldischarge", "flditem=&1 and fldformat=&2", yItem, "Claim Code")
    If Not res.Available Then
      res1 = modDatabase.$medConn.Create("tbldischarge")
      res1["flditem"] = yItem
      res1["fldformat"] = "Claim Code"
      res1["fldgender"] = "Both Sex"
      res1["flddetail"] = ""
      res1["fldoptions"] = ""
      res1.Update()
    Endif
  Next
  Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))

End
