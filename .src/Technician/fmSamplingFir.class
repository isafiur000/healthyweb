' Gambas class file

''PATIENT PROFILE
Private $UserRestrictPat As String[]
Private $package As String
Private $BillMode As String

''Main Form
Private $rData As Result
Private $aMyFields As String[]
Private $rData1 As Result
Private $aMyFields1 As String[]

Public Sub _new()

  Dim reflist As String

  ''PATIENT PROFILE
  cmbpatheightunit.List = ["cm", "inch", "foot"]
  $UserRestrictPat = modBasic.$ClinicDisableCompo
  If MMain.$SISHAppMode = "HIS" Then
    txtbedno.ReadOnly = True
  Endif

  ''MAIN Form
  cmbsamtype.List = modBasic.$LabSpecimenList
  txtcondition.List = modBasic.$LabConditionList

  modSettings.ShowCheckBox(rbwork, "TestSampling/WorkSheet")
  modSettings.ShowCheckBox(rbbar, "TestSampling/BarCode")
  reflist = modSettings.ShowSettingFromFIle("Laboratory/ReferralList")
  If reflist Then
    If Exist(reflist) Then
      txtrefer.List = modString.GetStringArrayFromFile(reflist)
    Endif
  Endif
  If modGlobalSetting.ShowSettingFromDB("GeneralSettings/Laboratory_SampleDateLock") = "No" Then
    dtcurr.Enabled = True
    dtcurr.Value = Now()
    dtnepcal.Enabled = True
  Endif
  txtrefer.Text = ""
  txtcondition.Text = ""

  If $UserRestrictPat Then
    RestrictUserAccessPat()
  Endif

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

''====================== PATIENT PROFILE =================================
Public Sub txtencid_Activate()

  GetEncounterValue()

End

Public Sub btnwebcam_Click()

  If txtencid.Text Then
    GetEncounterValue()
  Else
    txtencid.Text = QRScanValue("")
  Endif

End

Private Sub GetEncounterValue()

  Dim res As Result

  If Not txtpatientname.Text Then
    If Not txtencid.Text Then Return
    If modBasic.$EncIdPrefix And If txtencid.Text = modBasic.$EncIdPrefix Then
      txtencid.SetFocus
      Return
    Endif

    ' If modPatientSub.LockEncounterDesk(Trim(txtencid.Text)) = False Then
    '   txtencid.Text = ""
    '   Message.Warning(("Encounter Locked"), ("OK"))
    '   ' Balloon.Delay = modBasic.$BalloonDelay
    '   txtencid.SetFocus
    ' Endif

    dtdob.Tag = ""
    If txtencid.Text Then
      If txtencid.Text = modBasic.$EncIdPrefix Then
      Else
        modSettings.SaveValuesToLog("LastValue/Encounter", Trim(txtencid.Text))
      Endif
      res = modDatabase.$myConn.Exec("select fldpatientval from tblencounter where fldencounterval=&1", Trim(txtencid.Text))
      If res.Available = False Then
        modLinkDB.CheckEncDataRemote(Trim(txtencid.Text))
        txtencid.SetFocus
      Else
        txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
        If txtpatientname.Text Then
          txtgender.Text = modPatient.GetPatientSex(Trim(txtencid.Text))
          txtpatientaddress.Text = modPatient.GetPatientAddressByEnc(Trim(txtencid.Text))

          txtnow.Text = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
          txtbedno.Text = modPatient.GetLocationSetting(Trim(txtencid.Text), txtnow.Text)
          txtpatdoa.Text = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(Trim(txtencid.Text)), gb.GeneralDate)
          txtpatweight.Value = modClinic.GetBodyWeight(Trim(txtencid.Text))
          btnconsult.Tag = modPatient.GetAttendingConsultant(Trim(txtencid.Text))
          btnconsult.Text = modGeneral.GetUserFullName(btnconsult.Tag)
          dtdob.Tag = modPatient.GetPatientBirthDay(Trim(txtencid.Text))
          modDateSub.GetAgeControlFromDate(dtdob.Tag, txtpatage, cmbpatageunit)
          modClinSub.GetPatientHeight(Trim(txtencid.Text), txtpatheight, cmbpatheightunit)
          modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
          UpdateTriage()
          Wait
          If modPatientSub.AllowEncIDHistory(Trim(txtencid.Text), modDatabase.$myConn) = True Then
            BlockDCButton()
            modImage.ShowPhotoSplash("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)))
            ''MAIN FORM
            BasicInfoPatient()
            txtencid.ReadOnly = True
          Else
            Me.Enabled = False
          Endif
        Else
          Message.Warning(("Encounter ID not found"), ("OK"))
          ' Balloon.Delay = modBasic.$BalloonDelay
          txtencid.SetFocus
        Endif
      Endif
    Endif
  Endif

End

Public Sub UpdateTriage()

  txtcolor.Background = modPatient.GetPatientColor(Trim(txtencid.Text))

End

Private Sub BlockDCButton()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm(txtnow.Text)
  tlbtnaddheight.Enabled = xx
  tlbtnaddbed.Enabled = xx
  tlbtnadwt.Enabled = xx
  dtdob.Enabled = xx
  btnpic.Enabled = xx
  btnconsult.Enabled = xx

End

Private Sub RestrictUserAccessPat()

  If $UserRestrictPat.Exist("Bed Assignment") Then
    tlbtnaddbed.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Weight") Then
    tlbtnadwt.Visible = False
  Endif
  If $UserRestrictPat.Exist("Body Height") Then
    tlbtnaddheight.Visible = False
  Endif

End

''------- Basic Parameters
Public Sub btnpic_Click()

  Dim hForm As FmPersonImage

  If txtencid.Text Then
    hForm = New FmPersonImage("Patient", modPatient.GetPatientNoByEnc(Trim(txtencid.Text)), False)
    hForm.ShowModal
  Endif

End

Public Sub tlbtnaddheight_Click()

  If txtencid.Text Then
    If txtpatheight.Value Then
      If cmbpatheightunit.Text Then
        modClinSub.UpdatePatientHeight(Trim(txtencid.Text), txtpatheight.Value, cmbpatheightunit.Text)
        tlbtnaddheight.Enabled = False
        Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      Endif
    Endif
  Endif

End

Public Sub tlbtnadwt_Click()

  If txtencid.Text Then
    If txtpatweight.Value Then
      modClinSub.AddGeneralParametersQuanti(Trim(txtencid.Text), "Body Weight", txtpatweight.Value)
      tlbtnadwt.Enabled = False
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub dtdob_Click()

  Dim dtdate As Date

  If txtencid.Text Then
    dtdate = GetDateValue("Date of Birth of " & txtpatientname.Text, "DOBirth", dtdob.Tag)
    If dtdate Then
      modPatientSub.UpdatePatDOB(Trim(txtencid.Text), dtdate)
      modDateSub.GetAgeControlFromDate(dtdate, txtpatage, cmbpatageunit)
      dtdob.Tag = dtdate
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
    Endif
  Endif

End

''------------Hospital related parameters
Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  If txtencid.Text Then
    xMedUser = MedicalSelectedValue(("Select Consultant"), modBasic.$OPConsulUserList)
    If xMedUser And If xMedUser.Count Then
      btnconsult.Tag = xMedUser[0]
      btnconsult.Text = xMedUser[1]
    Else
      btnconsult.Tag = ""
      btnconsult.Text = ""
    Endif
    If btnconsult.Tag Then
      modPatientSub.UpdateAttendingConsultant(Trim(txtencid.Text), btnconsult.Tag)
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
    Endif
  Endif

End

Public Sub btnsms_Click()

  Dim xval As String

  If btnconsult.Tag Then
    xval = modDevice.SendSMSToInpatDoc(Trim(txtencid.Text), modGeneral.GetUserContact(btnconsult.Tag))
    If xval Then
      Message.Info(xval, ("OK"))
    Endif
  Endif

End

Public Sub tlbtnaddbed_Click()

  If txtencid.Text Then
    If MMain.$SISHAppMode = "HIS" Then
      If modHelpVariable.$LogInCategory = "Clinician" Then
        If txtnow.Text = "Admitted" Then
          txtbedno.Text = GetBedNumber(Trim(txtencid.Text))
        Endif
      Endif
    Endif
  Endif

End

Public Sub btnconsult_Change()

  If btnconsult.Text = "" Then
    btnconsult.Tag = ""
  Endif

End

Public Sub tlbtnpayment_Click()

  If txtencid.Text Then
    modNonMedical.CurrentPayStatusMsg(Trim(txtencid.Text))
  Endif

End

Public Sub btnprofile_Click()

  Dim hForm As FmMinProfile

  hForm = New FmMinProfile(Trim(txtencid.Text))
  hForm.ShowModal()

End

''============================== MAIN FORM ================================
Private Sub BasicInfoPatient()

  Dim xx As Boolean

  If txtencid.Text Then
    modRepository.$RepoDataStatus = False
    xx = modPatient.EnableClinicForm(txtnow.Text)
    mnuaddtest.Enabled = xx
    mnuaddgroup.Enabled = xx
    modAppSupport.RecordPatientActivity("Patient Data", Me.Name, "EncounterID", Trim(txtencid.Text))
    ShowEncounterTests(Trim(txtencid.Text))
    $package = modNonMedical.DefaultBillingScheme(Trim(txtencid.Text), modBasic.$compID)
    $BillMode = modNonMedical.GetDiscBindBillMode($package)
    If Not $BillMode Then
      $billMode = modPatient.GetPatBillingMode(Trim(txtencid.Text))
    Endif

    btnpayto.Tag = modBillings.GetPayableUserSetting("Test", Trim(txtencid.Text))
    If btnpayto.Tag Then
      btnpayto.Text = modGeneral.GetUserFullName(btnpayto.Tag)
    Endif
    If modBasic.$PayableLockEntry = "Yes" Then
      btnselectpayable.Enabled = False
    Endif
    ShowSampled()
    ' ' btnupdate.Enabled = False
    cmbsamtype.Text = ""
    txtsamid.Text = ""
  Endif

End

' ' Public Sub Form_KeyRelease()
' '
' '   If Key.Code = Key.F12 Then
' '     btnbarcode_Click()
' '   Else If Key.Code = Key["I"] And If Key.Control Then
' '     btnsampid_Click()
' '     txtsamid.SetFocus
' '   Else If Key.Code = Key["W"] And If Key.Control Then
' '     btnwork_Click()
' '   Else If Key.Code = Key["U"] And If Key.Control Then
' '     btnupdate_Click()
' '   Else If Key.Code = Key["X"] And If Key.Control Then
' '     Me.Close()
' '   Else
' '     modGeneralmain.GoToNextControlTab()
' '   Endif
' '
' ' End

Public Sub rbwork_Click()

  modSettings.EnterCheckSetting(rbwork, "TestSampling/WorkSheet")

End

Public Sub rbbar_Click()

  modSettings.EnterCheckSetting(rbbar, "TestSampling/BarCode")

End

Public Sub mnusearchpat_Click()

  If Not txtencid.Text Then
    txtencid.Text = PatSearch("Encounter")
  Endif

End

Public Sub mnuregister_Click()

  If Not txtencid.Text Or If txtencid.Text = modBasic.$EncIdPrefix Then
    If modBasic.$regF1Sampling = "Yes" Or If modBasic.$regF1Sampling = "Partial" Then
      txtencid.Text = RegistrationNewForm()
    Else If modBasic.$regF1Sampling = "Full" Then
      txtencid.Text = RegistrationForm(False)
    Endif
  Endif

End

Public Sub mnublank_Click()

  ' Me.Close
  ' modAppSupport.AddNewFormToWorkspace(fmSamplingFir)

End

Public Sub mnulastencid_Click()

  txtencid.Text = modSettings.ShowLogValues("LastValue/Encounter")

End

Public Sub mnuaddtest_Click()

  Dim xx As String[]
  Dim xitem As String

  If txtencid.Text Then
    xx = GridListView(("Select requested Tests"), modMedicine.FillLabTestCombo("%"))
    If xx And If xx.Count Then
      For Each xitem In xx
        modLabSub.InsertLabTestOrder(Trim(txtencid.Text), xitem, modFixLab.GetLabTestType(xitem), "Regular", 0, "", "", "")
      Next
      ShowSampled()
    Endif
  Endif

End

Public Sub mnuaddgroup_Click()

  Dim xx As String[]
  Dim xitem As String
  Dim res As Result
  Dim xmode As String

  If txtencid.Text Then
    xmode = $BillMode
    If xmode Then
      xx = GridListView(("Select requested Test Groups"), modNonMedical.NonStockBillingItemArray("Diagnostic Tests", xmode))
      If xx And If xx.Count Then
        modDatabase.$myConn.Begin
        For Each xitem In xx
          res = modDatabase.$myConn.Exec("select fldtestid,fldtesttype,fldactive from tblgrouptest where fldgroupname=&1", xitem)
          If res.Available = True Then
            For Each res
              modLabSub.InsertLabTestOrder(Trim(txtencid.Text), res!fldtestid, res!fldtesttype, res!fldactive, 0, "", "", "")
            Next
          Endif
        Next
        modDatabase.$myConn.Commit
        ShowSampled()
      Endif
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Private Sub ShowEncounterTests(encid As String)

  Dim sql As String

  sql = "select flditemname,fldtime,fldid,fldencounterval from tblpatbilling where flditemtype=&1 and fldsample=&2 and fldencounterval=&3 and fldsave=&4 and (fldtarget=&5 or fldtarget=&6) and flditemqty>fldretqty"
  $rData1 = modDatabase.$myConn.Exec(sql, "Diagnostic Tests", "Waiting", encid, True, modBasic.$compID, "%")
  $aMyFields1 = New String[]
  modGridView.ReadSmallData(GridView3, $rData1, $aMyFields1)

  With GridView3
    .Columns[0].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
    .Columns[3].Hidden = True
    .Columns[0].Text = "Test Name"
    .Columns[1].Text = "DateTime"
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

Public Sub btnselectpayable_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Payable User"), modBasic.$PayUserList)
  If xMedUser And If xMedUser.Count Then
    btnpayto.Tag = xMedUser[0]
    btnpayto.Text = xMedUser[1]
  Else
    btnpayto.Tag = ""
    btnpayto.Text = ""
  Endif

End

Private Sub AddSampling()

  Dim res As Result
  Dim res1 As Result
  Dim j As Integer
  Dim res2 As Result

  If GridView3.Selection.Count Then
    $rData1.MoveTo(GridView3.Selection[0])
    res2 = modDatabase.$myConn.Exec("select flditemqty,fldretqty,fldbillno,fldrefer,fldreason from tblpatbilling where fldid=&1 and flditemqty>&2", $rData1["fldid"], 0)
    res = modDatabase.$myConn.Exec("select distinct(fldtestid) as fldtestid,fldtesttype,fldactive from tblgrouptest where fldgroupname=&1", $rData1["flditemname"])
    If res.Available = True Then
      If res2!flditemqty > res2!fldretqty Then

        modDatabase.$myConn.Begin
        For Each res
          For j = 1 To (res2!flditemqty - res2!fldretqty)
            modLabSub.InsertLabTestOrder($rData1["fldencounterval"], res!fldtestid, res!fldtesttype, res!fldactive, $rData1["fldid"], modGeneral.GetUserFullNamePrint(res2!fldrefer), res2!fldbillno, res2!fldreason)
          Next
        Next
        txtencid.Text = $rData1["fldencounterval"]
        res1 = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", $rData1["fldid"])
        res1["fldtarget"] = modBasic.$compID
        res1["fldsample"] = "Sampled"
        res1["fldpayto"] = btnpayto.Tag
        res1["fldhostmac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
        res1["xyz"] = False
        res1.Update()
        modDatabase.$myConn.Commit

      Endif
      ShowSampled()
      ShowEncounterTests(Trim(txtencid.Text))
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Private Sub DeleteSampling()

  Dim res As Result

  If GridView3.Selection.Count Then
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      $rData1.MoveTo(GridView3.Selection[0])

      If modBasic.$BillAutoReturn = "No" Then
        Message.Warning("Not allowed", "OK")
      Else
        modDatabase.$myConn.Begin
        res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", $rData1["fldid"])
        If res.Available = True Then
          modBillings.InsertBlankBillItemNewApp(res!fldencounterval, res!fldbilltype, res!fldbillingmode, res!flddisctype, res!fldacledger, res!flditemtype, res!flditemno, res!flditemname, res!flditemrate, 0 - res!flditemqty, res!fldtaxper, res!flddiscper, res!fldcashincredit, "Done", res!fldid, True, False, res!fldtarget, res!fldpayto, res!fldrefer, "AutoReturn", res!fldbillno)
          res["fldsample"] = "Removed"
          res["fldretqty"] = res!flditemqty
          res["xyz"] = False
          res.Update()
        Endif
        modDatabase.$myConn.Commit
      Endif

      ShowSampled()
      ShowEncounterTests(Trim(txtencid.Text))
    Endif
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub btnaddin_Click()

  AddSampling()

End

Public Sub btndelin_Click()

  DeleteSampling()

End

Private Sub ShowSampled()

  Dim sql As String
  ' Dim Row As Integer

  sql = "select fldid,fldchk,fldtestid,fldmethod,fldsampletype,fldsampleid,fldtime_sample,fldtest_type,fldrefername,fldcomment,fldencounterval,fldtime_start from tblpatlabtest where (fldstatus=&1 or fldstatus=&2) and fldencounterval=&3 and fldcomp_sample=&4 ORDER BY fldsampleid,fldid"                                  ''
  $rData = modDatabase.$myConn.Exec(sql, "Ordered", "Sampled", Trim(txtencid.Text), modBasic.$compID)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(225 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Hidden = True
    .Columns[8].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Hidden = True
    .Columns[10].Hidden = True
    .Columns[11].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[2].Text = "Test Name"
    .Columns[3].Text = "Method"
    .Columns[4].Text = "Specimen"
    .Columns[5].Text = "SampleID"
    .Columns[6].Text = "SampleDate"
    .Columns[8].Text = "Referral"
    .Columns[11].Text = "LoadDate"
  End With

  ' For Row = 0 To GridView1.Count - 1
  '   If GridView1[Row, 11].Text Then
  '     GridView1[Row, 6].Picture = Picture["icons/coll4.png"]
  '   Endif
  ' Next

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 6 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else If Column = 11 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Private Sub GridView1Click()

  Dim xsample As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])

    xsample = $rData["fldsampletype"]
    If Not xsample Then
      xsample = modFixLab.GetTestSpecimen($rData["fldtestid"])
    Endif

    If modBasic.$AppSelect2JS = "Enable" Then
      ' modJavaScript.UpdateSelect2Combo(cmbsamtype, xsample)
    Endif
    cmbsamtype.Text = xsample

    If $rData["fldsampleid"] Then
      txtsamid.Text = $rData["fldsampleid"]
    Endif
  Endif

End

Public Sub GridView1_Select()

  GridView1Click()

End

Public Sub btneditspec_Click()

  Dim xx As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If modBasic.$LabLockSpecimen = "No" Then
      xx = GetTextArea(("Test Specimen"), $rData["fldsampletype"])
    Else
      xx = InputCombo(("Test Specimen"), $rData["fldtestid"], modBasic.$LabSpecimenList, $rData["fldsampletype"], True)
    Endif
    If Trim(xx) Then
      modLabSub.UpdateSpecimenTest($rData["fldid"], Trim(xx))
      ShowSampled()
    Endif
  Endif

End

Public Sub btnmethod_Click()

  Dim xmethod As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xmethod = InputCombo(("Select Test Method"), $rData["fldtestid"], modFixLab.MethodsForLabTest($rData["fldtestid"]), $rData["fldmethod"], True)
    If xmethod Then
      modLabSub.UpdateEquipmentMethod($rData["fldid"], xmethod, "")
      ShowSampled()
    Endif
  Endif

End

Public Sub mnudelete_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modDatabase.$myConn.Delete("tblpatlabtest", "fldid=&1 and fldgroupid=&2", $rData["fldid"], 0)
    ShowSampled()
  Endif

End

''------------------- specimen related ----------------------
Public Sub btnaddspecimen_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("fldsampletype", "tblsampletype")
  hForm.ShowModal
  modBasic.LoadLabRadioList()
  cmbsamtype.List = modBasic.$LabSpecimenList

End

Public Sub btnclrspec_Click()

  cmbsamtype.Text = ""

End

Public Sub btnaddcondition_Click()

  Dim hForm As FmAddVariableGrid

  hForm = New FmAddVariableGrid("fldtestcondition", "tbltestcondition")
  hForm.ShowModal
  modBasic.LoadLabRadioList()
  txtcondition.List = modBasic.$LabConditionList

End

Public Sub btnsampid_Click()

  If Not txtsamid.Text Then
    If cmbsamtype.Text And If GridView1.Selection.Count Then
      txtsamid.Text = modLabSub.GetAutoIncreasingNo()
    Endif
  Endif

End

Public Sub btnclrsamid_Click()

  txtsamid.Text = ""

End

' Public Sub cmbsamtype_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(cmbsamtype)
'   If modBasic.$LabLockSpecimen = "No" Then
'   Else
'     modFillContainer.RestrictComboToContent(cmbsamtype)
'   Endif
'
' End
'
' Public Sub txtcondition_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(txtcondition)
'
' End
'
' Public Sub txtrefer_KeyRelease()
'
'   modFillContainer.AutoFillComboBox(txtrefer)
'
' End

Public Sub btnupdate_Click()

  Dim Row As Integer
  Dim res As Result
  Dim xallow As Boolean
  Dim xspec As String
  Dim txtsampno As String
  Dim xorder As Integer
  Dim resx As Result

  If modBasic.$LabAutoSampleID = "Yes" Then
    If GridView1.Count Then
      If Not txtsamid.Text Then
        txtsamid.Text = modLabSub.GetAutoIncreasingNo()
      Endif
    Endif
  Endif

  If txtsamid.Text Then
    For Row = 0 To GridView1.Count - 1
      If GridView1.IsSelected(Row) = True Then
        $rData.MoveTo(Row)

        If modBasic.$LabAutoSampleSuffix = "Yes" Then
          txtsampno = Trim(txtsamid.Text) & modFixLab.GetTestSampleSuffix($rData["fldtestid"])
        Else
          txtsampno = Trim(txtsamid.Text)
        Endif
        xorder = modFixLab.GetLabTestOrder($rData["fldtestid"])

        xallow = modLabTest.AllowSampleID(Trim(txtencid.Text), txtsampno)
        If xallow = True Then

          If modBasic.$LabAutoSpecimen = "Yes" Then
            xspec = modFixLab.GetTestSpecimen($rData["fldtestid"])
            If Not xspec Then
              xspec = Trim(cmbsamtype.Text)
            Endif
            modLabSub.UpdateLabTestSample($rData["fldid"], txtsampno, xspec, txtrefer.Text, txtcondition.Text, txtcomment.Text, txtbillno.Text, xorder)
          Else
            If cmbsamtype.Text Then
              If dtcurr.Value Then
                modLabSub.UpdateLabTestSample($rData["fldid"], txtsampno, Trim(cmbsamtype.Text), txtrefer.Text, txtcondition.Text, txtcomment.Text, txtbillno.Text, xorder, dtcurr.Value)
              Else
                modLabSub.UpdateLabTestSample($rData["fldid"], txtsampno, Trim(cmbsamtype.Text), txtrefer.Text, txtcondition.Text, txtcomment.Text, txtbillno.Text, xorder)
              Endif
            Endif
          Endif

          res = modDatabase.$myConn.Exec("select fldsubtest from tblpatlabsubtest where fldtestid=&1", $rData["fldid"])
          If res.Available = False Then
            Select modFixLab.GetLabTestOptionType($rData["fldtestid"])
              Case "Fixed Components", "Left/Right Components"
                resx = modDatabase.$myConn.Exec("select fldsubtest,fldtanswertype,fldindex from tbltestquali where fldtestid=&1 GROUP BY fldsubtest", $rData["fldtestid"])
                If resx.Available Then
                  For Each resx
                    modLabSub.InsertLabSubTestUnit($rData["fldencounterval"], $rData["fldid"], $rData["fldtestid"], resx["fldsubtest"], resx["fldtanswertype"], resx["fldindex"])
                  Next
                Endif
            End Select
          Endif

        Else
          Message.Warning(("Same Sample ID for different patients not possible"), ("OK"))
        Endif

      Endif
    Next

    If rbbar.Value = True Then
      btnbarcode_Click()
    Endif
    If rbwork.Value = True Then
      btnwork_Click()
    Endif
    If modBasic.$AutoSampleLoad = "All" Then
      LoadSpecimens()
    Else If modBasic.$AutoSampleLoad = "Machine" Then
      LoadSpecimensMachine()
    Endif
    ShowSampled()

    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
  Endif

End

Public Sub dtnepcal_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtcurr.Value))
  If xx Then
    dtcurr.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnbarcode_Click()

  Dim Row As Integer
  Dim xval As String[]
  Dim xsect As String

  Dim xx As String

  If txtsamid.Text And If txtencid.Text Then
    If GridView1.Count Then

      xval = New String[]
      For Row = 0 To GridView1.Count - 1
        If GridView1.IsSelected(Row) = True Then
          $rData.MoveTo(Row)

          If modBasic.$LabBarPrint = "Section" Then
            xsect = modFixLab.GetLabTestCategory($rData["fldtestid"])
          Else If modBasic.$LabBarPrint = "TestName" Then
            xsect = $rData["fldtestid"]
          Else
            xsect = ""
          Endif

          If xsect Then
            If xval.Count = 0 Then
              xval.Add(xsect)
            Else
              If xval.Exist(xsect) = False Then
                xval.Add(xsect)
              Endif
            Endif
          Endif

        Endif
      Next

      If xval.Count Then
        For Each xx In xval
          modLabSub.PrintBarCodeSampling(Trim(txtencid.Text), Trim(txtsamid.Text), cmbsamtype.Text, xx, txtencid.Text)
        Next
      Else
        modLabSub.PrintBarCodeSampling(Trim(txtencid.Text), Trim(txtsamid.Text), cmbsamtype.Text, "", txtencid.Text)
      Endif

    Endif
  Endif

End

''------------------------------------ Bottom Buttons -----------------------------
Private Sub LoadSpecimensMachine()

  Dim res As Result
  Dim Row As Integer

  For Row = 0 To GridView1.Count - 1
    If GridView1.IsSelected(Row) = True Then
      $rData.MoveTo(Row)
      If modInterface.$IntfaceTestList And If modInterface.$IntfaceTestList.Exist($rData["fldtestid"]) Then

        res = modDatabase.$myConn.Edit("tblpatlabtest", "fldid=&1 and fldstatus=&2 and fldsampleid like &3", $rData["fldid"], "Sampled", "%")
        If res.Available Then
          If res["flduserid_start"] Then
          Else
            modInterface.InsertSampleForInterface(res["fldencounterval"], res["fldtestid"], res["fldsampleid"], res["fldsampletype"])
          Endif
          res["flduserid_start"] = modBasic.$lbluser
          If res["fldtime_start"] Then
            res["flduptime_start"] = Now()
          Else
            res["fldtime_start"] = Now()
          Endif
          res["fldcomp_start"] = modBasic.$compID
          res["fldsave_start"] = True
          res["xyz"] = True
          res.Update
        Endif

      Endif
    Endif
  Next

End

Private Sub LoadSpecimens()

  Dim res As Result
  Dim Row As Integer

  For Row = 0 To GridView1.Count - 1
    If GridView1.IsSelected(Row) = True Then
      $rData.MoveTo(Row)
      res = modDatabase.$myConn.Edit("tblpatlabtest", "fldid=&1 and fldstatus=&2 and fldsampleid like &3", $rData["fldid"], "Sampled", "%")
      If res.Available Then
        If res["flduserid_start"] Then
        Else
          modInterface.InsertSampleForInterface(res["fldencounterval"], res["fldtestid"], res["fldsampleid"], res["fldsampletype"])
        Endif
        res["flduserid_start"] = modBasic.$lbluser
        If res["fldtime_start"] Then
          res["flduptime_start"] = Now()
        Else
          res["fldtime_start"] = Now()
        Endif
        res["fldcomp_start"] = modBasic.$compID
        res["fldsave_start"] = True
        res["xyz"] = True
        res.Update
      Endif
    Endif
  Next

End

Public Sub btnprocedure_Click()

  LoadSpecimens()
  ShowSampled()

End

''------------------------------- worksheet ---------------------
Public Sub btnwork_Click()

  Dim categ As String[]
  Dim newCateg As String[]
  Dim xx As String
  Dim Row As Integer
  Dim xval As String

  If GridView1.Count Then

    categ = New String[]
    For Row = 0 To GridView1.Count - 1
      If GridView1.IsSelected(Row) = True Then
        $rData.MoveTo(Row)
        xval = modFixLab.GetLabTestCategory($rData["fldtestid"])

        If categ.Count = 0 Then
          categ.Add(xval)
        Else
          If categ.Exist(xval) = False Then
            categ.Add(xval)
          Endif
        Endif

      Endif
    Next
    newCateg = categ

    If modBasic.$LabWorkSheet = "Categorical" Then
      For Each xx In newCateg
        SampleWorkSheet([xx])
      Next
    Else
      SampleWorkSheet(newCateg)
    Endif

  Endif

End

Private Sub SampleWorkSheet(sCategList As String[])

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim i As Integer
  Dim rs As Result
  Dim res As Result
  Dim xval As String

  Dim sCateg As String
  Dim xbarcode As String
  Dim xqrcode As String
  Dim xbarinv As String
  Dim xqrinv As String

  Dim $referName As String[]
  Dim $condiName As String[]
  Dim $sampleID As String[]
  Dim $sampleType As String[]
  Dim $sampleDate As String[]
  Dim $invoiceNo As String[]

  $BillingReport = New CReportHTML([("Test Name"), ("Observations")], "LaboratoryReport", Trim(txtencid.Text), ["Footer"])
  $BillingReport.UserData.Add("Department: ", "Report")
  $BillingReport.UserData.Add(sCateg, "PARAM1")
  $BillingReport.UserData.Add(txtencid.Text, "SearchVariable")
  $BillingReport.UserData.Add(txtsamid.Text, "SampleID")
  $BillingReport.UserData.Add(cmbsamtype.Text, "Specimen")

  $referName = New String[]
  $condiName = New String[]
  $sampleID = New String[]
  $sampleType = New String[]
  $sampleDate = New String[]
  $invoiceNo = New String[]

  For Each sCateg In sCategList
    $BillingReport.AddSection(sCateg, False)

    For i = 0 To GridView1.Count - 1
      $rData.MoveTo(i)
      If GridView1.IsSelected(i) = True And If modFixLab.GetLabTestCategory($rData["fldtestid"]) = sCateg Then
        res = modDatabase.$myConn.Exec("select fldtestid,fldmethod,fldsampleid,fldsampletype,fldtest_type,fldrefername,fldcondition,fldtime_sample,fldbillno from tblpatlabtest where fldid=&1", $rData["fldid"])

        $referName.Add(res["fldrefername"])
        $condiName.Add(res["fldcondition"])
        $sampleID.Add(res["fldsampleid"])
        $sampleType.Add(res["fldsampletype"])
        $sampleDate.Add(modReportVar.GetDateTimeReport(res["fldtime_sample"], gb.MediumDate))
        $invoiceNo.Add(res["fldbillno"])

        xval = "<b>" & res!fldtestid & "</b>" & "<br>" & "[" & res!fldmethod & "]"
        If $rData["fldtest_type"] = "Qualitative" Then
          rs = modDatabase.$myConn.Exec("select fldsubtest,fldreport,fldid from tblpatlabsubtest where fldtestid=&1", $rData["fldid"])
          For Each rs
            xval = xval & "<br>" & modString.HTMLBlankSpace(4) & rs!fldsubtest
          Next
        Endif

        With asx
          .Add(xval)
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()

      Endif

    Next
  Next

  ''header
  $BillingReport.UserData.Add("", "EXTRA1")
  $BillingReport.UserData.Add("", "EXTRA2")
  $BillingReport.UserData.Add("", "EXTRA3")
  $BillingReport.UserData.Add("", "EXTRA4")
  $BillingReport.UserData.Add("", "EXTRA5")
  $BillingReport.UserData.Add("", "EXTRA6")
  $BillingReport.UserData.Add("", "EXTRA7")
  $BillingReport.UserData.Add("", "EXTRA8")

  If modSettings.ShowSettingFromFIle("Laboratory/Show_ExtraLabel") And If modSettings.ShowSettingFromFIle("Laboratory/Show_ExtraLabel") = "Yes" Then
    If modLabSub.GetLabExtraColumnName("SampleDate") Then
      $BillingReport.UserData.Add("Sampling Date: " & modString.BinaryDistinctStringArray($sampleDate).Join(","), modLabSub.GetLabExtraColumnName("SampleDate"))
    Endif
    If modLabSub.GetLabExtraColumnName("SampleID") Then
      $BillingReport.UserData.Add("Sample No: " & modString.BinaryDistinctStringArray($sampleID).Join(","), modLabSub.GetLabExtraColumnName("SampleID"))
    Endif
    If modLabSub.GetLabExtraColumnName("Specimen") Then
      $BillingReport.UserData.Add("Specimen: " & modString.BinaryDistinctStringArray($sampleType).Join(","), modLabSub.GetLabExtraColumnName("Specimen"))
    Endif
    If modLabSub.GetLabExtraColumnName("ReferBy") Then
      $BillingReport.UserData.Add("Reffered By: " & modString.BinaryDistinctStringArray($referName).Join(","), modLabSub.GetLabExtraColumnName("ReferBy"))
    Endif
    If modLabSub.GetLabExtraColumnName("Condition") Then
      $BillingReport.UserData.Add("Clinical Note: " & modString.BinaryDistinctStringArray($condiName).Join(","), modLabSub.GetLabExtraColumnName("Condition"))
    Endif
    If modLabSub.GetLabExtraColumnName("InvoiceNo") Then
      $BillingReport.UserData.Add("Invoice No: " & modString.BinaryDistinctStringArray($invoiceNo).Join(","), modLabSub.GetLabExtraColumnName("InvoiceNo"))
    Endif

  Else
    If modLabSub.GetLabExtraColumnName("SampleDate") Then
      $BillingReport.UserData.Add(modString.BinaryDistinctStringArray($sampleDate).Join(","), modLabSub.GetLabExtraColumnName("SampleDate"))
    Endif
    If modLabSub.GetLabExtraColumnName("Specimen") Then
      $BillingReport.UserData.Add(modString.BinaryDistinctStringArray($sampleType).Join(","), modLabSub.GetLabExtraColumnName("Specimen"))
    Endif
    If modLabSub.GetLabExtraColumnName("SampleID") Then
      $BillingReport.UserData.Add(modString.BinaryDistinctStringArray($sampleID).Join(","), modLabSub.GetLabExtraColumnName("SampleID"))
    Endif
    If modLabSub.GetLabExtraColumnName("ReferBy") Then
      $BillingReport.UserData.Add(modString.BinaryDistinctStringArray($referName).Join(","), modLabSub.GetLabExtraColumnName("ReferBy"))
    Endif
    If modLabSub.GetLabExtraColumnName("Condition") Then
      $BillingReport.UserData.Add(modString.BinaryDistinctStringArray($condiName).Join(","), modLabSub.GetLabExtraColumnName("Condition"))
    Endif
    If modLabSub.GetLabExtraColumnName("InvoiceNo") Then
      $BillingReport.UserData.Add(modString.BinaryDistinctStringArray($invoiceNo).Join(","), modLabSub.GetLabExtraColumnName("InvoiceNo"))
    Endif

  Endif
  If modLabSub.GetLabExtraColumnName("SampleIDBarCode") Then
    xbarcode = modDevAll.GetBarCodeWithOptions(modString.BinaryDistinctStringArray($sampleID)[0])
    If xbarcode Then
      $BillingReport.UserData.Add(modPrint.GetFileWebURL(xbarcode), modLabSub.GetLabExtraColumnName("SampleIDBarCode"))
    Else
      $BillingReport.UserData.Add("", modLabSub.GetLabExtraColumnName("SampleIDBarCode"))
    Endif
  Endif
  If modLabSub.GetLabExtraColumnName("SampleIDQRCode") Then
    xqrcode = modDevAll.MakeQRCode(modString.BinaryDistinctStringArray($sampleID)[0])
    If xqrcode Then
      $BillingReport.UserData.Add(modPrint.GetFileWebURL(xqrcode), modLabSub.GetLabExtraColumnName("SampleIDQRCode"))
    Else
      $BillingReport.UserData.Add("", modLabSub.GetLabExtraColumnName("SampleIDQRCode"))
    Endif
  Endif
  If modLabSub.GetLabExtraColumnName("InvoiceBarCode") Then
    xbarinv = modDevAll.GetBarCodeWithOptions(modString.BinaryDistinctStringArray($invoiceNo)[0])
    If xbarinv Then
      $BillingReport.UserData.Add(modPrint.GetFileWebURL(xbarinv), modLabSub.GetLabExtraColumnName("InvoiceBarCode"))
    Else
      $BillingReport.UserData.Add("", modLabSub.GetLabExtraColumnName("InvoiceBarCode"))
    Endif
  Endif
  If modLabSub.GetLabExtraColumnName("InvoiceQRCode") Then
    xqrinv = modDevAll.MakeQRCode(modString.BinaryDistinctStringArray($invoiceNo)[0])
    If xqrinv Then
      $BillingReport.UserData.Add(modPrint.GetFileWebURL(xqrinv), modLabSub.GetLabExtraColumnName("InvoiceQRCode"))
    Else
      $BillingReport.UserData.Add("", modLabSub.GetLabExtraColumnName("InvoiceQRCode"))
    Endif
  Endif

  modControlSub.OpenHTMLPreview(Trim(txtencid.Text), $BillingReport.NewHTMLPath(), "ReportSize")

End

Public Sub mnudemog_Click()

  Dim hForm As FmPatdemograph

  If txtencid.Text Then
    hForm = New FmPatdemograph(Trim(txtencid.Text), "Clinical")
    hForm.ShowModal
  Endif

End

Public Sub btnsendout_Click()

  Dim Row As Integer
  Dim res As Result

  If Message.Question("Do you want to send selected tests out of the hospital. Are you sure?", ("No"), ("Yes")) = 2 Then
    For Row = 0 To GridView1.Count - 1
      If GridView1.IsSelected(Row) = True Then
        $rData.MoveTo(Row)
        res = modDatabase.$myConn.Edit("tblpatlabtest", "fldid=&1 and fldsampleid IS NULL", $rData["fldid"])
        res["fldstatus"] = "Sent Out"
        res.Update
      Endif
    Next
    ShowSampled()
  Endif

End
