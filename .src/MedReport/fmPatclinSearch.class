' Gambas class file

Private $enctr As String[]
Private $newColumn As String[]
Private $fld As String
Private $tbl As String

Private $encList As String[]
Private $RepoStr As String

Public Sub _new()

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      pnlocat.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif

  Else
    pnlocat.Visible = False
  Endif

  cmbsex.List = ["%", "Male", "Female", "Other"]
  cmbsex.Text = "%"
  cmbtype.List = ComboCategory()

  dtfir.Value = Now()
  dtlast.Value = Now()
  chkgrid.Value = True
  $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Private Function ComboCategory() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("Diagnosis")
  xx.Add("History")
  xx.Add("Notes")
  xx.Add("Examination")
  xx.Add("Laboratory")
  xx.Add("Radiology")
  xx.Add("Procedure Summary")
  xx.Add("Procedure Notes")
  xx.Add("Delivery Note")
  xx.Add("IP Monitoring")
  xx.Add("Clinician Plan")

  Return xx

End

Public Sub btnrefresh_Click()

  TabStrip1.Index = 0

  $encList = New String[]
  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)

  GetDistinctEncounters()

  If chkgrid.Value = True Then
    FillPatientGrid()
  Endif
  ' modExternal.$ExecValueColl.Clear()

End

Private Sub GetDistinctEncounters()

  Dim res1 As Result
  Dim xxx As String[]

  Dim sql1 As String
  Dim sql2 As String
  Dim sql3 As String
  Dim sql4 As String
  Dim xstr As String

  If Not cmbsex.Text Then
    cmbsex.Text = "%"
  Endif

  Select cmbtype.Text
    Case "Diagnosis"
      $tbl = "tblpatfindings"
      $fld = "fldcode"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblpatfindings where (fldtype=&1 or fldtype=&2) and fldtime>=&3 and fldtime<=&4 and lower(fldcode) like &5" & $RepoStr, "Provisional Diagnosis", "Final Diagnosis", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text))
      Else
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblpatfindings where (fldtype=&1 or fldtype=&2) and fldtime>=&3 and fldtime<=&4 and lower(fldcode) like &5 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &6))" & $RepoStr, "Provisional Diagnosis", "Final Diagnosis", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "History", "Notes"
      $tbl = "tblexamgeneral"
      $fld = "flddetail"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblexamgeneral where fldinput=&1 and fldtime>=&2 and fldtime<=&3 and lower(flddetail) like &4" & $RepoStr, cmbtype.Text, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text))
      Else
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblexamgeneral where fldinput=&1 and fldtime>=&2 and fldtime<=&3 and lower(flddetail) like &4 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5))" & $RepoStr, cmbtype.Text, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text), cmbsex.Text)                                                    ''
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "Delivery Note"
      $tbl = "tblconfinement"
      $fld = "fldcomment"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblconfinement where fldtime>=&1 and fldtime<=&2 and lower(fldcomment) like &3" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblconfinement where fldtime>=&1 and fldtime<=&2 and lower(fldcomment) like &3 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "Procedure Summary"
      $tbl = "tblpatgeneral"
      $fld = "flddetail"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblpatgeneral where fldtime>=&1 and fldtime<=&2 and (fldinput=&3 or fldinput=&4) and lower(flddetail) like &5" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Procedures", "Extra Procedures", LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblpatgeneral where fldtime>=&1 and fldtime<=&2 and (fldinput=&3 or fldinput=&4) and lower(flddetail) like &5 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &6))" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Procedures", "Extra Procedures", LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "Procedure Notes"
      $tbl = "tblpatsubgeneral"
      $fld = "fldreport"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblpatsubgeneral where fldtime>=&1 and fldtime<=&2 and (fldchapter=&3 or fldchapter=&4 or fldchapter=&5 or fldchapter=&6) and lower(fldreport) like &7" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Pre-Operative Note", "Anaesthesia Note", "Operation Note", "Post-Operative Note", LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec("select fldencounterval from tblpatsubgeneral where fldtime>=&1 and fldtime<=&2 and (fldchapter=&3 or fldchapter=&4 or fldchapter=&5 or fldchapter=&6) and lower(fldreport) like &7 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &8))" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Pre-Operative Note", "Anaesthesia Note", "Operation Note", "Post-Operative Note", LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "Examination"
      $tbl = "tblpatientexam"
      $fld = "fldrepquali"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select tblpatientexam.fldencounterval as fldencounterval from tblpatientexam inner join tblpatientsubexam on tblpatientexam.fldid=tblpatientsubexam.fldheadid where tblpatientexam.fldtime>=&1 and tblpatientexam.fldtime<=&2 and tblpatientexam.fldsave=&3 and (lower(tblpatientexam.fldrepquali) like &4 or lower(tblpatientsubexam.fldreport) like &4)" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), True, LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec("select tblpatientexam.fldencounterval as fldencounterval from tblpatientexam inner join tblpatientsubexam on tblpatientexam.fldid=tblpatientsubexam.fldheadid where tblpatientexam.fldtime>=&1 and tblpatientexam.fldtime<=&2 and tblpatientexam.fldsave=&3 and (lower(tblpatientexam.fldrepquali) like &4 or lower(tblpatientsubexam.fldreport) like &4) and tblpatientexam.fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5))" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), True, LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "Laboratory"
      $tbl = "tblpatlabtest"
      $fld = "fldreportquali"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select tblpatlabtest.fldencounterval as fldencounterval from tblpatlabtest inner join tblpatlabsubtest on tblpatlabtest.fldid=tblpatlabsubtest.fldtestid where tblpatlabtest.fldtime_sample>=&1 and tblpatlabtest.fldtime_sample<=&2 and (lower(tblpatlabtest.fldreportquali) like &3 or lower(tblpatlabsubtest.fldreport) like &3)" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec("select tblpatlabtest.fldencounterval as fldencounterval from tblpatlabtest inner join tblpatlabsubtest on tblpatlabtest.fldid=tblpatlabsubtest.fldtestid where tblpatlabtest.fldtime_sample>=&1 and tblpatlabtest.fldtime_sample<=&2 and (lower(tblpatlabtest.fldreportquali) like &3 or lower(tblpatlabsubtest.fldreport) like &3) and tblpatlabtest.fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "Radiology"
      $tbl = "tblpatradiotest"
      $fld = "fldreportquali"
      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec("select tblpatradiotest.fldencounterval as fldencounterval from tblpatradiotest inner join tblpatradiosubtest on tblpatradiotest.fldid=tblpatradiosubtest.fldtestid where tblpatradiotest.fldtime_report>=&1 and tblpatradiotest.fldtime_report<=&2 and (lower(tblpatradiotest.fldreportquali) like &3 or lower(tblpatradiosubtest.fldreport) like &3)" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec("select tblpatradiotest.fldencounterval as fldencounterval from tblpatradiotest inner join tblpatradiosubtest on tblpatradiotest.fldid=tblpatradiosubtest.fldtestid where tblpatradiotest.fldtime_report>=&1 and tblpatradiotest.fldtime_report<=&2 and (lower(tblpatradiotest.fldreportquali) like &3 or lower(tblpatradiosubtest.fldreport) like &3) and tblpatradiotest.fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &4))" & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

    Case "IP Monitoring", "Clinician Plan"
      $tbl = "tblpatplanning"
      sql1 = "select fldencounterval from tblpatplanning where fldtime>=&1 and fldtime<=&2 and fldplancategory=&3 and lower(fldsubjective) like &4"
      sql2 = "select fldencounterval from tblpatplanning where fldtime>=&1 and fldtime<=&2 and fldplancategory=&3 and lower(fldobjective) like &4"
      sql3 = "select fldencounterval from tblpatplanning where fldtime>=&1 and fldtime<=&2 and fldplancategory=&3 and lower(fldassess) like &4"
      sql4 = "select fldencounterval from tblpatplanning where fldtime>=&1 and fldtime<=&2 and fldplancategory=&3 and lower(fldplan) like &4"
      xstr = "and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5))"

      If cmbsex.Text = "%" Then
        res1 = modDatabase.$syConn.Exec(sql1 & " UNION ALL " & sql2 & " UNION ALL " & sql3 & "UNION ALL " & sql4 & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), cmbtype.Text, LCase(txtsearch.Text))                                                                                                                 ''
      Else
        res1 = modDatabase.$syConn.Exec(sql1 & xstr & " UNION ALL " & sql2 & xstr & " UNION ALL " & sql3 & xstr & "UNION ALL " & sql4 & xstr & $RepoStr, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), cmbtype.Text, LCase(txtsearch.Text), cmbsex.Text)
      Endif
      xxx = modControlSub.GetDirectFillresult(res1)

  End Select

  If xxx.Count Then
    $enctr = modString.GetDistinctStringArray(xxx)
    lblrecordcount.Text = "Count: " & $enctr.Count
  Else
    $enctr = New String[]
    lblrecordcount.Text = "Count: 0"
  Endif

End

''---------------------------------- Get Data for last column -------------------------------
Private Sub GetCOlumnData(encid As String, sSearch As String) As String

  Dim res1 As Result
  Dim xxx As String

  xxx = ""
  Select cmbtype.Text
    Case "Diagnosis"
      res1 = modDatabase.$syConn.Exec("select fldcode from tblpatfindings where (fldtype=&1 or fldtype=&2) and fldtime>=&3 and fldtime<=&4 and lower(fldcode) like &5 and fldencounterval=&6", "Provisional Diagnosis", "Final Diagnosis", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%" & LCase(sSearch) & "%", encid)
      If res1.Available Then
        res1.MoveLast
        xxx = xxx & res1["fldcode"] & gb.NewLine
      Endif

    Case "History", "Notes"
      res1 = modDatabase.$syConn.Exec("select flddetail from tblexamgeneral where fldinput=&1 and fldtime>=&2 and fldtime<=&3 and lower(flddetail) like &4 and fldencounterval=&5", cmbtype.Text, modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%" & LCase(sSearch) & "%", encid)
      If res1.Available Then
        res1.MoveLast
        xxx = xxx & res1["flddetail"] & gb.NewLine
      Endif

    Case "Delivery Note"
      res1 = modDatabase.$syConn.Exec("select fldcomment from tblconfinement where fldtime>=&1 and fldtime<=&2 and lower(fldcomment) like &3 and fldencounterval=&4", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "%" & LCase(sSearch) & "%", encid)                                                                                                                 ''
      If res1.Available Then
        res1.MoveLast                    ''
        xxx = xxx & res1["fldcomment"] & gb.NewLine
      Endif

    Case "Procedure Summary"
      res1 = modDatabase.$syConn.Exec("select flddetail from tblpatgeneral where fldtime>=&1 and fldtime<=&2 and (fldinput=&3 or fldinput=&4) and lower(flddetail) like &5 and fldencounterval=&6", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Procedures", "Extra Procedures", "%" & LCase(sSearch) & "%", encid)                                                                                                                 ''
      If res1.Available Then
        res1.MoveLast                   ''
        xxx = xxx & res1["flddetail"] & gb.NewLine
      Endif

    Case "Procedure Notes"
      res1 = modDatabase.$syConn.Exec("select fldreport from tblpatsubgeneral where fldtime>=&1 and fldtime<=&2 or (fldchapter=&3 or fldchapter=&4 or fldchapter=&5 or fldchapter=&6) and lower(fldreport) like &7 and fldencounterval=&8", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), "Pre-Operative Note", "Anaesthesia Note", "Operation Note", "Post-Operative Note", "%" & LCase(sSearch) & "%", encid)                                                                                                                 ''
      If res1.Available Then
        res1.MoveLast                 ''
        xxx = xxx & res1["fldreport"] & gb.NewLine
      Endif

    Case Else
      xxx = ""

      ' Case "Progress Note: Problems", "Progress Note: Treatment", "Progress Note: I/O Summary", "Progress Note: Planning", "Clinical Plan: Subjective", "Clinical Plan: Objective", "Clinical Plan: Management", "Clinical Plan: Planning"
      '   res1 = modDatabase.$syConn.Exec("select " & fld & " from tblpatplanning where fldtime>=&1 and fldtime<=&2 and fldplancategory=&3 and lower(" & fld & ") like &4 and fldencounterval=&5", modDate.StartSqlDate(dtfir.Value), modDate.EndSqlDate(dtlast.Value), categ, "%" & LCase(sSearch) & "%", encid)                                                                                                                 ''
      '   xxx = modControlSub.GetDirectFillresult(res1).Join(gb.NewLine)

  End Select

  Return xxx

End

Private Sub FillPatientGrid()

  Dim i As Integer

  GridView1.Clear()
  GridView1.Count = $enctr.Count
  If $newColumn.Count Then
    GridView1.Columns.Count = 7 + $newColumn.Count
  Else
    GridView1.Columns.Count = 7
  Endif

  With GridView1
    .Columns[0].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "EncID"
    .Columns[1].Text = "Name"
    .Columns[2].Text = "Age"
    .Columns[3].Text = "Gender"
    .Columns[4].Text = "DORec"
    .Columns[5].Text = "PatientNo"
    .Columns[6].Text = "Text"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[7 + i].Text = $newColumn[i]
        .Columns[7 + i].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      Next
    Endif
  End With

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 1 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 2 Then
    xxx = modPatient.GetPatientAgeString(xVariable, modPatient.GetRecordDate(xVariable))
  Else If Column = 3 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 4 Then
    xxx = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(xVariable), gb.MediumDate)
  Else If Column = 5 Then
    xxx = modPatient.GetPatientNoByEnc(xVariable)
  Else If Column = 6 Then
    xxx = GetCOlumnData(xVariable, txtsearch.Text)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = 7 + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif

  Return xxx

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  modGridView.GridViewDecoration(Data, Row)
  If Column = 6 Then
    Data.Html = GetGridViewValue(Column, $enctr[Row])
  Else
    If Column > 6 Then
      Data.Html = modString.TextToHTML(GetGridViewValue(Column, $enctr[Row]))
    Else
      Data.Text = GetGridViewValue(Column, $enctr[Row])
    Endif
  Endif

End

''--------------------------------------------- Grid view --------------------------------
' Public Sub GridView1_Menu()
'
'   mnuhide.Popup
'
' End
'
' Public Sub GridView1_DblClick()
'
'   Dim xx As Integer
'   Dim yy As Integer
'
'   xx = Mouse.StartX - GridView1.Left
'   yy = Mouse.StartY - GridView1.Top
'
'   Balloon.Info(("Current Column is ") & CStr(GridView1.Column + 1), GridView1, xx, yy)
'   Balloon.Delay = 1000
'
' End

Public Sub mnuencchart_Click()

  Dim xx As String
  Dim Column As Integer
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim Row As Integer
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  hFile = New CUnivariate
  Column = modCustPatient.GetUnivariateColumn(0)

  If $enctr Then
    For Row = 0 To $enctr.Count - 1
      xval = GetGridViewValue(Column, $enctr[Row])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrossTab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xRow As Integer
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(0)
  Column = modCustPatient.GetCrossVarColumn(0)

  If $enctr Then
    For xRow = 0 To $enctr.Count - 1
      xval = GetGridViewValue(Row, $enctr[xRow])
      yval = GetGridViewValue(Column, $enctr[xRow])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnuregression_Click()

  Dim xx As String
  Dim xRow As Integer

  Dim DepCol As Integer
  Dim Indep1Col As Integer
  Dim Indep2Col As Integer
  Dim Indep3Col As Integer
  Dim Indep4Col As Integer
  Dim Indep5Col As Integer

  Dim Depvalue As Variant
  Dim Indep1Val As Variant
  Dim Indep2Val As Variant
  Dim Indep3Val As Variant
  Dim Indep4Val As Variant
  Dim Indep5Val As Variant

  Dim DepData As Variant[]
  Dim Indep1Data As Variant[]
  Dim Indep2Data As Variant[]
  Dim Indep3Data As Variant[]
  Dim Indep4Data As Variant[]
  Dim Indep5Data As Variant[]

  Message.Info(("Generating Report ...."), ("OK"))
  DepData = New Variant[]
  Indep1Data = New Variant[]
  Indep2Data = New Variant[]
  Indep3Data = New Variant[]
  Indep4Data = New Variant[]
  Indep5Data = New Variant[]

  DepCol = modCustPatient.GetRegressionDepVal(0)

  If modCustPatient.$RegVar1UseGridVal = "Yes" Or If modCustPatient.$RegVar1Variable Or If modCustPatient.$RegVar1SQLText Then
    Indep1Col = modCustPatient.GetRegressionVar1Val(0)
  Endif
  If modCustPatient.$RegVar2UseGridVal = "Yes" Or If modCustPatient.$RegVar2Variable Or If modCustPatient.$RegVar2SQLText Then
    Indep2Col = modCustPatient.GetRegressionVar2Val(0)
  Endif
  If modCustPatient.$RegVar3UseGridVal = "Yes" Or If modCustPatient.$RegVar3Variable Or If modCustPatient.$RegVar3SQLText Then
    Indep3Col = modCustPatient.GetRegressionVar3Val(0)
  Endif
  If modCustPatient.$RegVar4UseGridVal = "Yes" Or If modCustPatient.$RegVar4Variable Or If modCustPatient.$RegVar4SQLText Then
    Indep4Col = modCustPatient.GetRegressionVar4Val(0)
  Endif
  If modCustPatient.$RegVar5UseGridVal = "Yes" Or If modCustPatient.$RegVar5Variable Or If modCustPatient.$RegVar5SQLText Then
    Indep5Col = modCustPatient.GetRegressionVar5Val(0)
  Endif

  If $enctr Then
    For xRow = 0 To $enctr.Count - 1
      Depvalue = GetGridViewValue(DepCol, $enctr[xRow])
      If modCustPatient.$RegVar1UseGridVal = "Yes" Or If modCustPatient.$RegVar1Variable Or If modCustPatient.$RegVar1SQLText Then
        Indep1Val = GetGridViewValue(Indep1Col, $enctr[xRow])
      Else
        Indep1Val = "__"
      Endif
      If modCustPatient.$RegVar2UseGridVal = "Yes" Or If modCustPatient.$RegVar2Variable Or If modCustPatient.$RegVar2SQLText Then
        Indep2Val = GetGridViewValue(Indep2Col, $enctr[xRow])
      Else
        Indep2Val = "__"
      Endif
      If modCustPatient.$RegVar3UseGridVal = "Yes" Or If modCustPatient.$RegVar3Variable Or If modCustPatient.$RegVar3SQLText Then
        Indep3Val = GetGridViewValue(Indep3Col, $enctr[xRow])
      Else
        Indep3Val = "__"
      Endif
      If modCustPatient.$RegVar4UseGridVal = "Yes" Or If modCustPatient.$RegVar4Variable Or If modCustPatient.$RegVar4SQLText Then
        Indep4Val = GetGridViewValue(Indep4Col, $enctr[xRow])
      Else
        Indep4Val = "__"
      Endif
      If modCustPatient.$RegVar5UseGridVal = "Yes" Or If modCustPatient.$RegVar5Variable Or If modCustPatient.$RegVar5SQLText Then
        Indep5Val = GetGridViewValue(Indep5Col, $enctr[xRow])
      Else
        Indep5Val = "__"
      Endif

      If Depvalue And If Indep1Val And If Indep2Val And If Indep3Val And If Indep4Val And If Indep5Val Then
        modCustPatient.AddFormatRegressionDepToList(DepData, Depvalue)
        modCustPatient.AddFormatRegressionVar1ToList(Indep1Data, Indep1Val)
        modCustPatient.AddFormatRegressionVar2ToList(Indep2Data, Indep2Val)
        modCustPatient.AddFormatRegressionVar3ToList(Indep3Data, Indep3Val)
        modCustPatient.AddFormatRegressionVar4ToList(Indep4Data, Indep4Val)
        modCustPatient.AddFormatRegressionVar5ToList(Indep5Data, Indep5Val)
      Endif
    Next
  Endif

  xx = modPSPP.RegressionChartGridNew(DepData, Indep1Data, Indep2Data, Indep3Data, Indep4Data, Indep5Data)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnutimeseries_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xval As Variant
  Dim yval As Variant
  Dim xData As Variant[]
  Dim yData As Variant[]

  Dim xRow As Integer

  Message.Info(("Generating Report ...."), ("OK"))
  xData = New Variant[]
  yData = New Variant[]
  Row = modCustPatient.GetTimeVarRow(0)
  Column = modCustPatient.GetTimeVarColumn(0)

  If $enctr Then
    For xRow = 0 To $enctr.Count - 1
      xval = GetGridViewValue(Row, $enctr[xRow])
      yval = GetGridViewValue(Column, $enctr[xRow])
      If xval And If yval Then
        modCustPatient.AddFormatTimeVarRowToList(xData, xval)
        modCustPatient.AddFormatTimeVarColumnToList(yData, yval)
      Endif
    Next
  Endif

  xx = modPSPP.GetTimeChartGrid(xData, yData)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim xRow As Integer
  Dim Row As Integer
  Dim Column As Integer
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab

    Row = CInt(modCustPatient.$TabRowColumn) - 1
    Column = CInt(modCustPatient.$TabFieldColumn) - 1

    If $enctr Then
      For xRow = 0 To $enctr.Count - 1
        xval = GetGridViewValue(Row, $enctr[xRow])
        yval = GetGridViewValue(Column, $enctr[xRow])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    'modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnugridsummary_Click()

  Dim xx As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String

  Dim xRow As Integer
  Dim xPath As String
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  If $enctr Then
    For xRow = 0 To $enctr.Count - 1
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, $enctr[xRow])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, $enctr[xRow])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, $enctr[xRow]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnucompreport_Click()

  If GridView1.Selection.Count Then
    If modPatientSub.AllowEncIDHistory($enctr[GridView1.Selection[0]], modDatabase.$syConn) = True Then
      modPatReports.GetSelectedPatientValues($enctr[GridView1.Selection[0]], MMain.$defUnit)
    Endif
  Endif

End

Public Sub mnucompare_Click()

  If GridView1.Selection.Count Then
    If modPatientSub.AllowEncIDHistory($enctr[GridView1.Selection[0]], modDatabase.$syConn) = True Then
      $encList.Add($enctr[GridView1.Selection[0]])
      Message.Info($enctr[GridView1.Selection[0]] & " added to List for Comparison", ("OK"))
    Else
      Message.Warning(("Not allowed"), ("OK"))
    Endif
  Endif

End

Public Sub mnuaddcolumn_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnushowcompare_Click()

  Dim xxx As String[]
  Dim xPath As String

  Dim encid As String
  Dim xList As String[]
  Dim laball As String[]
  Dim radioall As String[]
  Dim lablist As String[]
  Dim radiolist As String[]

  xxx = $encList
  If xxx Then

    xList = SelectMedBody("")
    Wait
    If xList Then
      laball = New String[]
      radioall = New String[]
      For Each encid In xxx
        laball.Insert(modLabTest.PaientAllTestNameArray(encid))
        radioall.Insert(modRadioTest.PaientAllRadioNameArray(encid))
      Next
      lablist = modString.BinaryDistinctStringArray(laball, gb.Ascent)
      radiolist = modString.BinaryDistinctStringArray(radioall, gb.Ascent)
    Endif

    xPath = modMultiPatReports.MultiShowCompleteReport(xList, xxx, lablist, radiolist, MMain.$defUnit)
    modControlSub.DisplayReportExport(xPath)
  Endif

End

''------------------------------------ Chart -------------------------------------
' Public Sub PictureBox1_Menu()
'
'   mnuchart.Popup
'
' End

Public Sub btnexport_Click()

  Me.Exec("window.open('" & PictureBox1.Image & "'); ")

End

Public Sub btnstats_Click()

  ''chart

End

''------------------------------------ Reports ---------------------------------------
Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer
  Dim ColCount As Integer
  Dim Row As Integer

  If $newColumn.Count Then
    ColCount = 7 + $newColumn.Count
  Else
    ColCount = 7
  Endif

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "Search Report"
  xparam2 = modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  encColumn = 0
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  For Row = 0 To $enctr.Count - 1
    xCollRow = New Collection
    For xColum = 0 To ColCount - 1
      xCollRow.Add(GetGridViewValue(xColum, $enctr[Row]), CStr(xColum))
    Next
    $hGridExportTable.Add(Row, xCollRow)
  Next
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

Public Sub chkchart_Click()

  TabStrip1.Index = 1

End

Public Sub mnuColumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim Row As Integer
  Dim yval As Variant
  Dim xList As String[]

  Dim xVar As Variant[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then

    xList = New String[]
    For Row = 0 To $enctr.Count - 1
      If Column = 6 Then
        yval = GetGridViewValue(Column, $enctr[Row])
      Else
        If Column > 6 Then
          yval = modString.TextToHTML(GetGridViewValue(Column, $enctr[Row]))
        Else
          yval = GetGridViewValue(Column, $enctr[Row])
        Endif
      Endif
      If yval Then
        xList.Add(yval)
      Endif

    Next

    If xList.Count Then
      xVar = modString.GetUnivariateSummary(xList)
      xPath = modCHTMLReport.CreateHTMLReportFromArray(["Variable", "Count"], xVar, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End
