' Gambas module file

Public $PharmPackVolume As Collection
Public $PharmPackVolUnit As Collection

''---------------------------------- General function ------------------------------
Public Function ConvertDoseToPrintNum(dos As Float) As String

  Dim newdos As String

  If dos Then
    If Round(dos, -2) = 0.25 Then
      newdos = "1/4"
    Else If Round(dos, -2) = 0.33 Or If Round(dos, -2) = 0.34 Then
      newdos = "1/3"
    Else If Round(dos, -2) = 0.66 Or If Round(dos, -2) = 0.67 Then
      newdos = "2/3"
    Else If Round(dos, -2) = 0.75 Then
      newdos = "3/4"

    Else If Round(dos, -1) = 0.1 Then
      newdos = "1/10"
    Else If Round(dos, -1) = 0.2 Then
      newdos = "1/5"
    Else If Round(dos, -1) = 0.3 Then
      newdos = "3/10"
    Else If Round(dos, -1) = 0.4 Then
      newdos = "2/5"
    Else If Round(dos, -1) = 0.5 Then
      newdos = "1/2"
    Else If Round(dos, -1) = 0.6 Then
      newdos = "3/5"
    Else If Round(dos, -1) = 0.7 Then
      newdos = "7/10"
    Else If Round(dos, -1) = 0.8 Then
      newdos = "4/5"
    Else If Round(dos, -1) = 0.9 Then
      newdos = "9/10"
    Else
      newdos = CStr(Round(dos, -1))
    Endif

  Else
    newdos = "0"
  Endif

  Return newdos

End

Public Function ConvertFrequencyToNumber(txtfreq As String) As Float

  Dim xx As Float

  If txtfreq Then
    Select Case txtfreq
      Case "PRN"
        xx = 3
      Case "SOS", "stat", "AM", "HS", "Pre", "Post"
        xx = 1
      Case "Two-hourly"
        xx = 12
      Case "Hourly"
        xx = 24
      Case "Alt day"
        xx = 1 / 2
      Case "Third day"
        xx = 1 / 3
      Case "Fourth day"
        xx = 1 / 4
      Case "Weekly"
        xx = 1 / 7
      Case "Biweekly"
        xx = 1 / 14
      Case "Triweekly"
        xx = 1 / 21
      Case "Monthly"
        xx = 1 / 30
      Case "Yearly"
        xx = 1 / 365
      Case "Tapering"
        xx = 1
      Case Else
        xx = CFloat(txtfreq)
    End Select

  Else
    xx = 1
  Endif

  Return xx

End

'NOTE:----------------------------------- Labeling  Specific---------------------------------------------
Public Function GetMedicineNameOptionType(stockid As String, sType As String) As String

  Dim xx As String

  If sType = "Brand" Then
    xx = modMedConstant.ConvertGenericToBrand(stockid)
  Else If sType = "Generic" Then
    xx = modMedConstant.GetDrugFromStockID(stockid)
  Else
    xx = stockid
  Endif

  Return xx

End

Public Function MedicineLabelName(stockid As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select flddeflabel from tblmedbrand where fldbrandid=&1", stockid)
  If res.Available Then
    If res["flddeflabel"] Then
      xx = GetMedicineNameOptionType(stockid, res["flddeflabel"])
    Else
      xx = stockid
    Endif
  Else
    xx = stockid
  Endif
  Return xx

End

Public Function GetLabelWordsFromDB(txtcode As String, LabelMode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldengdire,fldlocaldire from tbllocallabel where fldengcode=&1", txtcode)
  If res.Available = True Then
    If LabelMode = "Outpatient" Then
      If res["fldlocaldire"] Then
        xx = res["fldlocaldire"]
      Else
        xx = txtcode
      Endif
    Else
      If res["fldengdire"] Then
        xx = res["fldengdire"]
      Else
        xx = txtcode
      Endif
    Endif
  Else
    xx = txtcode
  Endif

  Return xx

End

Public Function GetLabelFontFromDB(txtcode As String, LabelMode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldfont from tbllocallabel where fldengcode=&1", txtcode)
  If res.Available = True Then
    If LabelMode = "Outpatient" Then
      If res["fldfont"] Then
        xx = res["fldfont"]
      Else
        xx = ""
      Endif
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetDirectionForLabel(txtroute As String, txtitem As String, LabelMode As String) As String

  Dim res As Result
  Dim res1 As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldopinfo,fldipinfo,fldasepinfo from tbllabel where fldroute=&1 and flddrug in(select flddrug from tblmedbrand where fldbrandid=&2)", txtroute, txtitem)                                                                 '''
  If res.Available = True Then
    If LabelMode = "Outpatient" Then
      If res["fldopinfo"] Then
        xx = res["fldopinfo"]
      Else
        xx = ""
      Endif
    Else If LabelMode = "Inpatient" Then
      If res["fldipinfo"] Then
        xx = res["fldipinfo"]
      Else
        xx = ""
      Endif
    Else If LabelMode = "Aseptic" Then
      If res["fldasepinfo"] Then
        xx = res["fldasepinfo"]
      Else
        xx = ""
      Endif
    Endif
  Else
    xx = ""
  Endif

  ''only for injection subroutes
  If Not xx Then
    If txtroute = "injection" Then
      res1 = modDatabase.$medConn.Exec("select fldopinfo,fldipinfo,fldasepinfo,fldroute from tbllabel where flddrug in(select flddrug from tblmedbrand where fldbrandid=&1) and (fldroute=&2 or fldroute=&3 or fldroute=&4 or fldroute=&5 or fldroute=&6)", txtitem, "IVpush", "CIV", "IIV", "SC", "IM")                                                                 '''
      If res1.Available Then
        If res1.Count = 1 Then

          If LabelMode = "Outpatient" Then
            If res1["fldopinfo"] Then
              xx = "[" & res1["fldroute"] & "] " & res1["fldopinfo"]
            Else
              xx = ""
            Endif
          Else If LabelMode = "Inpatient" Then
            If res1["fldipinfo"] Then
              xx = "[" & res1["fldroute"] & "] " & res1["fldipinfo"]
            Else
              xx = ""
            Endif
          Else If LabelMode = "Aseptic" Then
            If res1["fldasepinfo"] Then
              xx = "[" & res1["fldroute"] & "] " & res1["fldasepinfo"]
            Else
              xx = ""
            Endif
          Endif

        Else
          xx = ""
        Endif
      Else
        xx = ""
      Endif
    Endif
  Endif

  Return xx

End

Public Function GetDirectionFontForLabel(txtroute As String, txtitem As String, LabelMode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldopfont from tbllabel where fldroute=&1 and flddrug in(select flddrug from tblmedbrand where fldbrandid=&2)", txtroute, txtitem)                                                                 '''
  If res.Available = True Then
    If LabelMode = "Outpatient" Then
      If res["fldopfont"] Then
        xx = res["fldopfont"]
      Else
        xx = ""
      Endif
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetQuantityLabel(txtdose As Float, txtitem As String, LabelMode As String) As String

  Dim xx As String
  Dim xval As Float

  If LabelMode = "Aseptic" Then
    xx = ""
  Else
    xval = modMedConstant.GetDrugInitialStrength(txtitem)
    If xval Then
      xx = ConvertDoseToPrintNum(txtdose / xval)
    Else
      xx = ""
    Endif
  Endif

  Return xx

End

Public Function GetPackVolValue(txtitem As String) As Float

  Dim res As Result
  Dim xx As Float
  Dim yy As Variant

  yy = modHelpVariable.GetCollectionValue($PharmPackVolume, txtitem, modBasic.$AppCacheMedicineConstants)
  If yy Then
    xx = CFloat(yy)
  Else
    xx = 0
  Endif

  If Not xx Then
    res = modDatabase.$medConn.Exec("select fldpackvol from tblmedbrand where fldbrandid=&1", txtitem)                                                                 '''
    If res.Available Then
      If res["fldpackvol"] Then
        xx = res["fldpackvol"]
        If modBasic.$AppCacheMedicineConstants = "Yes" Then
          $PharmPackVolume.Add(xx, txtitem)
        Endif
      Else
        xx = 0
      Endif
    Else
      xx = 0
    Endif
  Endif
  Return xx

End

Public Function GetPackVolUnit(txtitem As String) As String

  Dim res As Result
  Dim xx As String

  xx = modHelpVariable.GetCollectionValue($PharmPackVolUnit, txtitem, modBasic.$AppCacheMedicineConstants)
  If Not xx Then
    res = modDatabase.$medConn.Exec("select fldvolunit from tblmedbrand where fldbrandid=&1", txtitem)                                                                 '''
    If res.Available Then
      If res["fldvolunit"] Then
        xx = res["fldvolunit"]
        If modBasic.$AppCacheMedicineConstants = "Yes" Then
          $PharmPackVolUnit.Add(xx, txtitem)
        Endif
      Else
        xx = ""
      Endif
    Else
      xx = ""
    Endif
  Endif
  Return xx

End

Public Function GetPackVolString(sItem As String) As String

  Dim res As Result
  Dim xval As String

  res = modDatabase.$myConn.Exec("select fldpackvol,fldvolunit from tblmedbrand where fldbrandid=&1", sItem)
  If res.Available Then
    If res["fldpackvol"] Then
      If res["fldpackvol"] = 1 Then
        xval = ""
      Else
        xval = CStr(res["fldpackvol"]) & Space(1) & res["fldvolunit"]
      Endif
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif
  Return xval

End

Public Function GetDosageFormForLabel(txtitem As String, LabelMode As String) As String

  Dim xx As String
  Dim xval As String

  xval = GetPackVolUnit(txtitem)
  If xval Then
    xx = GetLabelWordsFromDB(xval, LabelMode)
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetDosageFontForLabel(txtitem As String, LabelMode As String) As String

  Dim xx As String
  Dim xval As String

  xval = GetPackVolUnit(txtitem)
  If xval Then
    xx = GetLabelFontFromDB(xval, LabelMode)
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetCounselingInfo(txtroute As String, txtitem As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldmedinfo from tbllabel where fldroute=&1 and flddrug in(select flddrug from tblmedbrand where fldbrandid=&2)", txtroute, txtitem)                                                                 '''
  If res.Available = True Then
    If res["fldmedinfo"] Then
      xx = res["fldmedinfo"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function ForceLabelPrint(stockid As String) As Boolean

  Dim xx As Boolean
  Dim xval As String

  If modBasic.$DispLabelAutoEnable Then
    If modBasic.$DispLabelAutoEnable = "All Types" Then
      xx = True
    Else
      xval = modMedConstant.GetRiskTypeFromSTockID(stockid)
      If modBasic.$DispLabelAutoEnable = xval Then
        xx = True
      Else
        xx = False
      Endif
    Endif
  Else
    xx = False
  Endif
  Return xx

End

Public Function GetDosageFormFromStockID(sItem As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select flddosageform from tblmedbrand where fldbrandid=&1", sItem)
  If res.Available Then
    If res["flddosageform"] Then
      xx = res["flddosageform"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif

  Return xx

End
