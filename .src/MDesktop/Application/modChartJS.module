' Gambas module file

Private $ColorList As String[] = ["maroon", "red", "purple", "fushsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "black", "gray", "silver", "maroon", "red", "purple", "fushsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "black", "gray", "silver", "maroon", "red", "purple", "fushsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "black", "gray", "silver"]

Public Function GetHTMLChartScript(sType As String, sExam As String, xValues As Variant[], yValues As Variant[]) As Collection

  Dim schart As Collection
  Dim xdata As Collection
  Dim xdataset As Variant[]
  Dim xdatacoll As Collection

  xdataset = New Variant[]
  xdatacoll = New Collection
  xdatacoll.Add(sExam, "label")

  ''get designs
  Select sType
    Case "line"
      xdatacoll.Add(False, "fill")
      xdatacoll.Add(0, "lineTension")
      xdatacoll.Add("red", "backgroundColor")
      xdatacoll.Add("gray", "borderColor")
    Case "pie", "bar", "horizontalBar", "doughnut"
      If xValues.Count <= $ColorList.Count
        xdatacoll.Add($ColorList.Copy(0, xValues.Count - 1), "backgroundColor")
      Endif
  End Select

  xdatacoll.Add(yValues, "data")
  xdataset.Add(xdatacoll)

  xdata = New Collection
  xdata.Add(xValues, "labels")
  xdata.Add(xdataset, "datasets")

  schart = New Collection
  schart.Add(sType, "type")
  schart.Add(xdata, "data")

  Return schart

End

Public Function GetHTMLStackedScript(sType As String, sExam As String[], xValues As Variant[], yValues As Variant[], zValues As Variant[]) As Collection

  Dim schart As Collection
  Dim xdata As Collection
  Dim xdataset As Variant[]
  Dim xdatacoll As Collection

  Dim xColl As Collection
  Dim xVar As Variant[]
  Dim yColl As Collection
  Dim zColl As Collection

  xdataset = New Variant[]

  xdatacoll = New Collection
  xdatacoll.Add(sExam[0], "label")
  xdatacoll.Add("red", "backgroundColor")
  xdatacoll.Add(yValues, "data")
  xdataset.Add(xdatacoll)

  xdatacoll = New Collection
  xdatacoll.Add(sExam[1], "label")
  xdatacoll.Add("green", "backgroundColor")
  xdatacoll.Add(zValues, "data")
  xdataset.Add(xdatacoll)

  xdata = New Collection
  xdata.Add(xValues, "labels")
  xdata.Add(xdataset, "datasets")

  ''for stacked
  zColl = New Collection
  yColl = New Collection
  xVar = New Variant[]
  xColl = New Collection
  xColl.Add(True, "stacked")
  xVar.Add(xColl)

  yColl.Add(xVar, "xAxes")
  yColl.Add(xVar, "yAxes")
  zColl.Add(yColl, "scales")

  ''final collection for chart
  schart = New Collection
  schart.Add("bar", "type")
  schart.Add(xdata, "data")
  If sType = "stacked" Then  ''or grouped
    schart.Add(zColl, "options")
  Endif

  Return schart

End
