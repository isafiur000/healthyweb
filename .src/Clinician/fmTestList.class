' Gambas class file

Private $encid As String
Private $BillMode As String
Private $sPackage As String
Private $bedLocation As String
Private $xFinClear As Boolean
Private $PatientNum As String
Private $xNHISCode As String

Private $rData1 As MyResult
Private $aMyFields1 As String[]
Private $rData2 As MyResult
Private $aMyFields2 As String[]
Private $rData3 As Result
Private $aMyFields3 As String[]

Private $TestList As String[]
Private $TestListFile As Variant[]
Private $LabDepartList As String[]

Private $doa As Date
Private $sColl As Collection
Private $rData4 As Result
Private $aMyFields4 As String[]

Private $tblpatlabtest As String
Private $tblpatlabsubtest As String

Public Sub _new(encid As String, DiscType As String)

  Dim accLst As String[]

  $encid = encid
  $sPackage = DiscType
  modGeneralMain.GetOpenModalForm(Me)

  accLst = modBasic.$BillDiscountCash
  If accLst.Count = 0 Then
    accLst.Add($sPackage)
  Endif
  cmbdisctype.List = accLst
  cmbdisctype.Text = $sPackage
  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  txtgender.Text = modPatient.GetPatientAgeString($encid, Now()) & "/" & modPatient.GetPatientSex($encid)
  $PatientNum = modPatient.GetPatientNoByEnc($encid)
  $xNHISCode = modPatient.GetPatientExtCOdebyEnc($encid)
  $BillMode = modNonMedical.GetDiscBindBillMode($sPackage)
  If Not $BillMode Then
    $BillMode = modpatient.GetPatBillingMode($encid)
  Endif

  $doa = modPatient.GetRecordDate($encid)
  $bedLocation = modPatient.GetPatientLocation($encid)
  $xFinClear = modNonMedical.GetFinanceClearance($encid)
  $LabDepartList = modMedicine.GetPathoCategoryList("Test")
  modLabSub.DisplayDefaultTestUnit(rbsi, rbmetric)
  btnrefer.Tag = modBillings.GetReferralUserSetting("Test", $encid)
  If btnrefer.Tag Then
    btnrefer.Text = modGeneral.GetUserFullName(btnrefer.Tag)
  Endif
  If modBasic.$ReferralLockEntry = "Yes" Then
    btnselectuser.Enabled = False
  Endif
  $TestList = New String[]
  modAccount.PasInvoiceSetting(cmbfiscal, True)
  LoadTableNames()

  SHowSavedGrid()
  ShowSampled()
  If $xFinClear = True Then
    btnselect.Visible = False
    btnselecttree.Visible = False
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End

Private Sub LoadTableNames()

  Dim res As Result

  If cmbfiscal.Text = "Current" Then
    $tblpatlabtest = "tblpatlabtest"
    $tblpatlabsubtest = "tblpatlabsubtest"
  Else
    res = modDatabase.$syConn.Exec("select fldpatlabtest,fldpatlabsubtest from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", cmbfiscal.Text, "Active")
    If res.Available Then
      If res["fldpatlabtest"] Then
        $tblpatlabtest = res["fldpatlabtest"]
      Else
        $tblpatlabtest = "tblpatlabtest"
      Endif
      If res["fldpatlabsubtest"] Then
        $tblpatlabsubtest = res["fldpatlabsubtest"]
      Else
        $tblpatlabsubtest = "tblpatlabsubtest"
      Endif
    Else
      $tblpatlabtest = "tblpatlabtest"
      $tblpatlabsubtest = "tblpatlabsubtest"
    Endif
  Endif

End

Public Sub cmbfiscal_Click()

  LoadTableNames()

End

Public Sub btnfiscal_Click()

  LoadTableNames()
  FillLabtable()

End

Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Referral User"), modBasic.$ReferUserList)
  If xMedUser And If xMedUser.Count Then
    btnrefer.Tag = xMedUser[0]
    btnrefer.Text = xMedUser[1]
  Else
    btnrefer.Tag = ""
    btnrefer.Text = ""
  Endif

End

Public Sub btnrefer_Change()

  If btnrefer.Text = "" Then
    btnrefer.Tag = ""
  Endif

End

Public Sub btnscheme_Click()

  If cmbdisctype.Text Then
    $BillMode = modNonMedical.GetDiscBindBillMode(cmbdisctype.Text)
    If Not $BillMode Then
      $BillMode = modpatient.GetPatBillingMode($encid)
    Endif
    If $TestList And If $TestList.Count Then
      $TestList.Clear()
    Endif
    TabPanel1.Index = 0
  Endif

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    SHowSavedGrid()
    ShowSampled()
  Else If TabPanel1.Index = 1 Then
    rblabs.Value = True
    ShowGrid()
  Else If TabPanel1.Index = 2 Then
    cmbcategory.List = $LabDepartList
    cmbcategory.Add("All Sections")
    ShowGridTree()
  Else If TabPanel1.Index = 3 Then
    rbdaterepo.Value = True
    FillLabtable()
  Endif

End

''------------------------------------- Listview -----------------------------------
Public Sub rblabs_Click()

  cmbtestgroup.Clear()
  cmbtestgroup.List = $LabDepartList
  cmbtestgroup.Add("All Sections")

End

Public Sub rbcash_Click()

  cmbtestgroup.Clear()
  If modBasic.$ClinTestGrouping = "Section" Then
    cmbtestgroup.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldreport) as col from tblservicecost where flditemtype=&1 and fldreport like &2", "Diagnostic Tests", "%"))
  Else
    cmbtestgroup.List = modNonMedical.NonSTockCostingGroupList("Test")
  Endif

End

Public Sub chkdefault_Click()

  If rbcash.Value = True Then
    If chkdefault.Value = True Then
      cmbtestgroup.Clear()
      cmbtestgroup.Add(modBasic.$DefaultTestList)
      FillSelLabCOlumnView(modBasic.$DefaultTestList)
    Else If chkdefault.Value = False Then
      rbcash_Click()
    Endif
  Endif

End

Public Sub cmbtestgroup_Select()

  If cmbtestgroup.Text Then
    ListView1.Clear()
    If $TestList And If $TestList.Count Then
      $TestList.Clear()
    Endif
    If rblabs.Value = True Then
      FillLabCOlumnView(cmbtestgroup.Text)
    Else If rbcash.Value = True Then
      FillSelLabCOlumnView(cmbtestgroup.Text)
    Endif
    ListView1.List = modString.SelectStringArrayToText(txtsearch.Text, $TestList, chkleftmain.Value)
    txtsearch.SetFocus
  Endif

End

Private Sub FillLabCOlumnView(sDepart As String)

  Dim sstr1 As String
  Dim res As Result
  Dim xxx As String[]

  If Not $TestList.Count Then
    If sDepart = "All Sections" Then
      sstr1 = "select distinct(fldgroupname) as col from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) ORDER BY fldgroupname"                                                ''
      res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active")
    Else
      sstr1 = "select distinct(fldgroupname) as col from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory=&4) ORDER BY fldgroupname"                                                ''
      res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active", sDepart)
    Endif
    xxx = modControlSub.GetDirectFillresult(res)
    $TestList = xxx
  Endif

End

Private Sub FillSelLabCOlumnView(sItem As String)

  Dim sstr1 As String
  Dim res As Result
  Dim xxx As String[]

  If Not $TestList.Count Then
    If modBasic.$ClinTestGrouping = "Section" Then
      sstr1 = "select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3 and fldreport=&4 and flditemtype=&5"
      res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active", sItem, "Diagnostic Tests")
    Else
      sstr1 = "select distinct(fldgroupname) as col from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) and fldgroupname in(select flditemname from tblcostgroup where fldgroup=&4)"                                                ''
      res = modDatabase.$myConn.Exec(sstr1, $BillMode, "%", "Active", sItem)
    Endif
    xxx = modControlSub.GetDirectFillresult(res)
    $TestList = xxx
  Endif

End

Public Sub txtsearch_Change()

  ListView1.List = modString.SelectStringArrayToText(txtsearch.Text, $TestList, chkleftmain.Value)

End

Public Sub chkall_Click()

  If chkall.Value = True Then
    ListView1.SelectAll()
  Else If chkall.Value = False Then
    ListView1.UnselectAll()
  Endif

End

Public Sub ListView1_Select()

  Dim xdate As Date

  If ListView1.Selection.Count = 1 Then
    xdate = modBillings.CheckLastSalesItemDate(ListView1.List[ListView1.Index], $PatientNum, $xNHISCode, cmbdisctype.Text)
    If xdate Then
      txtlastsaledate.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
      If DateDiff(xdate, Now(), gb.Month) <= 3 Then
        txtlastsaledate.Foreground = Color.Red
      Else
        txtlastsaledate.Foreground = Color.Default
      Endif
    Else
      txtlastsaledate.Text = ""
      txtlastsaledate.Foreground = Color.Default
    Endif
  Endif

End

Public Sub btnselect_Click()

  Dim i As Integer
  Dim xrefer As String
  Dim xpayble As String

  Dim xList As String[]
  Dim acount As Integer

  acount = 0
  If btnrefer.Tag Then
    xrefer = btnrefer.Tag
  Else
    xrefer = modBillings.GetReferralUserSetting("Test", $encid)
  Endif
  xpayble = ""

  Select modBasic.$AutoBillTest
    Case "Partial"
      xList = New String[]
      xList.Insert($rData3.All("flditemname"))
    Case "Yes", "Full"
      xList = New String[]
      xList.Insert($rData3.All("flditemname"))
      xList.Insert($rData1.All("flditemname"))
  End Select

  If modMisc.AllowDiagnoBilling($encid) = True Then

    For i = 0 To ListView1.List.Count - 1
      If ListView1.IsSelected(i) = True Then

        If modBasic.$AutoBillTest = "Standard" Or If modBasic.$AutoBillTest = "Full" Or If modBasic.$AutoBillTest = "Partial" Then
          If modMisc.GetDuplicationAllow(xList, ListView1.List[i]) = True Then
            modBillings.GetAutoBillingClinic($encid, cmbdisctype.Text, "Test", ListView1.List[i], 1, "Punched", 0, False, False, xpayble, xrefer)
            acount = acount + 1
          Endif
          ListView1.Unselect(i)
        Endif

      Endif
    Next
    ShowGrid()

  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

  If acount Then
    txtsearch.Text = ""
    Me.Exec("Toastify({text: 'Request added', duration: 3000}).showToast()")
    If modBasic.$TabletModeEnable = "Yes" Then
    Else
      txtsearch.SetFocus
    Endif
  Endif

End

''--------------------------------------------------- Gridview -------------------------------------------
Private Sub ShowGrid()

  Dim sql As String
  Dim res As Result

  sql = "select fldid,flditemname,fldstatus,fldreason,fldordtime,fldtarget from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3"
  res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", False)
  ShowInitialGridView(res)

End

Private Sub ShowInitialGridView(res As Result)

  $rData3 = res
  $aMyFields3 = New String[]
  modGridView.ReadSmallData(GridView1, $rData3, $aMyFields3)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(275 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Hidden = True
    .Columns[4].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Test Name"
    .Columns[2].Text = "Status"
    .Columns[4].Text = "Date Time"
    .Columns[5].Text = "Target"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData3.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 4 Then
    Data.Text = modReportVar.GetDateTimeReport($rData3[$aMyFields3[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData3[$aMyFields3[Column]]
  Endif

End

Private Sub SavePartialEntry(res As Result)

  res["fldstatus"] = "Done"
  res["fldsave"] = True
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["xyz"] = False
  res.Update()

End

Public Sub btnsave_Click()

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval= &1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4", $encid, "Diagnostic Tests", False, "Punched")                 ''
  For Each res

    If modBasic.$AutoBillTest = "Standard" Then
      If modNonMedical.AllowPreCheckDeposit($encid, res["fldditemamt"]) = True Then
        SavePartialEntry(res)
      Endif
    Else If modBasic.$AutoBillTest = "Full" Then
      If modNonMedical.AllowPreEntryWithDeposit($encid, "Test", res["fldditemamt"]) = True Then
        SavePartialEntry(res)
      Endif
    Else
      If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
        SavePartialEntry(res)
      Endif
    Endif

  Next
  ShowGrid()

End

Public Sub mnucomment_Click()

  Dim xx As String
  Dim res As Result

  If GridView1.Selection.Count Then
    $rData3.MoveTo(GridView1.Selection[0])
    xx = GetTextArea($rData3["flditemname"], $rData3["fldreason"])
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", $rData3["fldid"])
      res["fldreason"] = xx
      res["xyz"] = False
      res.Update
      ShowGrid()
    Endif
  Endif

End

Public Sub mnutarget_Click()

  Dim xx As String
  Dim res As Result

  If GridView1.Selection.Count Then
    $rData3.MoveTo(GridView1.Selection[0])
    xx = InputCombo("Change Target", $rData3["flditemname"], modBasic.$AllCompList, $rData3["fldtarget"], True)
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", $rData3["fldid"])
      res["fldtarget"] = xx
      res["xyz"] = False
      res.Update
      ShowGrid()
    Endif
  Endif

End

Public Sub mnudel_Click()

  If GridView1.Selection.Count Then
    If Message.Question("Are you sure ?", ("No"), ("Yes")) = 2 Then
      $rData3.MoveTo(GridView1.Selection[0])
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", $rData3["fldid"], False)
      ShowGrid()
    Endif
  Endif

End

''-------------------- Tree View Request -----------------------
Public Sub cmbcategory_Select()

  If cmbcategory.Text Then
    LoadActiveTestsList(cmbcategory.Text)
    GetLabTreeView()
    txtsearchtree.SetFocus
  Endif

End

Private Sub LoadActiveTestsList(sDepart As String)

  Dim res As Result
  Dim sColl As Collection

  $TestListFile = New Variant[]
  If sDepart = "All Sections" Then
    res = modDatabase.$myConn.Exec("select fldgroupname,fldtestid from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) ORDER BY fldtestid", $BillMode, "%", "Active")
  Else
    res = modDatabase.$myConn.Exec("select fldgroupname,fldtestid from tblgrouptest where fldgroupname in(select flditemname from tblservicecost where (fldgroup=&1 or fldgroup=&2) and fldstatus=&3) and fldtestid in(select fldtestid from tbltest where fldcategory=&4) ORDER BY fldtestid", $BillMode, "%", "Active", sDepart)
  Endif
  If res.Available Then
    For Each res
      sColl = New Collection
      sColl.Add(res["fldgroupname"], "fldgroupname")
      sColl.Add(res["fldtestid"], "fldtestid")
      $TestListFile.Add(sColl)
    Next
  Endif

End

Private Function GetUniqListFromVariant(sVar As Variant[], sKey As String) As String[]

  Dim sColl As Collection
  Dim xxx As String[]
  Dim xList As String[]

  xxx = New String[]
  For Each sColl In sVar
    xxx.Add(sColl[sKey])
  Next
  If xxx.Count Then
    xList = modString.GetDistinctStringArray(xxx)
  Else
    xList = New String[]
  Endif
  Return xList

End

Private Function GetMatchingItemList(sWord As String, sVar As Variant[], sGiven As String, sTarget As String) As String[]

  Dim sColl As Collection
  Dim xxx As String[]
  Dim xList As String[]

  xxx = New String[]
  For Each sColl In sVar
    If sColl[sGiven] = sWord Then
      xxx.Add(sColl[sTarget])
    Endif
  Next
  If xxx.Count Then
    xList = modString.GetDistinctStringArray(xxx)
  Else
    xList = New String[]
  Endif
  Return xList

End

Private Sub GetLabTreeView()

  Dim pic1 As String
  Dim pic2 As String

  Dim aList As String[]
  Dim bList As String[]
  Dim bstr As String
  Dim i As Integer

  Dim yList As String[]
  Dim ystr As String
  Dim j As Integer

  pic1 = "icons/coll1.png"
  pic2 = "icons/coll3.png"

  TreeView1.Clear()
  aList = GetUniqListFromVariant($TestListFile, "fldtestid")
  If chkleftTree.Value = True Then
    bList = modString.SelectStringArrayToText(txtsearchtree.Text, modString.GetDistinctStringArray(aList), True)
  Else
    bList = modString.SelectStringArrayToText(txtsearchtree.Text, modString.GetDistinctStringArray(aList), False)
  Endif
  If bList.Count Then
    i = 1
    For Each bstr In bList
      TreeView1.Add(CStr(i) & "@" & bstr, bstr, pic1)

      yList = GetMatchingItemList(bstr, $TestListFile, "fldtestid", "fldgroupname")
      If yList.Count Then
        j = 1
        For Each ystr In yList
          TreeView1.Add(CStr(i) & "@" & CStr(j) & "@" & ystr, ystr, pic2, CStr(i) & "@" & bstr)
          j = j + 1
        Next
      Endif

      i = i + 1
    Next
  Endif

End

Public Sub txtsearchtree_Change()

  GetLabTreeView()

End

Private Sub ShowGridTree()

  Dim sql As String

  sql = "select tblpatbilling.fldid,tblgrouptest.fldtestid,tblpatbilling.fldstatus,tblpatbilling.fldreason,tblpatbilling.fldordtime,tblpatbilling.fldtarget,tblpatbilling.flditemname from tblpatbilling inner join tblgrouptest on tblpatbilling.flditemname=tblgrouptest.fldgroupname where tblpatbilling.fldencounterval=&1 and tblpatbilling.flditemtype=&2 and tblpatbilling.fldsave=&3"
  $rData4 = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", False)
  $aMyFields4 = New String[]
  modGridView.ReadSmallData(GridView4, $rData4, $aMyFields4)

  With GridView4
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(275 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Hidden = True
    .Columns[4].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Hidden = True

    .Columns[1].Text = "Test Name"
    .Columns[2].Text = "Status"
    .Columns[4].Text = "Date Time"
    .Columns[5].Text = "Target"
  End With

End

Public Sub GridView4_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData4.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 4 Then
    Data.Text = modReportVar.GetDateTimeReport($rData4[$aMyFields4[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData4[$aMyFields4[Column]]
  Endif

End

Public Sub TreeView1_Select()

  Dim xdate As Date

  If TreeView1.Current.Image = "icons/coll3.png" Then
    xdate = modBillings.CheckLastSalesItemDate(TreeView1.Current.Text, $PatientNum, $xNHISCode, cmbdisctype.Text)
    If xdate Then
      txtlastsaledate2.Text = modReportVar.GetDateTimeReport(xdate, gb.MediumDate)
      If DateDiff(xdate, Now(), gb.Month) <= 3 Then
        txtlastsaledate2.Foreground = Color.Red
      Else
        txtlastsaledate2.Foreground = Color.Default
      Endif
    Else
      txtlastsaledate2.Text = ""
      txtlastsaledate2.Foreground = Color.Default
    Endif

  Endif

End

Public Sub btnselecttree_Click()

  Dim xrefer As String
  Dim xpayble As String

  Dim xList As String[]
  Dim acount As Integer

  acount = 0
  If btnrefer.Tag Then
    xrefer = btnrefer.Tag
  Else
    xrefer = modBillings.GetReferralUserSetting("Test", $encid)
  Endif
  xpayble = ""

  Select modBasic.$AutoBillTest
    Case "Partial"
      xList = New String[]
      xList.Insert($rData4.All("flditemname"))
    Case "Yes", "Full"
      xList = New String[]
      xList.Insert($rData4.All("flditemname"))
      xList.Insert($rData1.All("flditemname"))
  End Select

  If modMisc.AllowDiagnoBilling($encid) = True Then

    If TreeView1.Current.Image = "icons/coll3.png" Then
      If modBasic.$AutoBillTest = "Standard" Or If modBasic.$AutoBillTest = "Full" Or If modBasic.$AutoBillTest = "Partial" Then
        If modMisc.GetDuplicationAllow(xList, TreeView1.Current.Text) = True Then
          modBillings.GetAutoBillingClinic($encid, cmbdisctype.Text, "Test", TreeView1.Current.Text, 1, "Punched", 0, False, False, xpayble, xrefer)
          acount = acount + 1
        Endif
        TreeView1.Current.Image = "icons/coll2.png"
      Endif
    Endif
    ShowGridTree()

  Else
    Message.Warning("Diagnosis not provided", ("OK"))
  Endif

  If acount Then
    txtsearchtree.Text = ""
    Me.Exec("Toastify({text: 'Request added', duration: 3000}).showToast()")
    If modBasic.$TabletModeEnable = "Yes" Then
    Else
      txtsearchtree.SetFocus
    Endif
  Endif

End

Public Sub btnsavetree_Click()

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpatbilling", "fldencounterval= &1 and flditemtype=&2 and fldsave=&3 and fldstatus=&4", $encid, "Diagnostic Tests", False, "Punched")                 ''
  For Each res

    If modBasic.$AutoBillTest = "Standard" Then
      If modNonMedical.AllowPreCheckDeposit($encid, res["fldditemamt"]) = True Then
        SavePartialEntry(res)
      Endif
    Else If modBasic.$AutoBillTest = "Full" Then
      If modNonMedical.AllowPreEntryWithDeposit($encid, "Test", res["fldditemamt"]) = True Then
        SavePartialEntry(res)
      Endif
    Else
      If modBasic.$AutoBillSaveZero = "Yes" And If res["flditemrate"] = 0 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveZero = "Yes" And If res["flddiscper"] = 100 Then
        SavePartialEntry(res)
      Else If modBasic.$AutoBillSaveFullCredit = "Yes" And If res["fldbilltype"] = "Credit" And If res["fldcashincredit"] = 0 Then
        SavePartialEntry(res)
      Endif
    Endif

  Next
  ShowGridTree()

End

Public Sub mnucomtree_Click()

  Dim xx As String
  Dim res As Result

  If GridView4.Selection.Count Then
    $rData4.MoveTo(GridView4.Selection[0])
    xx = GetTextArea($rData4["flditemname"], $rData4["fldreason"])
    If xx Then
      res = modDatabase.$myConn.Edit("tblpatbilling", "fldid=&1", $rData4["fldid"])
      res["fldreason"] = xx
      res["xyz"] = False
      res.Update
      ShowGridTree()
    Endif
  Endif

End

Public Sub mnudeltree_Click()

  If GridView4.Selection.Count Then
    If Message.Question("Are you sure ?", ("No"), ("Yes")) = 2 Then
      $rData4.MoveTo(GridView4.Selection[0])
      modDatabase.$myConn.Delete("tblpatbilling", "fldid=&1 and fldsave=&2", $rData4["fldid"], False)
      ShowGridTree()
    Endif
  Endif

End

''----------------------------------- Billed but not sampled ------------------------------------
Private Sub SHowSavedGrid()

  Dim sql As String
  Dim res As Result
  Dim rex As Result
  Dim xList As String[]
  Dim i As Integer
  Dim FldLst As String[]

  $rData1 = New MyResult
  xList = ["fldid", "fldtime", "flditemname", "fldrefer", "fldordcomp"]
  rex = modDatabase.$myConn.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
  If rex.Available Then
    For Each rex
      If rex["fldpatbilling"] = "tblpatbilling" Then
      Else
        FldLst = xList.Copy()
        For i = 0 To xList.Count - 1
          FldLst[i] = "t1." & FldLst[i]
        Next
        sql = "select " & FldLst.Join(",") & " from " & rex["fldpatbilling"] & " as t1 where t1.fldencounterval=&1 and t1.flditemtype=&2 and t1.fldsave=&3 and (t1.fldstatus=&4 or t1.fldstatus=&5) and t1.fldsample=&6 and (t1.flditemqty-t1.fldretqty)>&7"
        res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", True, "Done", "Cleared", "Waiting", 0)
        $rData1.AddResult(res)
      Endif
    Next
  Endif

  FldLst = xList.Copy()
  For i = 0 To xList.Count - 1
    FldLst[i] = "t1." & FldLst[i]
  Next
  sql = "select " & FldLst.Join(",") & " from tblpatbilling as t1 where t1.fldencounterval=&1 and t1.flditemtype=&2 and t1.fldsave=&3 and (t1.fldstatus=&4 or t1.fldstatus=&5) and t1.fldsample=&6 and (t1.flditemqty-t1.fldretqty)>&7"
  res = modDatabase.$myConn.Exec(sql, $encid, "Diagnostic Tests", True, "Done", "Cleared", "Waiting", 0)
  $rData1.AddResult(res)

  $aMyFields1 = New String[]
  modGridView.ReadSmallMyData(GridView2, $rData1, $aMyFields1)

  With GridView2
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Text = "DateTime"
    .Columns[2].Text = "Test Name"
    .Columns[3].Text = "ReferBy"
    .Columns[4].Text = "From"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData1.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData1[$aMyFields1[Column]], gb.GeneralDate)
  Else If Column = 3 Then
    Data.Text = modGeneral.GetUserFullName($rData1[$aMyFields1[Column]])
  Else
    Data.Text = $rData1[$aMyFields1[Column]]
  Endif

End

''----------------------------- Accepted but not Reported -----------------------------
Private Sub ShowSampled()

  Dim sql As String
  Dim res As Result
  Dim rex As Result
  Dim xList As String[]
  Dim i As Integer
  Dim FldLst As String[]

  $rData2 = New MyResult
  xList = ["fldid", "fldsampletype", "fldtestid", "fldabnormal", "fldsampleid", "fldstatus", "fldtime_sample"]
  rex = modDatabase.$myConn.Exec("select fldpatlabtest from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
  If rex.Available Then
    For Each rex
      If rex["fldpatlabtest"] = "tblpatlabtest" Then
      Else
        FldLst = xList.Copy()
        For i = 0 To xList.Count - 1
          FldLst[i] = "t1." & FldLst[i]
        Next
        sql = "select " & FldLst.Join(",") & " from " & rex["fldpatlabtest"] & " as t1 where t1.fldencounterval=&1 and (t1.fldstatus=&2 or t1.fldstatus=&3)"
        res = modDatabase.$myConn.Exec(sql, $encid, "Ordered", "Sampled")
        $rData2.AddResult(res)
      Endif
    Next
  Endif

  FldLst = xList.Copy()
  For i = 0 To xList.Count - 1
    FldLst[i] = "t1." & FldLst[i]
  Next
  sql = "select " & FldLst.Join(",") & " from tblpatlabtest as t1 where t1.fldencounterval=&1 and (t1.fldstatus=&2 or t1.fldstatus=&3)"
  res = modDatabase.$myConn.Exec(sql, $encid, "Ordered", "Sampled")
  $rData2.AddResult(res)

  $aMyFields2 = New String[]
  modGridView.ReadSmallMyData(GridView3, $rData2, $aMyFields2)
  With GridView3
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Specimen"
    .Columns[2].Text = "Test Name"
    .Columns[4].Text = "Sample"
    .Columns[5].Text = "Status"
    .Columns[6].Text = "SampleDate"
  End With

End

Public Sub GridView3_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 3 Then
    Data.Html = modString.GetImageForHTMLGrid("/" &/ Application.Root &/ "icons/null.svg", "75%", "75%")
    Data.Text = ""
  Else If Column = 6 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2["fldtime_sample"], gb.GeneralDate)
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

' Public Sub txtsearch_KeyPress()
'
'   modGeneralMain.InputTextSearchKeyOnly()
'
' End

''------------------------------------------- Reported -----------------------------------
Public Sub FillLabtable()

  Dim xdate As Variant
  Dim sql As String
  Dim res As Result
  Dim rsx As Result

  Dim xx As String
  Dim xtabval As String
  Dim Column As Integer
  Dim xdata As String
  Dim pic2 As String
  Dim pic3 As String

  pic2 = "icons/coll2.png"

  TableView1.Clear()
  TableView1.Columns.Count = 6
  With TableView1
    .Columns[0].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(50 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(350 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    If rbdaterepo.Value = True Then
      .Columns[0].Text = "Examination"
    Else If rbnamerepo.Value = True
      .Columns[0].Text = "Date"
    Endif
    .Columns[1].Text = "Time"
    .Columns[2].Text = "Specimen"
    .Columns[3].Text = "Observation"
    .Columns[4].Text = "Reference"
    .Columns[5].Text = "Reported"

  End With

  $sColl = New Collection
  If rbdaterepo.Value = True Then
    rsx = modDatabase.$myConn.Exec("select DISTINCT DATE(fldtime_sample) as col from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and flvisible=&4 ORDER BY fldtime_sample DESC", $encid, "Reported", "Verified", "Visible")
  Else If rbnamerepo.Value = True
    rsx = modDatabase.$myConn.Exec("select DISTINCT (fldtestid) as col from " & $tblpatlabtest & " where fldencounterval=&1 and (fldstatus=&2 or fldstatus=&3) and flvisible=&4 ORDER BY fldtime_sample DESC", $encid, "Reported", "Verified", "Visible")
  Endif
  For Each rsx
    xdate = rsx["col"]
    If rbdaterepo.Value = True Then
      sql = "select fldid,fldtestid,fldtestid as xparticular,fldsampletype,fldmethod,fldabnormal,fldid,fldstatus,fldtime_sample,fldtime_report,fldtest_type,fldcomp_sample,fldcomp_report from " & $tblpatlabtest & " where fldencounterval=&1 and fldtime_sample>=&2 and fldtime_sample<=&3 and (fldstatus=&4 or fldstatus=&5) and flvisible=&6"
      res = modDatabase.$myConn.Exec(sql, $encid, modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), "Reported", "Verified", "Visible")
    Else If rbnamerepo.Value = True
      sql = "select fldid,fldtestid,DATE(fldtime_sample) as xparticular,fldsampletype,fldmethod,fldabnormal,fldid,fldstatus,fldtime_sample,fldtime_report,fldtest_type,fldcomp_sample,fldcomp_report from " & $tblpatlabtest & " where fldencounterval=&1 and fldtestid=&2 and (fldstatus=&3 or fldstatus=&4) and flvisible=&5"
      res = modDatabase.$myConn.Exec(sql, $encid, xdate, "Reported", "Verified", "Visible")
    Endif
    If res.Available Then
      If rbdaterepo.Value = True Then
        TableView1.Add(CStr(xdate), modReportVar.GetDateTimeReport(xdate, gb.MediumDate), pic2)
      Else If rbnamerepo.Value = True
        TableView1.Add(CStr(xdate), xdate, pic2)
      Endif

      Column = 0
      For Each res
        xdata = ""
        If res["fldtest_type"] = "Quantitative" Then
          xdata = modLabTest.GetLabTestValueString(res["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), True, $encid, $tblpatlabtest)
        Else If res["fldtest_type"] = "Qualitative" Then
          xx = modLabTest.GetLabTestValueString(res["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), True, $encid, $tblpatlabtest)
          xtabval = modLabTest.GetLabSubTestQuali($encid, res["fldtestid"], res["fldid"], $tblpatlabsubtest)
          If xtabval Then
            xdata = modString.TextToHTML(xx & xtabval)
          Else
            xdata = modString.TextToHTML(xx)
          Endif
        Endif
        If res["fldabnormal"] = True Then
          pic3 = "icons/true.svg"
        Else
          pic3 = "icons/false.svg"
        Endif
        $sColl.Add(xdata, CStr(xdate) & ":" & CStr(Column))
        If rbdaterepo.Value = True Then
          TableView1.Add(CStr(xdate) & ":" & CStr(Column), res["xparticular"], pic3, CStr(xdate))
        Else If rbnamerepo.Value = True
          TableView1.Add(CStr(xdate) & ":" & CStr(Column), modReportVar.GetDateTimeReport(res["xparticular"], gb.MediumDate), pic3, CStr(xdate))
        Endif

        TableView1[CStr(xdate) & ":" & CStr(Column)][1] = modReportVar.GetDateTimeReport(res["fldtime_sample"], gb.ShortTime)
        TableView1[CStr(xdate) & ":" & CStr(Column)][2] = res["fldsampletype"] & gb.NewLine & "[" & res["fldstatus"] & "]"
        ' TableView1[CStr(xdate) & ":" & CStr(Column)][3] = xdata
        TableView1[CStr(xdate) & ":" & CStr(Column)][4] = modLabTest.GetTestLimitSrting(res["fldid"], modLabSub.GetTestUnitFromButton(rbsi, rbmetric), $tblpatlabtest) & gb.NewLine & "[" & res["fldmethod"] & "]"
        TableView1[CStr(xdate) & ":" & CStr(Column)][5] = modReportVar.GetDateTimeReport(res["fldtime_report"], gb.GeneralDate)

        Column = Column + 1
      Next
    Endif
  Next

End

Public Sub TableView1_Data(Index As String, Column As Integer, Data As WebTreeData)

  If Column = 3 Then
    Data.Html = $sColl[Index]
  Endif

End
