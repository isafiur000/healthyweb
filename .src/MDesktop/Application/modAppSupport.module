' Gambas module file

' Public Sub AddNewFormToWorkspace(frm As WebForm)
'
' End

Public Function FindWorkProgressBar(LogInType As String) As WebProgressBar

  Dim xx As WebProgressBar

  If MMain.$SISHAppMode = "REP" Then
    xx = fmRepository.ProgressBar1
  Else If MMain.$SISHAppMode = "HMIS" Then
    xx = fmHMISMatNeo.ProgressBar1
  Else If MMain.$SISHAppMode = "Registry" Then
    xx = fmRegistryMain.ProgressBar1
  Else If MMain.$SISHAppMode = "Portal" Then
    xx = fmPatientWeb.ProgressBar1
  Else If MMain.$SISHAppMode = "Dashboard" Then
    xx = fmDashboard.ProgressBar1
  Else If MMain.$SISHAppMode = "TeleMed" Then
    xx = fmTeleMedicine.ProgressBar1
  Else If MMain.$SISHAppMode = "Insurance" Then
    xx = fmInsurer.ProgressBar1
  Else
    If LoginType = "Account" Then
      xx = fmAccount.ProgressBar1
    Else If LoginType = "Cashier" Then
      xx = fmCashier.ProgressBar1
    Else If LoginType = "Record" Then
      xx = fmRecord.ProgressBar1
    Else If LoginType = "Medical" Then
      xx = fmMedical.ProgressBar1
    Else If LoginType = "Technologist" Then
      xx = fmTechnologist.ProgressBar1
    Else If LoginType = "Technician" Then
      xx = fmTechnician.ProgressBar1
    Else If LoginType = "Consultant" Then
      xx = fmConsultant.ProgressBar1
    Else If LoginType = "Clinician" Then
      xx = fmOfficer.ProgressBar1
    Else If LoginType = "Purchase" Then
      xx = fmPurchase.ProgressBar1
    Else If LoginType = "Store" Then
      xx = fmStore.ProgressBar1
    Else If LoginType = "Pharmacist" Then
      xx = fmPharmacist.ProgressBar1
    Else If LoginType = "Dispensar" Then
      xx = fmDispensar.ProgressBar1
    Else If LoginType = "Research" Then
      xx = fmResearch.ProgressBar1
    Else If LoginType = "Admin" Then
      xx = fmAdmin.ProgressBar1
    Endif
  Endif

  Return xx

End

Public Sub RecordPatientActivity(sCategory As String, frm As String, sActivity As String, sComment As String)

  Dim res As Result

  res = modDatabase.$myConn.Create("tblactivity")
  res["fldfrmname"] = frm
  res["fldcategory"] = sCategory
  res["fldactivity"] = sActivity
  res["fldcomment"] = sComment
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["fldsave"] = True
  res["fldhostmac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
  res.Update

End

Public Sub RecordSystemLog()

  Dim res As Result
  Dim xird As String

  If modDatabase.$myConn.Tables.Exist("tblsystemlog") Then
    modBasic.DebugString("Inserting Application usage log")
    If MMain.$RepoReportMode = True Then
    Else
      modDatabase.$myConn.Delete("tblsystemlog", "fldindex=&1", Session.Id)
    Endif

    If modHelpVariable.$IRDLevel = "Yes" Then
      xird = "IRD"
    Else
      xird = ""
    Endif
    res = modDatabase.$myConn.Create("tblsystemlog")
    res["fldindex"] = Session.Id  ''modHelpVariable.$MACAddress
    res["flduser"] = modBasic.$lbluser
    res["fldcomp"] = modBasic.$compID
    If MMain.$SISHAppMode = "HIS" Then
      res["fldlogin"] = modHelpVariable.$LogInCategory
    Else
      res["fldlogin"] = MMain.$SISHAppMode
    Endif
    res["fldentrytime"] = Now()
    res["fldhostuser"] = CGI["HTTP_USER_AGENT"]  ''System.User.Name
    res["fldhostip"] = modHelpVariable.$MACAddress
    res["fldhostname"] = CGI["SERVER_SOFTWARE"] & ":" & Application.Name & "-" & Application.Version
    res["fldhostmac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
    res["flddevicepath"] = Application.Name & " : " & Application.Version & " : " & xird
    res["fldversion"] = modHelpVariable.$GeoCoordinate
    res["fldmainserver"] = modHelpVariable.$SysMainHost
    res["fldreadserver"] = modHelpVariable.$SysExtHost
    res["fldfallserver"] = modHelpVariable.$SysFallHost
    res["fldftpserver"] = modHelpVariable.$SysFTPHost
    Try res.Update()
  Endif

End

Public Sub SaveMessageLog(sTarget As String, sText As String, sType As String)

  Dim res As Result

  If modDatabase.$myConn.Tables.Exist("tblmessagelog") Then
    modBasic.DebugString("Inserting Message Log")
    res = modDatabase.$myConn.Create("tblmessagelog")
    res["fldwindow"] = sType
    res["fldtarget"] = sTarget
    res["fldmesstext"] = sText
    res["flduserid"] = modBasic.$lbluser
    res["fldtime"] = Now()
    res["fldcomp"] = modBasic.$compID
    res["fldhostmac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
    res["fldhostuser"] = CGI["HTTP_USER_AGENT"]
    res["fldhostip"] = modHelpVariable.$MACAddress
    res["fldhostname"] = CGI["SERVER_SOFTWARE"] & ":" & Application.Name & "-" & Application.Version
    res.Update
  Endif

End

Public Sub SaveSMSEntry(sTarget As String, sText As String, xStatus As String, xOutput As String)

  Dim res As Result

  If modDatabase.$myConn.Tables.Exist("tblsmslog") Then
    res = modDatabase.$myConn.Create("tblsmslog")
    res["fldwindow"] = modHelpVariable.$LogInCategory
    res["fldtarget"] = sTarget
    res["fldsmstext"] = sText
    res["flduserid"] = modBasic.$lbluser
    res["fldtime"] = Now()
    res["fldcomp"] = modBasic.$compID
    If xStatus = "Waiting" Then
      res["fldstatus"] = "Waiting"
      res["fldcomment"] = ""
      res["fldsmsdate"] = ""
    Else If xStatus = "Sent" Then
      res["fldcomment"] = xOutput
      res["fldstatus"] = "Sent"
      res["fldsmsdate"] = Now()
    Endif

    res["fldhostmac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
    res["fldhostuser"] = CGI["HTTP_USER_AGENT"]
    res["fldhostip"] = modHelpVariable.$MACAddress
    res["fldhostname"] = CGI["SERVER_SOFTWARE"] & ":" & Application.Name & "-" & Application.Version
    res.Update
  Endif

End

Public Sub SendSMSSingle(sPhone As String, sMessage As String)

  Dim arcmd As String[]
  Dim xout As String

  Dim xpath As String
  Dim xexc As String
  Dim xapi As String
  Dim xstr As String
  Dim apipath As String
  Dim devPath As String

  xapi = modSettings.ShowSettingFromFIle("SMSMethod/Default")
  If xapi = "KDEConnect" Then
    If System.Exist("kdeconnect-cli") = True Then
      devPath = modSettings.ShowSettingFromFIle("KDEConnect/DefaultPath")
      If devPath Then
        arcmd = ["kdeconnect-cli", "--send-sms", sMessage, "--destination", sPhone, "--device", devPath]
        modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
        Exec arcmd Wait
        modAppSupport.SaveSMSEntry(sPhone, sMessage, "Sent", "")
      Endif
    Else
      modApplSub.InstallSelectedApplication(["kdeconnect", "qml-module-org-kde-people"])
    Endif

  Else
    xpath = modSettings.ShowSettingFromFIle("SMS_API/DefaultPath")
    xexc = modSettings.ShowSettingFromFIle("SMS_API/DefaultExec")
    If Exist(xpath) Then
      xstr = File.Load(xpath)
      xstr = Replace(xstr, "{SMSPhoneNumber}", sPhone)
      xstr = Replace(xstr, "{SMSMessage}", sMessage)
      apipath = Temp()
      File.Save(apipath, xstr)

      arcmd = New String[]
      If xexc Then
        arcmd.Add(xexc)
      Endif
      arcmd.Add(apipath)
      modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
      Exec arcmd To xout
      Wait
      modAppSupport.SaveSMSEntry(sPhone, sMessage, "Sent", xout)
    Endif

  Endif

End

Public Function SendSMSData() As String[]

  Dim arcmd As String[]
  Dim xout As String
  Dim xpath As String
  Dim xexc As String
  Dim xapi As String
  Dim xstr As String
  Dim apipath As String
  Dim devPath As String

  Dim res As Result
  Dim xphnoList As String[]

  xapi = modSettings.ShowSettingFromFIle("SMSMethod/Default")
  xpath = modSettings.ShowSettingFromFIle("SMS_API/DefaultPath")
  xexc = modSettings.ShowSettingFromFIle("SMS_API/DefaultExec")
  devPath = modSettings.ShowSettingFromFIle("KDEConnect/DefaultPath")

  xphnoList = New String[]
  res = modDatabase.$myConn.Edit("tblsmslog", "fldstatus=&1", "Waiting")
  If res.Available Then
    For Each res
      If xapi = "KDEConnect" Then
        If System.Exist("kdeconnect-cli") = True Then
          If devPath Then
            arcmd = ["kdeconnect-cli", "--send-sms", res["fldsmstext"], "--destination", res["fldtarget"], "--device", devPath]
            modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
            Exec arcmd To xout
            Wait
            xphnoList.Add(res["fldtarget"])
            res["fldcomment"] = xout
            res["fldstatus"] = "Sent"
            res["fldsmsdate"] = Now()
            res.Update
          Endif
        Else
          modApplSub.InstallSelectedApplication(["kdeconnect", "qml-module-org-kde-people"])
        Endif

      Else
        If Exist(xpath) Then
          xstr = File.Load(xpath)
          xstr = Replace(xstr, "{SMSPhoneNumber}", res["fldtarget"])
          xstr = Replace(xstr, "{SMSMessage}", res["fldsmstext"])
          apipath = Temp()
          File.Save(apipath, xstr)

          arcmd = New String[]
          If xexc Then
            arcmd.Add(xexc)
          Endif
          arcmd.Add(apipath)
          modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
          Exec arcmd To xout
          Wait
          xphnoList.Add(res["fldtarget"])
          res["fldcomment"] = xout
          res["fldstatus"] = "Sent"
          res["fldsmsdate"] = Now()
          res.Update
        Endif

      Endif
    Next
  Endif

  Return xphnoList

End

''---------------------------- Initial Setup --------------------------
Public Sub AddRecordLoginParam(sCon As Connection, sUser As String, sPass As String, sRoot As String, xcompID As String, sDept As String)

  Dim res As Result
  Dim res1 As Result
  Dim res2 As Result

  If sUser And If sPass And If sRoot Then
    res = sCon.Create("tbluser")
    res["flduserid"] = sUser
    res["fldusername"] = "System"
    res["fldpass"] = modPassword.EncryptSimple(sPass)
    res["fldroot"] = Base64(sRoot)
    res["fldcategory"] = "Admin"
    res["fldcode"] = 1
    res["fldfromdate"] = Date()
    res["fldtodate"] = Date()
    res["fldstatus"] = "Active"
    res["fldfaculty"] = True
    res["fldpayable"] = False
    res["fldreferral"] = False
    res["fldopconsult"] = False
    res["fldipconsult"] = False
    res["fldsigna"] = False
    res["fldreport"] = False
    res.Update()

    res1 = sCon.Create("tbluseraccess")
    res1["flduserid"] = sUser
    res1["fldaccess"] = Base64(sDept)
    res1.Update()

    res2 = sCon.Create("tblcompaccess")
    res2["flduserid"] = sUser
    res2["fldcomp"] = xcompID
    res2.Update()

    Message.Info(("Information Updated"), "OK")
  Endif

End

Public Sub AddInitialAccessSetup(sCon As Connection, sMac As String, sHostUser As String, sHostIP As String, sHostName As String, xcompID As String)                                 ''

  Dim res As Result
  Dim rs As Result

  rs = sCon.Exec("select fldhostmac from tblmacaccess where fldhostmac=&1", sMac)
  If rs.Available = False Then
    res = sCon.Create("tblmacaccess")
    res["fldhostmac"] = sMac
    res["fldhostuser"] = sHostUser
    res["fldhostpass"] = Base64(modPassword.$HostLoginPassword)
    res["fldhostip"] = sHostIP
    res["fldhostname"] = sHostName
    res["fldcomp"] = xcompID
    If rs.Available = False Then
      res["fldcompname"] = modHelpVariable.$Department
      res["fldaccess"] = "Active"
    Else If rs.Available = True Then
      res["fldcompname"] = "Empty"
      res["fldaccess"] = "Inactive"
    Endif
    res["fldiptype"] = "Dynamic"
    res["fldcode"] = modGeneral.GetMaxMacAddCode()
    res.Update()
    Message.Info(("Access granted/requested"), "OK")
  Else
    Message.Info(("Duplicate Record"), "OK")
  Endif

End
