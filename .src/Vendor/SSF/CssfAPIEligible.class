' Gambas class file

Private $xAuthString As String
Private $HeadString As String

Private $PatCode As String
Private $AccdtAmt As Float
Private $MedOPDAmt As Float
Private $MedIPDAmt As Float
Private $CritPreAmt As Float
Private $CritPostAmt As Float
Private $CritDiscAmt As Float

Private $AccdEnable As Boolean
Private $MedEnable As Boolean
Private $CritEnable As Boolean
Private $ImageValue As String

Private Sub SetAuthentication()

  If modBasic.$SSFQuote = "Yes" Then
    $xAuthString = "'" & modBasic.$SSFUser & ":" & modBasic.$SSFPass & "'"
  Else
    $xAuthString = modBasic.$SSFUser & ":" & modBasic.$SSFPass
  Endif
  $HeadString = "remote-user:" & modBasic.$SSFRemoUser

End

Public Sub _new(sPatcode As String)

  $PatCode = sPatcode
  ShowFinancialParams()

End

Private Function GetFinancialDetails(sPatCode As String) As Collection

  Dim acmd As String
  Dim xurl As String
  Dim xcont As String
  Dim xcolVar As Collection
  Dim aVar As Variant[]
  Dim xcoll As Collection
  Dim xpatout As String
  Dim xResColl As Collection
  Dim xhead As String

  SetAuthentication()
  xurl = modBasic.$SSFEligibleURL
  xcont = "Content-Type: application/json"

  xcolVar = New Collection
  xcolVar.Add("CoverageEligibilityRequest", "resourceType")
  xcoll = New Collection
  xcoll.Add("Patient/" & sPatCode, "reference")
  xcolVar.Add(xcoll, "patient")
  aVar = New Variant[]
  xcoll = New Collection
  xcoll.Add("visitDate", "url")
  xcoll.Add(Format(Now(), "yyyy-mm-dd"), "valueString")
  aVar.Add(xcoll)
  xcolVar.Add(aVar, "extension")

  xhead = Space(1)
  If modBasic.$SSFCACert = "Disable" Then
    xhead = xhead & "-k" & Space(1)
  Endif
  If modBasic.$SSFUserAgent Then
    xhead = xhead & "-A " & modBasic.$SSFUserAgent & Space(1)
  Endif

  acmd = "curl" & xhead & "-u " & $xAuthString & " -H " & Quote(xcont) & " -H " & Quote($HeadString) & " -d '" & JSON.Encode(xcolVar) & "' -X POST " & xurl
  modBasic.DebugAPIString(Replace("Execute " & acmd, $xAuthString, "****"))
  Shell acmd To xpatout
  modBasic.DebugAPIString("Response: " & xpatout)

  If xpatout Then
    Try xResColl = JSON.Decode(xpatout)
    If xResColl Then
      Return xResColl
    Else
      Message.Warning("Error in getting data", "OK")
    Endif
  Else
    Message.Warning("No Response from server", "OK")
  Endif

End

Private Sub ShowFinancialParams()

  Dim xVarColl As Collection
  Dim xVarPat As Variant[]
  Dim xPicColl As Collection
  Dim xVarPic As Variant[]
  Dim i As Integer
  Dim aVar As Variant
  Dim bVar As Variant
  Dim j As Integer
  Dim k As Integer

  xVarColl = GetFinancialDetails($PatCode)
  If xVarColl Then
    xVarPat = xVarColl["insurance"]
    If xVarPat Then
      For i = 0 To xVarPat.Count - 1
        If xVarPat[i]["extension"][0]["valueString"] = "Accident and Disability Protection Scheme" Then
          $AccdEnable = xVarPat[i]["inforce"]
          $AccdtAmt = xVarPat[i]["item"][0]["benefit"][0]["allowedMoney"]["value"]

        Else If xVarPat[i]["extension"][0]["valueString"] = "Medical Treatment, Health and Maternity Protection Scheme" Then
          $MedEnable = xVarPat[i]["inforce"]
          aVar = xVarPat[i]["extension"]
          For j = 0 To aVar.Count - 1
            If aVar[j]["url"] = "OPDBalance" Then
              $MedOPDAmt = aVar[j]["valueString"]
            Else If aVar[j]["url"] = "IPDBalance" Then
              $MedIPDAmt = aVar[j]["valueString"]
            Endif
          Next

        Else If xVarPat[i]["extension"][0]["valueString"] = "Critical Illness Scheme" Then
          $CritEnable = xVarPat[i]["inforce"]
          bVar = xVarPat[i]["extension"]
          For k = 0 To bVar.Count - 1
            If bVar[k]["url"] = "PreDiagnosis" Then
              $CritPreAmt = bVar[k]["value"]
            Else If bVar[k]["url"] = "PostDiagnosis" Then
              $CritPostAmt = bVar[K]["value"]
            Else If bVar[k]["url"] = "PostDischarge" Then
              $CritDiscAmt = bVar[K]["value"]
            Endif
          Next

        Endif
      Next
    Endif

    xPicColl = xVarColl["patient"]
    If xPicColl Then
      xVarPic = xPicColl["photo"]
      If xVarPic Then
        $ImageValue = xVarPic[0]["data"]
      Endif
    Endif

  Else
    Message.Warning("Error in Decoding data", "OK")
  Endif

End

Public Function GetAccidentAmt() As Float

  Return $AccdtAmt

End

Public Function GetMedicalOPDAmt() As Float

  Return $MedOPDAmt

End

Public Function GetMedicalIPDAmt() As Float

  Return $MedIPDAmt

End

Public Function GetPreDiagnoAmt() As Float

  Return $CritPreAmt

End

Public Function GetPostDiagnoAmt() As Float

  Return $CritPostAmt

End

Public Function GetDischargeAmt() As Float

  Return $CritDiscAmt

End

''--------------- Status -------------------
Public Function GetAccidentEnable() As Boolean

  Return $AccdEnable

End

Public Function GetMedicalEnable() As Boolean

  Return $MedEnable

End

Public Function GetCriticalEnable() As Boolean

  Return $CritEnable

End

Public Function GetPatientImage() As String

  Return $ImageValue

End
