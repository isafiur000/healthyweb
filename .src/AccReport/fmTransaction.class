' Gambas class file

Private $strType As String
Private xItemList As String[]
Private $RepoStr As String
Private $quickReport As String

Private bCollPurchPast As Collection
Private bCollBulkPast As Collection
Private bCollSalePast As Collection
Private bCollSentPast As Collection
Private bCollRecvPast As Collection
Private bCollAdjusPast As Collection

Public Sub _new(sLocaType As String, sLocation As String)

  cmblocation.Text = sLocaType
  cmbvalue.Text = sLocation

  If modBasic.$ViewLockInventory = "Location" Then
    chkall.Value = False
    chkall.Enabled = False
  Endif
  dtfir.Value = Now()
  dtlast.Value = Now()
  rbmed.Value = True
  $strType = "Medicines"
  $RepoStr = modDataRepo.GetRepoLastStr()
  $quickReport = modBasic.$InvQuickReport

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Private Function GetCompID() As String

  Dim xcomp As String

  If chkall.Value = True Then
    xcomp = "%"
  Else
    xcomp = modBasic.$compID
  Endif
  Return xcomp

End

Public Sub btnaddlist_Click()

  Dim aList As String[]

  aList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldstockid) as col from tblentry where fldcategory=&1", $strType))
  If aList Then
    xItemList = GridListView(("Select Particulars"), aList.Sort())
  Endif

End

Public Sub btnrefresh_Click()

  If xItemList Then
    If $quickReport = "Disable" Then
    Else
      bCollPurchPast = modTransaction.GetTransactionPurchaseColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
      bCollBulkPast = modTransaction.GetTransactionBulkSaleColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
      bCollSalePast = modTransaction.GetTransactionBillingColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
      bCollSentPast = modTransaction.GetTransactionTransferFromColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
      bCollRecvPast = modTransaction.GetTransactionTransferToColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
      bCollAdjusPast = modTransaction.GetTransactionAdjustmentColl(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), cmblocation.Text, cmbvalue.Text)
    Endif

    GridView2.Clear
    GridView2.Columns.Count = 7
    GridView2.Count = xItemList.Count
    ResizeGrid()
  Endif

End

'NOTE:TWO CON
Private Sub ShowStockGrid()

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  modGridView.GridViewDecoration(Data, Row)
  If $quickReport = "Disable" Then
    If Column = 0 Then
      Data.Text = xItemList[Row]
    Else If Column = 1 Then
      Data.Text = modInventory.GetTransactionPurchase(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 2 Then
      Data.Text = modInventory.GetTransactionBulkSale(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 3 Then
      Data.Text = modInventory.GetTransactionBilling(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 4 Then
      Data.Text = modInventory.GetTransactionTransferFrom(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 5 Then
      Data.Text = modInventory.GetTransactionTransferTo(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 6 Then
      Data.Text = modInventory.GetTransactionAdjustment(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Endif

  Else
    If Column = 0 Then
      Data.Text = xItemList[Row]
    Else If Column = 1 Then
      Data.Text = bCollPurchPast[xItemList[Row]] 'modInventory.GetTransactionPurchase(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 2 Then
      Data.Text = bCollBulkPast[xItemList[Row]] 'modInventory.GetTransactionBulkSale(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 3 Then
      Data.Text = bCollSalePast[xItemList[Row]] 'modInventory.GetTransactionBilling(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 4 Then
      Data.Text = bCollSentPast[xItemList[Row]] 'modInventory.GetTransactionTransferFrom(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 5 Then
      Data.Text = bCollRecvPast[xItemList[Row]] 'modInventory.GetTransactionTransferTo(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Else If Column = 6 Then
      Data.Text = bCollAdjusPast[xItemList[Row]] 'modInventory.GetTransactionAdjustment(modDatabase.$syConn, $strType, dtfir.Value, dtlast.Value, GetCompID(), xItemList[Row], cmblocation.Text, cmbvalue.Text)
    Endif

  Endif

End

Private Sub ResizeGrid()

  With GridView2
    .Columns[0].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "Particulars"
    .Columns[1].Text = "Purchase"
    .Columns[2].Text = "Consume"
    .Columns[3].Text = "Dispensed"
    .Columns[4].Text = "TransOut"
    .Columns[5].Text = "TransIn"
    .Columns[6].Text = "Adjusted"
  End With

End

Public Sub rbmed_Click()

  $strType = "Medicines"

End

Public Sub rbsurg_Click()

  $strType = "Surgicals"

End

Public Sub rbextra_Click()

  $strType = "Extra Items"

End

Private Function GetFieldList(sType As String) As String[]

  Dim xhospfld As String
  Dim xList As String[]

  xList = New String[]
  xhospfld = modDataRepo.HospitalField()
  If sType = "Dispensed" Then
    xList = ["fldencounterval", "fldencounterval", "flditemname", "flditemrate", "flditemqty", "flddiscper", "fldtaxper", "fldditemamt", "fldtime", "fldbillno", "flditemno", "fldordcomp", "fldcomp", "fldid"]
  Else If sType = "Purchase" Then
    xList = ["fldsuppname", "fldpurtype", "fldstockid", "flsuppcost", "fldnetcost", "(fldtotalqty-fldreturnqty)", "(fldtotalqty-fldreturnqty)*fldnetcost", "fldtime", "fldbillno", "fldreference", "fldcomp", "fldid"]
  Else If sType = "Consume" Then
    xList = ["fldtarget", "fldcategory", "fldstockid", "fldnetcost", "(fldqtydisp-fldqtyret)", "fldnetcost*(fldqtydisp-fldqtyret)", "fldtime", "fldreference", "fldcomp", "fldid"]
  Endif
  If xhospfld Then
    xList.Add(xhospfld)
  Endif
  Return xList

End

Public Sub btnpurchase_Click()

  Dim xFldList As String[]
  Dim hForm As FRequest
  Dim xformat As String
  Dim sql As String
  Dim res As Result

  If GridView2.Selection.Count Then
    xformat = "Transaction:Purchase"
    xFldList = GetFieldList("Purchase")
    sql = "select " & xFldList.Join(",") & " from tblpurchase where fldtime>=&1 and fldtime<=&2 and fldcomp like &3 and fldstockid like &4 and fldcategory=&5 and fldsav=&6" & $RepoStr                                  ''
    res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), GetCompID(), xItemList[GridView2.Selection[0]], $strType, False)
    If res.Available Then
      hForm = New FRequest(res, xItemList[GridView2.Selection[0]], xformat, False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnconsume_Click()

  Dim xFldList As String[]
  Dim hForm As FRequest
  Dim xformat As String
  Dim sql As String
  Dim res As Result

  If GridView2.Selection.Count Then
    xformat = "Transaction:Consume"
    xFldList = GetFieldList("Consume")
    sql = "select " & xFldList.Join(",") & " from tblbulksale where fldtime>=&1 and fldtime<=&2 and fldcomp like &3 and fldstockid like &4 and fldcategory=&5 and fldsave=&6" & $RepoStr                            ''
    res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), GetCompID(), xItemList[GridView2.Selection[0]], $strType, True)
    If res.Available Then
      hForm = New FRequest(res, xItemList[GridView2.Selection[0]], xformat, False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btndispense_Click()

  Dim xFldList As String[]
  Dim hForm As FRequest
  Dim xformat As String
  Dim sql As String
  Dim res As Result

  If GridView2.Selection.Count Then
    xformat = "Transaction:Dispensed"
    xFldList = GetFieldList("Dispensed")
    sql = "select " & xFldList.Join(",") & " from tblpatbilling where fldtime>=&1 and fldtime<=&2 and fldcomp like &3 and fldsave=&4 and flditemtype=&5 and flditemno in(select fldstockno from tblentry where fldstockid like &6)" & $RepoStr                                ''
    res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), GetCompID(), True, $strType, xItemList[GridView2.Selection[0]])
    If res.Available Then
      hForm = New FRequest(res, xItemList[GridView2.Selection[0]], xformat, False)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub btnexpo_Click()

  modCHTMLReport.ExportGridToHTML(GridView2, "Transaction Report", modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate))

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView2.Name & "', 'xlsx')")

End

Public Sub btnclose_Click()

  Me.Close()

End
