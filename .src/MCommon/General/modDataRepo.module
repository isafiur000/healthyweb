' Gambas module file

Public $RepoDistrictColl As Collection
Public $RepoCategoryColl As Collection
Public $RepoProvinceColl As Collection
Public $RepoMunicipalColl As Collection

Public $DistMunicipals As Collection
Public $RepositoryMode As String

Public Function GetMunicipalsByDistrict(sDistrict As String) As String[]

  Dim xx As String[]
  Dim xval As String
  Dim asx As String[]

  xx = modHelpVariable.GetCollectionValue($DistMunicipals, sDistrict, modBasic.$AppCacheGeneralParameters)
  If Not xx Then
    xx = New String[]
    If Not modBasic.$MunicipalList.Count Then
      modBasic.FillMunicipalList()
    Endif
    For Each xval In modBasic.$MunicipalList
      asx = Split(xval, "@")
      If asx[0] = sDistrict Then
        xx.Add(asx[1])
      Endif
    Next
    If xx.Count Then
      If modBasic.$AppCacheGeneralParameters = "Yes" Then
        $DistMunicipals.Add(xx, sDistrict)
      Endif
    Endif

  Endif
  If xx Then
    xx.Sort()
  Endif
  Return xx

End

Public Function GetHospitalCodeFromName(sHospName As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldhospcode from tblhospitals where fldhospname=&1", sHospName)
  If res.Available Then
    If res["fldhospcode"] Then
      xx = res["fldhospcode"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetHospitaltName(sHospCode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldhospname from tblhospitals where fldhospcode=&1", sHospCode)
  If res.Available Then
    If res["fldhospname"] Then
      xx = res["fldhospname"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetHospitalPhone(sHospCode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldcontact from tblhospitals where fldhospcode=&1", sHospCode)
  If res.Available Then
    If res["fldcontact"] Then
      xx = res["fldcontact"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetHospitalEMail(sHospCode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldemail from tblhospitals where fldhospcode=&1", sHospCode)
  If res.Available Then
    If res["fldemail"] Then
      xx = res["fldemail"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetHospitalOrgUnit(sHospCode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldorgunit from tblhospitals where fldhospcode=&1", sHospCode)
  If res.Available Then
    If res["fldorgunit"] Then
      xx = res["fldorgunit"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetGeoCoordinates(sCode As String) As String[]

  Dim res As Result
  Dim xlati As String
  Dim xlongi As String

  res = modDatabase.$myConn.Exec("select fldlatitude,fldlongitude from tblhospitals where fldhospcode=&1", sCode)
  If res.Available Then
    If res["fldlatitude"] Then
      xlati = res["fldlatitude"]
    Else
      xlati = ""
    Endif
    If res["fldlongitude"] Then
      xlongi = res["fldlongitude"]
    Else
      xlongi = ""
    Endif
  Else
    xlati = ""
    xlongi = ""
  Endif
  Return [xlati, xlongi]

End

''============= For DATA REPOSITORY ===================================
Public Function HospitalField(Optional sTable As String) As String

  Dim xx As String

  If MMain.$WebEntry = True Then  ''remoteoptimized
    If sTable Then
      xx = sTable & ".fldhospcode"
    Else
      xx = "fldhospcode"
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function SerialField(Optional sTable As String) As String

  Dim xx As String

  If MMain.$WebEntry = True Then ''remoteoptimized
    If sTable Then
      xx = sTable & ".fldrepoid"
    Else
      xx = "fldrepoid"
    Endif
  Else
    If sTable Then
      xx = sTable & ".fldid"
    Else
      xx = "fldid"
    Endif
  Endif
  Return xx

End

Private Function GetHospFieldValue(sCode As String, sField As String, sColl As Collection) As String

  Dim res As Result
  Dim xx As String

  xx = modHelpVariable.GetCollectionValue(sColl, sCode, modBasic.$AppCacheDataRepository)
  If Not xx Then
    res = modDatabase.$syConn.Exec(Subst("select &1 as col from tblhospitals", sField) & "  where fldhospcode=&1", sCode)
    If res.Available Then
      If res["col"] Then
        xx = res["col"]
        If modBasic.$AppCacheDataRepository = "Yes" Then
          sColl.Add(xx, sCode)
        Endif
      Else
        xx = ""
      Endif
    Else
      xx = ""
    Endif
  Endif

  Return xx

End

Public Function GetHospitalTextLabel(sCode As String) As String

  Dim xx As String

  If modDataRepo.$RepositoryMode = "Category" Then
    xx = GetHospFieldValue(sCode, "fldcategory", $RepoCategoryColl)
  Else If modDataRepo.$RepositoryMode = "District" Then
    xx = GetHospFieldValue(sCode, "flddistrict", $RepoDistrictColl)
  Else If modDataRepo.$RepositoryMode = "Province" Then
    xx = GetHospFieldValue(sCode, "fldprovince", $RepoProvinceColl)
  Else If modDataRepo.$RepositoryMode = "Municipality" Then
    xx = GetHospFieldValue(sCode, "fldpality", $RepoMunicipalColl)
  Else
    xx = sCode
  Endif
  Return xx

End

Public Function GetRepoValueListType(sType As String, Optional sCateg As String, Optional sLocaType As String, Optional sLocation As String) As String[]

  Dim xxx As String[]
  Dim astr As String
  Dim xcateg As String

  If sCateg Then
    xcateg = sCateg
  Else
    xcateg = "Hospital"
  Endif

  If sLocation Then
    If sLocaType = "District" Then
      astr = db.Subst(" and flddistrict like &1", sLocation)
    Else If sLocaType = "Province" Then
      astr = db.Subst(" and fldprovince like &1", sLocation)
    Else If sLocaType = "Municipality" Then
      astr = db.Subst(" and fldpality like &1", sLocation)
    Else
      astr = db.Subst(" and fldhospcode like &1", sLocation)
    Endif
  Else
    astr = ""
  Endif

  If sType = "District" Then
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(flddistrict) as col from tblhospitals where fldcategory like &1" & astr, xcateg))
  Else If sType = "Province" Then
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldprovince) as col from tblhospitals where fldcategory like &1" & astr, xcateg))
  Else If sType = "Municipality" Then
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(fldpality) as col from tblhospitals where fldcategory like &1" & astr, xcateg))
  Else
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldhospcode as col from tblhospitals where fldcategory like &1" & astr, xcateg))
  Endif
  Return xxx

End

Public Function GetRepoValueTableForCSV(sCategory As String, sValue As String) As String

  Dim xstr As String
  Dim sql As String
  Dim res As Result
  Dim xval As String

  If sCategory = "Admin" Then
    sql = "select fldprovince,flddistrict,fldpality,fldhospcode,fldhospname from tblhospitals"
    res = modDatabase.$syConn.Exec(sql)

  Else
    If sCategory = "District" Then
      xstr = "flddistrict"
    Else If sCategory = "Province" Then
      xstr = "fldprovince"
    Else If sCategory = "Municipality" Then
      xstr = "fldpality"
    Else
      xstr = "fldhospcode"
    Endif
    sql = Subst("select fldprovince,flddistrict,fldpality,fldhospcode,fldhospname from tblhospitals where &1 like ", xstr) & "&1"
    res = modDatabase.$syConn.Exec(sql, sValue)

  Endif

  If res.Available Then
    xval = modTextDB.ConvertResultToCSV(res, ";", False)
  Endif

  Return xval

End

Public Function GetRepoValueListSelectedType(sType As String, sValue As String, sCateg As String, Optional sLocaType As String, Optional sLocation As String) As String[]

  Dim xxx As String[]
  Dim sql As String
  Dim xstr As String
  Dim astr As String
  Dim xcateg As String

  If sCateg Then
    xcateg = sCateg
  Else
    xcateg = "Hospital"
  Endif

  If sLocation Then
    If sLocaType = "District" Then
      astr = db.Subst(" and flddistrict like &1", sLocation)
    Else If sLocaType = "Province" Then
      astr = db.Subst(" and fldprovince like &1", sLocation)
    Else If sLocaType = "Municipality" Then
      astr = db.Subst(" and fldpality like &1", sLocation)
    Else
      astr = db.Subst(" and fldhospcode like &1", sLocation)
    Endif
  Else
    astr = ""
  Endif

  If modDataRepo.$RepositoryMode = "District" Then
    xstr = db.Subst(" and flddistrict like &1", sValue)
  Else If modDataRepo.$RepositoryMode = "Province" Then
    xstr = db.Subst(" and fldprovince like &1", sValue)
  Else If modDataRepo.$RepositoryMode = "Municipality" Then
    xstr = db.Subst(" and fldpality like &1", sValue)
  Else
    xstr = db.Subst(" and fldhospcode like &1", sValue)
  Endif

  If sType = "District" Then
    sql = "select distinct(flddistrict) as col from tblhospitals where fldcategory like &1" & xstr & astr
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec(sql, xcateg))
  Else If sType = "Province" Then
    sql = "select distinct(fldprovince) as col from tblhospitals where fldcategory like &1" & xstr & astr
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec(sql, xcateg))
  Else If sType = "Municipality" Then
    sql = "select distinct(fldpality) as col from tblhospitals where fldcategory like &1" & xstr & astr
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec(sql, xcateg))
  Else
    sql = "select fldhospcode as col from tblhospitals where fldcategory like &1" & xstr & astr
    xxx = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec(sql, xcateg))
  Endif
  Return xxx

End

Public Function GetWhereStringRepoWhr(sType As String, sValue As String, Optional sTable As String) As String

  Dim xx As String
  Dim xfld As String

  If sTable Then
    xfld = sTable & ".fldhospcode"
  Else
    xfld = "fldhospcode"
  Endif
  If sType Then
    If sType = "Category" Then
      xx = " where " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldcategory like &1)", sValue)
    Else If sType = "District" Then
      xx = " where " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where flddistrict like &1)", sValue)
    Else If sType = "Province" Then
      xx = " where " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldprovince like &1)", sValue)
    Else If sType = "Municipality" Then
      xx = " where " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldpality like &1)", sValue & "%")
    Else
      xx = " where " & xfld & db.Subst(" like &1", sValue)
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetWhereStringRepo(sType As String, sValue As String, Optional sTable As String) As String

  Dim xx As String
  Dim xfld As String

  If sTable Then
    xfld = sTable & ".fldhospcode"
  Else
    xfld = "fldhospcode"
  Endif
  If sType Then
    If sType = "Category" Then
      xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldcategory like &1)", sValue)
    Else If sType = "District" Then
      xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where flddistrict like &1)", sValue)
    Else If sType = "Province" Then
      xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldprovince like &1)", sValue)
    Else If sType = "Municipality" Then
      xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldpality like &1)", sValue & "%")
    Else
      xx = " and " & xfld & db.Subst(" like &1", sValue)
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

Public Function GetRepoLastStr(Optional sTable As String) As String

  Dim xx As String
  Dim xfld As String

  If sTable Then
    xfld = sTable & ".fldhospcode"
  Else
    xfld = "fldhospcode"
  Endif
  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      If modDataRepo.$RepositoryMode = "Category" Then
        xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldcategory like &1)", modBasic.$HospCode)
      Else If modDataRepo.$RepositoryMode = "District" Then
        xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where flddistrict like &1)", modBasic.$HospCode)
      Else If modDataRepo.$RepositoryMode = "Province" Then
        xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldprovince like &1)", modBasic.$HospCode)
      Else If modDataRepo.$RepositoryMode = "Municipality" Then
        xx = " and " & xfld & db.Subst(" in(select fldhospcode from tblhospitals where fldpality like &1)", modBasic.$HospCode)
      Else
        xx = " and " & xfld & db.Subst(" like &1", modBasic.$HospCode)
      Endif
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif

  Return xx

End

''----------------------------------- Refer Hosp Code --------------------------------------
Public Function GetHospReferCodeFromLocation(sHosp As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldcode from tblreferlist where fldlocation=&1", sHosp)
  If res.Available Then
    If res["fldcode"] Then
      xx = res["fldcode"]
    Else
      xx = sHosp
    Endif
  Else
    xx = sHosp
  Endif
  Return xx

End

Public Function GetHospReferLocationFromCode(sCode As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$myConn.Exec("select fldlocation from tblreferlist where fldcode=&1", sCode)
  If res.Available Then
    If res["fldlocation"] Then
      xx = res["fldlocation"]
    Else
      xx = sCode
    Endif
  Else
    xx = sCode
  Endif
  Return xx

End

''--------------- tblmunicipals ------------------
Public Function GetProvinceFromDistrict(sDistrict As String) As String

  Dim res As Result
  Dim xval As String

  res = modDatabase.$myConn.Exec("select fldprovince from tblmunicipals where flddistrict=&1 and fldprovince LIKE &2", sDistrict, "%")
  If res.Available Then
    res.MoveFirst
    If res["fldprovince"] Then
      xval = res["fldprovince"]
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

Public Function GetDistrictFromMunicipal(sMunicipal As String) As String

  Dim res As Result
  Dim xval As String

  res = modDatabase.$myConn.Exec("select flddistrict from tblmunicipals where fldpality=&1", sMunicipal)
  If res.Available Then
    res.MoveFirst
    If res["flddistrict"] Then
      xval = res["flddistrict"]
    Else
      xval = ""
    Endif
  Else
    xval = ""
  Endif

  Return xval

End

''------------------ variable mapping ---------------------
Public Function GetVariableMappingColl(sType As String) As Collection

  Dim res As Result
  Dim aColl As Collection

  aColl = New Collection
  res = modDatabase.$myConn.Exec("select flditem,fldvalue from tblrepomapping where fldcategory=&1", sType)
  If res.Available Then
    For Each res
      aColl.Add(res["flditem"], res["fldvalue"])
    Next
  Endif

  Return aColl

End

''=================== Patient wise ===================
Public Sub GetRepoUploadEncounterData(encid As String)

  Dim xapp As String
  Dim arcmd1 As String[]
  Dim arcmd2 As String[]

  xapp = modSettings.ShowSettingFromFIle("Application/RepoUploader")
  If xapp Then
    arcmd1 = [xapp, "--upload-repo-enc", encid]
    modBasic.DebugAPIString("Execute " & arcmd1.Join(Space(1)))
    Exec arcmd1 Wait

    arcmd2 = [xapp, "--uploadimg-repo-enc", encid]
    modBasic.DebugAPIString("Execute " & arcmd2.Join(Space(1)))
    Exec arcmd2 Wait

  Else
    modRepository.UploadEncidToRepository(encid)
    modRepository.UploadImageEncToRepository(encid)

  Endif

End
