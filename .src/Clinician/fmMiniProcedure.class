' Gambas class file

Private $encid As String
Private $BillMode As String
Private $sPackage As String
Private $xFinClear As Boolean
Private $rData As Result
Private $aMyFields As String[]
Private $rData2 As Result
Private $aMyFields2 As String[]

Public Sub _new(encid As String, DiscType As String)

  Dim xstatus As String
  Dim accLst As String[]

  $encid = encid
  $sPackage = DiscType
  modGeneralMain.GetOpenModalForm(Me)

  accLst = modBasic.$BillDiscountCash
  If accLst.Count = 0 Then
    accLst.Add($sPackage)
  Endif
  cmbdisctype.List = accLst
  cmbdisctype.Text = $sPackage
  txtpatientname.Text = modPatient.GetPatientNameByEnc($encid)
  $BillMode = modNonMedical.GetDiscBindBillMode($sPackage)
  If Not $BillMode Then
    $BillMode = modpatient.GetPatBillingMode($encid)
  Endif

  xstatus = modPatient.CurrentAdmissionStatus($encid)
  txtlocation.Text = modPatient.GetLocationSetting($encid, xstatus)
  $xFinClear = modNonMedical.GetFinanceClearance($encid)

  btnrefer.Tag = modBillings.GetReferralUserSetting("Procedure", $encid)
  If btnrefer.Tag Then
    btnrefer.Text = modGeneral.GetUserFullName(btnrefer.Tag)
  Endif
  If modBasic.$ReferralLockEntry = "Yes" Then
    btnselectuser.Enabled = False
  Endif
  rbminor.Value = True

  FillLabtable()
  If $xFinClear = True Then
    btnsave.Visible = False
  Endif
  If modBasic.$TabletModeEnable = "Yes" Then
  Else
    btnrefer.SetFocus
  Endif

End

Public Sub btnscheme_Click()

  If cmbdisctype.Text Then
    $BillMode = modNonMedical.GetDiscBindBillMode(cmbdisctype.Text)
    If Not $BillMode Then
      $BillMode = modpatient.GetPatBillingMode($encid)
    Endif
    cmbprocedure.Clear()
  Endif

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    FillLabtable()
  Else If TabPanel1.Index = 1 Then
    CompleteGrid()
  Endif

End

Private Function GetProcedType() As String

  Dim xtype As String

  If rbminor.Value = True Then
    xtype = "Minor"
  Else If rbplaster.Value = True
    xtype = "Plaster"
  Endif

  Return xtype

End

Public Sub rbminor_Click()

  FillComboList()

End

Public Sub rbplaster_Click()

  FillComboList()

End

Private Sub FillComboList()

  cmbprocedure.List = modNonMedical.NonStockBillActiveItemArray("Procedures", $BillMode, GetProcedType())

End

Public Sub btnsubOK_Click()

  If cmbprocedure.Text Then
    If modNonMedical.GetControlServCombo(cmbprocedure.Text) = False Then
      cmbprocedure.Text = ""
      Message.Warning(("Item not listed"), ("OK"))
      ' Balloon.Delay = modBasic.$BalloonDelay

    Else
      If modMisc.AllowDiagnoBilling($encid) = True Then
        If modNonMedical.AllowEntryWithDeposit($encid, "Procedure") = True Then
          modPatientGeneral.AddProcedureData($encid, 0, "Minor Procedures", cmbprocedure.Text, "Done", $BillMode, Now(), "Waiting", txtsummary.RichText)
          FillLabtable()
        Endif
      Else
        Message.Warning("Diagnosis not provided", ("OK"))
      Endif

    Endif
  Endif

End

Public Sub FillLabtable()

  Dim sql As String

  sql = "select fldid,fldtime,fldencounterval,flditem,fldreportquali,fldid from tblpatgeneral where fldencounterval=&1 and fldinput=&2 and fldsave=&3 and fldreportquali=&4 and fldstatus=&5"                                             ''
  $rData = modDatabase.$myConn.Exec(sql, $encid, "Minor Procedures", False, "Done", "Waiting")
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
    .Columns[3].Width = CStr(300 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Hidden = True

    .Columns[1].Text = "Time"
    .Columns[3].Text = "Procedure"
    .Columns[4].Text = "Status"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btndelete_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      modDatabase.$myConn.Delete("tblpatgeneral", "fldid=&1 and fldstatus=&2", $rData["fldid"], "Waiting")
      FillLabtable()
    Endif
  Endif

End

Public Sub btnsave_Click()

  Dim res As Result
  Dim res1 As Result

  Dim xrefer As String
  Dim xpayble As String

  If btnrefer.Tag Then
    xrefer = btnrefer.Tag
  Else
    xrefer = modBillings.GetReferralUserSetting("Procedure", $encid)
  Endif
  xpayble = modBillings.GetPayableUserSetting("Procedure", $encid)

  res = modDatabase.$myConn.Exec("select fldid,fldencounterval,fldnewdate,flditem,fldreportquali,flddetail,fldtime from tblpatgeneral where fldencounterval=&1 and fldinput=&2 and fldsave=&3 and fldcomp=&4 and fldreportquali=&5 and fldstatus=&6", $encid, "Minor Procedures", False, modBasic.$compID, "Done", "Waiting")                                      ''
  If res.Available = True Then
    modDatabase.$myConn.Begin
    For Each res
      If modBasic.$AutoBillProcedure Then
        If modBasic.$AutoBillProcedure = "Standard" Then
          modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", res["flditem"], 1, "Done", res["fldid"], True, False, xpayble, xrefer)
        Else If modBasic.$AutoBillProcedure = "Full" Then
          modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", res["flditem"], 1, "Done", res["fldid"], True, False, xpayble, xrefer)                          ''
        Else If modBasic.$AutoBillProcedure = "Partial" Then
          modBillings.GetAutoBillingEntry($encid, cmbdisctype.Text, "Procedure", res["flditem"], 1, "Punched", res["fldid"], False, False, xpayble, xrefer)
        Endif
      Endif
      res1 = modDatabase.$myConn.Edit("tblpatgeneral", "fldid=&1", res["fldid"])
      res1["fldstatus"] = "Cleared"
      res1["fldsave"] = True
      res1["flduserid"] = modBasic.$lbluser
      res1["flduptime"] = Now()
      res1["fldcomp"] = modBasic.$compID
      res1["xyz"] = False
      res1.Update()
    Next
    modDatabase.$myConn.Commit
    FillLabtable()
    CompleteGrid()

    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
  Endif

Catch
  modDatabase.$myConn.Rollback
  modHelpVariable.CreateErrorReport()

End

Public Sub btnselectuser_Click()

  Dim xMedUser As String[]

  xMedUser = MedicalSelectedValue(("Select Payable User"), modBasic.$PayUserList)
  If xMedUser And If xMedUser.Count Then
    btnrefer.Tag = xMedUser[0]
    btnrefer.Text = xMedUser[1]
  Else
    btnrefer.Tag = ""
    btnrefer.Text = ""
  Endif

End

Public Sub btnrefer_Change()

  If btnrefer.Text = "" Then
    btnrefer.Tag = ""
  Endif

End

'''=================== completed  =====================
Private Sub CompleteGrid()

  Dim sql As String

  sql = "select fldid,fldtime,fldencounterval,flditem,fldreportquali from tblpatgeneral where fldencounterval=&1 and fldinput=&2 and fldsave=&3 and fldreportquali=&4 and fldstatus=&5"                                             ''
  $rData2 = modDatabase.$myConn.Exec(sql, $encid, "Minor Procedures", True, "Done", "Cleared")
  $aMyFields2 = New String[]
  modGridView.ReadSmallData(GridView2, $rData2, $aMyFields2)

  With GridView2
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Hidden = True
    .Columns[3].Width = CStr(325 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    .Columns[1].Text = "Time"
    .Columns[3].Text = "Procedure"
    .Columns[4].Text = "Status"
  End With

End

Public Sub GridView2_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData2.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 1 Then
    Data.Text = modReportVar.GetDateTimeReport($rData2[$aMyFields2[Column]], gb.GeneralDate)
  Else
    Data.Text = $rData2[$aMyFields2[Column]]
  Endif

End

Public Sub btnclose_Click()

  Me.Close()

End
