' Gambas module file

''--------------------------------------- General setting file ---------------------------------
Public Function ShowSettingValue(sFile As String, strSetting As String) As String

  Dim ConfFile As Settings
  Dim strVal As String
  Dim xx As String

  ConfFile = New Settings(sFile)
  strVal = ConfFile[strSetting, Null]
  If strVal Then
    xx = Trim(strVal)
  Else
    xx = ""
  Endif
  Return xx

End

Public Function ShowExistSettingValue(sFile As String, strSetting As String) As String

  Dim ConfFile As Settings
  Dim strVal As String
  Dim xx As String

  If Exist(sFile) Then
    ConfFile = New Settings(sFile)
    strVal = ConfFile[strSetting, Null]
    If strVal Then
      xx = Trim(strVal)
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

''-- from modprint
Public Function GetDirectFillresult(res As Result, Optional sField As String) As String[]

  Dim xx As String[]
  Dim ref As String
  Dim xval As String[]

  xx = New String[]
  If res.Available Then
    If sField Then
      ref = sField
    Else
      ref = modDBApp.FirstResultField(res)
    Endif
    xval = res.All(ref)
    If xval Then
      xx = xval
    Endif
  Endif
  Return xx

End

''slow but no null value
Public Function GetDirectFillresultNoNull(res As Result, Optional sField As String) As String[]

  Dim xx As String[]
  Dim ref As String

  xx = New String[]
  If res.Available Then
    If sField Then
      ref = sField
    Else
      ref = modDBApp.FirstResultField(res)
    Endif
    For Each res
      If res[ref] Then
        xx.Add(res[ref])
      Endif
    Next
  Endif
  Return xx

End

''------------------------------------ Pre print formatting -------------------------------------
Public Function PrePrintFormatting($path As String, $size As String) As String

  Dim xx As String
  Dim xscript As String
  Dim xexec As String
  Dim xtrans As String

  xscript = modSettings.ShowSettingFromFIle("PrePrintFormatScript/" & $size)
  xexec = modSettings.ShowSettingFromFIle("PrePrintFormatExec/" & $size)
  xtrans = modSettings.ShowSettingFromFIle("PrePrintTranslate/" & $size)
  If xscript Then
    If xtrans = "Yes" Then
      xx = GetTranslatedFile(xscript, $path)
    Else
      xx = modExternal.GerScriptValueNoCache(xscript, xexec, $path)
    Endif
  Else
    xx = $path
  Endif
  Return Trim(xx)

End

Public Function GetTranslatedFile(xScript As String, sInFile As String) As String

  Dim xxx As String
  Dim xfinal As String

  Dim hFile As File
  Dim sLine As String
  Dim linWord As String[]

  If Exist(xScript) Then
    xxx = File.Load(sInFile)

    hFile = Open xScript
    modBasic.DebugString("Open File " & xScript)
    For Each sLine In hFile.Lines
      If Len(Trim(sLine)) Then
        linWord = Split(sLine, ";")
        xxx = Replace(xxx, linWord[0], linWord[1])
      Endif
    Next
    hFile.Close()

    xfinal = Temp() & "." & File.Ext(sInFile)
    File.Save(xfinal, xxx)

  Else
    xfinal = sInFile
  Endif
  Return xfinal

End

''---------------------------------- Report Procedures ------------------------
Public Sub OpenHTMLViewBill(encid As String, sPath As String, sSize As String)

  Dim hForm As FmWebView

  If Exist(sPath) Then
    hForm = New FmWebView(sPath, True, encid, "")
    hForm.ShowModal
  Endif

End

Public Sub OpenPDFPreview(encid As String, sPath As String, sSize As String)

  Dim hForm As FmPDFView
  Dim xpath As String

  If sPath Then
    xpath = modPrint.ConvertHTMLToPDFString(sPath, sSize)
    If Exist(xpath) Then
      hForm = New FmPDFView(xpath, False, encid)
      hForm.ShowModal
    Endif
  Endif

End

Public Sub OpenHTMLPreview(encid As String, sPath As String, sSize As String, Optional sType As String)

  Dim hForm1 As FmWebView
  Dim xextra As String

  If sSize = "ReportSize" Then
    xextra = "WithReport"
  Else If sSize = "LabelSize" Then
    xextra = "WithLabel"
  Else If sSize = "InvoiceSize" Then
    xextra = "WithInvoice"
  Endif

  ' Flush
  If sPath Then
    If sSize = "InvoiceSize" Then
      hForm1 = New FmWebView(sPath, True, encid, "")  ''PDF locked
      hForm1.ShowModal
    Else
      If sType Then
        hForm1 = New FmWebView(PrePrintFormatting(sPath, sSize), False, encid, sType)  ''PDF not locked
      Else
        hForm1 = New FmWebView(PrePrintFormatting(sPath, sSize), False, encid, "")  ''PDF not locked
      Endif
      hForm1.ShowModal
    Endif
  Endif

  ' modPatientSub.PrintExtraReport(encid, xextra)

End

''Export Report: open popup and then export (use for report made by app)
Public Sub DisplayReportExport(sPath As String) As String

  Dim hForm As FmPrint
  Dim hForm1 As FmWebView
  Dim sTarget As String
  Dim sForm As FmOpenLink

  ' Flush
  If sPath Then
    If modBasic.$ExpoRepoUser = True Then
      If modBasic.$ReportingPopUp = "CSV File" Then
        sTarget = modprint.GetFileWebURL(sPath)
        If sTarget Then
          sForm = New FmOpenLink(sTarget)
          sForm.ShowModal
        Endif
      Else
        hForm = New FmPrint(PrePrintFormatting(sPath, "ReportSize"))
        hForm.ShowModal
      Endif
    Else
      hForm1 = New FmWebView(PrePrintFormatting(sPath, "ReportSize"), True, "", "")  ''PDF locked
      hForm1.ShowModal
      ' modAppSupport.FindWorSpace(modHelpVariable.$LogInCategory).Add(hForm)
    Endif
  Endif

End

''do not open pop up form (use for html created from other apps like PSPP)
Public Sub OpenBrowser(sPath As String)

  Dim hForm As FmWebView
  Dim xHtml As String
  Dim newPath As String
  Dim xpicPath As String

  xpicPath = File.Dir(sPath) &/ File.BaseName(sPath) & "-1.png"
  If Exist(xpicPath) Then
    xHtml = File.Load(sPath)
    xHtml = Replace(xHtml, xpicPath, modprint.GetFileWebURL(xpicPath))
    newPath = Temp() & ".html"
    File.Save(newPath, xHtml)
  Else
    newPath = sPath
  Endif

  If modBasic.$ExpoRepoUser = True Then
    hForm = New FmWebView(newPath, False, "", "")
  Else
    hForm = New FmWebView(newPath, True, "", "")  ''PDF locked
  Endif
  hForm.ShowModal

End

''Open Chart View
Public Sub OpenChartView(sChartType As String, sName As String, xValues As Variant[], yValues As Variant[])

  Dim xcoll As Collection
  Dim hForm As FmWebChart

  If sChartType = "line" Then
    xcoll = modChartJS.GetHTMLChartScript("line", sName, xValues, yValues)
  Else If sChartType = "pie" Then
    xcoll = modChartJS.GetHTMLChartScript("pie", sName, xValues, yValues)
  Else If sChartType = "bar" Then
    xcoll = modChartJS.GetHTMLChartScript("bar", sName, xValues, yValues)
  Else If sChartType = "horizontalBar" Then
    xcoll = modChartJS.GetHTMLChartScript("horizontalBar", sName, xValues, yValues)
  Endif
  hForm = New FmWebChart(xcoll)
  hForm.ShowModal

End
