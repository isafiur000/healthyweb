' Gambas class file

Private sRefer As String[]
Private sPayable As String[]
Private sRetBill As String[]
Private sReason As String[]
Private sDiscTag As String[]
Private RetTaxGroup As String[]
Private RetDiscGroup As String[]

Public Sub _new(sBillNo As String)

  Dim res As Result
  Dim res1 As Result

  res = modDatabase.$myConn.Exec("select fldbillingmode,fldrefer,fldpayto,fldretbill,fldreason from tblpatbilling where fldbillno=&1", sBillNo)
  sRefer = New String[]
  sPayable = New String[]
  sRetBill = New String[]
  sReason = New String[]
  sDiscTag = New String[]
  RetTaxGroup = New String[]
  RetDiscGroup = New String[]
  If res.Available Then
    For Each res
      If res!fldrefer Then
        sRefer.Add(modGeneral.GetUserFullNamePrint(res!fldrefer))
      Endif
      If res!fldpayto Then
        sPayable.Add(modGeneral.GetUserFullNamePrint(res!fldpayto))
      Endif

      If res!fldretbill Then
        sRetBill.Add(res!fldretbill)
        If res!fldreason Then
          sReason.Add(res!fldreason)
        Endif
        res1 = modDatabase.$myConn.Exec("select flddiscountgroup,fldtaxgroup from tblpatbilldetail where fldbillno=&1", res!fldretbill)
        If res1.Available Then
          If res1["flddiscountgroup"] Then
            RetDiscGroup.Add(res1["flddiscountgroup"])
          Endif
          If res1["fldtaxgroup"] Then
            RetTaxGroup.Add(res1["fldtaxgroup"])
          Endif
        Endif
      Else
        If res!fldreason Then
          sDiscTag.Add(res!fldreason)
        Endif
      Endif

    Next
  Endif

End

Public Function ReferName() As String

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(sRefer)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = ""
  Endif
  Return sval

End

Public Function PayableName() As String

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(sPayable)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = ""
  Endif
  Return sval

End

Public Function ReturnBillNo() As String

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(sRetBill)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = xx.Join(";")
  Endif
  Return sval

End

Public Function ReturnReason() As String

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(sReason)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = ""
  Endif
  Return sval

End

Public Function DiscountTag() As String  '''for discount tags for billing only (not applicable to returns)

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(sDiscTag)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = ""
  Endif
  Return sval

End

Public Function ReturnTaxCode() As String

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(RetTaxGroup)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = xx.Join(";")
  Endif
  Return sval

End

Public Function ReturnDiscountCode() As String

  Dim xx As String[]
  Dim sval As String

  xx = modString.BinaryDistinctStringArray(RetDiscGroup)
  If xx.Count = 1 Then
    sval = xx[0]
  Else
    sval = xx.Join(";")
  Endif
  Return sval

End
