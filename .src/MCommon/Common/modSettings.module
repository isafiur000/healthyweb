' Gambas module file

' Public $AppLocalSetCache As New Collection

'NOTE: CONFIG DIR ===========================================================================
'''-------------------------------------- appsettings.conf
Public Sub SaveSettingsToFile(strSetting As String, strVal As String)

  ' ' Dim ConfFile As Settings

  ' If $AppLocalSetCache.Exist(strSetting) Then
  '   $AppLocalSetCache.Remove(strSetting)
  ' Endif
  Session[strSetting & "@" & "appsettings.conf"] = strVal
  ' ' ConfFile = New Settings(modHelpVariable.AppDirectory &/ "appsettings.conf")
  ' ' ConfFile[strSetting] = Trim(strVal)
  ' $AppLocalSetCache.Add(strVal, strSetting)

End

Public Function ShowSettingFromFIle(strSetting As String) As String

  Dim strVal As String

  ' If $AppLocalSetCache.Exist(strSetting) Then
  '   strVal = $AppLocalSetCache[strSetting]
  ' Else
  If modHelpVariable.$ExistFixSetting = True Then
    strVal = modControlSub.ShowSettingValue(modHelpVariable.$appetcFolder &/ modBasic.$compID &/ "appsettings.conf", strSetting)
    If Not strVal Then
      strVal = modControlSub.ShowSettingValue(modHelpVariable.$appetcFolder &/ "appsettings.conf", strSetting)
      If Not strVal Then
        strVal = Session[strSetting & "@" & "appsettings.conf"]
        ' ' strVal = modControlSub.ShowSettingValue(modHelpVariable.AppDirectory &/ "appsettings.conf", strSetting)
      Endif
    Endif
  Else
    strVal = Session[strSetting & "@" & "appsettings.conf"]
    ' ' strVal = modControlSub.ShowSettingValue(modHelpVariable.AppDirectory &/ "appsettings.conf", strSetting)
  Endif
  ' Endif
  Return strVal

End

''WebCheckBox ---
Public Sub EnterCheckSetting(chkvar As WebCheckBox, strTitle As String)

  If chkvar.Value = True Then
    SaveSettingsToFile(strTitle, "Yes")
  Else If chkvar.Value = False Then
    SaveSettingsToFile(strTitle, "No")
  Endif

End

Public Sub ShowCheckBox(chkvar As WebCheckBox, StrTitle As String)

  If ShowSettingFromFIle(StrTitle) = "Yes" Then
    chkvar.Value = True
  Else
    chkvar.Value = False
  Endif

End

'''-------------------------------------- appreporting.conf
Public Sub SaveSettingsToReport(strSetting As String, strVal As String)

  ' ' Dim ConfFile As Settings

  Session[strSetting & "@" & "appreporting.conf"] = strVal
  ' ' ConfFile = New Settings(modHelpVariable.AppDirectory &/ "appreporting.conf")
  ' ' ConfFile[strSetting] = Trim(strVal)

End

Public Function ShowSettingForReport(strSetting As String) As String

  Dim strVal As String

  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ modBasic.$compID &/ "appreporting.conf", strSetting)
  If Not strVal Then
    strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ "appreporting.conf", strSetting)
    If Not strVal Then
      strVal = Session[strSetting & "@" & "appreporting.conf"]
      ' ' strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "appreporting.conf", strSetting)
      ' ' If Not strVal Then
      ' '   strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "appsettings.conf", strSetting)
      ' ' Endif
    Endif
  Endif

  Return strVal

End

''WebCheckBox ---
Public Sub EnterCheckReport(chkvar As WebCheckBox, strTitle As String)

  If chkvar.Value = True Then
    SaveSettingsToReport(strTitle, "Yes")
  Else If chkvar.Value = False Then
    SaveSettingsToReport(strTitle, "No")
  Endif

End

Public Sub ShowCheckReport(chkvar As WebCheckBox, StrTitle As String)

  If ShowSettingForReport(StrTitle) = "Yes" Then
    chkvar.Value = True
  Else
    chkvar.Value = False
  Endif

End

''----------------------------- for appvariable.conf ---------------------------------
Public Sub SaveSettingsToVar(strSetting As String, strVal As String)

  ' ' Dim ConfFile As Settings

  Session[strSetting & "@" & "appvariable.conf"] = strVal
  ' ' ConfFile = New Settings(modHelpVariable.AppDirectory &/ "appvariable.conf")
  ' ' ConfFile[strSetting] = Trim(strVal)

End

Public Function ShowSettingFromVar(strSetting As String) As String

  Dim strVal As String

  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ modBasic.$compID &/ "appvariable.conf", strSetting)
  If Not strVal Then
    strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ "appvariable.conf", strSetting)
    If Not strVal Then
      strVal = Session[strSetting & "@" & "appvariable.conf"]
      ' ' strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "appvariable.conf", strSetting)
    Endif
  Endif

  Return strVal

End

''WebCheckBox ---
Public Sub EnterCheckSettingVar(chkvar As WebCheckBox, strTitle As String)

  If chkvar.Value = True Then
    SaveSettingsToVar(strTitle, "Yes")
  Else If chkvar.Value = False Then
    SaveSettingsToVar(strTitle, "No")
  Endif

End

Public Sub ShowCheckBoxVar(chkvar As WebCheckBox, StrTitle As String)

  If ShowSettingFromVar(StrTitle) = "Yes" Then
    chkvar.Value = True
  Else
    chkvar.Value = False
  Endif

End

''-----------User specific---
Public Function ShowUserWiseSettingFromFIle(sTitle As String) As String

  Dim strVal As String

  ''get values from fixed settings
  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ modBasic.$compID &/ "appvariable.conf", sTitle & "/" & modBasic.$lbluser)
  If Not strVal Then
    strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ "appvariable.conf", sTitle & "/" & modBasic.$lbluser)
    If Not strVal Then
      If modBasic.$GlobalUserID Then
        strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ "appvariable.conf", sTitle & "/" & modBasic.$GlobalUserID)
      Endif
    Endif
  Endif

  ''get values from user setting
  If Not strVal Then
    strVal = Session[sTitle & "/" & modBasic.$lbluser & "@" & "appvariable.conf"]
    ' ' strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "appvariable.conf", sTitle & "/" & modBasic.$lbluser)
  Endif
  If Not strVal Then
    If modBasic.$GlobalUserID Then
      strVal = Session[sTitle & "/" & modBasic.$GlobalUserID & "@" & "appvariable.conf"]
      ' ' strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "appvariable.conf", sTitle & "/" & modBasic.$GlobalUserID)
    Endif
  Endif

  Return strVal

End

'''-------------------------------------------- hmis.conf
Public Sub SaveHMISSettingsToFile(strSetting As String, strVal As String)

  ' ' Dim ConfFile As Settings

  Session[strSetting & "@" & "hmis.conf"] = strVal
  ' ' ConfFile = New Settings(modHelpVariable.AppDirectory &/ "hmis.conf")
  ' ' ConfFile[strSetting] = Trim(strVal)

End

Public Function ShowHMISSettingFromFIle(strSetting As String) As String

  Dim strVal As String

  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ "hmis.conf", strSetting)
  If Not strVal Then
    strVal = Session[strSetting & "@" & "hmis.conf"]
    ' ' strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "hmis.conf", strSetting)
  Endif

  Return strVal

End

'''-------------------------------------------- calculation.conf
Public Function ShowCalcSettingFromFIle(strSetting As String) As String

  Dim strVal As String

  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "calculation.conf", strSetting)
  If Not strVal Then
    strVal = Session[strSetting & "@" & "calculation.conf"]
  Endif

  Return strVal

End

'''-------------------------------------------- equations.conf
Public Sub SaveEqnSettingsToFile(strSetting As String, strVal As String)

  ' ' Dim ConfFile As Settings

  Session[strSetting & "@" & "equations.conf"] = strVal
  ' ' ConfFile = New Settings(modHelpVariable.AppDirectory &/ "/calculators/equations.conf")
  ' ' ConfFile[strSetting] = Trim(strVal)

End

Public Function ShowEqnSettingFromFIle(strSetting As String) As String

  Dim strVal As String

  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.AppDirectory &/ "/calculators/equations.conf", strSetting)
  If Not strVal Then
    strVal = Session[strSetting & "@" & "equations.conf"]
  Endif

  Return strVal

End

'NOTE: /etc/healthybit directory ========================================================
''----------------------------------------------- appextdb.conf
Public Function ShowExtSettingFromFIle(strSetting As String) As String

  Dim strVal As String

  strVal = modControlSub.ShowExistSettingValue(modHelpVariable.$appetcFolder &/ "appextdb.conf", strSetting)
  Return strVal

End

'NOTE: CACHE DIR ===========================================================================
'''-------------------------------------- applog.conf
Public Sub SaveValuesToLog(strSetting As String, strVal As String)

  ' Dim ConfFile As Settings

  Session[strSetting & "@" & "applog.conf"] = strVal
  ' ConfFile = New Settings(Desktop.CacheDir &/ modHelpVariable.AppName &/ "applog.conf")
  ' ConfFile[strSetting] = Trim(strVal)

End

Public Function ShowLogValues(strSetting As String) As String

  Dim strVal As String

  strVal = Session[strSetting & "@" & "applog.conf"]
  ' strVal = modControlSub.ShowSettingValue(Desktop.CacheDir &/ modHelpVariable.AppName &/ "applog.conf", strSetting)
  Return strVal

End
