' Gambas module file

''-------------- Log table ----------------
Public Sub CREATEtblapplog($con As Connection)

  Dim hTable As Table

  If Not $con.Tables.Exist("tblapplog") Then
    hTable = $con.Tables.Add("tblapplog")
    hTable.Fields.Add("fldid", db.Serial)
    hTable.Fields.Add("fldtime", db.Date)
    hTable.Fields.Add("fldhostmac", db.String, 250)
    hTable.Fields.Add("fldhostip", db.String, 250)
    hTable.Fields.Add("fldhostname", db.String, 250)
    hTable.Fields.Add("fldhostuser", db.String, 250)
    hTable.Fields.Add("fldhospname", db.String, 250)
    hTable.Fields.Add("fldhospadd", db.String, 250)
    hTable.Fields.Add("flddepartment", db.String, 250)
    hTable.Fields.Add("fldappuser", db.String, 250)
    hTable.Fields.Add("fldcategory", db.String, 250)
    hTable.PrimaryKey = ["fldid"]
    hTable.Update
  Endif

End

''-----------Advertise ------------------
Public Sub CREATEtbladvertise($con As Connection)

  Dim hTable As Table

  If Not $con.Tables.Exist("tbladvertise") Then
    hTable = $con.Tables.Add("tbladvertise")
    If modDBTables.$DbFormat = "REP" Then
      hTable.Fields.Add("advid", db.Serial)
    Else
      hTable.Fields.Add("advid", db.Long)
    Endif
    hTable.Fields.Add("advdate", db.String, 100)
    hTable.Fields.Add("advdepartment", db.String, 50)
    hTable.Fields.Add("advcontent", db.String, 250)
    hTable.Fields.Add("advlink", db.String, 250)
    hTable.PrimaryKey = ["advid"]
    hTable.Update
  Endif

End

Public Sub CREATEtbladlinks($con As Connection)

  Dim hTable As Table

  If Not $con.Tables.Exist("tbladlinks") Then
    hTable = $con.Tables.Add("tbladlinks")
    If modDBTables.$DbFormat = "REP" Then
      hTable.Fields.Add("advid", db.Serial)
    Else
      hTable.Fields.Add("advid", db.Long)
    Endif
    hTable.Fields.Add("advdate", db.String, 100)
    hTable.Fields.Add("advdepartment", db.String, 50)
    hTable.Fields.Add("advposition", db.String, 250)
    hTable.Fields.Add("advlink", db.String, 250)
    hTable.Fields.Add("advformat", db.String, 50)
    hTable.PrimaryKey = ["advid"]
    hTable.Update
  Endif

End

''----------------- BS Date---------------------
Public Sub CREATEtblbsdate($con As Connection)

  Dim hTable As Table

  If Not $con.Tables.Exist("tblbsdate") Then
    hTable = $con.Tables.Add("tblbsdate")
    hTable.Fields.Add("AD_DATE", db.Date)
    hTable.Fields.Add("BS_DATE", db.String, 250)
    hTable.PrimaryKey = ["AD_DATE"]
    hTable.Update
  Endif

End

''----------------ICD 11--------------------------
Public Sub CREATEtblicddisease($con As Connection)

  Dim hTable As Table

  If Not $con.Tables.Exist("tblicddisease") Then
    hTable = $con.Tables.Add("tblicddisease")
    hTable.Fields.Add("fldid", db.Serial)
    hTable.Fields.Add("fldicdcode", db.String, 25)
    hTable.Fields.Add("fldoldcode", db.String, 25)
    hTable.Fields.Add("fldicdchpter", db.String, 250)
    hTable.Fields.Add("fldicdnme", db.String, 250)
    hTable.PrimaryKey = ["fldid"]
    hTable.Update
  Endif

End

Public Sub CREATEtblicdconversion($con As Connection)

  Dim hTable As Table

  If Not $con.Tables.Exist("tblicdconversion") Then
    hTable = $con.Tables.Add("tblicdconversion")
    hTable.Fields.Add("fldid", db.Serial)

    hTable.Fields.Add("icd11code", db.String, 25)
    hTable.Fields.Add("icd11chapter", db.String, 25)
    hTable.Fields.Add("icd11title", db.String, 250)
    hTable.Fields.Add("linearization", db.String, 250)
    hTable.Fields.Add("icd10code", db.String, 25)
    hTable.Fields.Add("icd10chapter", db.String, 25)
    hTable.Fields.Add("icd10title", db.String, 250)

    hTable.PrimaryKey = ["fldid"]
    hTable.Update
  Endif

End
