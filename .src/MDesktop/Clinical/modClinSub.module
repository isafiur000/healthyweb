' Gambas module file

Public Sub AddClinicExam(encid As String, strSerial As String, strHead As String, sOption As String, strQuali As String, strQuanti As Float, abn As Boolean, strType As String, sysCons As String, xmethod As String, Optional sPath As String)

  Dim res As Result
  Dim xoption As String
  Dim xIntVal As String

  If sOption Then
    xoption = sOption
  Else
    If sysCons Then
      xoption = modFixClinic.GetExamSysOptionType(sysCons)
    Else
      xoption = modFixClinic.GetExamtOptionType(strHead)
    Endif
  Endif

  res = modDatabase.$myConn.Create("tblpatientexam")
  res["fldencounterval"] = encid
  res["fldserialval"] = strSerial
  res["fldinput"] = strType
  res["fldhead"] = strHead
  res["fldsysconst"] = sysCons
  res["fldoption"] = xoption
  res["fldmethod"] = xmethod

  If Not strQuali And If strQuanti Then
    res["fldtype"] = "Quantitative"
    res["fldrepquali"] = CStr(strQuanti)
    res["fldrepquanti"] = strQuanti

  Else
    If xoption = "Clinical Scale" Then
      res["fldtype"] = "Qualitative"
      res["fldrepquali"] = strQuali
      res["fldrepquanti"] = strQuanti
    Else
      res["fldtype"] = "Qualitative"
      res["fldrepquali"] = strQuali
      res["fldrepquanti"] = 0
    Endif

  Endif

  If sPath Then
    res["fldfilepath"] = sPath
  Else
    res["fldfilepath"] = ""
  Endif
  If IsDate(strQuali) Then
    res["fldrepdate"] = CDate(strQuali)
  Endif
  res["flduserid"] = modBasic.$lbluser
  res["fldtime"] = Now()
  res["fldcomp"] = modBasic.$compID
  res["fldsave"] = True
  res["fldabnormal"] = abn
  res["flduptime"] = ""
  res["xyz"] = False

  If MMain.$WebEntry = True Then
    xIntVal = modString.GetDateString(Now())
    res["fldid"] = CLong(xIntVal)
    res["fldrepoid"] = modMisc.GetWebIndexStr(xIntVal)
    res["fldrepodate"] = Now()
    res["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
    res["fldhospcode"] = modBasic.$HospCode
  Endif
  res.Update()
  'don't catch error

End

''--for local  procedures
Public Sub AddQualiData(encid As String, strSerial As String, strHead As String, sOption As String, strReport As String, abn As Boolean, strType As String, sysCons As String, Optional sMethod As String)

  Dim xsys As String
  Dim xmethod As String

  If sMethod Then
    xmethod = sMethod
  Else
    xmethod = "Regular"
  Endif
  If sysCons Then
    xsys = sysCons
  Else
    xsys = ""
  Endif
  AddClinicExam(encid, strSerial, strHead, sOption, strReport, 0, abn, strType, xsys, xmethod)

End

'' for fmEnterMultiExams
Public Sub AddQualiDataUniq(encid As String, strSerial As String, strHead As String, sOption As String, strReport As String, abn As Boolean, strType As String, sysCons As String, sMethod As String, sUniq As Integer)

  Dim xsys As String
  Dim res As Result

  If sysCons Then
    xsys = sysCons
  Else
    xsys = ""
  Endif

  If sUniq = 1 Then
    res = modDatabase.$myConn.Edit("tblpatientexam", "fldencounterval=&1 and fldserialval=&2 and fldmethod=&3 and fldinput=&4 and fldhead=&5", encid, strSerial, sMethod, strType, strHead)
    If res.Available Then
      res.MoveLast
      res["fldrepquali"] = strReport
      res["fldrepquanti"] = 0
      res.Update

    Else
      AddClinicExam(encid, strSerial, strHead, sOption, strReport, 0, abn, strType, xsys, sMethod)
    Endif
  Else
    AddClinicExam(encid, strSerial, strHead, sOption, strReport, 0, abn, strType, xsys, sMethod)
  Endif

End

Public Sub AddQualiImageData(encid As String, strSerial As String, strHead As String, sOption As String, strType As String, sysCons As String, sPath As String, Optional sMethod As String)

  Dim xsys As String
  Dim xmethod As String
  Dim xval As String

  If sMethod Then
    xmethod = sMethod
  Else
    xmethod = "Regular"
  Endif
  If sysCons Then
    xsys = sysCons
  Else
    xsys = ""
  Endif

  If Exist(sPath) Then
    xval = modImage.SaveClinicScreenDraw(encid, strHead, sPath)
    If xval Then
      AddClinicExam(encid, strSerial, strHead, sOption, "", 0, False, strType, xsys, xmethod, xval)
    Endif
  Endif

End

Public Sub AddQuantiData(encid As String, strSerial As String, strHead As String, sOption As String, strReport As Float, abn As Boolean, strType As String, sysCons As String, Optional sMethod As String)

  Dim xsys As String
  Dim metList As String[]
  Dim xmethod As String

  If sysCons Then
    xsys = sysCons
  Else
    xsys = ""
  Endif

  If sMethod Then
    xmethod = sMethod
  Else
    metList = modFixClinic.MethodsForClinExam(strHead)
    If metList.Count = 0 Then
      xmethod = "Regular"
    Else If metList.Count = 1 Then
      xmethod = metList[0]
    Else
      xmethod = InputCombo("Select Method of Examination", strHead, metList, "", True)
    Endif
  Endif
  AddClinicExam(encid, strSerial, strHead, sOption, "", strReport, abn, strType, xsys, xmethod)

End

Public Sub AddQuantiDataUniq(encid As String, strSerial As String, strHead As String, sOption As String, strReport As Float, abn As Boolean, strType As String, sysCons As String, sMethod As String, sUniq As Integer)

  Dim xsys As String
  Dim res As Result

  If sysCons Then
    xsys = sysCons
  Else
    xsys = ""
  Endif

  If sUniq = 1 Then
    res = modDatabase.$myConn.Edit("tblpatientexam", "fldencounterval=&1 and fldserialval=&2 and fldmethod=&3 and fldinput=&4 and fldhead=&5", encid, strSerial, sMethod, strType, strHead)
    If res.Available Then
      res.MoveLast
      res["fldrepquali"] = CStr(strReport)
      res["fldrepquanti"] = strReport
      res.Update

    Else
      AddClinicExam(encid, strSerial, strHead, sOption, "", strReport, abn, strType, xsys, sMethod)
    Endif
  Else
    AddClinicExam(encid, strSerial, strHead, sOption, "", strReport, abn, strType, xsys, sMethod)
  Endif

End

Public Sub AddQuantiDataCheck(encid As String, strSerial As String, strHead As String, sOption As String, strReport As Float, strType As String, Optional sysCons As String)

  Dim xlimit As Float[]
  Dim xbool As Boolean

  xlimit = modClinic.GetBothQuantiExamVal(strHead, encid)
  If xlimit[0] = 0 And If xlimit[1] = 0 Then
    xbool = False
  Else
    If strReport < xlimit[0] Or If strReport > xlimit[1] Then
      xbool = True
    Else
      xbool = False
    Endif
  Endif
  If sysCons Then
    AddQuantiData(encid, strSerial, strHead, sOption, strReport, xbool, strType, sysCons)
  Else
    AddQuantiData(encid, strSerial, strHead, sOption, strReport, xbool, strType, "")
  Endif

End

Public Sub UpdateQualiQuantiData(xfldid As Long, strQuali As String, strQuanti As Float, abn As Boolean, Optional KeyList As String)

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", xfldid)
  If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
    res["fldsave"] = True

    If Not strQuanti Then
      res["fldrepquali"] = Trim(strQuali)
      If IsFloat(strQuali) = True Then
        res["fldrepquanti"] = CFloat(Trim(strQuali))
      Else
        res["fldrepquanti"] = 0
      Endif
    Else
      res["fldrepquali"] = strQuali
      res["fldrepquanti"] = strQuanti
    Endif

    If KeyList Then
      res["fldfilepath"] = KeyList
    Endif
    res["fldabnormal"] = abn
    res["flduserid"] = modBasic.$lbluser
    res["flduptime"] = Now()
    res["fldcomp"] = modBasic.$compID
    res["xyz"] = False
    res.Update()
  Else
    Message.Warning("Authorization with " & res["flduserid"], ("OK"))
  Endif
  'don't catch error

End

Public Sub UpdateQualiData(xfldid As Long, strReport As String, abn As Boolean, Optional KeyList As String)

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", xfldid)
  If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
    res["fldsave"] = True
    res["fldrepquali"] = Trim(strReport)
    If IsFloat(strReport) = True Then
      res["fldrepquanti"] = CFloat(Trim(strReport))
    Else
      res["fldrepquanti"] = 0
    Endif
    If KeyList Then
      res["fldfilepath"] = KeyList
    Endif
    res["fldabnormal"] = abn
    res["flduserid"] = modBasic.$lbluser
    res["flduptime"] = Now()
    res["fldcomp"] = modBasic.$compID
    res["xyz"] = False
    res.Update()
  Else
    Message.Warning("Authorization with " & res["flduserid"], ("OK"))
  Endif
  'don't catch error

End

Public Sub UpdateQuantiData($fldid As Long, strReport As Float, abn As Boolean)

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $fldid)
  If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
    res["fldsave"] = True
    res["fldrepquali"] = CStr(strReport)
    res["fldrepquanti"] = strReport
    res["fldabnormal"] = abn
    res["flduserid"] = modBasic.$lbluser
    res["flduptime"] = Now()
    res["fldcomp"] = modBasic.$compID
    res["xyz"] = False
    res.Update()
  Else
    Message.Warning("Authorization with " & res["flduserid"], ("OK"))
  Endif
  'don't catch error

End

Public Sub UpdateExamFlag(sid As Long, xFlag As String)

  Dim res As Result

  res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", sid)
  If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
    If xFlag = "Abnormal" Then
      res["fldabnormal"] = True
    Else
      res["fldabnormal"] = False
    Endif
    res["flduserid"] = modBasic.$lbluser
    res["xyz"] = False
    res.Update
  Else
    Message.Warning("Authorization with " & res["flduserid"], ("OK"))
  Endif

End

'''-------------------------------- General Parameters -------------------------------------------
Public Sub AddGeneralParametersQuali(encid As String, sParameter As String, sValue As String)

  AddQualiData(encid, "", sParameter, "", sValue, False, "General Parameters", "")

End

Public Sub AddGeneralParametersQuanti(encid As String, sParameter As String, sValue As Float)

  AddQuantiData(encid, "", sParameter, "", sValue, False, "General Parameters", "")

End

''update body height in tblencounter
Public Sub UpdatePatientHeight(encid As String, txtht As Float, unit As String)

  Dim ht As Float

  If unit = "cm" Then
    ht = txtht
  Else If unit = "inch" Then
    ht = txtht * 2.54
  Else If unit = "foot" Then
    ht = txtht * 30.48
  Endif
  AddGeneralParametersQuanti(encid, "Body Height", ht)

End

Public Sub GetPatientHeight(encid As String, txtht As WebValueBox, cmbunit As WebComboBox)

  txtht.Value = modClinic.GetPatientHeightinCm(encid)
  cmbunit.Text = "cm"

End

Public Sub UpdateClinicQualiData($fldid As Long, strReport As String, abn As Boolean, Optional KeyList As String)

  If KeyList Then
    UpdateQualiData($fldid, strReport, abn, KeyList)
  Else
    UpdateQualiData($fldid, strReport, abn)
  Endif

End

''---------------------------------------- Sub exam ------------------------------------------------------------------
Public Sub InsertExamSubExam(encid As String, pttestid As Long, examname As String, subexamList As String[])

  Dim res2 As Result
  Dim xx As String
  Dim xIntVal As String

  For Each xx In subexamList
    res2 = modDatabase.$myConn.Create("tblpatientsubexam")
    res2["fldencounterval"] = encid
    res2["fldheadid"] = pttestid
    res2["fldparent"] = examname
    res2["fldsubtexam"] = xx
    res2["fldindex"] = modApplication.GetMD5SumString(pttestid & ":" & encid & ":" & examname & ":" & xx)
    res2["fldtanswertype"] = modFixClinic.GetSubExamOption(examname, xx)
    res2["fldreport"] = ""
    res2["fldsave"] = False
    res2["fldabnormal"] = False
    res2["fldchk"] = False
    res2["fldfilepath"] = ""
    res2["xyz"] = True
    If MMain.$WebEntry = True Then
      xIntVal = modString.GetDateString(Now())
      res2["fldid"] = CLong(xIntVal)
      res2["fldrepoid"] = modMisc.GetWebIndexStr(xIntVal)
      res2["fldrepodate"] = Now()
      res2["fldrepomac"] = CGI["REMOTE_ADDR"] & ":" & CGI["REMOTE_PORT"]
      res2["fldhospcode"] = modBasic.$HospCode
    Endif
    res2.Update()
  Next

  'don't catch error

End

' ' ''--------------------------------------- Chart --------------------------------
Public Function FillQuantiExamChart(sCanvas As String, encid As String, strHead As String, Optional sHour As Integer) As String

  ' Dim maxval As Float
  ' Dim minval As Float
  ' Dim normval As Float
  ' Dim xlimit As Float[]

  Dim sql As String
  Dim rData As Result
  Dim firDate As Date

  Dim pointsArr_x As String[]
  Dim pointsArr_y As Float[]

  Dim xcoll As Collection
  Dim sPath As String

  pointsArr_x = New String[]
  pointsArr_y = New Float[]

  If sHour Then
    firDate = DateAdd(Now(), gb.Hour, 0 - sHour)
    sql = "select fldrepquanti,fldtime from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldtype=&3 and fldsave=&4 and fldtime>=&5 ORDER BY fldtime"
    rData = modDatabase.$myConn.Exec(sql, encid, strHead, "Quantitative", True, firDate)
  Else
    sql = "select fldrepquanti,fldtime from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldtype=&3 and fldsave=&4 ORDER BY fldtime"
    rData = modDatabase.$myConn.Exec(sql, encid, strHead, "Quantitative", True)
  Endif
  If rData.Available Then
    ' xlimit = modClinic.GetBothQuantiExamVal(strHead, encid)
    ' minval = xlimit[0]
    ' maxval = xlimit[1]
    ' normval = modClinic.GetNormalQuantiExamVal(strHead, encid)

    For Each rData
      If sHour Then
        If sHour < 25 Then
          pointsArr_x.Add(Format(rData["fldtime"], "hh:nn"))
        Else
          pointsArr_x.Add(Format(rData["fldtime"], "dd hh:nn"))
        Endif
      Else
        pointsArr_x.Add(Format(rData["fldtime"], "mm-dd hh:nn"))
      Endif
      pointsArr_y.Add(rData["fldrepquanti"])
    Next
    xcoll = modChartJS.GetHTMLChartScript("line", strHead, pointsArr_x, pointsArr_y)
    sPath = "new Chart(\"" & sCanvas & "\", " & JSON.Encode(xcoll) & ")"
  Else
    sPath = ""
  Endif

  Return sPath

End

' ' ''-----------------------------------------------------------------------------------------------------------
' ' Public Sub DrawClinicalCharts_SetA(drw As PictureBox, encid As String, strItem As String)
' '
' '   Dim sql As String
' '   Dim res As Result
' '   Dim xage As Integer
' '   Dim xwt As Float
' '   Dim xht As Float
' '   Dim xPath As String
' '
' '   Dim pointsArr_x As Float[]
' '   Dim pointsArr_y As Float[]
' '
' '   pointsArr_x = New Float[]
' '   pointsArr_y = New Float[]
' '
' '   sql = "select fldid,fldtime,fldrepquanti from tblpatientexam where fldencounterval=&1 and fldhead=&2 and fldtype=&3 and fldsave=&4 ORDER BY fldtime"
' '   res = modDatabase.$myConn.Exec(sql, encid, "Body Weight", "Quantitative", True)
' '   If res.Available = True Then
' '
' '     For Each res
' '       If strItem = "Wt" Then
' '         pointsArr_x.Add(res!fldtime)
' '         pointsArr_y.Add(res!fldrepquanti)
' '       Else If strItem = "Body_Surface_Area" Or strItem = "Ideal_Body_Weight" Or strItem = "Body_Mass_Index" Then
' '         xage = DateDiff(modPatient.GetPatientBirthDay(encid), res!fldtime, gb.Year)
' '         xwt = res!fldrepquanti
' '         xht = modClinic.GetPatientHeightinCm(encid)
' '         If xage And If xwt And If xht Then
' '           pointsArr_x.Add(res!fldtime)
' '           pointsArr_y.Add(Abs(CFloat(modSysCons.GetCalculationForSetA(strItem, modPatient.GetPatientSex(encid), xage, xwt, xht, "0"))))
' '         Endif
' '       Endif
' '     Next
' '
' '     If pointsArr_x.Count And If pointsArr_y Then
' '       xPath = modChart.ClinicalChart(drw.Height, encid, pointsArr_x, pointsArr_y, 0, 0, 0)
' '       drw.Picture = Picture.Load(xPath)
' '     Endif
' '   Endif
' '
' ' End

''============================= clin Indicator ================================
Public Function GetLabTestPending(encid As String) As Boolean

  Dim sql As String
  Dim res As Result
  Dim xval As Boolean

  sql = "select fldid from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and (fldstatus=&4 or fldstatus=&5) and fldsample=&6"
  res = modDatabase.$myConn.Exec(sql, encid, "Diagnostic Tests", True, "Done", "Cleared", "Waiting")
  xval = res.Available

  Return xval

End

Public Function GetRadioTestPending(encid As String) As Boolean

  Dim sql As String
  Dim res As Result
  Dim xval As Boolean

  sql = "select fldid from tblpatbilling where fldencounterval=&1 and flditemtype=&2 and fldsave=&3 and (fldstatus=&4 or fldstatus=&5) and fldsample=&6"
  res = modDatabase.$myConn.Exec(sql, encid, "Radio Diagnostics", True, "Done", "Cleared", "Waiting")
  xval = res.Available

  Return xval

End

Public Function GetPharmacyPending(encid As String) As Boolean

  Dim sql As String
  Dim res As Result
  Dim xval As Boolean

  sql = "select fldid from tblpatdosing where fldencounterval=&1 and fldsave_order=&2 and (fldstatus=&3 or fldstatus=&4) and fldorder=&5 and fldcurval=&6"                                                   ''
  res = modDatabase.$myConn.Exec(sql, encid, False, "Recorded", "Registered", "Request", "Continue")
  xval = res.Available

  Return xval

End

Public Function GetEquipmentPending(encid As String) As Boolean

  Dim res1 As Result
  Dim xval As Boolean

  res1 = modDatabase.$myConn.Exec("select fldid from tblpattiming where fldencounterval=&1 and fldtype=&2 and fldfirstsave=&3 and fldsecondsave=&4", encid, "Equipment", True, False)
  xval = res1.Available

  Return xval

End

Public Function GetDevicePending(encid As String) As Boolean

  Dim res As Result
  Dim xval As Boolean

  res = modDatabase.$myConn.Exec("select fldid from tblpatevents where fldencounterval=&1 and fldtype=&2 and fldfirstsave=&3 and fldsecondsave=&4", encid, "Devices", True, False)
  xval = res.Available

  Return xval

End

''------------------------------------- Status icons ---------------------------------
Public Function GetMedicineClinStaus(encid As String) As Integer

  Dim res As Result
  Dim res1 As Result
  Dim xval As Integer

  res = modDatabase.$myConn.Exec("select fldid,fldsave_order from tblpatdosing where fldencounterval=&1 and flditemtype=&2 and fldroute<>&3", encid, "Medicines", "fluid")
  If res.Available Then
    xval = 2
    For Each res
      If res["fldsave_order"] = False Then
        xval = 1
        Break
      Endif
    Next
  Else
    xval = 0
  Endif

  If xval = 2 Then
    xval = 3
    For Each res
      res1 = modDatabase.$myConn.Exec("select flddoseno from  tblnurdosing where fldencounterval=&1 and flddoseno=&2", encid, res["fldid"])
      If res1.Available = False Then
        xval = 2
        Break
      Endif
    Next
  Endif

  Return xval

End

Public Function GetLabClinStaus(encid As String) As Integer

  Dim res As Result
  Dim res1 As Result
  Dim xval As Integer

  res = modDatabase.$myConn.Exec("select fldid,fldsample from tblpatbilling where fldencounterval=&1 and flditemtype=&2", encid, "Diagnostic Tests")
  If res.Available Then
    xval = 2
    For Each res
      If res["fldsample"] = "Waiting" Then
        xval = 1
        Break
      Endif
    Next
  Else
    xval = 0
  Endif

  If xval = 2 Then
    res1 = modDatabase.$myConn.Exec("select fldstatus,flvisible from tblpatlabtest where fldencounterval=&1", encid)
    If res1.Available Then
      xval = 3
      For Each res1
        If res1["fldstatus"] = "Ordered" Then
          xval = 2
          Break
        Else If res1["fldstatus"] = "Sampled" Then
          xval = 2
          Break
        Endif
      Next
    Endif
  Endif

  Return xval

End

Public Function GetRadioClinStaus(encid As String) As Integer

  Dim res As Result
  Dim res1 As Result
  Dim xval As Integer

  res = modDatabase.$myConn.Exec("select fldid,fldsample from tblpatbilling where fldencounterval=&1 and flditemtype=&2", encid, "Radio Diagnostics")
  If res.Available Then
    xval = 2
    For Each res
      If res["fldsample"] = "Waiting" Then
        xval = 1
        Break
      Endif
    Next
  Else
    xval = 0
  Endif

  If xval = 2 Then
    res1 = modDatabase.$myConn.Exec("select fldstatus,flvisible from tblpatradiotest where fldencounterval=&1", encid)
    If res1.Available Then
      xval = 3
      For Each res1
        If res1["fldstatus"] = "Ordered" Then
          xval = 2
          Break
        Else If res1["fldstatus"] = "Sampled" Then
          xval = 2
          Break
        Endif
      Next
    Endif
  Endif

  Return xval

End

Public Function GetFluidsClinStaus(encid As String) As Integer

  Dim res As Result
  Dim res1 As Result
  Dim xval As Integer

  res = modDatabase.$myConn.Exec("select fldid,fldsave_order from tblpatdosing where fldencounterval=&1 and flditemtype=&2 and fldroute=&3", encid, "Medicines", "fluid")
  If res.Available Then
    xval = 2
    For Each res
      If res["fldsave_order"] = False Then
        xval = 1
        Break
      Endif
    Next
  Else
    xval = 0
  Endif

  If xval = 2 Then
    xval = 3
    For Each res
      res1 = modDatabase.$myConn.Exec("select flddoseno from  tblnurdosing where fldencounterval=&1 and flddoseno=&2", encid, res["fldid"])
      If res1.Available = False Then
        xval = 2
        Break
      Endif
    Next
  Endif

  Return xval

End

Public Function GetDeviceClinStaus(encid As String) As Integer

  Dim res As Result
  Dim xval As Boolean

  res = modDatabase.$myConn.Exec("select fldid,fldfirstsave,fldsecondsave from tblpatevents where fldencounterval=&1 and fldtype=&2", encid, "Devices")
  If res.Available Then
    xval = 3
    For Each res
      If res["fldsecondsave"] = False Then
        xval = 2
        Break
      Endif
    Next
  Else
    xval = 0
  Endif

  Return xval

End

Public Function GetEquipClinStaus(encid As String) As Integer

  Dim res As Result
  Dim xval As Boolean

  res = modDatabase.$myConn.Exec("select fldid,fldfirstsave,fldsecondsave from tblpattiming where fldencounterval=&1 and fldtype=&2", encid, "Equipment")
  If res.Available Then
    xval = 3
    For Each res
      If res["fldsecondsave"] = False Then
        xval = 2
        Break
      Endif
    Next
  Else
    xval = 0
  Endif

  Return xval

End
