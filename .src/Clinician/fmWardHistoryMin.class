' Gambas class file

''Main Form
Private $rData As Result
Private $aMyFields As String[]

Private $UserRestrict As String[]
Private $PatientNum As String
Private $Category As String
Private $sDepart As String
Private $secText As String
Private $reference As String
Private $sTatus As String
Private $Grouping As String

Private $billModeTest As String
Private $billModeRadio As String

''Tabbed controls
Private aMainFrame As New Object[50]
Private aWebFrame As New Object[50]
Private aWebPanel As New Object[50]
Private aIndexLabel As New Object[50]
Private aNameLabel As New Object[50]
Private aAbnormCheck As New Object[50]
Private aHTMLText As New Object[50]
Private aLineText As New Object[50]
Private aUnitText As New Object[50]
Private aValueBox As New Object[50]
Private aQuantiBox As New Object[50]
Private aQuantiMax As New Object[50]
Private aQuantiMin As New Object[50]
Private aClinBox As New Object[50]
Private aDateBox As New Object[50]
Private aBSDate As New Object[50]
Private aComboBox As New Object[50]
Private aTextArea As New Object[50]
Private aDichoValue As New Object[50]
Private aLeftRight As New Object[50]
Private aGridView As New Object[50]
Private aListBox As New Object[50]
Private aGenTextArea As New Object[50]
Private aButtonBox As New Object[50]
Private aHelpButton As New Object[50]
Private aWebSpace As New Object[50]

Private aWebBottom As New Object[50]
Private aValSlider As New Object[50]

''other variables
Private $encid As String
Private $sTable As String
Private $idList As String[]
Private $sCategory As String
''Arrays
Private $xCode As String[]
Private $xType As String[]
Private $xOption As String[]
Private $xitem As String[]
Private $xExam As String[]
Private $xOpList As String[]
Private $xSysCons As String[]
Private $xSource As String[]
Private $xHelpList As String[]
Private $xUniqList As Integer[]
Private $xDefaultLst As String[]

Private AppFactor As Float
Private $enableControl As Boolean
Private $viewSlider As Boolean

Public Sub _new(sCategory As String, encid As String, sDepartment As String)

  Dim sList As String[]

  $Category = sCategory
  $sDepart = sDepartment

  If encid Then
    txtencid.Text = encid
  Endif
  modGeneralMain.GetOpenModalForm(Me)

  ''Main Form
  $UserRestrict = modBasic.$ClinicDisableCompo
  $Grouping = modSettings.ShowSettingFromFIle("ClinicForms/GroupStructuredExams")
  $reference = modSettings.ShowSettingFromFIle($Category & "/RecommendedExam")
  If Not $reference Then
    sList = modMedicine.FillClinicalReference($Category)
    If sList And If sList.Count Then
      $reference = sList[0]
    Endif
  Endif
  If $reference Then
    cmbcategory.List = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select distinct(fldcategory) as col from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldreferencee=&3", $sDepart, $Category, $reference))
  Endif

  If txtencid.Text Then
    BasicInfoPatient()
  Endif

End

''============================== MAIN FORM ================================
Private Sub BasicInfoPatient()

  If txtencid.Text Then
    txtpatientname.Text = modPatient.GetPatientNameByEnc(Trim(txtencid.Text))
    txtgender.Text = modPatient.GetPatientSex(Trim(txtencid.Text))
    $status = modPatient.CurrentAdmissionStatus(Trim(txtencid.Text))
    $PatientNum = modPatient.GetPatientNoByEnc(Trim(txtencid.Text))
    ButtonControl()
    $billModeTest = modNonMedical.GetAutoIPBillingPack("Test", Trim(txtencid.Text))
    $billModeRadio = modNonMedical.GetAutoIPBillingPack("Radio", Trim(txtencid.Text))

  Endif

End

Private Sub ButtonControl()

  Dim xx As Boolean

  xx = modPatient.EnableClinicForm($status)
  btncomponents.Enabled = xx
  btneditflag.Enabled = xx
  btndelete.Enabled = xx
  Frame1.Enabled = xx
  pnltopenter.Enabled = xx

  If $UserRestrict Then
    UserAccessRestrict()
  Endif

End

Private Sub UserAccessRestrict()

  If $UserRestrict.Exist("Complete Examination") Then
    grdtreeview.Enabled = False
    GridView1.Enabled = False
    Frame1.Enabled = False
    pnltopenter.Enabled = False
  Endif

End

''---------------- Exam List ---------------------
Public Sub btnshowtree_Click()

  If cmbcategory.Text Then
    LoadTreeData()
    ShowClinicTable()
  Endif

End

Private Sub LoadTreeData()

  $secText = ""
  FillClinicalTree(grdtreeview, $Category, cmbcategory.Text, $sDepart, chkleftright.Value)
  grdtreeview.SetFocus

End

Private Sub ShowSelectedVar()

  Dim res As Result
  Dim sList As String[]
  Dim hForm As FmEnterMultiExam
  Dim hFormTwo As FmEnterMultiExamTwo

  If grdtreeview.Current.Text Then
    If txtencid.Text Then

      If chkleftright.Value = True Then
        sList = New String[]
        res = modDatabase.$myConn.Exec("select fldheadcode from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldcategory=&3 and flditem=&4 and fldreferencee=&5 and flditemoption=&6 ORDER BY fldheadid", $sDepart, $Category, cmbcategory.Text, grdtreeview.Current.Text, $reference, "Left/Right Components")
        If res.Available Then
          For Each res
            sList.Add(res!fldheadcode)
          Next
          hFormTwo = New FmEnterMultiExamTwo(grdtreeview.Current.Text, Trim(txtencid.Text), cmbcategory.Text, sList, $Category)
          hFormTwo.ShowModal
        Endif
      Else

        If $Grouping = "Separate" Then
          If grdtreeview.Current.Image = "icons/coll3.png" Then
            SelectDIrectEntryForm()
          Else
            modFillContainer.ExpandClickTreeView(grdtreeview)
          Endif

        Else If $Grouping = "Tabbed" Then
          sList = New String[]
          res = modDatabase.$myConn.Exec("select fldheadcode from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldcategory=&3 and flditem=&4 and fldreferencee=&5 and flditemoption IS NULL ORDER BY fldheadid", $sDepart, $Category, cmbcategory.Text, grdtreeview.Current.Text, $reference)
          If res.Available Then
            For Each res
              sList.Add(res["fldheadcode"])
            Next
            ShowGroupControls(Trim(txtencid.Text), cmbcategory.Text, sList, $Category)
          Endif

        Else
          sList = New String[]
          res = modDatabase.$myConn.Exec("select fldheadcode from tblstructexam where fldclass=&1 and fldsubclass=&2 and fldcategory=&3 and flditem=&4 and fldreferencee=&5 and flditemoption IS NULL ORDER BY fldheadid", $sDepart, $Category, cmbcategory.Text, grdtreeview.Current.Text, $reference)
          If res.Available Then
            For Each res
              sList.Add(res!fldheadcode)
            Next
            hForm = New FmEnterMultiExam(grdtreeview.Current.Text, Trim(txtencid.Text), cmbcategory.Text, sList, $Category)
            hForm.ShowModal
          Endif
        Endif

      Endif
      ShowClinicTable()

    Endif
  Endif

End

Public Sub grdtreeview_Select()

  ShowSelectedVar()

End

' Public Sub btnshowlist_Click()
'
'   ShowSelectedVar()
'
' End

''---------------------- Grid View ------------------
Private Sub ShowClinicTable()

  If cmbcategory.Text Then
    If Not grdtreeview.Current Then
      $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldtime,fldhead,fldabnormal,fldid,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and fldclass=&6 and fldreferencee=&7) ORDER BY fldtime", cmbcategory.Text, Trim(txtencid.Text), True, $Category, cmbcategory.Text, $sDepart, $reference)
    Else

      If grdtreeview.Current.Image = "icons/coll2.png" Then
        If $secText Then
          grdtreeview[$secText].Expanded = False
        Endif
        $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldtime,fldhead,fldabnormal,fldid,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and flditem=&6 and fldclass=&7 and fldreferencee=&8) ORDER BY fldtime", cmbcategory.Text, Trim(txtencid.Text), True, $Category, cmbcategory.Text, grdtreeview.Current.Text, $sDepart, $reference)
        $secText = grdtreeview.Current.Key
      Else
        $rData = modDatabase.$myConn.Exec("select fldid,fldtype,fldtime,fldhead,fldabnormal,fldid,fldid,fldserialval,fldrepquali,fldrepquanti from tblpatientexam where fldinput=&1 and fldencounterval=&2 and fldsave=&3 and fldserialval in(select fldheadcode from tblstructexam where fldsubclass=&4 and fldcategory=&5 and flditem=&6 and fldclass=&7 and fldreferencee=&8) ORDER BY fldtime", cmbcategory.Text, Trim(txtencid.Text), True, $Category, cmbcategory.Text, modFillContainer.GetTextFromTreeKey(grdtreeview.Current.ParentKey), $sDepart, $reference)
      Endif
    Endif
    $aMyFields = New String[]
    modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
    ResizeGridView()
  Endif

End

Private Sub ResizeGridView()

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Hidden = True
    .Columns[2].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(25 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(250 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Hidden = True
    .Columns[7].Hidden = True
    .Columns[8].Hidden = True
    .Columns[9].Hidden = True

    .Columns[2].Text = "Examination"
    .Columns[3].Text = "Observation"
    .Columns[5].Text = "Time"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column = 2 Then
    Data.Text = modReportVar.GetDateTimeReport($rData[$aMyFields[Column]], gb.GeneralDate)
  Else If Column = 5 Then
    Data.Html = modClinic.GetExamValueString(Trim(txtencid.Text), $rData[$aMyFields[Column]], False)
  Else If Column = 4 Then
    Data.Html = modString.GetImageForHTMLGrid(modMisc.GetGridIcon($rData[$aMyFields[Column]]), "75%", "75%")
    Data.Text = ""
  Else
    Data.Text = $rData[$aMyFields[Column]]
  Endif

End

Public Sub btncomponents_Click()

  Dim yqualival As Variant[]
  Dim xquantival As Variant[]
  Dim rsn As Result
  Dim xdate As Date

  Dim opt As String[]
  Dim xval As String
  Dim sTable As String[]
  Dim sName As String
  Dim sVal As String[]

  Dim yyy As String[]
  Dim res1 As Result
  Dim hForm2 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim xData As Variant[]

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If $rData["fldtype"] = "Qualitative" Then
      rsn = modDatabase.$myConn.Exec("select fldhead,fldtesttype,fldtanswertype,fldsysconst from tblstructexam where fldheadcode=&1", $rData["fldserialval"])

      If rsn.Available And If rsn["fldsysconst"] Then
        cForm = New CFindExam(rsn["fldsysconst"])
        examtype = cForm.GetExamMode()
        sExam = cForm.GetExamName()
        sOptName = cForm.GetExamOption()
        sDefault = cForm.GetExamDefault()
      Else
        examtype = "Exam"
      Endif

      If sExam Then
        sName = sExam
      Else
        sName = $rData["fldhead"]
      Endif

      If rsn["fldtanswertype"] = "Fixed Components" Or If rsn["fldtanswertype"] = "Left/Right Components" Then
        If modClinic.GetSubExamBool($rData["fldid"], Trim(txtencid.Text)) = False Then
          yyy = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer as col from tblstructexamoption where fldheadcode=&1", $rData["fldserialval"]))
          If yyy.Count Then
            modClinSub.InsertExamSubExam(Trim(txtencid.Text), $rData["fldid"], sName, yyy)
          Endif
        Endif
      Else If rsn["fldtanswertype"] = "Single Selection" Or If rsn["fldtanswertype"] = "Dichotomous" Then
        yyy = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer as col from tblstructexamoption where fldheadcode=&1", $rData["fldserialval"]))
      Endif

      res1 = modDatabase.$myConn.Exec("select fldid,fldsubtexam,fldreport,fldtanswertype,fldabnormal,fldindex from tblpatientsubexam where fldheadid=&1", $rData["fldid"])
      If res1.Available = False Then
        If rsn["fldtanswertype"] = "Single Selection" Then
          If yyy.Count Then
            sVal = SubChoose(yyy, rsn["fldtanswertype"], sName)
            If sVal Then
              modClinSub.UpdateClinicQualiData($rData["fldid"], sVal.Join(gb.NewLine), False, "")
            Endif
          Endif

        Else If rsn["fldtanswertype"] = "Dichotomous" Then
          If yyy.Count Then
            sVal = SubChoose(yyy, rsn["fldtanswertype"], sName)
            If sVal Then
              modClinSub.UpdateClinicQualiData($rData["fldid"], sVal.Join(gb.NewLine), False, "")
            Endif
          Endif

        Else If rsn["fldtanswertype"] = "Left and Right" Then
          yqualival = CLeftRight($rData["fldhead"], $rData["fldrepquali"], modFixClinic.GetLeftRightMainHeader("Exam", $rData["fldhead"]))
          If yqualival Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1])
          Endif

        Else If rsn["fldtanswertype"] = "Date Time" Then
          xdate = GetDateValue($rData["fldhead"], ("Select Date Time"), Val($rData["fldrepquali"]))
          If xdate Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], modDate.DateStringForExam(xdate), False)
          Endif

        Else If rsn["fldtanswertype"] = "BS Date" Then
          xdate = GetDateValue($rData["fldhead"], ("Select Date Time"), modDate.ConvertToEnglishdate($rData["fldrepquali"]))
          If xdate Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], modDate.ConvertToLocaldate(xdate), False)
          Endif

        Else If rsn["fldtanswertype"] = "Text Table" Then
          sTable = modString.ConverTableRichTextToGrid(modClinic.GetExamValueString(Trim(txtencid.Text), $rData["fldid"]))
          opt = Split(sTable[0], ";")
          xval = TableEntry(opt, $rData["fldhead"], sTable[1])
          If xval Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], modString.GetTableFormatFromText(xval), False)
          Endif

        Else If rsn["fldtanswertype"] = "Qualitative" Then
          yqualival = GetQualiString($rData["fldhead"], $rData["fldrepquali"], "Exam")
          If yqualival Then
            modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1])
          Endif

        Else
          If sOptName = "Clinical Scale" Then
            yqualival = modExamOption.GetClinScalePopUp(examtype, sName)
            If yqualival Then
              modClinSub.UpdateQualiQuantiData($rData["fldid"], yqualival[1], CFloat(yqualival[0]), False)
            Endif
          Else If sOptName = "RichText Area" Then
            yqualival = GetQualiRich(sName, $rData["fldrepquali"], examtype)
            If yqualival Then
              modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1], yqualival[2])
            Endif
          Else
            yqualival = GetQualiValues(sName, $rData["fldrepquali"], examtype)
            If yqualival Then
              modClinSub.UpdateClinicQualiData($rData["fldid"], yqualival[0], yqualival[1], yqualival[2])
            Endif
          Endif
        Endif

      Else If res1.Available = True Then
        xData = New Variant[]
        For Each res1
          xData.Add([res1["fldsubtexam"], res1["fldreport"], res1["fldid"], res1["fldtanswertype"], res1["fldabnormal"], res1["fldindex"]])
        Next
        xData.Add(["Final Impression", modClinic.GetExamValueString(Trim(txtencid.Text), $rData["fldid"], False), 0, "RichText Area", False, ""])
        If rsn["fldtanswertype"] = "Left/Right Components" Then
          hFormTwo = New FmEnterMultipleTwo($rData["fldid"], "Exam", sName, xData, "", "Current")
          hFormTwo.ShowModal
        Else
          hForm2 = New FmEnterMultiple($rData["fldid"], "Exam", sName, xData, "", "Current")
          hForm2.ShowModal
        Endif
      Endif

    Else If $rData["fldtype"] = "Quantitative" Then
      xquantival = GetQuantiValues(examtype, Trim(txtencid.Text), sName, 0, 0, $rData["fldrepquanti"])
      If xquantival Then
        modClinSub.UpdateQuantiData($rData["fldid"], xquantival[0], xquantival[1])
      Endif
    Endif
    ShowClinicTable()

  Endif

End

Public Sub btneditflag_Click()

  Dim abc As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    abc = InputCombo("Select Flag for the observation", "Change Flag", ["Normal", "Abnormal"], modMisc.GetIconValue($rData["fldabnormal"]), True)
    If abc Then
      modClinSub.UpdateExamFlag($rData["fldid"], abc)
      ShowClinicTable()
    Endif
  Endif

End

Public Sub btndelete_Click()

  Dim res As Result

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If Message.Question(("Are you sure?"), ("No"), ("Yes")) = 2 Then
      res = modDatabase.$myConn.Edit("tblpatientexam", "fldid=&1", $rData["fldid"])
      If modGeneral.AllowClinicalEdit(res["flduserid"]) = True Then
        res["fldsave"] = False
        res["flduserid"] = modBasic.$lbluser
        res.Update
        ShowClinicTable()
      Else
        Message.Warning("Authorization with " & res["flduserid"], ("OK"))
      Endif
    Endif
  Endif

End

''XXXXXXXX VIEW OPTIONS
Private Sub SelectDIrectEntryForm()

  Dim sName As String
  Dim xquantival As Variant[]
  Dim yqualival As Variant[]
  Dim lftrtval As Variant[]
  Dim xlimit As Float[]
  Dim opt As String[]
  Dim sVal As String[]
  Dim xval As String
  Dim xdate As Date
  Dim sPath As String

  Dim rsn As Result
  Dim sysConst As String
  Dim sType As String
  Dim OptionType As String
  Dim xdefval As Float
  Dim xstrval As String

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  rsn = modDatabase.$myConn.Exec("select fldhead,fldtesttype,fldtanswertype,fldsysconst from tblstructexam where fldheadcode=&1", grdtreeview.Current.Key)
  If rsn.Available Then
    sType = rsn["fldtesttype"]
    OptionType = rsn["fldtanswertype"]
    sysConst = rsn["fldsysconst"]
    sName = grdtreeview.Current.Text

    If sysConst Then
      cForm = New CFindExam(sysConst)
      examtype = cForm.GetExamMode()
      sExam = cForm.GetExamName()
      sOptName = cForm.GetExamOption()
      sDefault = cForm.GetExamDefault()
    Endif

    If sType = "Quantitative" Then
      xdefval = 0
      If sysConst Then
        If OptionType = "Sys Constant" And If sOptName = "Calculated" Then
          If sDefault Then
            xdefval = modReportVar.GetCalcValueFloat(sDefault, Trim(txtencid.Text))
          Endif
        Else If OptionType = "Calculated" Then
          xdefval = modReportVar.GetCalcValueFloat(sysConst, Trim(txtencid.Text))
        Else If OptionType = "CopyValue" Then
          xdefval = modReportVar.GetLastQuantiParamValue(examtype, sExam, Trim(txtencid.Text))
        Endif
        xlimit = modClinic.GetBothQuantiExamVal(sExam, Trim(txtencid.Text))
      Else
        xlimit = [0, 0]
      Endif
      xquantival = GetQuantiValues(examtype, Trim(txtencid.Text), sName, xlimit[0], xlimit[1], xdefval)
      If xquantival Then
        modClinSub.AddQuantiData(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, OptionType, xquantival[0], xquantival[1], cmbcategory.Text, "", $Category)
      Endif

    Else
      If sysConst Then
        xstrval = ""
        If OptionType = "Sys Constant" Then
          If sOptName = "Calculated" Then
            If sDefault Then
              xstrval = modReportVar.GetCalcValueVariant(sDefault, Trim(txtencid.Text))
            Endif
            yqualival = GetQualiValues(sName, xstrval, examtype)
          Else
            yqualival = modExamOption.GetQualiExamOptionDirectValue(sExam, "", examtype, sOptName)
          Endif
        Else If OptionType = "Calculated" Then
          xstrval = modReportVar.GetCalcValueVariant(sysConst, Trim(txtencid.Text))
          yqualival = GetQualiValues(sName, xstrval, examtype)
        Else If OptionType = "CopyValue" Then
          xstrval = modReportVar.GetLastQualiParamValue(examtype, sExam, Trim(txtencid.Text))
          yqualival = GetQualiValues(sName, xstrval, examtype)
        Endif

      Else
        If OptionType = "Date Time" Then
          xdate = GetDateValue(("Select Date Time"), sName, "")
          If xdate Then
            yqualival = [modDate.DateStringForExam(xdate), False]
          Endif
        Else If OptionType = "BS Date" Then
          xdate = GetDateValue(("Select Date Time"), sName, "")
          If xdate Then
            yqualival = [modDate.ConvertToLocaldate(xdate), False]
          Endif
        Else If OptionType = "ImageValue" Then
          sPath = modImage.DisplayVisualData($Category, grdtreeview.Current.Key, "", OptionType)
          sVal = CustomDraw(sPath)
          If sVal Then
            yqualival = [sVal[0], False]
          Endif
        Else If OptionType = "Visual Input" Then
          sPath = modImage.DisplayVisualData($Category, grdtreeview.Current.Key, "", OptionType)
          If sPath Then
            xval = CVisualValue(grdtreeview.Current.Text, sPath, "")
            If xval Then
              yqualival = [xval, False]
            Endif
          Endif
        Else If OptionType = "Qualitative" Then
          yqualival = GetQualiString(sName, "", "Exam")
        Else If OptionType = "Left and Right" Then
          lftrtval = CLeftRight(sName, "", modFixClinic.GetLeftRightMainHeader("Exam", sName))
          If lftrtval Then
            yqualival = [lftrtval[0], lftrtval[1]]
          Endif
        Else If OptionType = "Single Selection" Or If OptionType = "Dichotomous" Or If OptionType = "Multiple Selection" Then
          opt = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tblstructexamoption where fldheadcode=&1 ORDER BY fldindex", grdtreeview.Current.Key))
          If opt.Count Then
            sVal = SubChoose(opt, OptionType, grdtreeview.Current.Text)
            If sVal Then
              yqualival = [sVal.Join(gb.NewLine), False]
            Endif
          Else
            yqualival = GetQualiValues(sName, "", "Exam")
          Endif
        Else If OptionType = "Text Table" Then
          opt = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tblstructexamoption where fldheadcode=&1 ORDER BY fldindex", grdtreeview.Current.Key))
          If opt.Count Then
            xval = TableEntry(opt, grdtreeview.Current.Text, "")
            If xval Then
              yqualival = [modString.GetTableFormatFromText(xval), False]
            Endif
          Else
            yqualival = GetQualiValues(sName, "", "Exam")
          Endif
        Else If OptionType = "RichText Area" Then
          yqualival = GetQualiRich(sName, "", "Exam")
        Else
          yqualival = GetQualiValues(sName, "", "Exam")
        Endif
      Endif

      If yqualival Then
        If OptionType = "ImageValue" Then
          modClinSub.AddQualiImageData(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, OptionType, cmbcategory.Text, sysConst, yqualival[0], $Category)
        Else
          If yqualival.Count = 3 And If yqualival[2] Then
            modClinSub.AddClinicExam(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, OptionType, yqualival[0], CFloat(yqualival[2]), yqualival[1], cmbcategory.Text, sysConst, $Category)
          Else
            modClinSub.AddClinicExam(Trim(txtencid.Text), grdtreeview.Current.Key, grdtreeview.Current.Text, OptionType, yqualival[0], 0, yqualival[1], cmbcategory.Text, sysConst, $Category)
          Endif
        Endif
      Endif
    Endif ''quali or quanti

  Endif

End

Public Sub btnfullrep_Click()

  modCHTMLReport.ExportGridToHTML(GridView1, UCase($Category), "",, txtencid.text)

End

Public Sub btnreposel_Click()

  Dim xPath As String

  If txtencid.text Then
    xPath = modCHTMLPatient.ShowRecomExaminationpatient(Trim(txtencid.text), $Category, cmbcategory.Text, $sDepart, $reference)
    modControlSub.OpenHTMLPreview(Trim(txtencid.text), xPath, "ReportSize")
  Endif

End

Public Sub btnrepocomplete_Click()

  Dim xPath As String

  If txtencid.text Then
    xPath = modCHTMLPatient.ShowRecomExamCompletePatient(Trim(txtencid.text), $Category, cmbcategory.List, $sDepart, $reference)
    modControlSub.OpenHTMLPreview(Trim(txtencid.text), xPath, "ReportSize")
  Endif

End

Public Sub btnblankform_Click()

  Me.Parent.DeleteChildren()
  modGeneralMain.LoadStructuredForm($Category, $sDepart)

End

Public Sub mnuimage_Click()

  Dim hForm As FmTestImage

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    hForm = New FmTestImage("IMAGE", Trim(txtencid.Text), $rData["fldid"], $rData["fldhead"], "Examination", "")
    hForm.ShowModal
  Endif

End

' Public Sub cmbcategory_Render()
'
'   modJavaScript.SetSelect2Combo(cmbcategory)
'
' End

''--------------------Populate Tree View -------------------------------
Private Sub FillClinicalTree(TreeView1 As WebTree, xSubClass As String, xCategory As String, sDepart As String)

  Dim str3 As String
  Dim str4 As String

  Dim res3 As Result
  Dim k As Integer
  Dim res4 As Result
  Dim l As Integer

  Dim pic2 As String
  Dim pic3 As String
  Dim ref As String

  pic2 = "icons/coll2.png"
  pic3 = "icons/coll3.png"

  ref = $reference
  TreeView1.Clear

  str3 = "select distinct(flditem) from tblstructexam where fldsubclass=&1 and fldcategory=&2 and fldreferencee=&3 and fldclass=&4 ORDER BY flditemid"
  res3 = modDatabase.$myConn.Exec(str3, xSubClass, xCategory, ref, sDepart)
  If res3.Available Then
    res3.MoveFirst
    For k = 1 To res3.Count
      TreeView1.Add(CStr(k) & "@" & res3["flditem"], res3["flditem"], pic2)

      str4 = "select fldheadcode,fldhead from tblstructexam where fldsubclass=&1 and fldcategory=&2 and flditem=&3 and fldreferencee=&4 and fldclass=&5 ORDER BY fldheadid"
      res4 = modDatabase.$myConn.Exec(str4, xsubClass, xCategory, res3["flditem"], ref, sDepart)
      If res4.Available Then
        res4.MoveFirst
        For l = 1 To res4.Count
          TreeView1.Add(res4["fldheadcode"], res4["fldhead"], pic3, CStr(k) & "@" & res3["flditem"])
          res4.MoveNext
        Next
      Endif

      res3.MoveNext
    Next
  Endif

End

Public Sub WebTabPanel1_Click()

  Dim ht As String

  If WebTabPanel1.Index = 0 Then
    ShowClinicTable()
  Else If WebTabPanel1.Index = 1 Then
    If modBasic.$ClinSliderValue = "Enable" Then
      $viewSlider = True
    Else
      $viewSlider = False
    Endif
    ht = modSettings.ShowSettingFromFIle("MultipleTextBox/Height")
    If ht Then
      Slider1.Value = CInt(ht)
    Else
      Slider1.Value = 3
    Endif
  Endif

End

''========================== Tabbed Controls ========================
Private Sub ShowGroupControls(encid As String, sTable As String, idList As String[], sCategory As String)

  $encid = encid
  $sTable = sTable
  $idList = idList
  $sCategory = sCategory

  AppFactor = modBasic.$AppScaleFactor
  Frame1.DeleteChildren()
  LoadFormData()

End

Private Sub LoadFormData()

  Dim idx As String
  Dim i As Integer

  Dim rsn As Result
  Dim res As Result

  Dim xcode As String
  Dim xType As String
  Dim xOption As String
  Dim xitem As String
  Dim xexam As String
  Dim xopList As String[]
  Dim xSysCons As String
  Dim xsource As String
  Dim xhelp As String
  Dim xuniq As Integer
  Dim xdefVal As String

  $xCode = New String[]
  $xType = New String[]
  $xOption = New String[]
  $xitem = New String[]
  $xExam = New String[]
  $xOpList = New String[]
  $xSysCons = New String[]
  $xSource = New String[]
  $xHelpList = New String[]
  $xUniqList = New Integer[]
  $xDefaultLst = New String[]

  For Each idx In $idList
    rsn = modDatabase.$myConn.Exec("select fldheadcode,fldhead,fldtesttype,fldtanswertype,fldsysconst,fldclininfo,fldunique,flddefault from tblstructexam where fldheadcode=&1 ORDER BY fldheadid", idx)
    If rsn.Available Then
      xcode = rsn["fldheadcode"]
      xitem = rsn["fldhead"]
      xType = rsn["fldtesttype"]
      xOption = rsn["fldtanswertype"]
      xSysCons = rsn["fldsysconst"]
      xhelp = rsn["fldclininfo"]
      If rsn["fldunique"] = True Then
        xuniq = 1
      Else
        xuniq = 0
      Endif
      xdefVal = rsn["flddefault"]
      xsource = "Free"

      ''get parameters
      If rsn["fldtanswertype"] = "Sys Constant" And If rsn["fldsysconst"] Then
        If modBasic.$sysExamDualList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption from tblexam where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldexamid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Exam", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Exam", xexam)
            Endif
            xsource = "Exam"
          Endif
        Else If modBasic.$sysTestDualList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldtestid,fldtype,fldoption from tbltest where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldtestid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Test", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Test", xexam)
            Endif
            xsource = "Test"
          Endif
        Else If modBasic.$sysRadioList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select fldexamid,fldtype,fldoption from tblradio where fldsysconst=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldtype"]
            xOption = res["fldoption"]
            xexam = res["fldexamid"]
            If res["fldoption"] = "Clinical Scale" Then
              xopList = modAllExam.GetCLinicalScaleOptions("Radio", xexam)
            Else
              xopList = modAllExam.SelectExamOptionList("Radio", xexam)
            Endif
            xsource = "Radio"
          Endif
        Else If modBasic.$DemogList.Exist(rsn["fldsysconst"]) = True Then
          res = modDatabase.$myConn.Exec("select flddemoid,fldoption from tbldemographic where flddemoid=&1", rsn["fldsysconst"])
          If res.Available Then
            xType = res["fldoption"]
            xOption = res["fldoption"]
            xexam = res["flddemoid"]
            xopList = modAllExam.SelectExamOptionList("Demog", xexam)
            xsource = "Demog"
          Endif
        Endif

      Else If rsn["fldtanswertype"] = "CopyValue" And If rsn["fldsysconst"] Then
        If modBasic.$sysExamDualList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixClinic.GetExamIDFromSysConst(rsn["fldsysconst"])
          xsource = "Exam"
        Else If modBasic.$sysTestDualList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixLab.GetLabTestIDFromSysConst(rsn["fldsysconst"])
          xsource = "Test"
        Else If modBasic.$sysRadioList.Exist(rsn["fldsysconst"]) = True Then
          xexam = modFixRadio.GetRadioTestIDFromSysConst(rsn["fldsysconst"])
          xsource = "Radio"
        Endif

      Else If rsn["fldtanswertype"] = "Calculated" And If rsn["fldsysconst"] Then
        xexam = "Expression"

      Else
        xopList = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer from tblstructexamoption where fldheadcode=&1 ORDER BY fldindex", idx))                         ''
        xexam = "Structured"
      Endif

      $xCode.Add(xcode)
      $xitem.Add(xitem)
      If xexam Then
        $xExam.Add(xexam)
      Else
        $xExam.Add("__")
      Endif
      If xType Then
        $xType.Add(xType)
      Else
        $xType.Add("__")
      Endif
      If xOption Then
        $xOption.Add(xOption)
      Else
        $xOption.Add("__")
      Endif
      If xopList And If xopList.Count Then
        $xOpList.Add(xopList.Join("|"))
      Else
        $xOpList.Add("__")
      Endif
      If xSysCons Then
        $xSysCons.Add(xSysCons)
      Else
        $xSysCons.Add("__")
      Endif
      If xsource Then
        $xSource.Add(xsource)
      Else
        $xSource.Add("__")
      Endif
      If xhelp Then
        $xHelpList.Add(xhelp)
      Else
        $xHelpList.Add("Null")
      Endif
      $xUniqList.Add(xuniq)
      If xdefVal Then
        $xDefaultLst.Add(xdefVal)
      Else
        $xDefaultLst.Add("__")
      Endif

    Endif
  Next

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      ''Create controls

      aMainFrame[i] = New WebContainer(Frame1)
      aWebFrame[i] = New WebHBox(aMainFrame[i])
      aIndexLabel[i] = New WebLabel(aWebFrame[i])
      aNameLabel[i] = New WebHtml(aWebFrame[i])

      aWebPanel[i] = New WebHBox(aMainFrame[i])
      aAbnormCheck[i] = New WebCheckBox(aWebPanel[i])

      If $xType[i] = "Quantitative" Then
        aQuantiBox[i] = New WebValueBox(aWebPanel[i]) As "QuantiGroup"
        aQuantiMin[i] = New WebValueBox(aWebPanel[i])
        aQuantiMax[i] = New WebValueBox(aWebPanel[i])
        aWebBottom[i] = New WebContainer(Frame1)
        aValSlider[i] = New WebSlider(aWebBottom[i]) As "SliderGroup"
      Else
        Select $xOption[i]
          Case "Sys Constant"
            aGenTextArea[i] = New WebTextArea(aWebPanel[i])
          Case "Multiple Selection"
            aListBox[i] = New WebListBox(aWebPanel[i])
          Case "Text Table"
            aGridView[i] = New WebTable(aWebPanel[i])
          Case "Left and Right"
            aLeftRight[i] = New LeftRightTextArea(aWebPanel[i])
          Case "Date Time", "BS Date"
            aDateBox[i] = New WebDateBox(aWebPanel[i])
            aBSDate[i] = New WebButton(aWebPanel[i]) As "BSButton"
          Case "User Profile"
            aLineText[i] = New WebTextBox(aWebPanel[i])
          Case "ImageValue"
            aButtonBox[i] = New WebButtonBox(aWebPanel[i])
          Case "Single Selection"
            aComboBox[i] = New WebComboBox(aWebPanel[i])
          Case "Dichotomous"
            aDichoValue[i] = New DichotomousValue(aWebPanel[i])
          Case "Quantitative"
            aValueBox[i] = New WebValueBox(aWebPanel[i])
            aUnitText[i] = New WebTextBox(aWebPanel[i])
          Case "Qualitative"
            aLineText[i] = New WebTextBox(aWebPanel[i])
          Case "Clinical Scale"
            aTextArea[i] = New WebTextArea(aWebPanel[i])
            aClinBox[i] = New WebValueBox(aWebPanel[i])
          Case "RichText Area"
            aHTMLText[i] = New WebTextHTML(aWebPanel[i])
          Case Else
            aGenTextArea[i] = New WebTextArea(aWebPanel[i])
        End Select
      Endif
      aHelpButton[i] = New WebButton(aWebPanel[i]) As "ButtonBoxgroup"
      aWebSpace[i] = New WebSeparator(Frame1)
    Endif
  Next
  $enableControl = False
  DIsplayTextForm()
  $enableControl = True

End

''------------------------ General form
Private Sub DIsplayTextForm()

  Dim i As Integer
  Dim xlimit As Float[]

  Dim xcrit As Float
  Dim aCrlower As Float
  Dim aCrupper As Float

  For i = 0 To $xitem.Count - 1
    If i < 49 Then

      With aMainFrame[i]
        .Arrangement = Arrange.Row
      End With

      With aWebFrame[i]
        .Class = "size-tablet less-container-margin"
      End With

      ''create index label
      With aIndexLabel[i]
        .Width = "2.5%"
        .Height = "2em"
        .Text = i + 1
        .Visible = False
        .Tag = i
      End With
      ''create Name Label
      With aNameLabel[i]
        .Expand = True
        .Font = "bold"
        .Text = "<p>" & $xitem[i] & "</p>"
        .Tag = i
        If $xHelpList[i] = "Null" Then
          .Tooltip = ""
        Else
          .Tooltip = $xHelpList[i]
        Endif
      End With

      With aWebPanel[i]
        .Class = "size-tablet less-container-margin"
      End With

      ''create abnormal checkbox
      With aAbnormCheck[i]
        .Width = "20%"
        .Height = "2em"
        .Text = "Flag"
        .Tag = i

        If modBasic.$ClinFlagAbnormExam = "Disable" Then
          .Visible = False
        Else
          .Visible = True
        Endif
      End With

      ''create observation entry
      If $xType[i] = "Quantitative" Then
        xlimit = modClinic.GetBothQuantiExamVal($xExam[i], $encid)
        xcrit = modFixClinic.GetCritValueExam($xExam[i])
        If xcrit Then
          aCrlower = xlimit[0] - xcrit * (xlimit[1] - xlimit[0])
          aCrupper = xlimit[1] + xcrit * (xlimit[1] - xlimit[0])
          If aCrupper = 0 Then
            aCrupper = 500
          Endif
        Else
          aCrlower = 0
          aCrupper = 500
        Endif
        With aQuantiBox[i]
          .Width = "25%"
          .Height = "2em"
          .Tag = i
        End With
        'min value
        With aQuantiMin[i]
          .Width = "22.5%"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[0]
          .Tag = i
        End With
        ''max value
        With aQuantiMax[i]
          .Width = "22.5%"
          .Height = "2em"
          .Enabled = False
          .Value = xlimit[1]
          .Tag = i
        End With

        With aWebBottom[i]
          .Arrangement = Arrange.Horizontal
          .Class = "less-container-margin"
          .Visible = $viewSlider
        End With

        With aValSlider[i]
          .Expand = True
          .Height = "1em"
          .Tag = i
        End With
        aValSlider[i].MinValue = aCrlower
        aValSlider[i].MaxValue = aCrupper

      Else
        If $xOption[i] = "Multiple Selection" Then
          With aListBox[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            ' .ScrollBar = Scroll.Both
            .Tag = i
          End With

        Else If $xOption[i] = "Text Table" Then
          ' DisplayAgegrid(Split($xOpList[i], "|"), "", aGridView[i])
          With aGridView[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Mode = Select.Multiple
            .Tag = i
          End With

        Else If $xOption[i] = "Single Selection" Then
          With aComboBox[i]
            .Width = "70%"
            .Height = "2em"
            .ReadOnly = False
            .List = Split($xOpList[i], "|")
            .Tag = i
          End With

        Else If $xOption[i] = "Dichotomous" Then
          With aDichoValue[i]
            .Width = "70%"
            .Height = "2em"
            .List = Split($xOpList[i], "|")
            .Tag = i
          End With

        Else If $xOption[i] = "Left and Right" Then
          With aLeftRight[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Tag = i
          End With

        Else If $xOption[i] = "Date Time" Then
          With aDateBox[i]
            .Width = "60%"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "10%"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $xOption[i] = "BS Date" Then
          With aDateBox[i]
            .Width = "60%"
            .Height = "2em"
            .DateTime = True
            .Tag = i
          End With
          With aBSDate[i]
            .Width = "10%"
            .Height = "2em"
            .Image = "icon:/small/calendar"
            .Tag = i
          End With

        Else If $xOption[i] = "User Profile" Then
          With aLineText[i]
            .Width = "70%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "ImageValue" Then
          With aButtonBox[i]
            .Width = "70%"
            .Height = "2em"
            .Text = ""
            .Tag = i
          End With

        Else If $xOption[i] = "Clinical Scale" Then
          With aTextArea[i]
            .Width = "50%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With
          With aClinBox[i]
            .Width = "20%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "Quantitative" Then
          With aValueBox[i]
            .Width = "40%"
            .Height = "2em"
            .Tag = i
          End With
          With aUnitText[i]
            .Width = "30%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "Qualitative" Then
          With aLineText[i]
            .Width = "70%"
            .Height = "2em"
            .Tag = i
          End With

        Else If $xOption[i] = "RichText Area" Then
          With aHTMLText[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            ' .DictionaryPath = modBasic.$dictPathList
            .Tag = i
          End With

        Else
          With aGenTextArea[i]
            .Width = "70%"
            .Height = CStr(2 * Slider1.Value) & "em"
            .Wrap = True
            .Tag = i
          End With

        Endif
      Endif

      ''create help button
      With aHelpButton[i]
        .Class = "toolButton"
        .Width = "2em"
        .Height = "2em"
        .Text = ""
        .Image = "icon:/small/info"
        .Tag = i
        .Tooltip = "[Ctrl+O] to display Options"
      End With

      With aWebSpace[i]
        .Height = "1em"
      End With

    Endif
  Next

End

Public Sub btncntrlrefresh_Click()

  If $xitem And If $xitem.Count Then
    modSettings.SaveSettingsToFile("MultipleTextBox/Height", Slider1.Value)
    DIsplayTextForm()
  Endif

End

Public Sub btnBrOK_Click()

  If $xitem Then
    FillExamSubExam()
    Me.Exec("Toastify({text: 'Information saved', duration: 3000}).showToast()")
    ' Balloon.Delay = modBasic.$BalloonDelay
  Endif

End

Public Sub BSButton_Click()

  Dim j As Integer
  Dim xx As String

  j = Last.Tag
  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(aDateBox[j].Value))
  If xx Then
    aDateBox[j].Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub SliderGroup_Change()

  Dim j As Integer

  j = Last.Tag
  If aQuantiBox[j] Then
    If $enableControl = True Then
      aQuantiBox[j].Value = aValSlider[j].Value
    Endif
  Endif

End

Public Sub QuantiGroup_Change()

  Dim j As Integer

  j = Last.Tag

  If aQuantiBox[j].Value Then
    If aQuantiMin[j].Value <> aQuantiMax[j].Value Then
      If aQuantiBox[j].Value < aQuantiMin[j].Value Or If aQuantiBox[j].Value > aQuantiMax[j].Value Then
        aAbnormCheck[j].Value = True
      Else
        aAbnormCheck[j].Value = False
      Endif
    Else
      aAbnormCheck[j].Value = False
    Endif
  Else
    aAbnormCheck[j].Value = False
  Endif

  If aAbnormCheck[j].Value = True Then
    aAbnormCheck[j].Foreground = Color.Red
  Else
    aAbnormCheck[j].Foreground = Color.Default
  Endif

End

Private Sub FillExamSubExam()

  Dim i As Integer
  ' Dim xval As String

  For i = 0 To $xitem.Count - 1
    If i < 49 Then
      If $xType[i] = "Quantitative" Then
        If aQuantiBox[i].Value Then
          modClinSub.AddQuantiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aQuantiBox[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
        Endif
      Else
        If $xOption[i] = "Multiple Selection" Then
          If aListBox[i].Count Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aListBox[i].List.Join(gb.NewLine), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "Text Table" Then
          ' xval = GetTableData(Split($xOpList[i], "|"), aGridView[i])
          ' If xval Then
          '   modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i],$xOption[i], modString.GetTableFormatFromText(xval), aAbnormCheck[i].Value, $sTable, $xSysCons[i],$xUniqList[i])
          ' Endif
        Else If $xOption[i] = "Single Selection" Then
          If aComboBox[i].Text Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aComboBox[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "Dichotomous" Then
          If aDichoValue[i].Value Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aDichoValue[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "Left and Right" Then
          If aLeftRight[i].DataText Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aLeftRight[i].DataText, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "Date Time" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], modDate.DateStringForExam(aDateBox[i].Value), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "BS Date" Then
          If aDateBox[i].Value Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], modDate.ConvertToLocaldate(aDateBox[i].Value), aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "User Profile" Then
          If aLineText[i].Text Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aLineText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "ImageValue" Then
          If aButtonBox[i].Text Then
            modClinSub.AddQualiImageData($encid, $idList[i], $xitem[i], $xOption[i], $sTable, $xSysCons[i], aButtonBox[i].Text, $sCategory)
          Endif
        Else If $xOption[i] = "Quantitative" Then
          If aValueBox[i].Value Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], CStr(aValueBox[i].Value) & Space(1) & aUnitText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "Qualitative" Then
          If aLineText[i].Text Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aLineText[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else If $xOption[i] = "Clinical Scale" Then
          If aTextArea[i].Text Then
            modClinSub.AddClinicExam($encid, $idList[i], $xitem[i], $xOption[i], aTextArea[i].Text, aClinBox[i].Value, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory)
          Endif
        Else If $xOption[i] = "RichText Area" Then
          If aHTMLText[i].Text Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aHTMLText[i].RichText, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Else
          If aGenTextArea[i].Text Then
            modClinSub.AddQualiDataUniq($encid, $idList[i], $xitem[i], $xOption[i], aGenTextArea[i].Text, aAbnormCheck[i].Value, $sTable, $xSysCons[i], $sCategory, $xUniqList[i])
          Endif
        Endif
      Endif
    Endif
  Next

End

''-----------------------------help options  --------------------------------------
Public Sub ButtonBoxgroup_Click()

  Dim j As Integer

  j = Last.Tag
  OpenOption(j)

End

Private Sub OpenOption(j As Integer)

  Dim sVal As String[]
  Dim sPath As String
  Dim xval As String
  Dim xopt As String[]
  Dim xflot As Variant[]
  Dim acalc As Variant

  If $xType[j] = "Quantitative" Then
    If $xOption[j] = "Calculated" Then
      If $xExam[j] = "Expression" Then
        acalc = GetCalculateFloat($xSysCons[j], $encid)
      Else If $xExam[j] = "Structured" Then
        acalc = GetCalculateFloat($xSysCons[j], $encid)
      Else
        xval = modAllExam.GetExamDefaultValue("Exam", $xExam[j])
        If xval Then
          acalc = GetCalculateFloat(xval, $encid)
        Endif
      Endif
      If acalc Then
        aQuantiBox[j].Value = acalc
      Else
        aQuantiBox[j].Value = 0
      Endif

    Else If $xOption[j] = "CopyValue" Then
      acalc = modReportVar.GetLastQuantiParamValue($xSource[j], $xExam[j], $encid)
      If acalc Then
        aQuantiBox[j].Value = acalc
      Else
        aQuantiBox[j].Value = 0
      Endif

    Else
      xflot = GetQuantiValues("Exam", $encid, $xitem[j], 0, 0, aQuantiBox[j].Value)
      If xflot Then
        acalc = xflot[0]
        If acalc Then
          aQuantiBox[j].Value = acalc
        Else
          aQuantiBox[j].Value = 0
        Endif
      Endif

    Endif

  Else
    If $xOpList[j] Then
      xopt = Split($xOpList[j], "|")
    Endif

    If $xOption[j] = "No Selection" Then
      If $xDefaultLst[j] Then
        If $xDefaultLst[j] = "__" Then
        Else
          aGenTextArea[j].Text = $xDefaultLst[j]
        Endif
      Endif
    Else If $xOption[j] = "RichText Area" Then
      If $xDefaultLst[j] Then
        If $xDefaultLst[j] = "__" Then
        Else
          aHTMLText[j].RichText = $xDefaultLst[j]
        Endif
      Endif
    Else If $xOption[j] = "Qualitative" Then
      If $xDefaultLst[j] Then
        If $xDefaultLst[j] = "__" Then
        Else
          aLineText[j].Text = $xDefaultLst[j]
        Endif
      Endif

    Else If $xOption[j] = "Single Selection" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Single Selection", $xitem[j])
        If sVal Then
          aComboBox[j].Text = sVal.Join(";")
        Endif
      Endif

    Else If $xOption[j] = "Dichotomous" Then

    Else If $xOption[j] = "Multiple Selection" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Multiple Selection", $xitem[j])
        If sVal Then
          aListBox[j].List = sVal
        Endif
      Endif

    Else If $xOption[j] = "Text Table" Then
      If xopt.Count Then
        ' xval = TableEntry(xopt, $xitem[j], "")
        ' If xval Then
        '   DisplayAgegrid(Split($xOpList[j], "|"), xval, aGridView[j])
        ' Endif
      Endif

    Else If $xOption[j] = "Clinical Scale" Then
      If xopt.Count Then
        sVal = SubChoose(xopt, "Clinical Scale", $xExam[j])
        If sVal Then
          aClinBox[j].Value = sVal[0]
          aTextArea[j].Text = sVal[1]
        Endif
      Endif

    Else If $xOption[j] = "Date Time" Then
      If $xExam[j] = "Expression" Then
        acalc = GetCalculateVariant($xSysCons[j], $encid)
        If IsDate(acalc) Then
          aDateBox[j].Value = CDate(acalc)
        Endif
      Else If $xExam[j] = "Structured" Then
        acalc = GetCalculateVariant($xSysCons[j], $encid)
        If IsDate(acalc) Then
          aDateBox[j].Value = CDate(acalc)
        Endif
      Else
        aDateBox[j].Value = Now()
      Endif

    Else If $xOption[j] = "BS Date" Then
      aDateBox[j].Value = Now()

    Else If $xOption[j] = "User Profile" Then
      sVal = MedicalSelectedValue(("Select Physisican User"), modBasic.$IPConsultUserList)
      If sVal Then
        aLineText[j].Text = sVal[1]
      Endif

    Else If $xOption[j] = "ImageValue" Then
      sPath = modImage.DisplayVisualData($sCategory, $idList[j], "", $xOption[j])
      sVal = CustomDraw(sPath)
      If sVal Then
        aButtonBox[j].Text = sVal[0]
      Endif

    Else If $xOption[j] = "Visual Input" Then
      sPath = modImage.DisplayVisualData($sCategory, $idList[j], "", $xOption[j])
      If sPath Then
        xval = CVisualValue(grdtreeview.Current.Text, sPath, aGenTextArea[j].Text)
        If xval Then
          aGenTextArea[j].Text = xval
        Endif
      Endif

    Else If $xOption[j] = "CopyValue" Then
      aGenTextArea[j].Text = modReportVar.GetLastQualiParamValue($xSource[j], $xExam[j], $encid)

    Else If $xOption[j] = "Calculated" Then
      If $xExam[j] = "Expression" Then
        aGenTextArea[j].Text = GetCalculateVariant($xSysCons[j], $encid)
      Else If $xExam[j] = "Structured" Then
        aGenTextArea[j].Text = GetCalculateVariant($xSysCons[j], $encid)
      Else
        xval = modAllExam.GetExamDefaultValue("Exam", $xExam[j])
        If xval Then
          aGenTextArea[j].Text = GetCalculateVariant(xval, $encid)
        Else
          aGenTextArea[j].Text = ""
        Endif
      Endif

    Endif

  Endif

End

Public Sub btnexecexam_Click()

End

Public Sub btnattexam_Click()

End

Private Function GetCalculateVariant(sFormula As String, encid As String) As Variant

  Dim i As Integer
  Dim xval As Variant

  If sFormula Then
    For i = 0 To $xCode.Count - 1
      If aGenTextArea[i] Then
        If (String.InStr(sFormula, $xCode[i]) > 0) Then                                   ''
          sFormula = Replace(sFormula, "{$Struct_Exam:" & $xCode[i] & "$}", aGenTextArea[i].Text)
        Endif
      Else If aDateBox[i] Then
        If (String.InStr(sFormula, $xCode[i]) > 0) Then                                   ''
          sFormula = Replace(sFormula, "{$Struct_Exam:" & $xCode[i] & "$}", Str(aDateBox[i].Value))
        Endif
      Else If aQuantiBox[i] Then
        If (String.InStr(sFormula, $xCode[i]) > 0) Then                                   ''
          sFormula = Replace(sFormula, "{$Struct_Exam:" & $xCode[i] & "$}", CStr(aQuantiBox[i].Value))
        Endif
      Endif
    Next
    If (String.InStr(sFormula, "$Calc[") > 0) Then
      sFormula = modReportVar.GetCalcValueVariant(sFormula, encid)
    Endif
    xval = sFormula

  Else
    xval = ""
  Endif

  Return xval

End

Private Function GetCalculateFloat(sFormula As String, encid As String) As Float

  Dim i As Integer
  Dim xval As Float

  If sFormula Then
    For i = 0 To $xCode.Count - 1
      If aGenTextArea[i] Then
        If (String.InStr(sFormula, $xCode[i]) > 0) Then                                   ''
          sFormula = Replace(sFormula, "{$Struct_Exam:" & $xCode[i] & "$}", aGenTextArea[i].Text)
        Endif
      Else If aDateBox[i] Then
        If (String.InStr(sFormula, $xCode[i]) > 0) Then                                   ''
          sFormula = Replace(sFormula, "{$Struct_Exam:" & $xCode[i] & "$}", Str(aDateBox[i].Value))
        Endif
      Else If aQuantiBox[i] Then
        If (String.InStr(sFormula, $xCode[i]) > 0) Then                                   ''
          sFormula = Replace(sFormula, "{$Struct_Exam:" & $xCode[i] & "$}", CStr(aQuantiBox[i].Value))
        Endif
      Endif
    Next
    If (String.InStr(sFormula, "$Calc[") > 0) Then
      sFormula = modReportVar.GetCalcValueFloat(sFormula, encid)
    Endif
    xval = CFloat(sFormula)

  Else
    xval = 0
  Endif

  Return xval

End
