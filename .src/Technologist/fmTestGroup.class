' Gambas class file

Private $rData As Result
Private $aMyFields As String[]

Public Sub _new()

  cmbmode.List = modNonMedical.FillCashModeCombo()
  cmbtype.List = ["Qualitative", "Quantitative"]

End

Public Sub btnBrOK_Click()

  Dim res As Result

  If Not cmbmethod.Text Then
    cmbmethod.Text = "Regular"
  Endif

  If cmbgroup.Text And If cmbtest.Text And If cmbtype.Text Then
    res = modDatabase.$myConn.Create("tblgrouptest")
    res["fldgroupname"] = Trim(cmbgroup.Text)
    res["fldtestid"] = cmbtest.Text
    res["fldtesttype"] = cmbtype.Text
    res["fldactive"] = cmbmethod.text
    res.Update()
    BlankAlltBox()
    FillGroupGrid()
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information saved", modBasic.$BalloonDelay))
  Endif

End

Private Sub BlankAlltBox()

  cmbtest.Text = ""
  cmbtype.Text = ""
  cmbmethod.Text = ""

End

Public Sub btnrefresh_Click()

  BlankAlltBox()
  FillGroupGrid()

End

' ' Public Sub cmbmode_KeyRelease()
' '
' '   modFillContainer.AutoFillComboBox(cmbmode)
' '   modFillContainer.RestrictComboToContent(cmbmode)
' '
' ' End

' ' Public Sub cmbtype_KeyRelease()
' '
' '   modFillContainer.AutoFillComboBox(cmbtype)
' '   modFillContainer.RestrictComboToContent(cmbtype)
' '
' ' End

' ' Public Sub cmbmethod_KeyRelease()
' '
' '   modFillContainer.AutoFillComboBox(cmbmethod)
' '   modFillContainer.RestrictComboToContent(cmbmethod)
' '
' ' End

Public Sub btngrouplist_Click()

  Dim xLst As String[]

  If cmbmode.Text Then
    If Not cmbgroup.Text Then
      xLst = modNonMedical.NonStockBillActiveItemArray("Diagnostic Tests", cmbmode.Text)
      If xLst.Count Then
        cmbgroup.Text = GridViewNew("Select Particulars", xLst, False)
      Endif
    Endif
  Endif

End

Public Sub btntestlist_Click()

  Dim xLst As String[]
  Dim xList As String[]

  If Not cmbtype.Text Then
    cmbtype.SetFocus
  Else
    xLst = modMedicine.FillLabTestCombo(cmbtype.Text)
    If xLst And If xLst.Count Then
      If Not cmbtest.Text Then

        cmbtest.Text = GridViewNew("Select Particulars", xLst, False)
        If cmbtest.Text Then
          xList = modFixLab.MethodsForLabTest(cmbtest.Text)
          If xList.Count Then
            cmbmethod.List = xList
            cmbmethod.Text = xList[0]
          Endif
        Endif
        cmbmethod.SetFocus

      Endif
    Endif
  Endif

End

Private Sub FillGroupGrid()

  Dim sql As String

  sql = "select fldid,fldtestid,fldtesttype,fldactive from tblgrouptest where fldgroupname=&1"
  $rData = modDatabase.$myConn.Exec(sql, cmbgroup.Text)
  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)

  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(200 * modBasic.$AppWidthRatio)
    .Columns[2].Width = CStr(100 * modBasic.$AppWidthRatio)
    .Columns[3].Width = CStr(100 * modBasic.$AppWidthRatio)

    .Columns[1].Text = "Test Name"
    .Columns[2].Text = "Type"
    .Columns[3].Text = "Method"
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  Data.Text = $rData[$aMyFields[Column]]

End

Public Sub btnBrCancel_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    modDatabase.$myConn.Delete("tblgrouptest", "fldid=&1", $rData["fldid"])
    Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information deleted", modBasic.$BalloonDelay))
    FillGroupGrid()
  Endif

End

Public Sub mnuchange_Click()

  Dim res As Result
  Dim xx As String

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    xx = InputCombo("Select Test Method", "Laboratory", modFixLab.MethodsForLabTest($rData["fldtestid"]), $rData["fldactive"], False)                             ''
    If xx Then
      res = modDatabase.$myConn.Edit("tblgrouptest", "fldid=&1", $rData["fldid"])
      res["fldactive"] = xx
      res.Update
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Information updated", modBasic.$BalloonDelay))
      FillGroupGrid()
    Endif
  Endif

End

Public Sub btnupload_Click()

  Dim hCSV As CsvFile
  Dim xcoll As Collection

  Dim res As Result
  Dim res1 As Result
  Dim xdelim As String

  If Trim(txtdelim.Text) Then
    xdelim = Trim(txtdelim.Text)
  Else
    xdelim = ";"
  Endif

  If Exist(txtcsv.Text) Then
    If Message.Question(("Are you sure ?"), ("No"), ("Yes")) = 2 Then

      hCSV = New CsvFile(txtcsv.Text, xdelim)
      While hCSV.Eof = False
        xcoll = hCSV.Read()
        If modNonMedical.GetBillingCategory(Trim(xcoll["fldgroupname"])) = "Diagnostic Tests" Then

          res1 = modDatabase.$myConn.Exec("select fldgroupname from tblgrouptest where fldgroupname=&1", Trim(xcoll["fldgroupname"]))
          If res1.Available Then
          Else
            res = modDatabase.$myConn.Create("tblgrouptest")
            res["fldgroupname"] = Trim(xcoll["fldgroupname"])
            res["fldtestid"] = Trim(xcoll["fldtestid"])
            res["fldtesttype"] = Trim(xcoll["fldtesttype"])
            res["fldactive"] = Trim(xcoll["fldactive"])
            res.Update()
          Endif

        Endif
      Wend
      hCSV.Close()

      FillGroupGrid()
      Me.Exec(Subst("Toastify({text: '&1', duration: &2}).showToast()", "Data Import completed", modBasic.$BalloonDelay))

    Endif
  Endif

End

Public Sub btnlistall_Click()

  Dim xPath As String

  Message.Info(("Generating Report ...."), ("OK"))
  xPath = modRepoMaster.ShowLabGroupingListReport()
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnlistleft_Click()

  Dim res As Result
  Dim xPath As String

  Message.Info(("Generating Report ...."), ("OK"))
  res = modDatabase.$myConn.Exec("select fldgroup,flditemname from tblservicecost where flditemtype=&1 and fldstatus=&2 and flditemname not in(select fldgroupname from tblgrouptest)", "Diagnostic Tests", "Active")
  xPath = modCHTMLReport.GeneralHTMLReport(res, ["Mode", "Particulars"], "PENDING TEST GROUPING", modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
  modControlSub.OpenHTMLPreview("", xPath, "ReportSize")

End

Public Sub btnclose_Click()

  Me.Close()

End
