' Gambas module file

' Private $ProgressBar1 As ProgressBar

'NOTE: ---------------------------- Stock Reports ---------------------------------------
Public Function ShowSpecStockReport($con As Connection, sType As String, dt As Date, sComp As String, sList As String[], sLocaType As String, sLocation As String, ShowNull As Boolean) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res As Result
  Dim dt2 As Date
  Dim xitem As String
  Dim i As Integer
  Dim xpast As Float

  Dim rs1 As Result
  Dim rs2 As Result
  Dim rs3 As Result
  Dim rs4 As Result
  Dim rs5 As Result
  Dim rs6 As Result
  Dim rs7 As Result
  Dim rs8 As Result

  Dim bulqty As Float
  Dim purqty As Float
  Dim rtnqty As Float
  Dim salqty As Float
  Dim sentqty As Float
  Dim recvqty As Float
  Dim adjqty As Float
  Dim curqty As Float
  Dim xval As Float

  Dim rex As Result
  Dim rss3 As Result
  Dim xcost As Float
  Dim sumcost As Float
  Dim sumsale As Float
  Dim RepoStr As String
  Dim xgo As Boolean

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  $BillingReport = New CReportHTML([("CODE"), ("PARTICULARS"), ("BATCH"), ("EXPIRY"), ("QTY"), ("CP"), ("TOTAL(CP)"), ("SP"), ("TOTAL(SP)")], "", "")
  $BillingReport.UserData.Add("CATEGORY: " & sType, "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dt, gb.MediumDate) & "   Comp: " & sComp, "PARAM2")
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)

  i = 0
  sumcost = 0
  sumsale = 0
  For Each xitem In sList

    res = $con.Exec("select fldstockno as col,fldstockid,fldsellpr,fldpast from tblentry where fldcategory=&1 and fldstockid=&2" & RepoStr, sType, xitem)
    dt2 = Now()
    For Each res
      xcost = 0
      xval = 0
      xpast = 0
      If res["fldpast"] Then
        xpast = res["fldpast"]
      Else
        xpast = 0
      Endif

      curqty = 0
      rs6 = $con.Exec("select SUM(fldqty) as col from tblentry where fldstockno=&1 and fldstockid=&2 and fldcategory=&3 and fldcomp like &4" & RepoStr, res["col"], res["fldstockid"], sType, sComp)
      If rs6.Available = True Then
        If rs6["col"] Then
          curqty = rs6["col"]
        Endif
      Endif

      purqty = 0
      rs1 = $con.Exec("select SUM(fldtotalqty) as qty from tblpurchase where fldtime>&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcategory=&5 and fldcomp like &6 and fldsav=&7" & RepoStr, modDate.EndSqlDate(dt), dt2, res["col"], res["fldstockid"], sType, sComp, False)
      If rs1.Available = True Then
        If rs1["qty"] Then
          purqty = rs1["qty"]
        Endif
      Endif

      rtnqty = 0
      rs8 = $con.Exec("select SUM(fldqty) as qty from tblstockreturn where fldtime>&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.EndSqlDate(dt), dt2, res["col"], res["fldstockid"], sComp, True)
      If rs8.Available = True Then
        If rs8["qty"] Then
          rtnqty = rs8["qty"]
        Endif
      Endif

      bulqty = 0
      rs2 = $con.Exec("select SUM(fldqtydisp) as qty from tblbulksale where fldtime>&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcategory=&5 and fldsave=&6 and fldcomp like &7" & RepoStr, modDate.EndSqlDate(dt), dt2, res["col"], res["fldstockid"], sType, True, sComp)
      If rs2.Available = True Then
        If rs2["qty"] Then
          bulqty = rs2["qty"]
        Endif
      Endif

      salqty = 0
      rs3 = $con.Exec("select SUM(flditemqty) as qty from tblpatbilling where fldtime>&1 and fldtime<=&2 and flditemno=&3 and flditemno in(select fldstockno from tblentry where fldstockid=&4) and flditemtype=&5 and fldcomp like &6 and fldsave=&7" & RepoStr, modDate.EndSqlDate(dt), dt2, res["col"], res["fldstockid"], sType, sComp, True)
      If rs3.Available = True Then
        If rs3["qty"] Then
          salqty = rs3["qty"]
        Endif
      Endif

      rex = $con.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
      If rex.Available Then
        For Each rex
          If rex["fldpatbilling"] = "tblpatbilling" Then
          Else
            rss3 = $con.Exec("select SUM(flditemqty) as qty from " & rex["fldpatbilling"] & " where fldtime>&1 and fldtime<=&2 and flditemno=&3 and flditemno in(select fldstockno from tblentry where fldstockid=&4) and flditemtype=&5 and fldcomp like &6 and fldsave=&7" & RepoStr, modDate.EndSqlDate(dt), dt2, res["col"], res["fldstockid"], sType, sComp, True)
            If rss3.Available = True Then
              If rss3["qty"] Then
                salqty = salqty + rss3["qty"]
              Endif
            Endif
          Endif
        Next
      Endif

      sentqty = 0
      rs4 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldoldstockno=&1 and fldstockid=&2 and fldtoentrytime>&3 and fldtoentrytime<=&4 and fldcategory=&5 and fldtosav=&6 and fldfromcomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.EndSqlDate(dt), dt2, sType, True, sComp)
      If rs4.Available Then
        If rs4["qty"] Then
          sentqty = rs4["qty"]
        Endif
      Endif

      recvqty = 0
      rs5 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldstockno=&1 and fldstockid=&2 and fldtoentrytime>&3 and fldtoentrytime<=&4 and fldcategory=&5 and fldtosav=&6 and fldtocomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.EndSqlDate(dt), dt2, sType, True, sComp)
      If rs5.Available Then
        If rs5["qty"] Then
          recvqty = rs5["qty"]
        Endif
      Endif

      adjqty = 0
      rs7 = $con.Exec("select sum(fldcompqty-fldcurrqty) as qty from tbladjustment where fldstockno=&1 and fldstockid=&2 and fldtime>&3 and fldtime<=&4 and fldcategory=&5 and fldsav=&6 and fldcomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.EndSqlDate(dt), dt2, sType, True, sComp)
      If rs7.Available Then
        If rs7["qty"] Then
          adjqty = rs7["qty"]
        Endif
      Endif

      xval = curqty - (purqty - rtnqty + recvqty) + (xpast + salqty + bulqty + sentqty + adjqty)
      If ShowNull = True Then
        xgo = True
      Else
        If xval = 0 Then
          xgo = False
        Else
          xgo = True
        Endif
      Endif
      If xgo = True Then
        xcost = modStock.GetAverageCostPriceByStockNo(res["col"], dt)
        sumcost = sumcost + xcost * xval
        sumsale = sumsale + res["fldsellpr"] * xval

        With asx
          .Add(res["col"])
          .Add(res["fldstockid"])
          .Add(modStock.GetBatchFromStockNo(res["col"]))
          .Add(modReportVar.GetDateTimeReport(modStock.GetExpiryFromStockNo(res["col"]), gb.MediumDate))
          .Add(modReportVar.GetLocaleNumberFormat(xval, -2))
          .Add(modReportVar.GetLocaleNumberFormat(xcost, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(xcost * xval, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldsellpr"], gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(res["fldsellpr"] * xval, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Next

    ' If MMain.$IsGUIApp = True Then
    '   $ProgressBar1.Value = (i + 1) / sList.Count
    '   Wait
    ' Endif
    i = i + 1
  Next

  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("<b>GRAND TOTAL</b>")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(sumcost, gb.Currency))
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(sumsale, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  $BillingReport.AddSummary("Cost Price Calculation: " & modBasic.$InvReportCost)
  Return $BillingReport.NewHTMLPath()

End

Public Function ShowTransectionReport($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sList As String[], sLocaType As String, sLocation As String, ShowNull As Boolean) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim res As Result
  Dim xitem As String
  Dim i As Integer
  Dim xpast As Float
  Dim sFormat As String
  Dim xavrg As Float

  'for last stock calculation
  Dim rsx1 As Result
  Dim rsx2 As Result
  Dim rsx3 As Result
  Dim rsx4 As Result
  Dim rsx5 As Result
  Dim rsx6 As Result
  Dim rsx7 As Result
  Dim rsx8 As Result

  Dim bulqx As Float
  Dim purqx As Float
  Dim rtnqx As Float
  Dim salqx As Float
  Dim sentqx As Float
  Dim recvqx As Float
  Dim adjqtx As Float
  Dim curqty As Float
  Dim xvax As Float

  'for transection during interval
  Dim rs1 As Result
  Dim pur As Float
  Dim rs8 As Result
  Dim rtn As Float
  Dim rs2 As Result
  Dim blk As Float
  Dim rs3 As Result
  Dim sale As Float
  Dim disp As Float
  Dim rs4 As Result
  Dim sent As Float
  Dim rs5 As Result
  Dim recv As Float
  Dim rs7 As Result
  Dim adj As Float

  Dim bulqty As Float
  Dim bulamt As Float
  Dim purqty As Float
  Dim puramt As Float
  Dim rtnqty As Float
  Dim rtnamt As Float
  Dim salqty As Float
  Dim salamt As Float
  Dim dispamt As Float
  Dim sentqty As Float
  Dim sentamt As Float
  Dim recvqty As Float
  Dim recvamt As Float
  Dim adjqty As Float
  Dim adjamt As Float

  Dim openqty As Float
  Dim dtx As Date
  Dim RepoStr As String

  Dim rex As Result
  Dim rxx3 As Result
  Dim rss3 As Result
  Dim xgo As Boolean

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  Select modBasic.$InvReportCost
    Case "Average", "Latest", "Fixed"
      sFormat = "Setting"
      $BillingReport = New CReportHTML([("CODE"), ("PARTICULARS"), ("BATCH"), ("OPEN(QTY)"), ("OPEN(CP)"), ("PUR(QTY)"), ("PUR(CP)"), ("RECV(QTY)"), ("RECV(CP)"), ("RETN(QTY)"), ("RETN(CP)"), ("SALE(QTY)"), ("SALE(CP)"), ("SALE(SP)"), ("USE(QTY)"), ("USE(CP)"), ("SENT(QTY)"), ("SENT(CP)"), ("ADJ(QTY)"), ("ADJ(CP)"), ("END(QTY)"), ("END(CP)")], "", "")
    Case Else
      sFormat = "Exact"
      $BillingReport = New CReportHTML([("CODE"), ("PARTICULARS"), ("BATCH"), ("OPEN(QTY)"), ("OPEN(CP)"), ("PUR(QTY)"), ("PUR(CP)"), ("RECV(QTY)"), ("RECV(CP)"), ("RETN(QTY)"), ("RETN(CP)"), ("SALE(QTY)"), ("SALE(CP)"), ("USE(QTY)"), ("USE(CP)"), ("SENT(QTY)"), ("SENT(CP)"), ("ADJ(QTY)"), ("ADJ(CP)"), ("END(QTY)"), ("END(CP)")], "", "")
  End Select
  ' $BillingReport = New CReportHTML([("CODE"), ("PARTICULARS"), ("BATCH"), ("OPEN(QTY)"), ("OPEN(AMT)"), ("PUR(QTY)"), ("PUR(AMT)"), ("RECV(QTY)"), ("RECV(AMT)"), ("SALE(QTY)"), ("SALE(AMT)"), ("USE(QTY)"), ("USE(AMT)"), ("SENT(QTY)"), ("SENT(AMT)"), ("ADJ(QTY)"), ("ADJ(AMT)"), ("END(QTY)"), ("EST-Cost")], "", "")
  $BillingReport.UserData.Add("CATEGORY: " & sType, "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dt1, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dt2, gb.MediumDate) & "   Comp: " & sComp, "PARAM2")
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)

  pur = 0
  rtn = 0
  sale = 0
  disp = 0
  blk = 0
  sent = 0
  recv = 0
  adj = 0
  dtx = Now()
  i = 0
  For Each xitem In sList
    res = $con.Exec("select fldstockno as col,fldstockid,fldbatch,fldpast from tblentry where fldcategory=&1 and fldstockid=&2" & RepoStr, sType, xitem)
    For Each res
      xavrg = 0
      If sFormat = "Setting" Then
        xavrg = modStock.GetAverageCostPriceByStockNo(res["col"], dt2)
      Endif

      xvax = 0
      xpast = 0
      If res["fldpast"] Then
        xpast = res["fldpast"]
      Else
        xpast = 0
      Endif

      'calculate current stock ---------------------------------------
      curqty = 0
      rsx6 = $con.Exec("select SUM(fldqty) as col from tblentry where fldstockno=&1 and fldstockid=&2 and fldcategory=&3 and fldcomp like &4" & RepoStr, res["col"], res["fldstockid"], sType, sComp)
      If rsx6.Available = True Then
        If rsx6["col"] Then
          curqty = rsx6["col"]
        Endif
      Endif

      ''for last stock calculation -------------------------
      purqx = 0
      rsx1 = $con.Exec("select SUM(fldtotalqty) as qty from tblpurchase where fldtime>&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcategory=&5 and fldcomp like &6 and fldsav=&7" & RepoStr, modDate.EndSqlDate(dt2), dtx, res["col"], res["fldstockid"], sType, sComp, False)
      If rsx1.Available = True Then
        If rsx1["qty"] Then
          purqx = rsx1["qty"]
        Endif
      Endif

      rtnqx = 0
      rsx8 = $con.Exec("select SUM(fldqty) as qty from tblstockreturn where fldtime>&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.EndSqlDate(dt2), dtx, res["col"], res["fldstockid"], sComp, True)
      If rsx8.Available = True Then
        If rsx8["qty"] Then
          rtnqx = rsx8["qty"]
        Endif
      Endif

      bulqx = 0
      rsx2 = $con.Exec("select SUM(fldqtydisp) as qty from tblbulksale where fldtime>&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcategory=&5 and fldsave=&6 and fldcomp like &7" & RepoStr, modDate.EndSqlDate(dt2), dtx, res["col"], res["fldstockid"], sType, True, sComp)
      If rsx2.Available = True Then
        If rsx2["qty"] Then
          bulqx = rsx2["qty"]
        Endif
      Endif

      salqx = 0
      rsx3 = $con.Exec("select SUM(flditemqty) as qty from tblpatbilling where fldtime>&1 and fldtime<=&2 and flditemno=&3 and flditemno in(select fldstockno from tblentry where fldstockid=&4) and flditemtype=&5 and fldcomp like &6 and fldsave=&7" & RepoStr, modDate.EndSqlDate(dt2), dtx, res["col"], res["fldstockid"], sType, sComp, True)
      If rsx3.Available = True Then
        If rsx3["qty"] Then
          salqx = rsx3["qty"]
        Endif
      Endif

      rex = $con.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
      If rex.Available Then
        For Each rex
          If rex["fldpatbilling"] = "tblpatbilling" Then
          Else
            rxx3 = $con.Exec("select SUM(flditemqty) as qty from " & rex["fldpatbilling"] & " where fldtime>&1 and fldtime<=&2 and flditemno=&3 and flditemno in(select fldstockno from tblentry where fldstockid=&4) and flditemtype=&5 and fldcomp like &6 and fldsave=&7" & RepoStr, modDate.EndSqlDate(dt2), dtx, res["col"], res["fldstockid"], sType, sComp, True)
            If rxx3.Available = True Then
              If rxx3["qty"] Then
                salqx = salqx + rxx3["qty"]
              Endif
            Endif
          Endif
        Next
      Endif

      sentqx = 0
      rsx4 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldoldstockno=&1 and fldstockid=&2 and fldtoentrytime>&3 and fldtoentrytime<=&4 and fldcategory=&5 and fldtosav=&6 and fldfromcomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.EndSqlDate(dt2), dtx, sType, True, sComp)
      If rsx4.Available Then
        If rsx4["qty"] Then
          sentqx = rsx4["qty"]
        Endif
      Endif

      recvqx = 0
      rsx5 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldstockno=&1 and fldstockid=&2 and fldtoentrytime>&3 and fldtoentrytime<=&4 and fldcategory=&5 and fldtosav=&6 and fldtocomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.EndSqlDate(dt2), dtx, sType, True, sComp)
      If rsx5.Available Then
        If rsx5["qty"] Then
          recvqx = rsx5["qty"]
        Endif
      Endif

      adjqtx = 0
      rsx7 = $con.Exec("select sum(fldcompqty-fldcurrqty) as qty from tbladjustment where fldstockno=&1 and fldstockid=&2 and fldtime>&3 and fldtime<=&4 and fldcategory=&5 and fldsav=&6 and fldcomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.EndSqlDate(dt2), dtx, sType, True, sComp)
      If rsx7.Available Then
        If rsx7["qty"] Then
          adjqtx = rsx7["qty"]
        Endif
      Endif

      'for transection during interval ------------------------------------------
      purqty = 0
      puramt = 0
      rs1 = $con.Exec("select SUM(fldtotalqty) as qty,SUM(fldtotalcost) as col from tblpurchase where fldtime>=&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcategory=&5 and fldcomp like &6 and fldsav=&7" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), res["col"], res["fldstockid"], sType, sComp, False)
      If rs1.Available = True Then
        If rs1["qty"] Then
          purqty = rs1["qty"]
        Endif
        If rs1["col"] Then
          puramt = rs1["col"]
        Endif
      Endif

      rtnqty = 0
      rtnamt = 0
      rs8 = $con.Exec("select SUM(fldqty) as qty,SUM(fldcost*fldqty) as col from tblstockreturn where fldtime>=&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), res["col"], res["fldstockid"], sComp, True)
      If rs8.Available = True Then
        If rs8["qty"] Then
          rtnqty = rs8["qty"]
        Endif
        If sFormat = "Setting" Then
          rtnamt = rtnqty * xavrg
        Else
          If rs8["col"] Then
            rtnamt = rs8["col"]
          Endif
        Endif
      Endif

      bulqty = 0
      bulamt = 0
      rs2 = $con.Exec("select SUM(fldqtydisp) as qty,SUM(fldnetcost*fldqtydisp) as col from tblbulksale where fldtime>=&1 and fldtime<=&2 and fldstockno=&3 and fldstockid=&4 and fldcategory=&5 and fldsave=&6 and fldcomp like &7" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), res["col"], res["fldstockid"], sType, True, sComp)
      If rs2.Available = True Then
        If rs2["qty"] Then
          bulqty = rs2["qty"]
        Endif
        If sFormat = "Setting" Then
          bulamt = bulqty * xavrg
        Else
          If rs2["col"] Then
            bulamt = rs2["col"]
          Endif
        Endif
      Endif

      salqty = 0
      salamt = 0
      dispamt = 0
      rs3 = $con.Exec("select SUM(flditemqty) as qty,SUM(fldditemamt) as col from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemno=&3 and flditemno in(select fldstockno from tblentry where fldstockid=&4) and flditemtype=&5 and fldcomp like &6 and fldsave=&7" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), res["col"], res["fldstockid"], sType, sComp, True)
      If rs3.Available = True Then
        If rs3["qty"] Then
          salqty = rs3["qty"]
        Endif
        If sFormat = "Setting" Then
          salamt = salqty * xavrg
          If rs3["col"] Then
            dispamt = rs3["col"]
          Endif
        Else
          If rs3["col"] Then
            salamt = rs3["col"]
          Endif
        Endif
      Endif

      rex = $con.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
      If rex.Available Then
        For Each rex
          If rex["fldpatbilling"] = "tblpatbilling" Then
          Else
            rss3 = $con.Exec("select SUM(flditemqty) as qty,SUM(fldditemamt) as col from " & rex["fldpatbilling"] & " where fldtime>=&1 and fldtime<=&2 and flditemno=&3 and flditemno in(select fldstockno from tblentry where fldstockid=&4) and flditemtype=&5 and fldcomp like &6 and fldsave=&7" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), res["col"], res["fldstockid"], sType, sComp, True)
            If rss3.Available = True Then
              If rss3["qty"] Then
                salqty = salqty + rss3["qty"]
              Endif
              If sFormat = "Setting" Then
                salamt = salamt + (salqty * xavrg)
                If rss3["col"] Then
                  dispamt = dispamt + rss3["col"]
                Endif
              Else
                If rss3["col"] Then
                  salamt = salamt + rss3["col"]
                Endif
              Endif
            Endif
          Endif
        Next
      Endif

      sentqty = 0
      sentamt = 0
      rs4 = $con.Exec("select SUM(fldqty) as qty,SUM(fldqty*fldnetcost) as totl from tbltransfer where fldoldstockno=&1 and fldstockid=&2 and fldtoentrytime>=&3 and fldtoentrytime<=&4 and fldcategory=&5 and fldtosav=&6 and fldfromcomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sType, True, sComp)
      If rs4.Available Then
        If rs4["qty"] Then
          sentqty = rs4["qty"]
        Endif
        If sFormat = "Setting" Then
          sentamt = sentqty * xavrg
        Else
          If rs4["totl"] Then
            sentamt = rs4["totl"]
          Endif
        Endif
      Endif

      recvqty = 0
      recvamt = 0
      rs5 = $con.Exec("select SUM(fldqty) as qty,SUM(fldqty*fldnetcost) as totl from tbltransfer where fldstockno=&1 and fldstockid=&2 and fldtoentrytime>=&3 and fldtoentrytime<=&4 and fldcategory=&5 and fldtosav=&6 and fldtocomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sType, True, sComp)
      If rs5.Available Then
        If rs5["qty"] Then
          recvqty = rs5["qty"]
        Endif
        If sFormat = "Setting" Then
          recvamt = recvqty * xavrg
        Else
          If rs5["totl"] Then
            recvamt = rs5["totl"]
          Endif
        Endif
      Endif

      adjqty = 0
      adjamt = 0
      rs7 = $con.Exec("select sum(fldcompqty-fldcurrqty) as qty,SUM((fldcompqty-fldcurrqty)*fldnetcost) as totl from tbladjustment where fldstockno=&1 and fldstockid=&2 and fldtime>=&3 and fldtime<=&4 and fldcategory=&5 and fldsav=&6 and fldcomp like &7" & RepoStr, res["col"], res["fldstockid"], modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sType, True, sComp)
      If rs7.Available Then
        If rs7["qty"] Then
          adjqty = rs7["qty"]
        Endif
        If sFormat = "Setting" Then
          adjamt = adjqty * xavrg
        Else
          If rs7["totl"] Then
            adjamt = rs7["totl"]
          Endif
        Endif
      Endif

      xvax = curqty - (purqx - rtnqx + recvqx) + (xpast + salqx + bulqx + sentqx + adjqtx)
      openqty = xvax - (purqty - rtnqty + recvqty) + (xpast + salqty + bulqty + sentqty + adjqty)

      pur = pur + puramt
      rtn = rtn + rtnamt
      sale = sale + salamt
      disp = disp + dispamt
      blk = blk + bulamt
      sent = sent + sentamt
      recv = recv + recvamt
      adj = adj + adjamt

      If ShowNull = True Then
        xgo = True
      Else
        If purqty = 0 And If rtnqty = 0 And If salqty = 0 And If bulqty = 0 And If sentqty = 0 And If recvqty = 0 And If adjqty = 0 And If openqty = 0 And If xvax = 0 Then
          xgo = False
        Else
          xgo = True
        Endif
      Endif
      If xgo = True Then
        With asx
          .Add(res["col"])
          .Add(res["fldstockid"])
          .Add(res["fldbatch"])
          .Add(modReportVar.GetLocaleNumberFormat(openqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(openqty * xavrg, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(purqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(puramt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(recvqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(recvamt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(rtnqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(rtnamt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(salqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(salamt, gb.Currency))
          If sFormat = "Setting" Then
            .Add(modReportVar.GetLocaleNumberFormat(dispamt, gb.Currency))
          Endif
          .Add(modReportVar.GetLocaleNumberFormat(bulqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(bulamt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(sentqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(sentamt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(adjqty, -2))
          .Add(modReportVar.GetLocaleNumberFormat(adjamt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(xvax, -2))
          .Add(modReportVar.GetLocaleNumberFormat(xvax * xavrg, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
    Next

    ' If MMain.$IsGUIApp = True Then
    '   $ProgressBar1.Value = (i + 1) / sList.Count
    '   Wait
    ' Endif
    i = i + 1
  Next

  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    If sFormat = "Setting" Then
      .Add("")
    Endif
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  With asx
    .Add("")
    .Add("GRAND TOTAL")
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(pur, gb.Currency))
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(recv, gb.Currency))
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(rtn, gb.Currency))
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(sale, gb.Currency))
    If sFormat = "Setting" Then
      .Add(modReportVar.GetLocaleNumberFormat(disp, gb.Currency))
    Endif
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(blk, gb.Currency))
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(sent, gb.Currency))
    .Add("")
    .Add(modReportVar.GetLocaleNumberFormat(adj, gb.Currency))
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  $BillingReport.AddSummary("Cost Price Calculation: " & modBasic.$InvReportCost)
  Return $BillingReport.NewHTMLPath()

End

''item summary
Public Function ShowSpecStockReportItemwise($con As Connection, sType As String, dt As Date, sComp As String, sList As String[], sLocaType As String, sLocation As String, ShowNull As Boolean) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim i As Integer
  Dim xcost As Float

  Dim xval As Float
  Dim sItem As String
  Dim xtot As Float
  Dim p As Integer
  Dim xgo As Boolean

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  ' $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"),  ("QTY"), ("PUR-RATE"),("CUR-VALUE")], "", "")
  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("AVG CP*"), ("QTY")], "", "")
  $BillingReport.UserData.Add("CATEGORY: " & sType, "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dt, gb.MediumDate) & "   Comp: " & sComp, "PARAM2")

  i = 1
  p = 1
  xtot = 0
  For Each sItem In sList
    xcost = 0
    xval = 0
    xval = modInventory.ShowSpecStockReportItemQTY($con, sType, dt, sComp, sItem, sLocaType, sLocation)
    xcost = modStock.GetAverageCostPriceByStockName(sItem, dt)
    ' xtot = xtot + xcost * xval
    If ShowNull = True Then
      xgo = True
    Else
      If xval = 0 Then
        xgo = False
      Else
        xgo = True
      Endif
    Endif
    If xgo = True Then
      With asx
        .Add(modReportVar.GetLocaleNumberFormat(i, 0))
        .Add(sItem)
        .Add(modReportVar.GetLocaleNumberFormat(xcost, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xval, -2))
        ' .Add(modReportVar.GetLocaleNumberFormat(xcost * xval, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Endif

    ' If MMain.$IsGUIApp = True Then
    '   $ProgressBar1.Value = p / sList.Count
    '   Wait
    ' Endif
    p = p + 1
  Next

  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
    ' .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  $BillingReport.AddSummary("Cost Price Calculation: " & modBasic.$InvReportCost)
  $BillingReport.AddSummary("* The Avg Rate is not the actual cost price but the average of all batches of the particular medicine.")

  Return $BillingReport.NewHTMLPath()

End

Public Function ShowTransectionReportItemwise($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sList As String[], sLocaType As String, sLocation As String, ShowNull As Boolean) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim xvax As Float

  Dim bulqty As Float
  Dim purqty As Float
  Dim rtnqty As Float
  Dim salqty As Float
  Dim sentqty As Float
  Dim recvqty As Float
  Dim adjqty As Float

  Dim openqty As Float
  Dim dtx As Date
  Dim i As Integer

  Dim sItem As String
  Dim p As Integer
  Dim xgo As Boolean

  ' If MMain.$IsGUIApp = True Then
  '   $ProgressBar1 = modAppSupport.FindWorkProgressBar(modHelpVariable.$LogInCategory)
  '   $ProgressBar1.Tag = "Const"
  ' Endif

  $BillingReport = New CReportHTML([("SNO"), ("PARTICULARS"), ("OPENING"), ("PURCHASE"), ("RECEIVED"), ("RETURNED"), ("SALES"), ("CONSUMED"), ("SENT"), ("ADJUST"), ("ENDING")], "", "")
  $BillingReport.UserData.Add("CATEGORY: " & sType, "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dt1, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dt2, gb.MediumDate) & "   Comp: " & sComp, "PARAM2")

  i = 1
  p = 1
  dtx = Now()
  For Each sItem In sList
    xvax = 0
    xvax = modInventory.ShowSpecStockReportItemQTY($con, sType, dt2, sComp, sItem, sLocaType, sLocation)
    purqty = modInventory.GetTransactionPurchase($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)
    rtnqty = modInventory.GetTransactionReturn($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)
    bulqty = modInventory.GetTransactionBulkSale($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)
    salqty = modInventory.GetTransactionBilling($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)
    sentqty = modInventory.GetTransactionTransferFrom($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)
    recvqty = modInventory.GetTransactionTransferTo($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)
    adjqty = modInventory.GetTransactionAdjustment($con, sType, dt1, dt2, sComp, sItem, sLocaType, sLocation)

    openqty = xvax - (purqty - rtnqty + recvqty) + (salqty + bulqty + sentqty + adjqty)
    If ShowNull = True Then
      xgo = True
    Else
      If openqty = 0 And If rtnqty = 0 And If purqty = 0 And If recvqty = 0 And If salqty = 0 And If bulqty = 0 And If sentqty = 0 And If adjqty = 0 And If xvax = 0 Then
        xgo = False
      Else
        xgo = True
      Endif
    Endif
    If xgo = True Then
      With asx
        .Add(modReportVar.GetLocaleNumberFormat(i, 0))
        .Add(sItem)
        .Add(modReportVar.GetLocaleNumberFormat(openqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(purqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(recvqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(rtnqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(salqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(bulqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(sentqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(adjqty, -2))
        .Add(modReportVar.GetLocaleNumberFormat(xvax, -2))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Endif

    ' If MMain.$IsGUIApp = True Then
    '   $ProgressBar1.Value = p / sList.Count
    '   Wait
    ' Endif
    p = p + 1
  Next

  Return $BillingReport.NewHTMLPath()

End

''=========================================
''Opening QTY
Public Function ShowSpecStockReportItemQTY($con As Connection, sType As String, dt As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim dtx As Date
  Dim rs1 As Result
  Dim rs2 As Result
  Dim rs3 As Result
  Dim rs4 As Result
  Dim rs5 As Result
  Dim rs6 As Result
  Dim rs7 As Result
  Dim rs8 As Result

  Dim bulqty As Float
  Dim purqty As Float
  Dim rtnqty As Float
  Dim salqty As Float
  Dim sentqty As Float
  Dim recvqty As Float
  Dim adjqty As Float
  Dim curqty As Float
  Dim xval As Float
  Dim RepoStr As String

  Dim xpast As Float
  Dim rex As Result
  Dim rss3 As Result

  dtx = Now()
  xval = 0
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)

  curqty = 0
  xpast = 0
  rs6 = $con.Exec("select SUM(fldqty) as col,sum(fldpast) as fldpast from tblentry where fldstockid=&1 and fldcategory=&2 and fldcomp like &3" & RepoStr, sItem, sType, sComp)
  If rs6.Available = True Then
    If rs6["col"] Then
      curqty = rs6["col"]
    Endif
    If rs6["fldpast"] Then
      xpast = rs6["fldpast"]
    Else
      xpast = 0
    Endif
  Endif

  purqty = 0
  rs1 = $con.Exec("select SUM(fldtotalqty) as qty from tblpurchase where fldtime>&1 and fldtime<=&2 and fldstockid=&3 and fldcategory=&4 and fldcomp like &5 and fldsav=&6" & RepoStr, modDate.EndSqlDate(dt), dtx, sItem, sType, sComp, False)
  If rs1.Available = True Then
    If rs1["qty"] Then
      purqty = rs1["qty"]
    Endif
  Endif

  rtnqty = 0
  rs8 = $con.Exec("select SUM(fldqty) as qty from tblstockreturn where fldtime>&1 and fldtime<=&2 and fldstockid=&3 and fldcomp like &4 and fldsave=&5" & RepoStr, modDate.EndSqlDate(dt), dtx, sItem, sComp, True)
  If rs8.Available = True Then
    If rs8["qty"] Then
      rtnqty = rs8["qty"]
    Endif
  Endif

  bulqty = 0
  rs2 = $con.Exec("select SUM(fldqtydisp) as qty from tblbulksale where fldtime>&1 and fldtime<=&2 and fldstockid=&3 and fldcategory=&4 and fldsave=&5 and fldcomp like &6" & RepoStr, modDate.EndSqlDate(dt), dtx, sItem, sType, True, sComp)
  If rs2.Available = True Then
    If rs2["qty"] Then
      bulqty = rs2["qty"]
    Endif
  Endif

  salqty = 0
  rs3 = $con.Exec("select SUM(flditemqty) as qty from tblpatbilling where fldtime>&1 and fldtime<=&2 and flditemno in(select fldstockno from tblentry where fldstockid=&3) and flditemtype=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.EndSqlDate(dt), dtx, sItem, sType, sComp, True)
  If rs3.Available = True Then
    If rs3["qty"] Then
      salqty = rs3["qty"]
    Endif
  Endif

  rex = $con.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
  If rex.Available Then
    For Each rex
      If rex["fldpatbilling"] = "tblpatbilling" Then
      Else
        rss3 = $con.Exec("select SUM(flditemqty) as qty from " & rex["fldpatbilling"] & " where fldtime>&1 and fldtime<=&2 and flditemno in(select fldstockno from tblentry where fldstockid=&3) and flditemtype=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.EndSqlDate(dt), dtx, sItem, sType, sComp, True)
        If rss3.Available = True Then
          If rss3["qty"] Then
            salqty = salqty + rss3["qty"]
          Endif
        Endif
      Endif
    Next
  Endif

  sentqty = 0
  rs4 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldstockid=&1 and fldtoentrytime>&2 and fldtoentrytime<=&3 and fldcategory=&4 and fldtosav=&5 and fldfromcomp like &6" & RepoStr, sItem, modDate.EndSqlDate(dt), dtx, sType, True, sComp)
  If rs4.Available Then
    If rs4["qty"] Then
      sentqty = rs4["qty"]
    Endif
  Endif

  recvqty = 0
  rs5 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldstockid=&1 and fldtoentrytime>&2 and fldtoentrytime<=&3 and fldcategory=&4 and fldtosav=&5 and fldtocomp like &6" & RepoStr, sItem, modDate.EndSqlDate(dt), dtx, sType, True, sComp)
  If rs5.Available Then
    If rs5["qty"] Then
      recvqty = rs5["qty"]
    Endif
  Endif

  adjqty = 0
  rs7 = $con.Exec("select sum(fldcompqty-fldcurrqty) as qty from tbladjustment where fldstockid=&1 and fldtime>&2 and fldtime<=&3 and fldcategory=&4 and fldsav=&5 and fldcomp like &6" & RepoStr, sItem, modDate.EndSqlDate(dt), dtx, sType, True, sComp)
  If rs7.Available Then
    If rs7["qty"] Then
      adjqty = rs7["qty"]
    Endif
  Endif

  xval = curqty - (purqty - rtnqty + recvqty) + (xpast + salqty + bulqty + sentqty + adjqty)
  Return xval

End

''================= Transaction ==================
Public Function GetTransactionPurchase($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rs1 As Result
  Dim purqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  rs1 = $con.Exec("select SUM(fldtotalqty) as qty from tblpurchase where fldtime>=&1 and fldtime<=&2 and fldstockid=&3 and fldcategory=&4 and fldcomp like &5 and fldsav=&6" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sItem, sType, sComp, False)
  purqty = 0
  If rs1.Available = True Then
    If rs1["qty"] Then
      purqty = rs1["qty"]
    Endif
  Endif
  Return purqty

End

Public Function GetTransactionReturn($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rs1 As Result
  Dim purqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  rs1 = $con.Exec("select SUM(fldqty) as qty from tblstockreturn where fldtime>=&1 and fldtime<=&2 and fldstockid=&3 and fldcomp like &4 and fldsave=&5" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sItem, sComp, True)
  purqty = 0
  If rs1.Available = True Then
    If rs1["qty"] Then
      purqty = rs1["qty"]
    Endif
  Endif
  Return purqty

End

Public Function GetTransactionBulkSale($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rs2 As Result
  Dim bulqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  rs2 = $con.Exec("select SUM(fldqtydisp) as qty from tblbulksale where fldtime>=&1 and fldtime<=&2 and fldstockid=&3 and fldcategory=&4 and fldsave=&5 and fldcomp like &6" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sItem, sType, True, sComp)
  bulqty = 0
  If rs2.Available = True Then
    If rs2["qty"] Then
      bulqty = rs2["qty"]
    Endif
  Endif
  Return bulqty

End

Public Function GetTransactionBilling($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rex As Result
  Dim rs2 As Result
  Dim rs3 As Result
  Dim salqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  salqty = 0

  rs3 = $con.Exec("select SUM(flditemqty) as qty from tblpatbilling where fldtime>=&1 and fldtime<=&2 and flditemno in(select fldstockno from tblentry where fldstockid=&3) and flditemtype=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sItem, sType, sComp, True)
  If rs3.Available = True Then
    If rs3["qty"] Then
      salqty = salqty + rs3["qty"]
    Endif
  Endif

  rex = $con.Exec("select fldpatbilling from tblfisclosing where (fldstate=&1 or fldstate IS NULL)", "Active")
  If rex.Available Then
    For Each rex
      If rex["fldpatbilling"] = "tblpatbilling" Then
      Else

        rs2 = $con.Exec("select SUM(flditemqty) as qty from " & rex["fldpatbilling"] & " where fldtime>=&1 and fldtime<=&2 and flditemno in(select fldstockno from tblentry where fldstockid=&3) and flditemtype=&4 and fldcomp like &5 and fldsave=&6" & RepoStr, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sItem, sType, sComp, True)
        If rs2.Available = True Then
          If rs2["qty"] Then
            salqty = salqty + rs2["qty"]
          Endif
        Endif

      Endif
    Next
  Endif
  Return salqty

End

Public Function GetTransactionTransferFrom($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rs4 As Result
  Dim sentqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  rs4 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldstockid=&1 and fldtoentrytime>=&2 and fldtoentrytime<=&3 and fldcategory=&4 and fldtosav=&5 and fldfromcomp like &6" & RepoStr, sItem, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sType, True, sComp)
  sentqty = 0
  If rs4.Available Then
    If rs4["qty"] Then
      sentqty = rs4["qty"]
    Endif
  Endif
  Return sentqty

End

Public Function GetTransactionTransferTo($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rs5 As Result
  Dim recvqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  rs5 = $con.Exec("select SUM(fldqty) as qty from tbltransfer where fldstockid=&1 and fldtoentrytime>=&2 and fldtoentrytime<=&3 and fldcategory=&4 and fldtosav=&5 and fldtocomp like &6" & RepoStr, sItem, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sType, True, sComp)
  recvqty = 0
  If rs5.Available Then
    If rs5["qty"] Then
      recvqty = rs5["qty"]
    Endif
  Endif
  Return recvqty

End

Public Function GetTransactionAdjustment($con As Connection, sType As String, dt1 As Date, dt2 As Date, sComp As String, sItem As String, sLocaType As String, sLocation As String) As Float

  Dim rs7 As Result
  Dim adjqty As Float
  Dim RepoStr As String

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  rs7 = $con.Exec("select sum(fldcompqty-fldcurrqty) as qty from tbladjustment where fldstockid=&1 and fldtime>=&2 and fldtime<=&3 and fldcategory=&4 and fldsav=&5 and fldcomp like &6" & RepoStr, sItem, modDate.StartSqlDate(dt1), modDate.EndSqlDate(dt2), sType, True, sComp)
  adjqty = 0
  If rs7.Available Then
    If rs7["qty"] Then
      adjqty = rs7["qty"]
    Endif
  Endif
  Return adjqty

End
