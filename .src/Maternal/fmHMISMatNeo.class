' Gambas class file

Public Sub _new()

  Me.AddHeader("<meta name='viewport' content='width=device-width, initial-scale=1'>")
  Me.AddHeader("<link rel=\"stylesheet\" href=\"" & modHelpVariable.$AppCssPath & "\">")
  Me.AddJavascriptFile("js/webcontrols.js")
  Me.AddJavascriptFile("js/jquery.min.js")
  Me.AddJavascriptFile("js/print.min.js")
  Me.AddJavascriptFile("js/toastify.js")
  Me.AddJavascriptFile("js/Chart.js")
  Me.AddJavascriptFile("js/tribute.js")
  Me.AddJavascriptFile("js/download.js")
  Me.AddJavascriptFile("js/select2.min.js")

  Me.AddJavascriptFile("js/sketchpad.js")
  ' Me.AddJavascriptFile("js/qrcodelib.js")
  ' Me.AddJavascriptFile("js/webcodecamjs.js")
  ''slow js
  Me.AddJavascriptFile("js/html2pdf.bundle.min.js")
  Me.AddJavascriptFile("js/xlsx.full.min.js")
  Me.Font = MMain.$AppFontName
  WebImage1.Image = modHelpVariable.$headerImage
  WebForm.Debug = MMain.$isdebug
  mnucuruserid.Text = modBasic.$lbluser

  modBasic.ShowUserPrivilege()
  If modBasic.$SuperUser = True Then
  Else
    mnuadmin.Visible = False
    mnuexamall.Visible = False
    mnuservice.Visible = False
    mnuvisitreport.Visible = False
    mnuconsult.Visible = False
    mnudepartsetting.Visible = False
    mnugensett.Visible = False
  Endif

End

Public Sub WebForm_Open()

  modHelpVariable.SetApplicationGUI()
  MMain.GetApplVersionType()

  ''cashier
  modBasic.LoadCashierBillingSettings()
  modBasic.LoadInvoicingSetting()
  modBasic.LoadRegistrationSetting()
  ' modBasic.RegistrationFormTime()
  modBasic.LoadBillingLists()
  modBasic.LoadAutoBillingOptions()
  ' modBasic.SetAccountRules()
  modBasic.LoadClaimParametes()
  modBasic.LoadSSFClaim()
  modBasic.RemoteLogInSetting()

  modLinkDB.LoadExtraDBSettings()
  modBasic.$IPDDepartmentsAll = modGeneral.GetDepartmentWithBedList()

  ''clinician
  ' modBasic.InventorySettings()
  modBasic.MedicineDoseSetting()
  modBasic.LoadClinicalExtras()

  modBasic.GlobalClinicSettings()
  modBasic.ClinicalCommentSett()
  modBasic.DisplayPatientSettings()
  modBasic.SetClinicalProcedures()
  modBasic.LoadClinicalChartSetting()
  modBasic.InventorySettings()
  modBasic.MedicineDoseSetting()
  modBasic.LoadClinicalLists()
  modBasic.LoadClinicalExtras()

  modBasic.InventoryUserAccessList()
  modBasic.ChartSettingsAll()
  modBasic.DispLabelSettings()
  modBasic.LoadLargeLists()

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$SuperUser = True Then
      modBasic.$HospCode = ""
      lblocation.Visible = False
      mnurecording.Visible = True

    Else
      If MMain.$AppLogCategory = "Admin" Then
        modBasic.$HospCode = ""
        lblocation.Visible = False
        mnurecording.Visible = False
      Else
        modDataRepo.$RepositoryMode = MMain.$AppLogCategory
        modBasic.$HospCode = MMain.$AppLogString
        If modDataRepo.$RepositoryMode = "Hospital" Then
          lblocation.Text = "HF : " & modBasic.$HospCode
        Else
          lblocation.Text = modDataRepo.$RepositoryMode & " : " & modBasic.$HospCode
        Endif
        If MMain.$AppLogCategory = "Hospital" Then
          mnudashboard.Visible = False
        Else
          mnurecording.Visible = False
        Endif
      Endif

    Endif
  Endif

End

Public Sub mnuexit_Click()

  Session.Abandon()
  WebForm.Current = fmLogIn
  Me.Close()

End

Public Sub WebForm_Close()

  modDevice.CamOnClose()
  modDatabase.CloseDatabase()
  modExternal.DeleteFolderRecursive("/tmp" &/ modHelpVariable.AppName &/ "docs" &/ modHelpVariable.$SessionCode)
  modExternal.DeleteFolderRecursive(modHelpVariable.AppCacheDir)

End

Public Sub mnunewextra_Click()

  Dim xLink As String = "https://bitnepal.safiur.com.np/healthybit/help/dmnr.pdf"

  Me.Exec("window.open('" & xLink & "'); ")

End

Public Sub mnuclearcache_Click()

  modGeneralMain.CLearUserCollection()

End

Public Sub mnubugrepo_Click()

  modGeneralMain.SendBugReport(modBasic.$lbluser)

End

' Public Sub WebContainer2_Render()
'
'   Print "<iframe src='" & modBasic.$FormLeftURL & "' width='100%' height='100%'></iframe>";
'
' End
'
' Public Sub WebContainer3_Render()
'
'   Print "<iframe src='" & modBasic.$FormRightURL & "' width='100%' height='100%'></iframe>";
'
' End

Public Sub btnquit_Click()

  Session.Abandon()
  WebForm.Current = fmLogIn
  Me.Close()

End

Public Sub btnfullscreen_Click()

  If btnfullscreen.Image = "icon:/small/zoom-normal" Then
    btnfullscreen.Image = "icon:/small/zoom-fit"
    Me.Exec("openFullscreen()")

  Else If btnfullscreen.Image = "icon:/small/zoom-fit" Then
    btnfullscreen.Image = "icon:/small/zoom-normal"
    Me.Exec("closeFullscreen()")

  Endif

End

''================ Setting =================
Public Sub mnuchartsett_Click()

  fmChartSetting.ShowModal

End

Public Sub mnureposetting_Click()

  fmReportSetting.ShowModal

End

Public Sub mnuappsetting_Click()

  fmAppSetting.ShowModal

End

''==================== Main Form ======================
Public Sub mnuPatdata_Click()

  Dim hForm As FmMatNeoExam

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmMatNeoExam("", Workspace1)

End

Public Sub mnuregistration_Click()

  Dim xx As String

  xx = RegistHMIS()

End

Public Sub mnuaddimage_Click()

  Dim hForm As FmPatImage

  hForm = New FmPatImage("IMAGE", "", "")
  hForm.ShowModal

End

Public Sub mnuadddicom_Click()

  Dim hForm As FmPatImage

  hForm = New FmPatImage("DICOM", "", "")
  hForm.ShowModal

End

Public Sub mnuaddvideo_Click()

  Dim hForm As FmPatVideo

  hForm = New FmPatVideo("VIDEO", "", "")
  hForm.ShowModal

End

Public Sub mnudashboard_Click()

  Dim hForm As FmMaternalMap

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmMaternalMap(Workspace1)

End

Public Sub mnuhmis_Click()

  Dim hForm As FmHMISRepo

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmHMISRepo(Workspace1)

End

Public Sub mnuexam_Click()

  Dim hForm As FmCustExamReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmCustExamReport(Workspace1)

End

Public Sub mnuvisitreport_Click()

  Dim hForm As FmPatAdmit

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatAdmit(Workspace1)

End

Public Sub mnuconfinement_Click()

  Dim hForm As FmConfinement

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmConfinement(Workspace1)

End

Public Sub mnuconsult_Click()

  Dim hForm As FmOpVisitReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmOpVisitReport(Workspace1)

End

Public Sub mnuopvisit_Click()

  Dim hForm As FmOpVisitReport

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmOpVisitReport(Workspace1)

End

Public Sub mnuipdates_Click()

  Dim hForm As FmClinSummary

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmClinSummary(Workspace1)

End

''============= Admin =============
Public Sub mnuadduser_Click()

  Dim hForm As FmSuperuser

  hForm = New FmSuperuser("fmUser")
  hForm.Show
  modBasic.ShowUserPrivilege()

End

Public Sub mnuhospitals_Click()

  fmHospitals.ShowModal

End

Public Sub mnualterdb_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmDBChange.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnutextimport_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmCSVImport.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuexams_Click()

  Dim hForm As FmExamMain

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmExamMain(Workspace1)

End

Public Sub mnudemographic_Click()

  fmDemographic.ShowModal

End

Public Sub mnudeptexam_Click()

  fmDiffExam.ShowModal

End

Public Sub mnuvitals_Click()

  fmvitalexam.ShowModal

End

Public Sub mnudbquery_Click()

  Dim hForm As FmFIndRecord

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmFIndRecord(Workspace1)

End

Public Sub mnuvariables_Click()

  Dim hForm As FmPatClinicSettings

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPatClinicSettings(Workspace1)

End

Public Sub mnucuruserid_Click()

  Dim hForm As FmReportUsers

  If modBasic.$lbluser Then
    hForm = New FmReportUsers(modBasic.$lbluser)
    hForm.ShowModal
  Endif

End

Public Sub mnupersonal_Click()

  Dim hForm As FmPersonal

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmPersonal(Workspace1)

End

Public Sub mnudepartsetting_Click()

  fmClinicSetting.ShowModal

End

Public Sub mnumedsetting_Click()

  fmMedSetting.ShowModal

End

Public Sub mnugensett_Click()

  fmGeneralSettings.ShowModal

End

Public Sub mnupdate_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    If MMain.$WebEntry = True Then
      modDBTables.$DbFormat = "REP"
    Else
      modDBTables.$DbFormat = "HIS"
    Endif
    Message.Info(("Executing Request ...."), ("OK"))
    modDBGroup.CreateDatabaseForSish(modDatabase.$myConn)
    Me.Exec("Toastify({text: 'Table Creation completed', duration: 3000}).showToast()")
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnualter_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    modDatabase.AlterDBTablesAdmin()
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuNewIndex_Click()

  Dim doTables As String[]
  Dim goTables As String[]
  Dim sTable As String
  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    doTables = modDBApp.DBRegularTablesSelField(modDatabase.$myConn, ["fldrepoid"])
    goTables = SelectListView("Select Tables to alter", doTables, False)
    For Each sTable In goTables
      modDatabase.SetNewIndexRepository(modDatabase.$myConn, sTable)
    Next
    Me.Exec("Toastify({text: 'Process completed', duration: 3000}).showToast()")
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnufiscal_Click()

  Dim sType As String[] = ["Master", "Indoor", "Consult", "Emergency", "LiveBaby", "Delivery"]
  Dim xx As String
  Dim sRange As String[]
  Dim yy As String

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    sRange = modLongVar.$FiscalYearFixList
    For Each xx In sType
      For Each yy In sRange
        modAccount.InsertFiscalRangeSelected(xx, yy)
      Next
    Next
    Message.Info(("Update complete"), ("OK"))
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnublankref_Click()

  Dim res As Result
  Dim res1 As Result

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    res = modDatabase.$myConn.Exec("select fldrepoid from tblobstetrics where flddelref IS NULL and fldpatientval IS NOT NULL")
    If res.Available Then
      Message.Info(res.Count)
      For Each res
        res1 = modDatabase.$myConn.Edit("tblobstetrics", "fldrepoid=&1", res["fldrepoid"])
        If res1.Available Then
          res1["flddelref"] = modPatient.GetDeliveryHMISVal(res1["fldpatientval"])
          res1.Update
        Endif
      Next
    Endif
    Message.Info("complete")
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnudbupload_Click()

  Dim xlist As String[]

  modPatient.GetPatientNoPrefixes()
  xlist = modDBApp.DBRegularTablesSelField(modDatabase.$myConn, ["xyz"])
  modRepository.UploadToRepository(xlist, True)
  Me.Exec("Toastify({text: 'Information uploaded', duration: 3000}).showToast()")

End

Public Sub mnuapplog_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmLogInfo.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnuallsettings_Click()

  fmFileValues.ShowModal

End

Public Sub mnudumpdown_Click()

  Dim xPass As String

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    fmDumpfile.ShowModal
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnudarkmode_Click()

  Me.Exec("changeScreenMode();")

End

Public Sub mnutelemedicine_Click()

  Dim xPass As String
  Dim hForm As FmTeleMedList

  xPass = InputPassword("Provide Root Password", "Verification", "")
  If modPassword.GetSuperVerification(modBasic.$lbluser, xPass) = True Then
    If Workspace1.Children.Count Then
      Workspace1.DeleteChildren()
    Endif
    hForm = New FmTeleMedList(Workspace1)
  Else
    Message.Info("Incorrect Root Password", ("OK"))
  Endif

End

Public Sub mnusetup_Click()

  Dim hForm As FmShowSqlite

  If Workspace1.Children.Count Then
    Workspace1.DeleteChildren()
  Endif
  hForm = New FmShowSqlite(Workspace1)

End

Public Sub mnupassword_Click()

  modGeneral.UpdateMainUserPassword(modBasic.$lbluser)

End
