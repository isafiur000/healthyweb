' Gambas class file

Private $encArr As String[]
Private $encTot As String[]
Private $newColumn As String[]

Private $encList As String[]
Private $chartLimit As Float[]
Private $RepoStr As String

Public Sub _new()

  cmbcategory1.List = FillCategCombo()
  cmbcategory2.List = FillCategCombo()
  cmbcategory3.List = FillCategCombo()
  cmbcategory4.List = FillCategCombo()
  cmbcategory5.List = FillCategCombo()

  dtfir.Value = Now()
  dtlast.Value = Now()
  rbmetric.Value = True
  chkgrid.Value = True
  $RepoStr = modDataRepo.GetRepoLastStr()

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub mnuextcolum_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Private Function FillCategCombo() As String[]

  Dim xx As String[]

  xx = New String[]
  xx.Add("General Param")
  xx.Add("Date Free Param")
  xx.Add("Date of Birth")
  xx.Add("Clinical Demographics")
  xx.Add("Presenting Complaints")
  xx.Add("Provisional Diagnosis Code")
  xx.Add("Provisional Diagnosis")
  xx.Add("Final Diagnosis Code")
  xx.Add("Final Diagnosis")
  xx.Add("Allergic Drugs")
  xx.Add("Examination")
  xx.Add("Diagnostic Tests")
  xx.Add("Radio Diagnostics")
  xx.Add("Medicines")
  xx.Add("Patient Symptoms")
  xx.Add("Major Procedures")
  xx.Add("Delivery Profile")
  xx.Add("Obstetrics")
  Return xx

End

Private Sub FillItemCombo(cmbcategory As WebComboBox, cmbitem As WebComboBox, txtitem As WebTextBox, txtfrom As WebValueBox, txtto As WebValueBox)

  Dim sql As String
  Dim res As Result

  Dim xx As String[]

  ' cmbitem.Clear
  If cmbcategory.Text = "General Param" Or If cmbcategory.Text = "Date Free Param" Then
    cmbitem.List = ["Gender", "Surname", "District", "Municipality", "Regd Department", "Rate Plan", "Package", "Regd location", "Last Status", "Visit Type", "Visit Mode"]
    If MMain.$IsPolice = True Then
      cmbitem.Add("Service Rank")
      cmbitem.Add("Service Unit")
      cmbitem.Add("Service Category")
    Endif
    txtitem.Enabled = True
    txtfrom.Enabled = False
    txtto.Enabled = False
  Else If cmbcategory.Text = "Date of Birth" Then
    cmbitem.List = ["Age(in Days)", "Age(in Months)", "Age(in Years)"]
    txtitem.Enabled = False
    txtfrom.Enabled = True
    txtto.Enabled = True
  Else If cmbcategory.Text = "Delivery Profile" Then
    cmbitem.List = ["Delivery Type", "Delivery Result", "Baby Gender", "Birth Weight(gm)"]
    txtitem.Enabled = False
    txtfrom.Enabled = False
    txtto.Enabled = False

  Else If cmbcategory.Text = "Obstetrics" Then
    cmbitem.List = ["Gravida", "Parity", "Abortion", "Living", "Gestation"]
    txtitem.Enabled = False
    txtfrom.Enabled = True
    txtto.Enabled = True

  Else

    If cmbcategory.Text = "Final Diagnosis Code" Then
      sql = "select distinct(fldcodenew) as col from tblpatfindings where fldtype=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Final Diagnosis", True)
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False
    Else If cmbcategory.Text = "Provisional Diagnosis Code" Then
      sql = "select distinct(fldcodenew) as col from tblpatfindings where fldtype=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Provisional Diagnosis", True)
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False
    Else If cmbcategory.Text = "Final Diagnosis" Then
      sql = "select distinct(fldcode) as col from tblpatfindings where fldtype=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Final Diagnosis", True)
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False
    Else If cmbcategory.Text = "Provisional Diagnosis" Then
      sql = "select distinct(fldcode) as col from tblpatfindings where fldtype=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Provisional Diagnosis", True)
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False
    Else If cmbcategory.Text = "Examination" Then
      sql = "select distinct(fldhead) as col from tblpatientexam where fldsave=&1" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, True)
      txtitem.Enabled = True
      txtfrom.Enabled = True
      txtto.Enabled = True
    Else If cmbcategory.Text = "Allergic Drugs" Then
      sql = "select distinct(fldcode) as col from tblpatfindings where fldtype=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Allergic Drugs", True)
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False
    Else If cmbcategory.Text = "Medicines" Then
      sql = "select distinct(fldcodename) as col from tbldrug where flddrug in(select flddrug from tblmedbrand where fldbrandid in(select flditem from tblpatdosing where fldsave_order=&1))"
      res = modDatabase.$syConn.Exec(sql, True)
      txtitem.Enabled = True
      txtfrom.Enabled = True
      txtto.Enabled = True
    Else If cmbcategory.Text = "Diagnostic Tests" Then
      sql = "select distinct(fldtestid) as col from tblpatlabtest where (fldstatus=&1 or fldstatus=&2)" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Reported", "Verified")
      txtitem.Enabled = True
      txtfrom.Enabled = True
      txtto.Enabled = True
    Else If cmbcategory.Text = "Major Procedures" Then
      sql = "select distinct(fldreportquali) as col from tblpatsubgeneral where fldchapter=&1 and flditemid in(select fldid from tblpatgeneral where fldinput=&2)" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Components", "Procedures")
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False

    Else If cmbcategory.Text = "Radio Diagnostics" Then

    Else If cmbcategory.Text = "Patient Symptoms" Then
      sql = "select distinct(flditem) as col from tblexamgeneral where fldinput=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Patient Symptoms", True)
      txtitem.Enabled = False
      txtfrom.Enabled = False
      txtto.Enabled = False
    Else If cmbcategory.Text = "Presenting Complaints" Then
      sql = "select distinct(flditem) as col from tblexamgeneral where fldinput=&1 and fldsave=&2" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Presenting Symptoms", True)
      txtitem.Enabled = False
      txtfrom.Enabled = True
      txtto.Enabled = True
    Else If cmbcategory.Text = "Clinical Demographics" Then
      sql = "select distinct(flditem) as col from tblexamgeneral where fldinput=&1" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Demographics")
      txtitem.Enabled = True
      txtfrom.Enabled = False
      txtto.Enabled = False
    Endif

    xx = New String[]
    If res.Available Then
      For Each res
        If res["col"] Then
          xx.Add(res["col"])
        Endif
      Next
    Endif
    If xx Then
      xx.Sort()
    Endif
    cmbitem.List = xx

  Endif

End

Public Sub cmbcategory1_Click()

  FillItemCombo(cmbcategory1, cmbitem1, txtitem1, txtfrom1, txtto1)

End

Public Sub cmbcategory2_Click()

  FillItemCombo(cmbcategory2, cmbitem2, txtitem2, txtfrom2, txtto2)

End

Public Sub cmbcategory3_Click()

  FillItemCombo(cmbcategory3, cmbitem3, txtitem3, txtfrom3, txtto3)

End

Public Sub cmbcategory4_Click()

  FillItemCombo(cmbcategory4, cmbitem4, txtitem4, txtfrom4, txtto4)

End

Public Sub cmbcategory5_Click()

  FillItemCombo(cmbcategory5, cmbitem5, txtitem5, txtfrom5, txtto5)

End

Private Sub ChooseDataType(cmbcategory As WebComboBox, cmbitem As WebComboBox, txtitem As WebTextBox, txtfrom As WebValueBox, txtto As WebValueBox)

  Dim sType As String

  If cmbcategory.Text = "Examination" Then
    sType = modFixClinic.GetExaminationType(cmbitem.Text)
    If sType = "Qualitative" Then
      txtfrom.Enabled = False
      txtto.Enabled = False
      txtitem.Enabled = True
    Else If sType = "Quantitative" Then
      txtfrom.Enabled = True
      txtto.Enabled = True
      txtitem.Enabled = True
    Endif

  Else If cmbcategory.Text = "Diagnostic Tests" Then
    sType = modFixLab.GetLabTestType(cmbitem.Text)
    If sType = "Qualitative" Then
      txtfrom.Enabled = False
      txtto.Enabled = False
      txtitem.Enabled = True
    Else If sType = "Quantitative" Then ''not correct when different units used
      txtfrom.Enabled = True
      txtto.Enabled = True
      txtitem.Enabled = True
    Endif

  Else If cmbcategory.Text = "Delivery Profile" Then
    If cmbitem.Text = "Birth Weight(gm)" Then
      txtfrom.Enabled = True
      txtto.Enabled = True
      txtitem.Enabled = False
    Else
      txtfrom.Enabled = False
      txtto.Enabled = False
      txtitem.Enabled = True
    Endif

  Else If cmbcategory.Text = "Radio Diagnostics" Then

  Endif

End

Public Sub cmbitem1_Click()

  ChooseDataType(cmbcategory1, cmbitem1, txtitem1, txtfrom1, txtto1)

End

Public Sub cmbitem2_Click()

  ChooseDataType(cmbcategory2, cmbitem2, txtitem2, txtfrom2, txtto2)

End

Public Sub cmbitem3_Click()

  ChooseDataType(cmbcategory3, cmbitem3, txtitem3, txtfrom3, txtto3)

End

Public Sub cmbitem4_Click()

  ChooseDataType(cmbcategory4, cmbitem4, txtitem4, txtfrom4, txtto4)

End

Public Sub cmbitem5_Click()

  ChooseDataType(cmbcategory5, cmbitem5, txtitem5, txtfrom5, txtto5)

End

Private Function LabUnit() As String

  Dim xx As String

  If rbsi.Value = True Then
    xx = "SI"
  Else
    xx = "Metric"
  Endif
  Return xx

End

Private Sub GetItemMethod(sCategory As String, sTestName As String, sMethod As WebTextBox)

  Dim sList As String[]

  If sCategory And If sTestName Then

    If sCategory = "Examination" Then
      sList = modFixClinic.MethodsForClinExam(sTestName)
    Else If sCategory = "Diagnostic Tests" Then
      sList = modFixLab.MethodsForLabTest(sTestName)
    Else If sCategory = "Radio Diagnostics" Then
      sList = modFixRadio.MethodsForRadioTest(sTestName)
    Endif

    If sList Then
      sMethod.Text = InputCombo("Select Test Method", sTestName, sList, "%", False)
    Else
      sMethod.Text = "%"
    Endif

  Endif

End

Public Sub txtitem1_Activate()

  GetItemMethod(cmbcategory1.Text, cmbitem1.Text, txtitem1)

End

Public Sub txtitem2_Activate()

  GetItemMethod(cmbcategory2.Text, cmbitem2.Text, txtitem2)

End

Public Sub txtitem3_Activate()

  GetItemMethod(cmbcategory3.Text, cmbitem3.Text, txtitem3)

End

Public Sub txtitem4_Activate()

  GetItemMethod(cmbcategory4.Text, cmbitem4.Text, txtitem4)

End

Public Sub txtitem5_Activate()

  GetItemMethod(cmbcategory5.Text, cmbitem5.Text, txtitem5)

End

Private Function GetEncounterArray(cmbcategory As WebComboBox, cmbitem As WebComboBox, txtitem As WebTextBox, txtfrom As WebValueBox, txtto As WebValueBox) As String[]                                    ''

  Dim sql As String
  Dim res As Result
  Dim sType As String
  Dim xfld As String
  Dim xdtstr As String
  Dim xfac As Float
  Dim sqlqty As String
  Dim xarr As String[]
  Dim obsFld As String

  If txtitem.Text = "" Then
    txtitem.Text = "%"
  Endif

  If cmbcategory.Text Then

    If cmbcategory.Text = "Final Diagnosis Code" Then
      sql = "select distinct(fldencounterval) as col from tblpatfindings where fldtype=&1 and lower(fldcodenew) like &2 and fldtime>=&3 and fldtime<=&4 and fldsave=&5" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Final Diagnosis", LCase(cmbitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), True)

    Else If cmbcategory.Text = "Provisional Diagnosis Code" Then
      sql = "select distinct(fldencounterval) as col from tblpatfindings where fldtype=&1 and lower(fldcodenew) like &2 and fldtime>=&3 and fldtime<=&4 and fldsave=&5" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Provisional Diagnosis", LCase(cmbitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), True)

    Else If cmbcategory.Text = "Final Diagnosis" Then
      sql = "select distinct(fldencounterval) as col from tblpatfindings where fldtype=&1 and lower(fldcode) like &2 and fldtime>=&3 and fldtime<=&4 and fldsave=&5" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Final Diagnosis", LCase(cmbitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), True)

    Else If cmbcategory.Text = "Provisional Diagnosis" Then
      sql = "select distinct(fldencounterval) as col from tblpatfindings where fldtype=&1 and lower(fldcode) like &2 and fldtime>=&3 and fldtime<=&4 and fldsave=&5" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Provisional Diagnosis", LCase(cmbitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), True)

    Else If cmbcategory.Text = "Allergic Drugs" Then
      sql = "select distinct(fldencounterval) as col from tblpatfindings where fldtype=&1 and lower(fldcode) like &2 and fldtime>=&3 and fldtime<=&4 and fldsave=&5" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Allergic Drugs", LCase(cmbitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), True)

    Else If cmbcategory.Text = "Examination" Then
      sType = modFixClinic.GetExaminationType(cmbitem.Text)
      If sType = "Qualitative" Then
        sql = "select distinct(fldencounterval) as col from tblpatientexam where fldsave=&1 and fldhead=&2 and lower(fldrepquali) like &3 and fldtime>=&4 and fldtime<=&5" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, True, cmbitem.Text, LCase(txtitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))
      Else If sType = "Quantitative" Then
        If txtfrom.Value = 0 And If txtto.Value = 0 Then
          sqlqty = ""
        Else
          sqlqty = " and fldrepquanti>=&3 and fldrepquanti<=&4"
        Endif
        sql = "select distinct(fldencounterval) as col from tblpatientexam where fldsave=&1 and fldhead=&2" & sqlqty & " and fldtime>=&5 and fldtime<=&6 and fldmethod like &7" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, True, cmbitem.Text, txtfrom.Value, txtto.Value, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), txtitem.Text)
      Endif

    Else If cmbcategory.Text = "Diagnostic Tests" Then
      sType = modFixLab.GetLabTestType(cmbitem.Text)
      If sType = "Qualitative" Then
        sql = "select distinct(fldencounterval) as col from tblpatlabtest where (fldstatus=&1 or fldstatus=&2) and fldtestid=&3 and lower(fldreportquali) like &4 and fldtime_sample>=&5 and fldtime_sample<=&6" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, "Reported", "Verified", cmbitem.Text, LCase(txtitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))
      Else If sType = "Quantitative" Then ''not correct when different units used
        If txtfrom.Value = 0 And If txtto.Value = 0 Then
          sqlqty = ""
        Else
          sqlqty = " and fldreportquanti>=&4 and fldreportquanti<=&5"
        Endif
        sql = "select distinct(fldencounterval) as col from tblpatlabtest where (fldstatus=&1 or fldstatus=&2) and fldtestid=&3" & sqlqty & " and fldtime_sample>=&6 and fldtime_sample<=&7 and fldtestunit=&8 and fldmethod like &9" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, "Reported", "Verified", cmbitem.Text, txtfrom.Value, txtto.Value, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LabUnit(), txtitem.Text)
      Endif

    Else If cmbcategory.Text = "Radio Diagnostics" Then

    Else If cmbcategory.Text = "Major Procedures" Then
      sql = "select distinct(fldencounterval) as col from tblpatsubgeneral where fldchapter=&1 and lower(fldreportquali) like &2 and flditemid in(select fldid from tblpatgeneral where fldinput=&3 and fldreportquali=&4) and fldtime>=&5 and fldtime<=&6" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Components", LCase(cmbitem.Text), "Procedures", "Done", modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))

    Else If cmbcategory.Text = "Medicines" Then
      sql = "select distinct(fldencounterval) as col from tblpatdosing where fldsave_order=&1 and flddose>=&2 and flddose<=&3 and flditem in(select fldbrandid from tblmedbrand where flddrug in(select flddrug from tbldrug where fldcodename=&4)) and fldtime>=&5 and fldtime<=&6 and fldroute like &7" & $RepoStr                                                          ''
      res = modDatabase.$syConn.Exec(sql, True, txtfrom.Value, txtto.Value, cmbitem.Text, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), txtitem.Text)

    Else If cmbcategory.Text = "Patient Symptoms" Then
      sql = "select distinct(fldencounterval) as col from tblexamgeneral where fldinput=&1 and fldsave=&2 and flditem=&3 and lower(fldreportquali) like &4 and fldtime>=&5 and fldtime<=&6" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Patient Symptoms", True, cmbitem.Text, LCase(txtitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))

    Else If cmbcategory.Text = "Presenting Complaints" Then
      sql = "select distinct(fldencounterval) as col from tblexamgeneral where fldinput=&1 and fldsave=&2 and flditem=&3 and lower(fldreportquali) like &4 and fldtime>=&5 and fldtime<=&6" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Presenting Symptoms", True, cmbitem.Text, LCase(txtitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))

    Else If cmbcategory.Text = "Clinical Demographics" Then
      sql = "select distinct(fldencounterval) as col from tblexamgeneral where fldinput=&1 and flditem=&2 and lower(fldreportquali) like &3 and fldtime>=&4 and fldtime<=&5" & $RepoStr
      res = modDatabase.$syConn.Exec(sql, "Demographics", cmbitem.Text, LCase(txtitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))

    Else If cmbcategory.Text = "General Param" Then
      xfld = "lower(" & modMedReports.GetColumnEncounter(cmbitem.Text) & ")"
      Select cmbitem.Text
        Case "Gender", "Surname", "District", "Municipality", "Service Rank", "Service Unit", "Service Category"
          sql = "select fldencounterval as col from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where " & xfld & " like &1) and fldregdate>=&2 and fldregdate<=&3" & $RepoStr
        Case Else
          sql = "select fldencounterval as col from tblencounter where " & xfld & " like &1 and fldregdate>=&2 and fldregdate<=&3" & $RepoStr
      End Select
      res = modDatabase.$syConn.Exec(sql, LCase(txtitem.Text), modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))

    Else If cmbcategory.Text = "Date Free Param" Then
      xfld = "lower(" & modMedReports.GetColumnEncounter(cmbitem.Text) & ")"
      Select cmbitem.Text
        Case "Gender", "Surname", "District", "Municipality", "Service Rank", "Service Unit", "Service Category"
          sql = "select fldencounterval as col from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where " & xfld & " like &1)" & $RepoStr
        Case Else
          sql = "select fldencounterval as col from tblencounter where " & xfld & " like &1" & $RepoStr
      End Select
      res = modDatabase.$syConn.Exec(sql, LCase(txtitem.Text))

    Else If cmbcategory.Text = "Date of Birth" Then
      xdtstr = modMedReports.GetAgeStringByTable("tblencounter", modDatabase.$syConn)
      sql = "select fldencounterval as col from tblencounter inner join tblpatientinfo on tblencounter.fldpatientval=tblpatientinfo.fldpatientval where tblencounter.fldregdate>=&1 and tblencounter.fldregdate<=&2 and tblpatientinfo.fldptbirday IS NOT NULL and " & xdtstr & ">=&3 and " & xdtstr & "<&4" & modDataRepo.GetRepoLastStr("tblencounter")
      If cmbitem.Text = "Age(in Days)" Then
        xfac = 1
      Else If cmbitem.Text = "Age(in Months)" Then
        xfac = 30
      Else If cmbitem.Text = "Age(in Years)" Then
        xfac = 365
      Endif
      res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), txtfrom.Value * xfac, txtto.Value * xfac)

    Else If cmbcategory.Text = "Delivery Profile" Then
      If cmbitem.Text = "Delivery Type" Then
        sql = "select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and lower(flddeltype) like &3" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(txtitem.Text))
      Else If cmbitem.Text = "Delivery Result" Then
        sql = "select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and lower(flddelresult) like &3" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(txtitem.Text))
      Else If cmbitem.Text = "Baby Gender" Then
        sql = "select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2 and fldbabypatno in(select fldpatientval from tblpatientinfo where lower(fldptsex) like &3)" & $RepoStr
        res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), LCase(txtitem.Text))
      Else If cmbitem.Text = "Birth Weight(gm)" Then
        If txtfrom.Value = 0 And If txtto.Value = 0 Then
          sqlqty = ""
        Else
          sqlqty = " and flddelwt>=&3 and flddelwt<=&4"
        Endif
        sql = "select distinct(fldencounterval) as col from tblconfinement where flddeltime>=&1 and flddeltime<=&2" & sqlqty & $RepoStr
        res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), txtfrom.Value, txtto.Value)
      Endif

    Else If cmbcategory.Text = "Obstetrics" Then
      obsFld = modPathoSub.GetObstetricField(cmbitem.Text)
      If txtfrom.Value = 0 And If txtto.Value = 0 Then
        sqlqty = ""
      Else
        sqlqty = " and " & obsFld & ">=&3 and " & obsFld & "<=&4"
      Endif
      sql = "select distinct(fldencounterval) as col from tblobstetrics where fldlast>=&1 and fldlast<=&2" & sqlqty & $RepoStr
      res = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), txtfrom.Value, txtto.Value)

    Endif

    If res.Available Then
      xarr = modString.GetDistinctStringArray(res.All("col"))
    Endif

  Endif
  Return xarr

End

Private Sub GetSIngleArray()

  Dim aa As Integer
  Dim cc As Integer

  Dim xarr1 As String[]
  Dim xarr2 As String[]
  Dim xarr3 As String[]
  Dim xarr4 As String[]
  Dim xarr5 As String[]

  Dim sTemp As String
  Dim uniqStr As String
  Dim asx As String[]
  Dim sLine As String
  Dim asy As String[]

  aa = 0
  cc = 0
  $encArr = New String[]
  If chksel1.Value = True Then
    aa = aa + 1
    xarr1 = GetEncounterArray(cmbcategory1, cmbitem1, txtitem1, txtfrom1, txtto1)
    If xarr1 And If xarr1.Count Then
      $encArr.Insert(xarr1)
      cc = cc + 1
    Endif
  Endif

  If chksel2.Value = True Then
    aa = aa + 1
    xarr2 = GetEncounterArray(cmbcategory2, cmbitem2, txtitem2, txtfrom2, txtto2)
    If xarr2 And If xarr2.Count Then
      $encArr.Insert(xarr2)
      cc = cc + 1
    Endif
  Endif

  If chksel3.Value = True Then
    aa = aa + 1
    xarr3 = GetEncounterArray(cmbcategory3, cmbitem3, txtitem3, txtfrom3, txtto3)
    If xarr3 And If xarr3.Count Then
      $encArr.Insert(xarr3)
      cc = cc + 1
    Endif
  Endif

  If chksel4.Value = True Then
    aa = aa + 1
    xarr4 = GetEncounterArray(cmbcategory4, cmbitem4, txtitem4, txtfrom4, txtto4)
    If xarr4 And If xarr4.Count Then
      $encArr.Insert(xarr4)
      cc = cc + 1
    Endif
  Endif

  If chksel5.Value = True Then
    aa = aa + 1
    xarr5 = GetEncounterArray(cmbcategory5, cmbitem5, txtitem5, txtfrom5, txtto5)
    If xarr5 And If xarr5.Count Then
      $encArr.Insert(xarr5)
      cc = cc + 1
    Endif
  Endif

  $encTot = New String[]
  If $encArr Then
    $encArr.Sort()
  Endif
  If aa = cc Then
    If aa = 1 Then
      $encTot.Insert($encArr)

    Else
      sTemp = Temp()
      File.Save(sTemp, $encArr.Join(gb.NewLine))
      Exec ["uniq", "-cd", sTemp] To uniqStr
      asx = Split(Trim(uniqStr), gb.NewLine)
      For Each sLine In asx
        asy = Split(Trim(sLine), Space(1))
        If asy.Count = 2 Then
          If asy[0] = CStr(aa) Then
            $encTot.Add(asy[1])
          Endif
        Endif
      Next

      ' ' xarr = modString.GetDistinctStringArray($encArr, gb.Ascent)
      ' ' For Each yy In xarr
      ' '   bb = 0
      ' '   For Each xx In $encArr
      ' '     If xx = yy Then
      ' '       bb = bb + 1
      ' '     Endif
      ' '   Next
      ' '
      ' '   If bb = aa Then
      ' '     $encTot.Add(yy)
      ' '   Endif
      ' ' Next
    Endif
  Endif
  lblrecordcount.Text = "Count: " & $encTot.Count

End

Public Sub btnrefresh_Click()

  TabStrip1.Index = 0
  If chkexcoutlier.Value = True Then
    $chartLimit = InputDoubleVal(("Select Limits for Frequency Chart"), ["Lower Value", "Upper Value"], [0, 0])
  Endif

  $encList = New String[]
  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)

  GetSIngleArray()

  If chkgrid.Value = True Then
    FillEncGrid()
  Endif
  If chkchart.Value = True Then
    CreateStatistics()
  Endif
  ' modExternal.$ExecValueColl.Clear()

End

Private Sub FillEncGrid()

  Dim i As Integer

  GridView1.Clear
  If $newColumn.Count Then
    GridView1.Columns.Count = 8 + $newColumn.Count
  Else
    GridView1.Columns.Count = 8
  Endif
  GridView1.Count = $encTot.Count
  With GridView1
    .Columns[0].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[1].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(200 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"

    .Columns[0].Text = "EncID"
    .Columns[1].Text = "Name"
    .Columns[2].Text = "Gender"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "DOReg"
    .Columns[5].Text = "PatientNo"
    .Columns[6].Text = "Address"
    .Columns[7].Text = "Contact"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[8 + i].Text = $newColumn[i]
        .Columns[8 + i].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      Next
    Endif

  End With

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 1 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 2 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modPatient.GetPatientAgeString(xVariable, modPatient.GetRecordDate(xVariable))
  Else If Column = 4 Then
    xxx = modReportVar.GetDateTimeReport(modPatient.GetRecordDate(xVariable), gb.MediumDate)
  Else If Column = 5 Then
    xxx = modPatient.GetPatientNoByEnc(xVariable)
  Else If Column = 6 Then
    xxx = modPatient.GetPatientAddressByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 7 Then
    xxx = modPatient.GetPatientContactByEnc(xVariable)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = 8 + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  modGridView.GridViewDecoration(Data, Row)
  If Column > 7 Then
    Data.Html = modString.TextToHTML(GetGridViewValue(Column, $encTot[Row]))
  Else
    Data.Text = GetGridViewValue(Column, $encTot[Row])
  Endif

End

Private Sub CreateStatistics()

  Dim encid As String
  Dim res As Result
  Dim sql As String

  Dim xLst As String[]
  Dim xval As Float

  xLst = New String[]
  If cmbcategory5.Text = "Examination" Then
    If modFixClinic.GetExaminationType(cmbitem5.Text) = "Quantitative" Then
      For Each encid In $encTot
        sql = "select fldrepquanti from tblpatientexam where fldsave=&1 and fldhead=&2 and fldrepquanti>=&3 and fldrepquanti<=&4 and fldtime>=&5 and fldtime<=&6 and fldencounterval=&7"
        res = modDatabase.$syConn.Exec(sql, True, cmbitem5.Text, txtfrom5.Value, txtto5.Value, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), encid)
        For Each res
          xval = res["fldrepquanti"]
          If chkexcoutlier.Value = True Then
            If $chartLimit Then
              If xval >= $chartLimit[0] And If xval <= $chartLimit[1] Then
                xLst.Add(Format(xval, gb.Fixed))
              Endif
            Else
              xLst.Add(Format(xval, gb.Fixed))
            Endif
          Else
            xLst.Add(Format(xval, gb.Fixed))
          Endif
        Next
      Next
    Endif

  Else If cmbcategory5.Text = "Diagnostic Tests" Then
    If modFixLab.GetLabTestType(cmbitem5.Text) = "Quantitative" Then
      For Each encid In $encTot
        sql = "select fldid,fldencounterval,fldtestid,fldreportquanti,fldtestunit,fldmethod from tblpatlabtest where (fldstatus=&1 or fldstatus=&2) and fldtestid=&3 and fldreportquanti>=&4 and fldreportquanti<=&5 and fldtime_sample>=&6 and fldtime_sample<=&7 and fldencounterval=&8"
        res = modDatabase.$syConn.Exec(sql, "Reported", "Verified", cmbitem5.Text, txtfrom5.Value, txtto5.Value, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), encid)
        For Each res
          xval = modLabTest.GetLabQuantiValueAll(res["fldencounterval"], res["fldtestid"], res["fldreportquanti"], res["fldtestunit"], res["fldmethod"], LabUnit())
          xLst.Add(Format(xval, gb.Fixed))
        Next
      Next
    Endif

  Endif

  If xLst.Count Then
    MakeFreqIntervalData(cmbitem5.Text, xLst, PictureBox1)
  Endif

End

''--------------------------- Gridview reports --------------------------------------
' Public Sub GridView1_Menu()
'
'   mnuhidden.Popup
'
' End
'
Public Sub mnuColumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim Column As Integer
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim Row As Integer
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  hFile = New CUnivariate
  Column = modCustPatient.GetUnivariateColumn(0)

  If $encTot Then
    For Row = 0 To $encTot.Count - 1
      xval = GetGridViewValue(Column, $encTot[Row])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xRow As Integer
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(0)
  Column = modCustPatient.GetCrossVarColumn(0)

  If $encTot Then
    For xRow = 0 To $encTot.Count - 1
      xval = GetGridViewValue(Row, $encTot[xRow])
      yval = GetGridViewValue(Column, $encTot[xRow])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnuregressionn_Click()

  Dim xx As String
  Dim xRow As Integer

  Dim DepCol As Integer
  Dim Indep1Col As Integer
  Dim Indep2Col As Integer
  Dim Indep3Col As Integer
  Dim Indep4Col As Integer
  Dim Indep5Col As Integer

  Dim Depvalue As Variant
  Dim Indep1Val As Variant
  Dim Indep2Val As Variant
  Dim Indep3Val As Variant
  Dim Indep4Val As Variant
  Dim Indep5Val As Variant

  Dim DepData As Variant[]
  Dim Indep1Data As Variant[]
  Dim Indep2Data As Variant[]
  Dim Indep3Data As Variant[]
  Dim Indep4Data As Variant[]
  Dim Indep5Data As Variant[]

  Message.Info(("Generating Report ...."), ("OK"))
  DepData = New Variant[]
  Indep1Data = New Variant[]
  Indep2Data = New Variant[]
  Indep3Data = New Variant[]
  Indep4Data = New Variant[]
  Indep5Data = New Variant[]

  DepCol = modCustPatient.GetRegressionDepVal(0)

  If modCustPatient.$RegVar1UseGridVal = "Yes" Or If modCustPatient.$RegVar1Variable Or If modCustPatient.$RegVar1SQLText Then
    Indep1Col = modCustPatient.GetRegressionVar1Val(0)
  Endif
  If modCustPatient.$RegVar2UseGridVal = "Yes" Or If modCustPatient.$RegVar2Variable Or If modCustPatient.$RegVar2SQLText Then
    Indep2Col = modCustPatient.GetRegressionVar2Val(0)
  Endif
  If modCustPatient.$RegVar3UseGridVal = "Yes" Or If modCustPatient.$RegVar3Variable Or If modCustPatient.$RegVar3SQLText Then
    Indep3Col = modCustPatient.GetRegressionVar3Val(0)
  Endif
  If modCustPatient.$RegVar4UseGridVal = "Yes" Or If modCustPatient.$RegVar4Variable Or If modCustPatient.$RegVar4SQLText Then
    Indep4Col = modCustPatient.GetRegressionVar4Val(0)
  Endif
  If modCustPatient.$RegVar5UseGridVal = "Yes" Or If modCustPatient.$RegVar5Variable Or If modCustPatient.$RegVar5SQLText Then
    Indep5Col = modCustPatient.GetRegressionVar5Val(0)
  Endif

  If $encTot Then
    For xRow = 0 To $encTot.Count - 1
      Depvalue = GetGridViewValue(DepCol, $encTot[xRow])
      If modCustPatient.$RegVar1UseGridVal = "Yes" Or If modCustPatient.$RegVar1Variable Or If modCustPatient.$RegVar1SQLText Then
        Indep1Val = GetGridViewValue(Indep1Col, $encTot[xRow])
      Else
        Indep1Val = "__"
      Endif
      If modCustPatient.$RegVar2UseGridVal = "Yes" Or If modCustPatient.$RegVar2Variable Or If modCustPatient.$RegVar2SQLText Then
        Indep2Val = GetGridViewValue(Indep2Col, $encTot[xRow])
      Else
        Indep2Val = "__"
      Endif
      If modCustPatient.$RegVar3UseGridVal = "Yes" Or If modCustPatient.$RegVar3Variable Or If modCustPatient.$RegVar3SQLText Then
        Indep3Val = GetGridViewValue(Indep3Col, $encTot[xRow])
      Else
        Indep3Val = "__"
      Endif
      If modCustPatient.$RegVar4UseGridVal = "Yes" Or If modCustPatient.$RegVar4Variable Or If modCustPatient.$RegVar4SQLText Then
        Indep4Val = GetGridViewValue(Indep4Col, $encTot[xRow])
      Else
        Indep4Val = "__"
      Endif
      If modCustPatient.$RegVar5UseGridVal = "Yes" Or If modCustPatient.$RegVar5Variable Or If modCustPatient.$RegVar5SQLText Then
        Indep5Val = GetGridViewValue(Indep5Col, $encTot[xRow])
      Else
        Indep5Val = "__"
      Endif

      If Depvalue And If Indep1Val And If Indep2Val And If Indep3Val And If Indep4Val And If Indep5Val Then
        modCustPatient.AddFormatRegressionDepToList(DepData, Depvalue)
        modCustPatient.AddFormatRegressionVar1ToList(Indep1Data, Indep1Val)
        modCustPatient.AddFormatRegressionVar2ToList(Indep2Data, Indep2Val)
        modCustPatient.AddFormatRegressionVar3ToList(Indep3Data, Indep3Val)
        modCustPatient.AddFormatRegressionVar4ToList(Indep4Data, Indep4Val)
        modCustPatient.AddFormatRegressionVar5ToList(Indep5Data, Indep5Val)
      Endif
    Next
  Endif

  xx = modPSPP.RegressionChartGridNew(DepData, Indep1Data, Indep2Data, Indep3Data, Indep4Data, Indep5Data)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnutimeseries_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xval As Variant
  Dim yval As Variant
  Dim xData As Variant[]
  Dim yData As Variant[]

  Dim xRow As Integer

  Message.Info(("Generating Report ...."), ("OK"))
  xData = New Variant[]
  yData = New Variant[]
  Row = modCustPatient.GetTimeVarRow(0)
  Column = modCustPatient.GetTimeVarColumn(0)

  If $encTot Then
    For xRow = 0 To $encTot.Count - 1
      xval = GetGridViewValue(Row, $encTot[xRow])
      yval = GetGridViewValue(Column, $encTot[xRow])
      If xval And If yval Then
        modCustPatient.AddFormatTimeVarRowToList(xData, xval)
        modCustPatient.AddFormatTimeVarColumnToList(yData, yval)
      Endif
    Next
  Endif

  xx = modPSPP.GetTimeChartGrid(xData, yData)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim xRow As Integer
  Dim Row As Integer
  Dim Column As Integer
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab

    Row = CInt(modCustPatient.$TabRowColumn) - 1
    Column = CInt(modCustPatient.$TabFieldColumn) - 1

    If $encTot Then
      For xRow = 0 To $encTot.Count - 1
        xval = GetGridViewValue(Row, $encTot[xRow])
        yval = GetGridViewValue(Column, $encTot[xRow])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    'modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnugridsummary_Click()

  Dim xx As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String

  Dim xRow As Integer
  Dim xPath As String
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  If $encTot Then
    For xRow = 0 To $encTot.Count - 1
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, $encTot[xRow])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, $encTot[xRow])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, $encTot[xRow]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

Public Sub mnutest_Click()

  Dim xLst As Variant[]
  Dim xx As String

  Message.Info(("Generating Report ...."), ("OK"))
  xLst = StatTest()
  If xLst Then
    ' xx = GridPSPPTestReport(GridView1, xLst)
    If xx Then
      modControlSub.OpenBrowser(xx)
    Endif
  Endif

End

Public Sub mnucomplete_Click()

  If GridView1.Selection.Count Then
    If modPatientSub.AllowEncIDHistory($encTot[GridView1.Selection[0]], modDatabase.$syConn) = True Then
      modPatReports.GetSelectedPatientValues($encTot[GridView1.Selection[0]], LabUnit())
    Endif
  Endif

End

Public Sub mnucompare_Click()

  If GridView1.Selection.Count Then
    If modPatientSub.AllowEncIDHistory($encTot[GridView1.Selection[0]], modDatabase.$syConn) = True Then
      $encList.Add($encTot[GridView1.Selection[0]])
      Message.Info($encTot[GridView1.Selection[0]] & " added to List for Comparison", ("OK"))
    Else
      Message.Warning(("Not allowed"), ("OK"))
    Endif
  Endif

End

Public Sub mnushowcompare_Click()

  Dim xxx As String[]
  Dim xPath As String

  Dim encid As String
  Dim xList As String[]
  Dim laball As String[]
  Dim radioall As String[]
  Dim lablist As String[]
  Dim radiolist As String[]

  xxx = $encList
  If xxx Then

    xList = SelectMedBody("")
    Wait
    If xList Then
      laball = New String[]
      radioall = New String[]
      For Each encid In xxx
        laball.Insert(modLabTest.PaientAllTestNameArray(encid))
        radioall.Insert(modRadioTest.PaientAllRadioNameArray(encid))
      Next
      lablist = modString.BinaryDistinctStringArray(laball, gb.Ascent)
      radiolist = modString.BinaryDistinctStringArray(radioall, gb.Ascent)
    Endif

    xPath = modMultiPatReports.MultiShowCompleteReport(xList, xxx, lablist, radiolist, LabUnit())
    modControlSub.DisplayReportExport(xPath)
  Endif
  $encList.Clear()

End

''------------------------ first picturebox ------------------------------------------
Public Sub btnexport_Click()

  ' Me.Exec("printJS('" & PictureBox1.Tag & "', 'image')")
  Me.Exec("window.open('" & PictureBox1.Image & "'); ")

End

Private Sub MakeFreqIntervalData(sItem As String, xLst As String[], pictbox As WebImage)

  Dim sFile As String
  Dim ximg As String

  sFile = Temp()
  File.Save(sFile, xLst.Join(gb.NewLine))
  ' pictbox.Tag = sItem
  If modBasic.$ChartExecStat = "PSPP" Then
    ximg = modPSPP.CreatePSPPStatFIle("frequency", sFile)
  Else
    ximg = modChart.FrequencyChart(sFile, sItem & " : Frequency Distribution")
  Endif
  modImage.StretchtPictureToBox(pictbox, ximg)
  btnstats.Tag = sFile

End

Public Sub btnstats_Click()

  Dim hForm As Fmgnustat

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("statistics", btnstats.Tag))
  Else
    hForm = New Fmgnustat(btnstats.Tag)
    hForm.ShowModal
  Endif

End

Public Sub btncalc_Click()

  modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("t-test", btnstats.Tag))

End

''------------------------ Other Menu-----------------------------------------
Public Sub btnexportall_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer
  Dim ColCount As Integer
  Dim Row As Integer

  If $newColumn.Count Then
    ColCount = 8 + $newColumn.Count
  Else
    ColCount = 8
  Endif

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "Query Report"
  xparam2 = modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  encColumn = 0
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  For Row = 0 To $encTot.Count - 1
    xCollRow = New Collection
    For xColum = 0 To ColCount - 1
      xCollRow.Add(GetGridViewValue(xColum, $encTot[Row]), CStr(xColum))
    Next
    $hGridExportTable.Add(Row, xCollRow)
  Next
  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

Public Sub chkchart_Click()

  TabStrip1.Index = 1

End

''Selected Tests
' Private Function GridPSPPTestReport(xGridView1 As WebTable, sArgs As Variant[]) As String
'
'   Dim indep As Integer
'   Dim dep As Integer
'   Dim testname As String
'
'   Dim xData As String[]
'   Dim Row As Integer
'   Dim tempFile As String
'   Dim sOutput As String
'   Dim xcmd As String[]
'   Dim xx As String
'   Dim aa As String
'   Dim bb As String
'
'   Dim xindep As String
'   Dim xdep As String
'   Dim xdisvar As String[]
'   Dim xsortVar As String[]
'
'
'   indep = sArgs[1] - 1
'   dep = sArgs[2] - 1
'   xData = New String[]
'
'   If sArgs[0] = "Chi Square Test" Then
'     testname = "crosstab"
'   Else If sArgs[0] = "Kruskal Wallis H Test" Then
'   Else If sArgs[0] = "Mann Whitney U Test" Then
'   Else If sArgs[0] = "Independent Sample T Test" Then
'     testname = "indep-t-test"
'     xdisvar = New String[]
'   Else If sArgs[0] = "One Way Anova" Then
'     testname = "oneway-anova"
'   Else If sArgs[0] = "Bivariate Correlation" Then
'     testname = "correlation"
'   Endif
'
'   For Row = 0 To xGridView1.Count - 1
'     If xGridView1.Rows[Row].Height Then
'
'       If xGridView1[Row, indep].RichText Then
'         aa = modString.ConvertRichTextToPlain(xGridView1[Row, indep].RichText)
'       Else
'         aa = xGridView1[Row, indep].Text
'       Endif
'       If xGridView1[Row, dep].RichText Then
'         bb = modString.ConvertRichTextToPlain(xGridView1[Row, dep].RichText)
'       Else
'         bb = xGridView1[Row, dep].Text
'       Endif
'
'       aa = Trim(aa)
'       bb = Trim(bb)
'       If aa And If bb Then
'
'         If TypeOf(aa) = gb.Float Or If TypeOf(aa) = gb.Integer Then
'           xindep = Format(aa, gb.Fixed)
'         Else
'           If Len(aa) Then
'             xindep = Quote(aa)
'           Endif
'         Endif
'
'         If TypeOf(bb) = gb.Float Or If TypeOf(bb) = gb.Integer Then
'           xdep = Format(bb, gb.Fixed)
'         Else
'           If Len(bb) Then
'             xdep = Quote(bb)
'           Endif
'         Endif
'
'         xData.Add(xindep & gb.Tab & xdep)
'         If sArgs[0] = "Independent Sample T Test" Then
'           If xGridView1[Row, indep].Text Then
'             xdisvar.Add(aa)
'           Endif
'         Endif
'
'       Endif
'
'     Endif
'   Next
'
'   tempFile = Temp() & ".sps"
'   sOutput = Temp() & ".html"
'
'   xx = File.Load(modHelpVariable.$psppDirectory &/ testname)
'   xx = Replace(xx, "{ConfidenceInterval}", CStr(modBasic.$StatConfInterval))
'   If sArgs[0] = "Independent Sample T Test" Then
'     xsortVar = modString.GetDistinctStringArray(xdisvar)
'     If xsortVar.Count = 2 Then
'       xx = Replace(xx, "{var1}", xsortVar[0])
'       xx = Replace(xx, "{var2}", xsortVar[1])
'     Endif
'   Endif
'   xx = Replace(xx, "{DataList}", xData.Join(gb.NewLine))
'   File.Save(tempFile, xx)
'
'   If System.Exist("pspp") = True Then
'     xcmd = ["pspp", tempFile, "-o", sOutput]
'     modBasic.DebugString("Execute " & xcmd.Join(Space(1)))
'     Exec xcmd Wait
'   Else
'     modApplSub.InstallSelectedApplication(["pspp"])
'   Endif
'
'   modExternal.$ExecValueColl.Clear()
'
'   Return sOutput
'
' End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
