' Gambas module file

'Note: ------------------------------------ GNU STAT ---------------------------------------------
Private Function CreateGNUStat(sInput As String, sOutput As String) As String

  Dim xx As String
  Dim sPath As String

  sPath = Temp()
  xx = "clear" & gb.NewLine
  xx = xx & "set print " & Quote(sOutput) & gb.NewLine
  xx = xx & "stats " & Quote(sInput)
  File.Save(sPath, xx)
  Return sPath

End

Public Function CreateGNUScript(T_File As String, sData As String, sTarget As String, title As String, xlabel As String, ylabel As String) As String                                      ''

  Dim sPath As String
  Dim ReportPart As String
  Dim sColor As Integer
  Dim xcol As String

  xcol = modSettings.ShowSettingFromFIle("InventoryChart/ChartColor")
  If xcol Then
    sColor = CInt(xcol)
  Else
    sColor = Color.Green
  Endif

  sPath = Temp()
  ReportPart = File.Load(modHelpVariable.$gnuDirectory &/ T_File)
  ReportPart = Replace(ReportPart, "{TargetImage}", Quote(sTarget))
  ReportPart = Replace(ReportPart, "{DataFile}", "\"" & sData & "\"")
  ReportPart = Replace(ReportPart, "{TITLE}", Quote(title))
  ReportPart = Replace(ReportPart, "{xLabel}", Quote(xlabel))
  ReportPart = Replace(ReportPart, "{yLabel}", Quote(ylabel))
  ReportPart = Replace(ReportPart, "{ChartColor}", Quote("#" & Hex(sColor)))

  File.Save(sPath, ReportPart)
  Return sPath

End

Public Function GnuStatSIngle(sFile As String) As String

  Dim sOutput As String
  Dim sgnu As String
  Dim arcmd As String[]

  sOutput = Temp() & ".txt"
  sgnu = CreateGNUStat(sFile, sOutput)
  If System.Exist("gnuplot-nox") = True Then
    arcmd = ["gnuplot-nox", sgnu]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd Wait
  Else
    modApplSub.InstallSelectedApplication(["gnuplot-nox"])
  Endif
  Return sOutput

End

Public Function GetGNUPlotScript(sType As String, sFile As String, Optional title As String, Optional xlabel As String, Optional ylabel As String) As String

  Dim sImage As String
  Dim sgnu As String
  Dim arcmd As String[]

  Dim sTitle As String
  Dim sXlab As String
  Dim sYlab As String

  If modBasic.$InvChShowTitle = "No" Then
    sTitle = ""
  Else
    If title Then
      sTitle = title
    Else
      sTitle = ""
    Endif
  Endif

  If modBasic.$InvChShowXLabel = "No" Then
    sXlab = ""
  Else
    If xlabel Then
      sXlab = xlabel
    Else
      sXlab = ""
    Endif
  Endif

  If modBasic.$InvChShowYLabel = "No" Then
    sYlab = ""
  Else
    If ylabel Then
      sYlab = ylabel
    Else
      sYlab = ""
    Endif
  Endif

  sImage = Temp() & ".png"
  sgnu = modChartFix.CreateGNUScript(sType, sFile, sImage, sTitle, sXlab, sYlab)
  If System.Exist("gnuplot-nox") = True Then
    arcmd = ["gnuplot-nox", sgnu]
    modBasic.DebugString("Execute " & arcmd.Join(Space(1)))
    Exec arcmd Wait
  Else
    modApplSub.InstallSelectedApplication(["gnuplot-nox"])
  Endif
  Return sImage

End

'NOTE: ----------------------- data mash --------------------------
Public Function GetCrossTabFormating(sFile As String, Optional sName As String) As String

  Dim xfile As String
  Dim xpath As String
  Dim xval As String
  Dim xcmd As String

  If sName Then
    xval = sName
  Else
    xval = "Variable"
  Endif

  If System.Exist("datamash") Then
    xcmd = "datamash -s crosstab 1,2 < " & sFile
    modBasic.DebugString(xcmd)
    Shell xcmd To xfile
  Else
    modApplSub.InstallSelectedApplication(["datamash"])
  Endif

  xfile = Replace(xfile, "N/A", "0")
  xpath = Temp()
  File.Save(xpath, xval & xfile)
  Return xpath

End
