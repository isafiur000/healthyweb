' Gambas module file

Public $SymptomMasterVar As Variant[]
Public $SymptomCompVar As Variant[]
Public $ExaminationCompVar As Variant[]

Public $TriageExamCol As String[]
Public $TriageTestCol As String[]
Public $TriageSympCol As String[]

Public Sub LoadSymptomsMasterData(sCon As Connection)

  Dim res As Result
  Dim sColl As Collection

  $SymptomMasterVar = New Variant[]
  res = sCon.Exec("select fldsymptom,fldcategory,fldcode,fldsymdetail from tblsymptoms")     ''
  If res.Available Then
    For Each res
      sColl = New Collection
      sColl.Add(res["fldsymptom"], "fldsymptom")
      sColl.Add(res["fldcategory"], "fldcategory")
      sColl.Add(res["fldcode"], "fldcode")
      sColl.Add(res["fldsymdetail"], "fldsymdetail")
      $SymptomMasterVar.Add(sColl)
    Next
  Endif

End

Public Sub LoadSymptomsCompwiseData(sCon As Connection)

  Dim res As Result
  Dim sColl As Collection

  $SymptomCompVar = New Variant[]
  res = sCon.Exec("select fldsymptom,fldtype,fldflag from tblcomplaints where fldcomp=&1 or fldcomp=&2", modBasic.$compID, "%")     ''
  If res.Available Then
    For Each res
      sColl = New Collection
      sColl.Add(res["fldsymptom"], "fldsymptom")
      sColl.Add(res["fldtype"], "fldtype")
      sColl.Add(res["fldflag"], "fldflag")
      $SymptomCompVar.Add(sColl)
    Next
  Endif

End

Public Function GetFlaggedSymptomGroup() As String[]

  Dim aColl As Collection
  Dim xList As String[]

  xList = New String[]
  For Each aColl In $SymptomCompVar
    If aColl["fldflag"] = True Then
      If xList.Exist(aColl["fldtype"] & "|" & aColl["fldsymptom"]) = False Then
        xList.Add(aColl["fldtype"] & "|" & aColl["fldsymptom"])
      Endif
    Endif
  Next

  Return xList

End

Public Sub LoadExamsCompwiseData(sCon As Connection)

  Dim res As Result
  Dim sColl As Collection

  $ExaminationCompVar = New Variant[]
  res = sCon.Exec("select fldcategory,fldexamid,fldsysconst,fldtype,fldtanswertype,fldgroupname,fldexamorder,fldflag from tblcompexam where fldcomp=&1 or fldcomp=&2", modBasic.$compID, "%")     ''
  If res.Available Then
    For Each res
      sColl = New Collection
      sColl.Add(res["fldcategory"], "fldcategory")
      sColl.Add(res["fldexamid"], "fldexamid")
      sColl.Add(res["fldsysconst"], "fldsysconst")
      sColl.Add(res["fldtype"], "fldtype")
      sColl.Add(res["fldtanswertype"], "fldtanswertype")
      sColl.Add(res["fldgroupname"], "fldgroupname")
      sColl.Add(res["fldexamorder"], "fldexamorder")
      sColl.Add(res["fldflag"], "fldflag")
      $ExaminationCompVar.Add(sColl)
    Next
  Endif

End

'number of test for specific disease
Public Function GetTotTestNo(sItem As String) As Integer

  Dim res As Result
  Dim xx As Integer

  res = modDatabase.$medConn.Exec("select fldtestid from tblpathotest where fldparent=&1", sItem)
  If res.Available Then
    xx = res.Count
  Else
    xx = 0
  Endif
  Return xx

End

'number of exam for specific disease
Public Function GetTotExamNo(sItem As String) As Integer

  Dim res As Result
  Dim xx As Integer

  res = modDatabase.$medConn.Exec("select fldexamid from tblpathoexam where fldparent=&1", sItem)
  If res.Available Then
    xx = res.Count
  Else
    xx = 0
  Endif
  Return xx

End

'number of symptom for specific disease
Public Function GetTotSympNo(sItem As String) As Integer

  Dim res As Result
  Dim xx As Integer

  res = modDatabase.$medConn.Exec("select fldchild from tblpathosymp where fldparent=&1", sItem)
  If res.Available Then
    xx = res.Count
  Else
    xx = 0
  Endif
  Return xx

End

Public Sub LoadTriageValues()

  Dim xcolist As String[] = ["Red", "Yellow", "Green", "Blue", "Black"]
  Dim sql As String
  Dim xcolor As String
  Dim resexam As Result
  Dim restest As Result
  Dim ressymp As Result

  Dim xexamcoll As Collection
  Dim xexam As String[]

  $TriageExamCol = New String[]
  $TriageTestCol = New String[]
  $TriageSympCol = New String[]
  xexamcoll = New Collection

  sql = "select fldchild,fldrelation,fldvalquali,fldvalquanti,flddiagnounit from tbltriage where flddiagnotype=&1 and fldparent=&2 and (fldcomp=&3 or fldcomp=&4)"
  For Each xcolor In xcolist
    restest = modDatabase.$medConn.Exec(sql, "Test", xcolor, modBasic.$compID, "%")
    If restest.Available Then
      For Each restest
        If restest["fldrelation"] = "Min" Or If restest["fldrelation"] = "Max" Then
          If xexamcoll.Count = 0 Then
            xexamcoll.Add(restest["fldrelation"] & "@" & restest["fldvalquali"] & "@" & restest["flddiagnounit"], xcolor & "@" & restest["fldchild"])
          Else
            If xexamcoll.Exist(xcolor & "@" & restest["fldchild"]) = True Then
              xexam = Split(xexamcoll[xcolor & "@" & restest["fldchild"]], "@")
              $TriageTestCol.Add(xcolor & "@" & restest["fldchild"] & "@" & "RANGE" & "@" & xexam[1] & ":" & restest["fldvalquali"] & "@" & restest["flddiagnounit"])
              xexamcoll.Remove(xcolor & "@" & restest["fldchild"])
            Else
              xexamcoll.Add(restest["fldrelation"] & "@" & restest["fldvalquali"] & "@" & restest["flddiagnounit"], xcolor & "@" & restest["fldchild"])
            Endif
          Endif

        Else
          $TriageTestCol.Add(xcolor & "@" & restest["fldchild"] & "@" & restest["fldrelation"] & "@" & restest["fldvalquali"] & "@" & restest["flddiagnounit"])
        Endif
      Next
    Endif
    xexamcoll.Clear()

    resexam = modDatabase.$medConn.Exec(sql, "Exam", xcolor, modBasic.$compID, "%")
    If resexam.Available Then
      For Each resexam
        If resexam["fldrelation"] = "Min" Or If resexam["fldrelation"] = "Max" Then
          If xexamcoll.Count = 0 Then
            xexamcoll.Add(resexam["fldrelation"] & "@" & resexam["fldvalquali"], xcolor & "@" & resexam["fldchild"])
          Else
            If xexamcoll.Exist(xcolor & "@" & resexam["fldchild"]) = True Then
              xexam = Split(xexamcoll[xcolor & "@" & resexam["fldchild"]], "@")
              $TriageExamCol.Add(xcolor & "@" & resexam["fldchild"] & "@" & "RANGE" & "@" & xexam[1] & ":" & resexam["fldvalquali"])
              xexamcoll.Remove(xcolor & "@" & resexam["fldchild"])
            Else
              xexamcoll.Add(resexam["fldrelation"] & "@" & resexam["fldvalquali"], xcolor & "@" & resexam["fldchild"])
            Endif
          Endif

        Else
          $TriageExamCol.Add(xcolor & "@" & resexam["fldchild"] & "@" & resexam["fldrelation"] & "@" & resexam["fldvalquali"])
        Endif
      Next
    Endif
    xexamcoll.Clear()

    ressymp = modDatabase.$medConn.Exec(sql, "Symptom", xcolor, modBasic.$compID, "%")
    If ressymp.Available Then
      For Each ressymp
        If ressymp["fldrelation"] = "Min" Or If ressymp["fldrelation"] = "Max" Then
          If xexamcoll.Count = 0 Then
            xexamcoll.Add(ressymp["fldrelation"] & "@" & CStr(ressymp["fldvalquanti"] * modDate.GetHoursValue(ressymp["flddiagnounit"])), xcolor & "@" & ressymp["fldchild"])
          Else
            If xexamcoll.Exist(xcolor & "@" & ressymp["fldchild"]) = True Then
              xexam = Split(xexamcoll[xcolor & "@" & ressymp["fldchild"]], "@")
              $TriageSympCol.Add(xcolor & "@" & ressymp["fldchild"] & "@" & "RANGE" & "@" & xexam[1] & ":" & CStr(ressymp["fldvalquanti"] * modDate.GetHoursValue(ressymp["flddiagnounit"])))
              xexamcoll.Remove(xcolor & "@" & ressymp["fldchild"])
            Else
              xexamcoll.Add(ressymp["fldrelation"] & "@" & CStr(ressymp["fldvalquanti"] * modDate.GetHoursValue(ressymp["flddiagnounit"])), xcolor & "@" & ressymp["fldchild"])
            Endif
          Endif

        Else
          $TriageSympCol.Add(xcolor & "@" & ressymp["fldchild"] & "@" & ressymp["fldrelation"] & "@" & CStr(ressymp["fldvalquanti"] * modDate.GetHoursValue(ressymp["flddiagnounit"])))
        Endif
      Next
    Endif
    xexamcoll.Clear()

  Next

End

''====================== GENERAL =============================
Public Function GetFoodTableValue(strFood As String, sField As String) As Float

  Dim res As Result
  Dim xxx As Float

  res = modDatabase.$medConn.Exec(Subst("select &1 as col from tblfoodcontent", sField) & " where fldfoodid=&1", strFood)
  If res.Available Then
    If res["col"] Then
      xxx = res["col"]
    Else
      xxx = 0
    Endif
  Else
    xxx = 0
  Endif
  Return xxx

End

Public Function GetPOCoponentFood(sItem As String, sType As String, sField As String, sAmt As Float) As Float

  Dim totfld As Float
  Dim res1 As Result

  If sAmt Then
    If sType = "Mixture" Then
      totfld = 0
      res1 = modDatabase.$medConn.Exec("select flditemname,flditemamt from tblfoodgroup where fldgroup=&1", sItem)
      If res1.Available Then
        For Each res1
          If res1!flditemamt Then
            totfld = totfld + res1["flditemamt"] * (GetFoodTableValue(res1["flditemname"], sField) * sAmt) / 100
          Endif
        Next
      Endif

    Else
      totfld = (GetFoodTableValue(sItem, sField) * sAmt) / 100
    Endif
  Else
    totfld = 0
  Endif

  Return Round(totfld, -3)

End

Public Function GetNutritionValue(sType As String, sItem As String, sAmt As Float, sField As String) As Float

  Dim totfld As Float
  Dim res1 As Result

  If sType = "Mixture" Then
    totfld = 0
    res1 = modDatabase.$medConn.Exec("select flditemname,flditemamt from tblfoodgroup where fldgroup=&1", sItem)
    If res1.Available Then
      For Each res1
        If res1!flditemamt Then
          totfld = totfld + res1["flditemamt"] * (modFixPatho.GetFoodTableValue(res1["flditemname"], sField) * sAmt) / 100
        Endif
      Next
    Endif

  Else
    totfld = (modFixPatho.GetFoodTableValue(sItem, sField) * sAmt) / 100
  Endif
  Return Round(totfld, -3)

End

''================== Demographics =========================
Public Function GetDemographicType(sItem As String) As String

  Dim res As Result
  Dim xx As String

  res = modDatabase.$medConn.Exec("select fldoption from tbldemographic where flddemoid=&1", sItem)
  If res.Available Then
    If res["fldoption"] Then
      xx = res["fldoption"]
    Else
      xx = ""
    Endif
  Else
    xx = ""
  Endif
  Return xx

End

Public Function GetDemographicOptionList(sName As String, sType As String) As String[]

  Dim res As Result
  Dim opt As String[]

  If sType = "Dichotomous" Then
    opt = ["Yes", "No"]
  Else
    res = modDatabase.$medConn.Exec("select fldanswer from tbldemogoption where flddemoid=&1 and fldanswertype like &2 ORDER BY fldindex", sName, sType)
    opt = modControlSub.GetDirectFillresult(res)
  Endif

  Return opt

End
