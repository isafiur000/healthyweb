' Gambas module file

''====================== USER COLLECTION ======================
Public Function ShowUserCollection(sid As Long, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim asx As New String[0]
  Dim xbillamt As Float
  Dim xrecvamt As Float
  Dim xvoucamt As Float
  Dim xdeficit As Float

  res = modDatabase.$syConn.Exec("select fldtime,fldcashier,fldshift,fldfrominvoice,fldtoinvoice,fldfromreceipt,fldtoreceipt,fldfromvouch,fldtovouch,fldbillamt,fldretinvoice,fldretamt,fldrecvamt,flddenomination,flduserid_verify,fldtime_verify from tblusercollection where fldid=&1", sid)                                                                                        ''
  If res.Available Then
    $BillingReport = New CReportHTML([("CATEGORY"), ("VALUES")], "", "")
    $BillingReport.UserData.Add("CASH HANDOVER", "PARAM1")
    $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate), "PARAM2")

    If res["fldfrominvoice"] And If res["fldtoinvoice"] Then
      xbillamt = modNonMedical.GetInvoiceAmountBetweenBills(res["fldcashier"], res["fldfrominvoice"], res["fldtoinvoice"], "%", $tblpatbilldetail)
    Endif
    If res["fldfromreceipt"] And If res["fldtoreceipt"] Then
      xrecvamt = modNonMedical.GetReceiptAmountBetweenBills(res["fldcashier"], res["fldfromreceipt"], res["fldtoreceipt"], "%", $tbltempbilldetail)
    Endif
    If res["fldfromvouch"] And If res["fldtovouch"] Then
      xvoucamt = modNonMedical.GetVoucherAmountBetweenBills(res["fldcashier"], res["fldfromvouch"], res["fldtovouch"], "%")
    Endif
    xdeficit = xbillamt + xrecvamt + xvoucamt - (res["fldrecvamt"] + res["fldretamt"])

    With asx
      .Add("Handover User ID")
      .Add(res["fldcashier"] & " [" & modGeneral.GetUserFullName(res["fldcashier"]) & "]")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Shift")
      .Add(res["fldshift"])
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Invoice")
      .Add(res["fldfrominvoice"] & " TO " & res["fldtoinvoice"])
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Receipt")
      .Add(res["fldfromreceipt"] & " TO " & res["fldtoreceipt"])
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    If res["fldfromvouch"] Or If res["fldtovouch"] Then
      With asx
        .Add("Others")
        .Add(res["fldfromvouch"] & " TO " & res["fldtovouch"])
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    With asx
      .Add("Invoice Refunds")
      .Add(modString.GetRichTableStringFromVariant(["Invoice", "Amount"], modNonMedical.GetReturnInvoiceBetweenBills(res["fldcashier"], res["fldfrominvoice"], res["fldtoinvoice"], "%", $tblpatbilldetail)))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Receipt Refunds")
      .Add(modString.GetRichTableStringFromVariant(["Receipt", "Amount"], modNonMedical.GetReturnReceiptBetweenBills(res["fldcashier"], res["fldfromreceipt"], res["fldtoreceipt"], "%", $tbltempbilldetail)))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Other Cash")
      .Add(modReportVar.GetLocaleNumberFormat(res["fldretamt"], gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Submitted Cash")
      .Add(modReportVar.GetLocaleNumberFormat(res["fldrecvamt"], gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Denomination")
      .Add(modMisc.GetDenominationString(res["flddenomination"], res["fldbillamt"]))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Deposit To")
      .Add(res["fldretinvoice"])
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Total Cash Collected")
      .Add(modReportVar.GetLocaleNumberFormat(res["fldretamt"] + res["fldrecvamt"], gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    If xdeficit > 0 Then
      With asx
        .Add("Cash Deficit")
        .Add(modReportVar.GetLocaleNumberFormat(xdeficit, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    With asx
      .Add("Takeover User")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    With asx
      .Add("Verification")
      .Add(res["flduserid_verify"] & "[" & modReportVar.GetDateTimeReport(res["fldtime_verify"], gb.GeneralDate) & "]")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    Return $BillingReport.NewHTMLPath()
  Endif

End

Public Function ShowUserDeficitReport(xUser As String, dtfir As Date, dtlast As Date, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim res1 As Result
  Dim asx As New String[0]
  Dim xtotinvoice As Float
  Dim xtotrecept As Float
  Dim xtotvouch As Float
  Dim xdeficit As Float

  Dim atotrecv As Float
  Dim atotinvoice As Float
  Dim atotrecept As Float
  Dim atotvouch As Float
  Dim adeficit As Float
  Dim acasshout As Float

  $BillingReport = New CReportHTML([("Date"), ("SHIFT"), ("TARGET"), ("INVOICE"), ("INVOICE"), ("INVOICE"), ("RECEIPT"), ("RECEIPT"), ("RECEIPT"), ("OTHER"), ("VOUCHER"), ("VOUCHER"), ("VOUCHER"), ("SUBMITTED"), ("OTHER CASH"), ("TOTAL"), ("DEFICIT"), ("VERIFIED")], "", "")
  $BillingReport.UserData.Add("USER DEFICIT REPORT", "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast, gb.MediumDate), "PARAM2")

  res1 = modDatabase.$syConn.Exec("select distinct(fldcashier) as fldcashier from tblusercollection where fldcashier like &1 and fldtime>&2 and fldtime<=&3 and fldsave=&4 ORDER BY fldcashier", xUser, modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), True)
  If res1.Available Then
    For Each res1

      $BillingReport.AddChapter(res1["fldcashier"] & " [" & modGeneral.GetUserFullName(res1["fldcashier"]) & "]")
      res = modDatabase.$syConn.Exec("select fldid,fldtime,fldshift,fldretinvoice,fldfrominvoice,fldtoinvoice,fldfromreceipt,fldtoreceipt,fldfromvouch,fldtovouch,fldbillamt,fldrecvamt,fldretamt,flduserid_verify from tblusercollection where fldtime>&1 and fldtime<=&2 and fldcashier=&3 and fldsave=&4", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), res1["fldcashier"], True)
      If res.Available Then

        atotrecv = 0
        atotinvoice = 0
        atotrecept = 0
        atotvouch = 0
        adeficit = 0
        acasshout = 0
        For Each res
          xtotinvoice = 0
          xtotrecept = 0
          xtotvouch = 0
          xdeficit = 0
          If res["fldfrominvoice"] And If res["fldtoinvoice"] Then
            xtotinvoice = modNonMedical.GetInvoiceAmountBetweenBills(res1["fldcashier"], res["fldfrominvoice"], res["fldtoinvoice"], "%", $tblpatbilldetail)
          Endif
          If res["fldfromreceipt"] And If res["fldtoreceipt"] Then
            xtotrecept = modNonMedical.GetReceiptAmountBetweenBills(res1["fldcashier"], res["fldfromreceipt"], res["fldtoreceipt"], "%", $tbltempbilldetail)
          Endif
          If res["fldfromvouch"] And If res["fldtovouch"] Then
            xtotvouch = modNonMedical.GetVoucherAmountBetweenBills(res1["fldcashier"], res["fldfromvouch"], res["fldtovouch"], "%")
          Endif
          xdeficit = xtotinvoice + xtotrecept + xtotvouch - (res["fldrecvamt"] + res["fldretamt"])

          atotrecv = atotrecv + res["fldrecvamt"]
          acasshout = acasshout + res["fldretamt"]
          atotinvoice = atotinvoice + xtotinvoice
          atotrecept = atotrecept + xtotrecept
          atotvouch = atotvouch + xtotvouch
          adeficit = adeficit + xdeficit
          With asx
            .Add(modReportVar.GetDateTimeReport(res["fldtime"], gb.GeneralDate))
            .Add(res["fldshift"])
            .Add(res["fldretinvoice"])
            .Add(res["fldfrominvoice"])
            .Add(res["fldtoinvoice"])
            .Add(xtotinvoice)
            .Add(res["fldfromreceipt"])
            .Add(res["fldtoreceipt"])
            .Add(xtotrecept)
            .Add(res["fldfromvouch"])
            .Add(res["fldtovouch"])
            .Add(xtotvouch)
            .Add(xtotinvoice + xtotrecept + xtotvouch)
            .Add(res["fldrecvamt"])
            .Add(res["fldretamt"])
            .Add(res["fldrecvamt"] + res["fldretamt"])
            .Add(xdeficit)
            .Add(res["flduserid_verify"])
          End With
          $BillingReport.Add(asx)
          asx.Clear()
        Next

        With asx
          .Add("")
          .Add("")
          .Add(res1["fldcashier"])
          .Add("")
          .Add("")
          .Add(atotinvoice)
          .Add("")
          .Add("")
          .Add(atotrecept)
          .Add("")
          .Add("")
          .Add(atotvouch)
          .Add(atotinvoice + atotrecept + atotvouch)
          .Add(atotrecv)
          .Add(acasshout)
          .Add(atotrecv + acasshout)
          .Add(adeficit)
          .Add("")
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        With asx
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
          .Add("***")
        End With
        $BillingReport.Add(asx)
        asx.Clear()

      Endif

    Next
  Endif
  Return $BillingReport.NewHTMLPath()

End

Public Function ShowUserDeficitActual(xUser As String, dtfir As Date, dtlast As Date, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim res1 As Result
  Dim asx As New String[0]
  Dim xtotinvoice As Float
  Dim xtotrecept As Float
  Dim xtotvouch As Float
  Dim xdeficit As Float

  Dim atotinvoice As Float
  Dim atotrecept As Float
  Dim atotvouch As Float
  Dim atotrecv As Float
  Dim acasshout As Float
  Dim adeficit As Float

  Dim resx1 As Result
  Dim xfirinv As String
  Dim xlastinv As String
  Dim resx2 As Result
  Dim xfirrecp As String
  Dim xlstrecp As String
  Dim resx3 As Result
  Dim xfirvouch As String
  Dim xlastvouch As String
  Dim xsubmt As Float
  Dim xcashout As Float

  ''last invoice asn receipts
  resx1 = modDatabase.$syConn.Exec("select fldbillno from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast))
  If resx1.Available Then
    resx1.MoveFirst
    xfirinv = resx1["fldbillno"]
    resx1.MoveLast
    xlastinv = resx1["fldbillno"]
  Endif
  resx2 = modDatabase.$syConn.Exec("select fldbillno from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast))
  If resx2.Available Then
    resx2.MoveFirst
    xfirrecp = resx2["fldbillno"]
    resx2.MoveLast
    xlstrecp = resx2["fldbillno"]
  Endif
  resx3 = modDatabase.$syConn.Exec("select fldreference from tblextrareceipt where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast))
  If resx3.Available Then
    resx3.MoveFirst
    xfirvouch = resx3["fldreference"]
    resx3.MoveLast
    xlastvouch = resx3["fldreference"]
  Endif

  $BillingReport = New CReportHTML([("USER"), ("INVOICE"), ("RECEIPT"), ("VOUCHERS"), ("TOTAL"), ("SUBMITTED"), ("OTHER CASH"), ("TOTAL"), ("DEFICIT")], "", "")
  If xfirvouch Or If xlastvouch Then
    $BillingReport.UserData.Add("INVOICE: " & xfirinv & " TO " & xlastinv & "  RECEIPT: " & xfirrecp & " TO " & xlstrecp & " OTHER: " & xfirvouch & " TO " & xlastvouch, "PARAM1")
  Else
    $BillingReport.UserData.Add("INVOICE: " & xfirinv & " TO " & xlastinv & "  RECEIPT: " & xfirrecp & " TO " & xlstrecp, "PARAM1")
  Endif
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(dtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast, gb.MediumDate), "PARAM2")

  atotinvoice = 0
  atotrecept = 0
  atotvouch = 0
  atotrecv = 0
  acasshout = 0
  adeficit = 0
  res1 = modDatabase.$syConn.Exec("select distinct(fldcashier) as fldcashier from tblusercollection where fldcashier like &1 and fldtime>&2 and fldtime<=&3 and fldsave=&4 ORDER BY fldcashier", xUser, modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), True)
  If res1.Available Then
    For Each res1

      res = modDatabase.$syConn.Exec("select SUM(fldrecvamt) as fldrecvamt,SUM(fldretamt) as fldretamt from tblusercollection where fldtime>&1 and fldtime<=&2 and fldcashier=&3 and fldsave=&4", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), res1["fldcashier"], True)
      If res.Available Then
        xtotinvoice = 0
        xtotrecept = 0
        xtotvouch = 0
        xsubmt = 0
        xcashout = 0
        xdeficit = 0
        If res["fldrecvamt"] Then
          xsubmt = res["fldrecvamt"]
        Endif
        If res["fldretamt"] Then
          xcashout = res["fldretamt"]
        Endif

        If xfirinv And If xlastinv Then
          xtotinvoice = modNonMedical.GetInvoiceAmountBetweenBills(res1["fldcashier"], xfirinv, xlastinv, "%", $tblpatbilldetail)
        Endif
        If xfirrecp And If xlstrecp Then
          xtotrecept = modNonMedical.GetReceiptAmountBetweenBills(res1["fldcashier"], xfirrecp, xlstrecp, "%", $tbltempbilldetail)
        Endif
        If xfirvouch And If xlastvouch Then
          xtotvouch = modNonMedical.GetVoucherAmountBetweenBills(res1["fldcashier"], xfirvouch, xlastvouch, "%")
        Endif
        xdeficit = xtotinvoice + xtotrecept + xtotvouch - (xsubmt + xcashout)

        atotinvoice = atotinvoice + xtotinvoice
        atotrecept = atotrecept + xtotrecept
        atotvouch = atotvouch + xtotvouch
        atotrecv = atotrecv + xsubmt
        acasshout = acasshout + xcashout
        adeficit = adeficit + xdeficit
        With asx
          .Add(res1["fldcashier"])
          .Add(xtotinvoice)
          .Add(xtotrecept)
          .Add(xtotvouch)
          .Add(xtotinvoice + xtotrecept + xtotvouch)
          .Add(xsubmt)
          .Add(xcashout)
          .Add(xsubmt + xcashout)
          .Add(xdeficit)
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif

    Next
  Endif

  With asx
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  With asx
    .Add("TOTAL")
    .Add(atotinvoice)
    .Add(atotrecept)
    .Add(atotvouch)
    .Add(atotinvoice + atotrecept + atotvouch)
    .Add(atotrecv)
    .Add(acasshout)
    .Add(atotrecv + acasshout)
    .Add(adeficit)
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  Return $BillingReport.NewHTMLPath()

End

Public Function GetUserCollectionCashCredit(dtfir As Date, dtlast As Date, $tblpatbilling As String, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim xDateList As String[]
  Dim xdate As Date
  Dim xUserList As String[]
  Dim xuser As String
  Dim aList As String[]
  Dim bList As String[]
  Dim cList As String[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result
  Dim res5 As Result

  Dim xinvCash As Float
  Dim xdeposit As Float
  Dim xrecpCash As Float
  Dim xinvCredit As Float
  Dim xrecpCredit As Float

  Dim ainvCash As Float
  Dim adeposit As Float
  Dim arecpCash As Float
  Dim ainvCredit As Float
  Dim arecpCredit As Float

  $BillingReport = New CReportHTML([("Date"), ("USER"), ("CASH INVOICE"), ("DEPOSIT"), ("HOSPITAL CASH"), ("CASH RECEIPT"), ("TOTAL CASH"), ("CREDIT INVOICE"), ("CREDIT RECEIPT"), ("TOTAL CREDIT"), ("NET TOTAL")], "", "")
  $BillingReport.UserData.Add("USER COLLECTION REPORT", "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast, gb.MediumDate), "PARAM2")

  ainvCash = 0
  adeposit = 0
  arecpCash = 0
  ainvCredit = 0
  arecpCredit = 0
  xDateList = modDate.GetSelectDateArrayBetween(gb.Day, dtfir, dtlast)
  For Each xdate In xDateList
    $BillingReport.AddChapter(modReportVar.GetDateTimeReport(xdate, gb.MediumDate))

    aList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(lower(flduserid)) as col from " & $tblpatbilling & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate)))
    bList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(lower(flduserid)) as col from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate)))
    aList.Insert(bList)
    cList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(lower(flduserid)) as col from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate)))
    aList.Insert(cList)
    xUserList = modString.BinaryDistinctStringArray(aList)
    If xUserList Then
      xUserList.Sort()
    Endif
    For Each xuser In xUserList
      xinvCash = 0
      xdeposit = 0
      xrecpCash = 0
      xinvCredit = 0
      xrecpCredit = 0

      res1 = modDatabase.$syConn.Exec("select SUM(fldreceivedamt) as totamt from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)                                      ''
      If res1.Available And If res1["totamt"] Then
        xinvCash = res1["totamt"]
      Else
        xinvCash = 0
      Endif

      res2 = modDatabase.$syConn.Exec("Select SUM(fldcurdeposit) As totamt from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)
      If res2.Available And If res2["totamt"] Then
        xdeposit = res2["totamt"]
      Else
        xdeposit = 0
      Endif

      res3 = modDatabase.$syConn.Exec("select SUM(fldreceivedamt) as totamt from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)
      If res3.Available And If res3["totamt"] Then
        xrecpCash = res3["totamt"]
      Else
        xrecpCash = 0
      Endif

      res4 = modDatabase.$syConn.Exec("select SUM((flditemrate*flditemqty)-flddiscamt+fldtaxamt) as totamt from " & $tblpatbilling & " where fldsave=&1 and fldtime>=&2 and fldtime<=&3 and flduserid=&4 and fldbilltype=&5", True, modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser, "Credit")
      If res4.Available And If res4["totamt"] Then
        xinvCredit = res4["totamt"]
      Else
        xinvCredit = 0
      Endif

      res5 = modDatabase.$syConn.Exec("select SUM((flditemrate*flditemqty)-flddiscamt+fldtaxamt) as totamt from " & $tblpatbilling & " where fldsave=&1 and fldtime>=&2 and fldtime<=&3 and flduserid=&4 and fldbilltype=&5", True, modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser, "Credit")
      If res5.Available And If res5["totamt"] Then
        xrecpCredit = res5["totamt"]
      Else
        xrecpCredit = 0
      Endif

      ainvCash = ainvCash + xinvCash
      adeposit = adeposit + xdeposit
      arecpCash = arecpCash + xrecpCash
      ainvCredit = ainvCredit + xinvCredit
      arecpCredit = arecpCredit + xrecpCredit
      With asx
        .Add(modReportVar.GetDateTimeReport(xdate, gb.MediumDate))
        .Add(xuser)
        .Add(xinvCash)
        .Add(xdeposit)
        .Add(xinvCash + xdeposit)
        .Add(xrecpCash)
        .Add(xinvCash + xdeposit + xrecpCash)

        .Add(xinvCredit)
        .Add(xrecpCredit)
        .Add(xinvCredit + xrecpCredit)
        .Add(xinvCash + xdeposit + xrecpCash + xinvCredit + xrecpCredit)
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
  Next

  With asx
    .Add("TOTAL")
    .Add("")
    .Add(ainvCash)
    .Add(adeposit)
    .Add(ainvCash + adeposit)
    .Add(arecpCash)
    .Add(ainvCash + adeposit + arecpCash)

    .Add(ainvCredit)
    .Add(arecpCredit)
    .Add(ainvCredit + arecpCredit)
    .Add(ainvCash + adeposit + arecpCash + ainvCredit + arecpCredit)
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  Return $BillingReport.NewHTMLPath()

End

Public Function GetUserCollectionDateWise(dtfir As Date, dtlast As Date, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]
  Dim xDateList As String[]
  Dim xdate As Date
  Dim xUserList As String[]
  Dim xuser As String
  Dim aList As String[]
  Dim bList As String[]
  Dim cList As String[]

  Dim res1 As Result
  Dim res2 As Result
  Dim res3 As Result
  Dim res4 As Result
  Dim res5 As Result

  Dim xinvCash As Float
  Dim xdeposit As Float
  Dim xrecpCash As Float
  Dim xvoucCash As Float
  Dim xsubmit As Float
  Dim xcashout As Float
  Dim xshift As String[]

  Dim ainvCash As Float
  Dim adeposit As Float
  Dim arecpCash As Float
  Dim aVouCash As Float
  Dim asubmit As Float
  Dim acashout As Float

  Dim binvCash As Float
  Dim bdeposit As Float
  Dim brecpCash As Float
  Dim bVouCash As Float
  Dim bsubmit As Float
  Dim bcashout As Float

  $BillingReport = New CReportHTML([("DATE"), ("USER"), ("SHIFT"), ("CASH INVOICE"), ("DEPOSIT"), ("CASH RECEIPT"), ("VOUVHERS"), ("TOTAL CASH"), ("CASH SUBMISSION"), ("OTHER CASH"), ("TOTAL SUBMISSION"), ("DEFICIT")], "", "")
  $BillingReport.UserData.Add("USER COLLECTION REPORT", "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast, gb.MediumDate), "PARAM2")

  binvCash = 0
  bdeposit = 0
  brecpCash = 0
  bVouCash = 0
  bsubmit = 0
  bcashout = 0
  xDateList = modDate.GetSelectDateArrayBetween(gb.Day, dtfir, dtlast)
  For Each xdate In xDateList
    $BillingReport.AddChapter(modReportVar.GetDateTimeReport(xdate, gb.MediumDate))
    ainvCash = 0
    adeposit = 0
    arecpCash = 0
    aVouCash = 0
    asubmit = 0
    acashout = 0

    aList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(lower(flduserid)) as col from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate)))
    bList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(lower(flduserid)) as col from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate)))
    cList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select distinct(lower(flduserid)) as col from tblextrareceipt where fldtime>=&1 and fldtime<=&2", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate)))
    aList.Insert(bList)
    aList.Insert(cList)
    xUserList = modString.BinaryDistinctStringArray(aList)
    If xUserList Then
      xUserList.Sort()
    Endif
    For Each xuser In xUserList
      xinvCash = 0
      xdeposit = 0
      xrecpCash = 0
      xvoucCash = 0
      xsubmit = 0
      xcashout = 0
      xshift = New String[]

      res1 = modDatabase.$syConn.Exec("select SUM(fldreceivedamt) as totamt from " & $tblpatbilldetail & " where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)                                      ''
      If res1.Available And If res1["totamt"] Then
        xinvCash = res1["totamt"]
      Else
        xinvCash = 0
      Endif

      res2 = modDatabase.$syConn.Exec("Select SUM(fldcurdeposit) As totamt from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)
      If res2.Available And If res2["totamt"] Then
        xdeposit = res2["totamt"]
      Else
        xdeposit = 0
      Endif

      res3 = modDatabase.$syConn.Exec("select SUM(fldreceivedamt) as totamt from " & $tbltempbilldetail & " where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)
      If res3.Available And If res3["totamt"] Then
        xrecpCash = res3["totamt"]
      Else
        xrecpCash = 0
      Endif

      res5 = modDatabase.$syConn.Exec("select SUM(fldpayamount) as totamt from tblextrareceipt where fldtime>=&1 and fldtime<=&2 and flduserid=&3", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser)
      If res5.Available And If res5["totamt"] Then
        xvoucCash = res5["totamt"]
      Else
        xvoucCash = 0
      Endif

      ''user
      res4 = modDatabase.$syConn.Exec("select fldshift,fldrecvamt,fldretamt from tblusercollection where fldtime>&1 and fldtime<=&2 and fldcashier=&3 and fldsave=&4", modDate.StartSqlDate(xdate), modDate.EndSqlDate(xdate), xuser, True)
      If res4.Available Then
        For Each res4
          xsubmit = xsubmit + res4["fldrecvamt"]
          xcashout = xcashout + res4["fldretamt"]
          xshift.Add(res4["fldshift"])
        Next
      Endif

      ainvCash = ainvCash + xinvCash
      adeposit = adeposit + xdeposit
      arecpCash = arecpCash + xrecpCash
      aVouCash = aVouCash + xvoucCash
      asubmit = asubmit + xsubmit
      acashout = acashout + xcashout
      With asx
        .Add(modReportVar.GetDateTimeReport(xdate, gb.MediumDate))
        .Add(xuser)
        .Add(xshift.Join("; "))
        .Add(xinvCash)
        .Add(xdeposit)
        .Add(xrecpCash)
        .Add(xvoucCash)
        .Add(xinvCash + xdeposit + xrecpCash + xvoucCash)

        .Add(xsubmit)
        .Add(xcashout)
        .Add(xsubmit + xcashout)
        .Add(xinvCash + xdeposit + xrecpCash + xvoucCash - (xsubmit + xcashout))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next

    binvCash = binvCash + ainvCash
    bdeposit = bdeposit + adeposit
    brecpCash = brecpCash + arecpCash
    bVouCash = bVouCash + aVouCash
    bsubmit = bsubmit + asubmit
    bcashout = bcashout + acashout
    With asx
      .Add(modReportVar.GetDateTimeReport(xdate, gb.MediumDate))
      .Add("TOTAL")
      .Add("")
      .Add(ainvCash)
      .Add(adeposit)
      .Add(arecpCash)
      .Add(aVouCash)
      .Add(ainvCash + adeposit + arecpCash + aVouCash)

      .Add(asubmit)
      .Add(acashout)
      .Add(asubmit + acashout)
      .Add(ainvCash + adeposit + arecpCash + aVouCash - (asubmit + acashout))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")

      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  With asx
    .Add("")
    .Add("GRAND TOTAL")
    .Add("")
    .Add(binvCash)
    .Add(bdeposit)
    .Add(brecpCash)
    .Add(bVouCash)
    .Add(binvCash + bdeposit + brecpCash + bVouCash)

    .Add(bsubmit)
    .Add(bcashout)
    .Add(bsubmit + bcashout)
    .Add(binvCash + bdeposit + brecpCash + bVouCash - (bsubmit + bcashout))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  Return $BillingReport.NewHTMLPath()

End

Public Function GetGroupWiseHorizontalCollection(dtfir As Date, dtlast As Date, xStatus As String, $tblpatbilling As String, $tblpatbilldetail As String, $tbltempbilldetail As String, Optional xState As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]
  Dim aHead As String[]
  Dim resx As Result
  Dim Row As Integer

  Dim bill1 As String
  Dim bill2 As String
  Dim recp1 As String
  Dim recp2 As String
  Dim bilid1 As Long
  Dim bilid2 As Long
  Dim recpid1 As Long
  Dim recpid2 As Long

  Dim grpname As String
  Dim grpList As String[]
  Dim rex1 As Result
  Dim resc As Result

  Dim deptot As Float
  Dim usrcrdt As Float
  Dim usrcash As Float
  Dim acrdt As Float
  Dim acash As Float

  Dim xcrdtcash As Float
  Dim xvoucCash As Float
  Dim xPackList As String[]
  Dim xscheme As String
  Dim recr As Result

  Dim xqrrecep As Float
  Dim xqrinvc As Float

  grpList = modNonMedical.GetGroupNameAccount()
  xPackList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldacledger as col from tblacledger where fldbilltype=&1", "Credit"))

  aHead = New String[]
  aHead.Add("SNo")
  aHead.Add("UserID")
  aHead.Add("User Name")
  aHead.Add("Cash Collected")
  aHead.Add("Invoices")
  aHead.Add("Receipts")
  aHead.Add("Vouchers")

  For Each grpname In grpList
    aHead.Add(grpname)
  Next
  aHead.Add("Not Grouped")
  aHead.Add("<b>TOTAL</b>")

  aHead.Add("<b>CASH SALES</b>")
  aHead.Add("Cash From Credit")
  aHead.Add("Due Clearance")
  aHead.Add("Deposits")
  aHead.Add("Cash Vouchers")
  aHead.Add("<b>Cash  Total</b>")
  aHead.Add("Online Cash")
  aHead.Add("Submission")

  aHead.Add("<b>CREDIT SALES</b>")
  aHead.Add("Cash From Credit")
  aHead.Add("<b>Credit Total</b>")
  aHead.Add("<b>CREDIT SUMMARY</b>")
  aHead.Insert(xPackList)

  $BillingReport = New CReportHTML(aHead, "", "")
  $BillingReport.UserData.Add("GROUP WISE COLLECTION REPORT ", "PARAM1")
  $BillingReport.UserData.Add("Date: " & modReportVar.GetDateTimeReport(dtfir, gb.MediumDate) & " TO " & modReportVar.GetDateTimeReport(dtlast, gb.MediumDate), "PARAM2")

  Row = 1
  If xStatus = "Waiting" Then
    resx = modDatabase.$syConn.Exec("select fldid,fldcashier,fldrecvamt,fldretamt,fldbillamt,fldshift,fldfrominvoice,fldtoinvoice,fldfromreceipt,fldtoreceipt,fldfromvouch,fldtovouch,fldstatus,flduserid_verify from tblusercollection where fldtime>=&1 and fldtime<=&2 and fldsave=&3 and fldstatus=&4", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), False, "Waiting")
  Else If xStatus = "Verified" Then
    resx = modDatabase.$syConn.Exec("select fldid,fldcashier,fldrecvamt,fldretamt,fldbillamt,fldshift,fldfrominvoice,fldtoinvoice,fldfromreceipt,fldtoreceipt,fldfromvouch,fldtovouch,fldstatus,flduserid_verify from tblusercollection where fldtime_verify>=&1 and fldtime_verify<=&2 and fldsave=&3 and fldstatus=&4", modDate.StartSqlDate(dtfir), modDate.EndSqlDate(dtlast), True, "Verified")
  Endif
  If resx.Available Then
    For Each resx
      usrcash = 0
      usrcrdt = 0
      deptot = 0

      With asx
        .Add(CStr(Row))
        .Add(resx["fldcashier"])
        .Add(UCase(modGeneral.GetUserFullName(resx["fldcashier"])))
        .Add(modReportVar.GetLocaleNumberFormat(resx["fldrecvamt"], gb.Currency))
        .Add(resx["fldfrominvoice"] & " - " & resx["fldtoinvoice"])
        .Add(resx["fldfromreceipt"] & " - " & resx["fldtoreceipt"])
        .Add(resx["fldfromvouch"] & " - " & resx["fldtovouch"])

        bill1 = resx["fldfrominvoice"]
        bilid1 = modNonMedical.GetBillIDFromBillNo(bill1, $tblpatbilldetail)
        bill2 = resx["fldtoinvoice"]
        bilid2 = modNonMedical.GetBillIDFromBillNo(bill2, $tblpatbilldetail)
        If resx["fldfromreceipt"] Or If resx["fldtoreceipt"] Then
          recp1 = resx["fldfromreceipt"]
          recpid1 = modNonMedical.GetBillIDFromReceipt(recp1, $tbltempbilldetail)
          recp2 = resx["fldtoreceipt"]
          recpid2 = modNonMedical.GetBillIDFromReceipt(recp2, $tbltempbilldetail)
        Endif
        If xState Then
          xqrinvc = modNonMedical.GetQRInvoiceAmountBetweenBillsState(resx["fldcashier"], bill1, bill2, "%", xState, $tblpatbilldetail)
          xqrrecep = modNonMedical.GetQRReceiptAmountBetweenBillsState(resx["fldcashier"], recp1, recp2, "%", xState, $tbltempbilldetail)
        Else
          xqrinvc = modNonMedical.GetQRInvoiceAmountBetweenBills(resx["fldcashier"], bill1, bill2, "%", $tblpatbilldetail)
          xqrrecep = modNonMedical.GetQRReceiptAmountBetweenBills(resx["fldcashier"], recp1, recp2, "%", $tbltempbilldetail)
        Endif

        For Each grpname In grpList
          acash = 0
          acrdt = 0
          If xState Then
            acash = modCHTMLInvoice.GetItemAmtByParamState(modDatabase.$syConn, $tblpatbilldetail, grpname, bilid1, bilid2, resx["fldcashier"], "%", "Cash", xState, $tblpatbilling)
            acrdt = modCHTMLInvoice.GetItemAmtByParamState(modDatabase.$syConn, $tblpatbilldetail, grpname, bilid1, bilid2, resx["fldcashier"], "%", "Credit", xState, $tblpatbilling)
          Else
            acash = modCHTMLInvoice.GetItemAmtByParam(modDatabase.$syConn, $tblpatbilldetail, grpname, bilid1, bilid2, resx["fldcashier"], "%", "Cash", $tblpatbilling)
            acrdt = modCHTMLInvoice.GetItemAmtByParam(modDatabase.$syConn, $tblpatbilldetail, grpname, bilid1, bilid2, resx["fldcashier"], "%", "Credit", $tblpatbilling)
          Endif
          usrcash = usrcash + acash
          usrcrdt = usrcrdt + acrdt
          deptot = deptot + acash + acrdt
          .Add(modReportVar.GetLocaleNumberFormat(acash + acrdt, gb.Currency))
        Next
        ''Not grouped
        acash = 0
        acrdt = 0
        If xState Then
          acash = modCHTMLInvoice.GetNullAmtByParamState(modDatabase.$syConn, $tblpatbilldetail, bilid1, bilid2, resx["fldcashier"], "%", "Cash", xState, $tblpatbilling)
          acrdt = modCHTMLInvoice.GetNullAmtByParamState(modDatabase.$syConn, $tblpatbilldetail, bilid1, bilid2, resx["fldcashier"], "%", "Credit", xState, $tblpatbilling)
        Else
          acash = modCHTMLInvoice.GetNullAmtByParam(modDatabase.$syConn, $tblpatbilldetail, bilid1, bilid2, resx["fldcashier"], "%", "Cash", $tblpatbilling)
          acrdt = modCHTMLInvoice.GetNullAmtByParam(modDatabase.$syConn, $tblpatbilldetail, bilid1, bilid2, resx["fldcashier"], "%", "Credit", $tblpatbilling)
        Endif
        usrcash = usrcash + acash
        usrcrdt = usrcrdt + acrdt
        deptot = deptot + acash + acrdt
        .Add(modReportVar.GetLocaleNumberFormat(acash + acrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(deptot, gb.Currency))

        '''---------Cash Department
        .Add("")
        ''cash from credit
        xcrdtcash = 0
        If xState Then
          xcrdtcash = modIDFinance.GetIDInvoiceCreditCashUserState(modDatabase.$syConn, bilid1, bilid2, resx["fldcashier"], "%", "", "", xState, $tblpatbilldetail)
        Else
          xcrdtcash = modIDFinance.GetIDInvoiceCreditCash(modDatabase.$syConn, bilid1, bilid2, resx["fldcashier"], "%", "", "", $tblpatbilldetail)
        Endif
        usrcash = usrcash + xcrdtcash
        .Add(modReportVar.GetLocaleNumberFormat(xcrdtcash, gb.Currency))

        ''Due Clearance
        If xState Then
          If xState = "OPD" Then
            resc = modDatabase.$syConn.Exec("select sum(fldreceivedamt) as totrecv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldprevdeposit=&6", "DCL%", bilid1, bilid2, resx["fldcashier"], "%", 1)
          Else If xState = "IPD" Then
            resc = modDatabase.$syConn.Exec("select sum(fldreceivedamt) as totrecv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldprevdeposit>&6", "DCL%", bilid1, bilid2, resx["fldcashier"], "%", 1)
          Endif
        Else
          resc = modDatabase.$syConn.Exec("select sum(fldreceivedamt) as totrecv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5", "DCL%", bilid1, bilid2, resx["fldcashier"], "%")
        Endif
        If resc.Available And If resc["totrecv"] Then
          usrcash = usrcash + resc["totrecv"]
          .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
        Else
          .Add("")
        Endif

        ''deposit
        If resx["fldfromreceipt"] Or If resx["fldtoreceipt"] Then
          If xState Then
            If xState = "OPD" Then
              rex1 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldprevdeposit=&6", "DET%", recpid1, recpid2, resx["fldcashier"], "%", 1)
            Else If xState = "IPD" Then
              rex1 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5 and fldprevdeposit>&6", "DET%", recpid1, recpid2, resx["fldcashier"], "%", 1)
            Endif
          Else
            rex1 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5", "DET%", recpid1, recpid2, resx["fldcashier"], "%")
          Endif
          If rex1.Available And If rex1["totdepo"] Then
            usrcash = usrcash + rex1["totdepo"]
            .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
          Else
            .Add("")
          Endif
        Else
          .Add("")
        Endif

        ''vouchers
        xvoucCash = 0
        If resx["fldfromvouch"] Or If resx["fldtovouch"] Then
          xvoucCash = modNonMedical.GetVoucherAmountBetweenBills(resx["fldcashier"], resx["fldfromvouch"], resx["fldtovouch"], "%")
          If xvoucCash Then
            usrcash = usrcash + xvoucCash
            .Add(modReportVar.GetLocaleNumberFormat(xvoucCash, gb.Currency))
          Else
            .Add("")
          Endif
        Else
          .Add("")
        Endif

        ''total
        .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xqrinvc + xqrrecep, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrcash - (xqrinvc + xqrrecep), gb.Currency))

        ''--------Credit Department
        .Add("")
        ''cash from credit
        usrcrdt = usrcrdt - xcrdtcash
        .Add(modReportVar.GetLocaleNumberFormat(0 - xcrdtcash, gb.Currency))

        ''total credit
        .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))

        ''------------ CREDIT SUMMARY
        .Add("")
        For Each xscheme In xPackList
          If xState Then
            If xState = "OPD" Then
              recr = modDatabase.$syConn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as xtot from " & $tblpatbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and fldbankname=&4 and flduserid like &5 and fldcomp like &6 and fldprevdeposit=&7", bilid1, bilid2, "Credit", xscheme, resx["fldcashier"], "%", 1)
            Else If xState = "IPD" Then
              recr = modDatabase.$syConn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as xtot from " & $tblpatbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and fldbankname=&4 and flduserid like &5 and fldcomp like &6 and fldprevdeposit>&7", bilid1, bilid2, "Credit", xscheme, resx["fldcashier"], "%", 1)
            Endif
          Else
            recr = modDatabase.$syConn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as xtot from " & $tblpatbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and fldbankname=&4 and flduserid like &5 and fldcomp like &6", bilid1, bilid2, "Credit", xscheme, resx["fldcashier"], "%")
          Endif
          If recr.Available And If recr["xtot"] Then
            .Add(modReportVar.GetLocaleNumberFormat(recr["xtot"], gb.Currency))
          Else
            .Add("")
          Endif
        Next

      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Next
  Endif

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

Public Function GetGroupWiseExpectedCollection(sUser As String, bill1 As String, bill2 As String, recp1 As String, recp2 As String, $tblpatbilling As String, $tblpatbilldetail As String, $tbltempbilldetail As String) As String

  Dim $BillingReport As CReportHTML
  Dim RepoPath As String
  Dim asx As New String[0]

  Dim bilid1 As Long
  Dim bilid2 As Long
  Dim recpid1 As Long
  Dim recpid2 As Long

  Dim grpname As String
  Dim grpList As String[]

  Dim rex1 As Result
  Dim rex2 As Result
  Dim resc As Result

  Dim comcrdt As Float
  Dim comcash As Float
  Dim comtotl As Float

  Dim usrcrdt As Float
  Dim usrcash As Float
  Dim usrtotl As Float

  Dim acrdt As Float
  Dim acash As Float
  Dim atotl As Float

  Dim xcrdtcash As Float
  Dim xPackList As String[]
  Dim xscheme As String
  Dim recr As Result
  Dim xcredtot As Float

  Dim xcurrdepo As Float

  $BillingReport = New CReportHTML([("CATEGORY"), ("CREDIT"), ("CASH"), ("TOTAL")], "", "")
  $BillingReport.UserData.Add("COLLECTION REPORT  USER : " & sUser & " [" & UCase(modGeneral.GetUserFullName(sUser)) & "]", "PARAM1")
  $BillingReport.UserData.Add("INVOICE : " & bill1 & " TO " & bill2 & Space(3) & "RECEIPT : " & recp1 & " TO " & recp2, "PARAM2")

  grpList = modNonMedical.GetGroupNameAccount()
  bilid1 = modNonMedical.GetBillIDFromBillNo(bill1, $tblpatbilldetail)
  bilid2 = modNonMedical.GetBillIDFromBillNo(bill2, $tblpatbilldetail)
  recpid1 = modNonMedical.GetBillIDFromReceipt(recp1, $tbltempbilldetail)
  recpid2 = modNonMedical.GetBillIDFromReceipt(recp2, $tbltempbilldetail)

  comcrdt = 0
  comcash = 0
  comtotl = 0

  ''invoice
  If bilid1 And If bilid2 Then
    $BillingReport.AddChapter("INVOICE")
    usrcrdt = 0
    usrcash = 0
    usrtotl = 0

    ''departments
    For Each grpname In grpList
      acrdt = 0
      acash = 0
      atotl = 0
      acrdt = modCHTMLInvoice.GetItemAmtByParam(modDatabase.$syConn, $tblpatbilldetail, grpname, bilid1, bilid2, sUser, "%", "Credit", $tblpatbilling)
      acash = modCHTMLInvoice.GetItemAmtByParam(modDatabase.$syConn, $tblpatbilldetail, grpname, bilid1, bilid2, sUser, "%", "Cash", $tblpatbilling)
      atotl = acrdt + acash
      usrcrdt = usrcrdt + acrdt
      usrcash = usrcash + acash
      usrtotl = usrtotl + atotl
      If acrdt Or If acash Then
        With asx
          .Add(modString.HTMLBlankSpace(5) & grpname)
          .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
    Next

    acrdt = 0
    acash = 0
    atotl = 0
    acrdt = modCHTMLInvoice.GetNullAmtByParam(modDatabase.$syConn, $tblpatbilldetail, bilid1, bilid2, sUser, "%", "Credit", $tblpatbilling)
    acash = modCHTMLInvoice.GetNullAmtByParam(modDatabase.$syConn, $tblpatbilldetail, bilid1, bilid2, sUser, "%", "Cash", $tblpatbilling)
    atotl = acrdt + acash
    usrcrdt = usrcrdt + acrdt
    usrcash = usrcash + acash
    usrtotl = usrtotl + atotl
    If acrdt Or If acash Then
      With asx
        .Add(modString.HTMLBlankSpace(5) & "Not Grouped")
        .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''cash from credit
    xcrdtcash = 0
    xcrdtcash = modIDFinance.GetIDInvoiceCreditCash(modDatabase.$syConn, bilid1, bilid2, sUser, "%", "", "", $tblpatbilldetail)
    If xcrdtcash Then
      usrcrdt = usrcrdt - xcrdtcash
      usrcash = usrcash + xcrdtcash
      usrtotl = usrtotl + 0
      With asx
        .Add(modString.HTMLBlankSpace(5) & "Cash From Credit Invoice")
        .Add(0 - xcrdtcash)
        .Add(modReportVar.GetLocaleNumberFormat(xcrdtcash, gb.Currency))
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''sub total summary
    If usrcrdt Or If usrcash Then
      With asx
        .Add("Sub Total")
        .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("")
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''due clearance
    resc = modDatabase.$syConn.Exec("select sum(fldreceivedamt) as totrecv from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5", "DCL%", bilid1, bilid2, sUser, "%")
    If resc.Available And If resc["totrecv"] Then
      usrcash = usrcash + resc["totrecv"]
      usrtotl = usrtotl + resc["totrecv"]
      With asx
        .Add("Due Clearance")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
    ''deposit taken
    rex1 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit>&4 and flduserid like &5 and fldcomp like &6", "DEP%", bilid1, bilid2, 0, sUser, "%")
    If rex1.Available And If rex1["totdepo"] Then
      usrcash = usrcash + rex1["totdepo"]
      usrtotl = usrtotl + rex1["totdepo"]
      With asx
        .Add("Deposit Taken")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
    ''deposit return
    rex2 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tblpatbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit<&4 and flduserid like &5 and fldcomp like &6", "DEP%", bilid1, bilid2, 0, sUser, "%")
    If rex2.Available And If rex2["totdepo"] Then
      usrcash = usrcash + rex2["totdepo"]
      usrtotl = usrtotl + rex2["totdepo"]
      With asx
        .Add("Deposit Return")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    comcrdt = comcrdt + usrcrdt
    comcash = comcash + usrcash
    comtotl = comtotl + usrtotl
    With asx
      .Add("Invoice Total")
      .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("Total Cash from Invoice")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(modNonMedical.GetInvoiceAmountBetweenBills(sUser, bill1, bill2, "%", $tblpatbilldetail), gb.Currency))
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif   ''end invoice

  With asx
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  '''Credit sales report
  $BillingReport.AddChapter("CREDIT SALES FROM INVOICE")
  xPackList = modControlSub.GetDirectFillresult(modDatabase.$syConn.Exec("select fldacledger as col from tblacledger"))
  xcredtot = 0
  For Each xscheme In xPackList
    recr = modDatabase.$syConn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as xtot from " & $tblpatbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and fldbankname=&4 and flduserid like &5 and fldcomp like &6", bilid1, bilid2, "Credit", xscheme, sUser, "%")
    If recr.Available And If recr["xtot"] Then
      xcredtot = xcredtot + recr["xtot"]
      With asx
        .Add(modString.HTMLBlankSpace(5) & xscheme)
        .Add(modReportVar.GetLocaleNumberFormat(recr["xtot"], gb.Currency))
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
  Next
  With asx
    .Add("Total Credit Sales")
    .Add(modReportVar.GetLocaleNumberFormat(xcredtot, gb.Currency))
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  ''receipt
  If recpid1 And If recpid2 Then
    $BillingReport.AddChapter("RECEIPT")
    usrcrdt = 0
    usrcash = 0
    usrtotl = 0

    ''departments
    For Each grpname In grpList
      acrdt = 0
      acash = 0
      atotl = 0
      acrdt = modCHTMLInvoice.GetItemAmtByParam(modDatabase.$syConn, $tbltempbilldetail, grpname, recpid1, recpid2, sUser, "%", "Credit", $tblpatbilling)
      acash = modCHTMLInvoice.GetItemAmtByParam(modDatabase.$syConn, $tbltempbilldetail, grpname, recpid1, recpid2, sUser, "%", "Cash", $tblpatbilling)
      atotl = acrdt + acash
      usrcrdt = usrcrdt + acrdt
      usrcash = usrcash + acash
      usrtotl = usrtotl + atotl
      If acrdt Or If acash Then
        With asx
          .Add(modString.HTMLBlankSpace(5) & grpname)
          .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
          .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Endif
    Next

    acrdt = 0
    acash = 0
    atotl = 0
    acrdt = modCHTMLInvoice.GetNullAmtByParam(modDatabase.$syConn, $tbltempbilldetail, recpid1, recpid2, sUser, "%", "Credit", $tblpatbilling)
    acash = modCHTMLInvoice.GetNullAmtByParam(modDatabase.$syConn, $tbltempbilldetail, recpid1, recpid2, sUser, "%", "Cash", $tblpatbilling)
    atotl = acrdt + acash
    usrcrdt = usrcrdt + acrdt
    usrcash = usrcash + acash
    usrtotl = usrtotl + atotl
    If acrdt Or If acash Then
      With asx
        .Add(modString.HTMLBlankSpace(5) & "Not Grouped")
        .Add(modReportVar.GetLocaleNumberFormat(acrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(acash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(atotl, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''sub total summary
    If usrcrdt Or If usrcash Then
      With asx
        .Add("Sub Total")
        .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      With asx
        .Add("")
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''due clearance
    resc = modDatabase.$syConn.Exec("select sum(fldreceivedamt) as totrecv from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and flduserid like &4 and fldcomp like &5", "TCL%", recpid1, recpid2, sUser, "%")
    If resc.Available And If resc["totrecv"] Then
      usrcash = usrcash + resc["totrecv"]
      usrtotl = usrtotl + resc["totrecv"]
      With asx
        .Add("Due Clearance")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(resc["totrecv"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif

    ''deposit taken
    xcurrdepo = 0
    rex1 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit>&4 and flduserid like &5 and fldcomp like &6", "DET%", recpid1, recpid2, 0, sUser, "%")
    If rex1.Available And If rex1["totdepo"] Then
      usrcash = usrcash + rex1["totdepo"]
      usrtotl = usrtotl + rex1["totdepo"]
      xcurrdepo = xcurrdepo + rex1["totdepo"]
      With asx
        .Add("Deposit Collected")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(rex1["totdepo"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
    ''deposit return
    rex2 = modDatabase.$syConn.Exec("select SUM(fldcurdeposit) as totdepo from " & $tbltempbilldetail & " where fldbillno like &1 and fldid>=&2 and fldid<=&3 and fldcurdeposit<&4 and flduserid like &5 and fldcomp like &6", "DET%", recpid1, recpid2, 0, sUser, "%")
    If rex2.Available And If rex2["totdepo"] Then
      usrcash = usrcash + rex2["totdepo"]
      usrtotl = usrtotl + rex2["totdepo"]
      xcurrdepo = xcurrdepo + rex2["totdepo"]
      With asx
        .Add("Deposit Returned")
        .Add("")
        .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(rex2["totdepo"], gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Endif
    ''balance deposit
    With asx
      .Add("Total Deposit")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(xcurrdepo, gb.Currency))
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    ''total summary
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()

    comcrdt = comcrdt + usrcrdt
    comcash = comcash + usrcash
    comtotl = comtotl + usrtotl
    With asx
      .Add("Receipt Total")
      .Add(modReportVar.GetLocaleNumberFormat(usrcrdt, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(usrcash, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(usrtotl, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
    With asx
      .Add("Total Cash from Receipts")
      .Add("")
      .Add(modReportVar.GetLocaleNumberFormat(modNonMedical.GetReceiptAmountBetweenBills(sUser, recp1, recp2, "%", $tbltempbilldetail), gb.Currency))
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif    ''receipt

  With asx
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("")
    .Add("")
    .Add("")
    .Add("")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  With asx
    .Add("Grand Total")
    .Add(modReportVar.GetLocaleNumberFormat(comcrdt, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(comcash, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(comtotl, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()
  With asx
    .Add("***")
    .Add("***")
    .Add("***")
    .Add("***")
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  RepoPath = $BillingReport.NewHTMLPath()
  Return RepoPath

End

''========================= Other ===============================
Public Function ShowExceptionUserListHTML(sType As String) As String

  Dim $BillingReport As CReportHTML
  Dim res As Result
  Dim res1 As Result
  Dim asx As New String[0]

  $BillingReport = New CReportHTML([("Particulars"), ("ItemRate"), ("Share %"), ("Share AMT"), ("Tax %")], "", "")
  $BillingReport.UserData.Add("USER SHARES (EXCEPTIONS): " & sType, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  res = modDatabase.$syConn.Exec("select distinct(flduserid) from tbluserpay where flditemtype=&1 and fldactive=&2 ORDER BY flduserid ASC", sType, "Active")                                                                                        ''
  For Each res
    $BillingReport.AddSection(modGeneral.GetUserFullName(res!flduserid) & "[" & res!flduserid & "]", True)

    res1 = modDatabase.$syConn.Exec("select fldid,flditemtype,flditemname,flditemshare,flditemamt,flditemtax from tbluserpay where flduserid=&1 and flditemtype=&2 and fldactive=&3", res!flduserid, sType, "Active")
    For Each res1
      With asx
        .Add(res1!flditemname)
        .Add(modNonMedical.GetCashBillItemCost(res1!flditemname, "%"))
        If res1!flditemshare Then
          .Add(modReportVar.GetLocaleNumberFormat(res1!flditemshare, -2))
        Else
          .Add("")
        Endif
        If res1!flditemamt Then
          .Add(modReportVar.GetLocaleNumberFormat(res1!flditemamt, gb.Currency))
        Else
          .Add("")
        Endif
        If res1!flditemtax Then
          .Add(modReportVar.GetLocaleNumberFormat(res1!flditemtax, -2))
        Else
          .Add("")
        Endif
      End With
      $BillingReport.Add(asx)
      asx.Clear()
    Next
    With asx
      .Add("")
      .Add("")
      .Add("")
      .Add("")
      .Add("")
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Next

  Return $BillingReport.NewHTMLPath()

End

Public Function ShowShareBasicreport(sType As String, sMode As String) As String

  Dim $BillingReport As CReportHTML
  Dim res1 As Result
  Dim res As Result
  Dim asx As New String[0]

  $BillingReport = New CReportHTML([("RatePlan"), ("Particulars"), ("Share %"), ("Tax %")], "", "")
  $BillingReport.UserData.Add("GROSS SHARE PLAN : " & sType & "  RATE: " & sMode, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  res = modDatabase.$syConn.Exec("select distinct(flditemtype) as col from tblusershare where fldsharetype=&1 and fldactive=&2", sType, "Active")
  If res.Available Then
    For Each res
      $BillingReport.AddChapter(res["col"])

      If sMode = "%" Then
        res1 = modDatabase.$syConn.Exec("select fldid,flditemtype,fldbillingmode,flddepartname,flditemshare,flditemtax from tblusershare where fldsharetype=&1 and flditemtype=&2 and fldactive=&3", sType, res["col"], "Active")
      Else
        res1 = modDatabase.$syConn.Exec("select fldid,flditemtype,fldbillingmode,flddepartname,flditemshare,flditemtax from tblusershare where fldsharetype=&1 and flditemtype=&2 and fldactive=&3 and fldbillingmode=&4", sType, res["col"], "Active", sMode)
      Endif
      For Each res1
        With asx
          .Add(res1!fldbillingmode)
          .Add(res1!flddepartname)
          If res1!flditemshare Then
            .Add(modReportVar.GetLocaleNumberFormat(res1!flditemshare, -2))
          Else
            .Add("")
          Endif
          If res1!flditemtax Then
            .Add(modReportVar.GetLocaleNumberFormat(res1!flditemtax, -2))
          Else
            .Add("")
          Endif
        End With
        $BillingReport.Add(asx)
        asx.Clear()
      Next
      With asx
        .Add("")
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Next
  Endif

  Return $BillingReport.NewHTMLPath()

End

Public Function ShowPaybleProcedures(sType As String, sMode As String) As String

  Dim $BillingReport As CReportHTML
  Dim res1 As Result
  Dim res As Result
  Dim asx As New String[0]
  Dim i As Integer

  $BillingReport = New CReportHTML([("SNo"), ("Category"), ("RatePlan"), ("ItemRate"), ("UserType"), ("Share %"), ("Share AMT"), ("Tax %")], "", "")
  $BillingReport.UserData.Add("GROUP SHARE PLAN : " & UCase(sType) & "  RATE: " & sMode, "PARAM1")
  $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")

  If sMode = "%" Then
    res = modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblprocedureshare where fldsharetype=&1 and fldactive=&2 and flditemtype=&3", "Payable", "Active", sType)
  Else
    res = modDatabase.$syConn.Exec("select distinct(flditemname) as col from tblprocedureshare where fldsharetype=&1 and fldactive=&2 and flditemtype=&3 and fldbillingmode=&4", "Payable", "Active", sType, sMode)
  Endif
  If res.Available Then
    For Each res
      $BillingReport.AddChapter(res["col"])

      res1 = modDatabase.$syConn.Exec("select fldid,flditemname,flditemtype,fldbillingmode,flditemname,fldusertype,flditemshare,flditemamt,flditemtax from tblprocedureshare where fldsharetype=&1 and flditemname=&2 and fldactive=&3", "Payable", res["col"], "Active")
      i = 1
      For Each res1
        With asx
          .Add(CStr(i))
          .Add(res1!flditemtype)
          .Add(res1!fldbillingmode)
          .Add(modNonMedical.GetCashBillItemCost(res1!flditemname, res1!flditemtype))
          .Add(res1!fldusertype)
          If res1!flditemshare Then
            .Add(modReportVar.GetLocaleNumberFormat(res1!flditemshare, -2))
          Else
            .Add("")
          Endif
          If res1!flditemamt Then
            .Add(modReportVar.GetLocaleNumberFormat(res1!flditemamt, gb.Currency))
          Else
            .Add("")
          Endif
          If res1!flditemtax Then
            .Add(modReportVar.GetLocaleNumberFormat(res1!flditemtax, -2))
          Else
            .Add("")
          Endif
        End With
        $BillingReport.Add(asx)
        asx.Clear()
        i = i + 1
      Next
      With asx
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
        .Add("")
      End With
      $BillingReport.Add(asx)
      asx.Clear()

    Next
  Endif

  Return $BillingReport.NewHTMLPath()

End

' ''==================== Scheme Detail ========================
' Public Function ShowSchemesDetail(sPackage As String) As String
'
'   Dim $BillingReport As CReportHTML
'   Dim asx As New String[0]
'   Dim res As Result
'   Dim aList As String[]
'   Dim bList As String[]
'   Dim cList As String[]
'   Dim dList As String[]
'   Dim eList As String[]
'
'   $BillingReport = New CReportHTML([("Scheme"), ("Description"), ("Discount"), ("Custom"), ("Cash-in-Credit"), ("Custom"), ("Miscellaneous")], "", "")
'   $BillingReport.UserData.Add("SCHEME DESCRIPTION", "PARAM1")
'   $BillingReport.UserData.Add(modReportVar.GetDateTimeReport(Now(), gb.GeneralDate), "PARAM2")
'
'   res = modDatabase.$syConn.Exec("select fldtype,fldmode,fldpercent,fldamount,fldcredit,fldyear,fldlimit,fldbillingmode,fldacledger,fldreference,fldbilltype,fldinvoice,fldreserved,fldonline,fldcashincredit,fldlab,fldradio,fldproc,fldequip,fldservice,fldother,fldmedicine,fldsurgical,fldextra,fldregist,fldcrdlab,fldcrdradio,fldcrdproc,fldcrdequip,fldcrdservice,fldcrdother,fldcrdmedicine,fldcrdsurgical,fldcrdextra from tbldiscount where fldtype like &1", sPackage)                       ''
'   If res.Available Then
'     For Each res
'       aList = New String[]
'       bList = New String[]
'       cList = New String[]
'       dList = New String[]
'       eList = New String[]
'
'       aList.Add("Ledger A/C : " & res["fldacledger"])
'       aList.Add("Default Rate : " & res["fldbillingmode"])
'       aList.Add("Invoice Type : " & res["fldbilltype"])
'       aList.Add("Reference : " & res["fldreference"])
'
'       bList.Add("Discount Mode : " & res["fldmode"])
'       bList.Add("Discount Percent : " & res["fldpercent"])
'       bList.Add("Discount Amt/Year : " & res["fldamount"])
'
'       If res["fldlab"] Then
'         cList.Add("Laboratory : " & res["fldlab"])
'       Endif
'       If res["fldradio"] Then
'         cList.Add("Radiology : " & res["fldradio"])
'       Endif
'       If res["fldproc"] Then
'         cList.Add("Procedure : " & res["fldproc"])
'       Endif
'       If res["fldequip"] Then
'         cList.Add("Equipment : " & res["fldequip"])
'       Endif
'       If res["fldservice"] Then
'         cList.Add("Service : " & res["fldservice"])
'       Endif
'       If res["fldother"] Then
'         cList.Add("Other : " & res["fldother"])
'       Endif
'       If res["fldmedicine"] Then
'         cList.Add("Medicines : " & res["fldmedicine"])
'       Endif
'       If res["fldsurgical"] Then
'         cList.Add("Surgicals : " & res["fldsurgical"])
'       Endif
'       If res["fldextra"] Then
'         cList.Add("Extra Items : " & res["fldextra"])
'       Endif
'       If res["fldregist"] Then
'         cList.Add("Registration : " & res["fldregist"])
'       Endif
'
'       If res["fldcrdlab"] Then
'         dList.Add("Laboratory : " & res["fldcrdlab"])
'       Endif
'       If res["fldcrdradio"] Then
'         dList.Add("Radiology : " & res["fldcrdradio"])
'       Endif
'       If res["fldcrdproc"] Then
'         dList.Add("Procedure : " & res["fldcrdproc"])
'       Endif
'       If res["fldcrdequip"] Then
'         dList.Add("Equipment : " & res["fldcrdequip"])
'       Endif
'       If res["fldcrdservice"] Then
'         dList.Add("Service : " & res["fldcrdservice"])
'       Endif
'       If res["fldcrdother"] Then
'         dList.Add("Other : " & res["fldcrdother"])
'       Endif
'       If res["fldcrdmedicine"] Then
'         dList.Add("Medicines : " & res["fldcrdmedicine"])
'       Endif
'       If res["fldcrdsurgical"] Then
'         dList.Add("Surgicals : " & res["fldcrdsurgical"])
'       Endif
'       If res["fldcrdextra"] Then
'         dList.Add("Extra Items : " & res["fldcrdextra"])
'       Endif
'
'       eList.Add("Print Invoice : " & res["fldinvoice"])
'       eList.Add("Limit AMT : " & res["fldlimit"])
'       eList.Add("Reserved : " & res["fldreserved"])
'       eList.Add("Online : " & res["fldonline"])
'       eList.Add("Start Date : " & res["fldyear"])
'
'       With asx
'         .Add(res["fldtype"])
'         .Add(modString.GetHTMLListFormat(aList))
'         .Add(modString.GetHTMLListFormat(bList))
'         If cList.Count Then
'           .Add(modString.GetHTMLListFormat(cList))
'         Else
'           .Add("")
'         Endif
'         .Add(res["fldcashincredit"])
'         If dList.Count Then
'           .Add(modString.GetHTMLListFormat(dList))
'         Else
'           .Add("")
'         Endif
'         .Add(modString.GetHTMLListFormat(eList))
'       End With
'       $BillingReport.Add(asx)
'       asx.Clear()
'     Next
'   Endif
'
'   Return $BillingReport.NewHTMLPath()
'
' End
