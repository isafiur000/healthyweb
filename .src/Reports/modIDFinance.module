' Gambas module file

''------------------ tblpatbilling --------------------------
''item total sale by department
Private Function GetIDDepartSalesTotalRange($conn As Connection, sDept As String, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flditemrate*flditemqty) as totamt from " & xbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup=&1) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&2 and fldid<=&3 and fldbilltype like &4 and flditemamt>&5)" & RepoStr, sDept, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''item total sale no department
Private Function GetIDNoDepartSalesTotalRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flditemrate*flditemqty) as totamt from " & xbilling & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt>&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''item total refund by department
Private Function GetIDDepartRefundTotalRange($conn As Connection, sDept As String, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flditemrate*flditemqty) as totamt from " & xbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup=&1) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&2 and fldid<=&3 and fldbilltype like &4 and flditemamt<&5)" & RepoStr, sDept, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''item total refund no department
Private Function GetIDNoDepartRefundTotalRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flditemrate*flditemqty) as totamt from " & xbilling & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt<&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''item Return Total
Private Function GetIDTotalRefundTotalRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flditemrate*flditemqty) as totamt from " & xbilling & " where fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt<&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''-------------------- discount
''sale discount by department
Private Function GetIDDepartSalesDiscountRange($conn As Connection, sDept As String, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddiscamt) as totamt from " & xbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup=&1) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&2 and fldid<=&3 and fldbilltype like &4 and flditemamt>&5)" & RepoStr, sDept, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''sale discount no department
Private Function GetIDNoDepartSalesDiscountRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddiscamt) as totamt from " & xbilling & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt>&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''refund discount by department
Private Function GetIDDepartRefundDiscountRange($conn As Connection, sDept As String, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddiscamt) as totamt from " & xbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup=&1) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&2 and fldid<=&3 and fldbilltype like &4 and flditemamt<&5)" & RepoStr, sDept, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''refund discount no department
Private Function GetIDNoDepartRefundDiscountRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddiscamt) as totamt from " & xbilling & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt<&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''Discount Sales Total
Private Function GetIDTotalSaleDiscountRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddiscamt) as totamt from " & xbilling & " where fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt>&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''Discount Return Total
Private Function GetIDTotalRefundDiscountRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddiscamt) as totamt from " & xbilling & " where fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt<&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''---------------------tax
''sale tax by department
Private Function GetIDDepartSalesTaxRange($conn As Connection, sDept As String, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldtaxamt) as totamt from " & xbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup=&1) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&2 and fldid<=&3 and fldbilltype like &4 and flditemamt>&5)" & RepoStr, sDept, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''sale tax no department
Private Function GetIDNoDepartSalesTaxRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldtaxamt) as totamt from " & xbilling & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt>&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''refund tax by department
Private Function GetIDDepartRefundTaxRange($conn As Connection, sDept As String, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldtaxamt) as totamt from " & xbilling & " where flditemname in(select flditemname from tblreportgroup where fldgroup=&1) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&2 and fldid<=&3 and fldbilltype like &4 and flditemamt<&5)" & RepoStr, sDept, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''refund tax no department
Private Function GetIDNoDepartRefundTaxRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float                                     ''

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldtaxamt) as totamt from " & xbilling & " where flditemname not in(select flditemname from tblreportgroup) and fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt<&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = 0 - res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''tax Sales Total
Private Function GetIDTotalSaleTaxRange($conn As Connection, sMode As String, bilid1 As Long, bilid2 As Long, sLocaType As String, sLocation As String, Optional sBillTable As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilling As String
  Dim xbilldetail As String

  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif
  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldtaxamt) as totamt from " & xbilling & " where fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype like &3 and flditemamt>&4)" & RepoStr, bilid1, bilid2, sMode, 0)                                                                    ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDInvoiceClearanceRange($conn As Connection, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilldetail As String

  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and flditemamt=&3 and flduserid like &4 and fldcomp like &5" & RepoStr, bilid1, bilid2, 0, sUser, sComp)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDInvoiceCreditCash($conn As Connection, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilldetail As String

  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5" & RepoStr, bilid1, bilid2, "Credit", sUser, sComp)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDInvoiceCreditCashUserState($conn As Connection, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, xState As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilldetail As String

  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  If xState = "OPD" Then
    res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5 and fldprevdeposit=&6" & RepoStr, bilid1, bilid2, "Credit", sUser, sComp, 1)
  Else If xState = "IPD" Then
    res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5 and fldprevdeposit>&6" & RepoStr, bilid1, bilid2, "Credit", sUser, sComp, 1)
  Endif
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDInvoiceCashRound($conn As Connection, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, Optional sBillDetail As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xbilldetail As String

  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldreceivedamt-fldchargedamt) as totamt from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5 and flditemamt<>&6" & RepoStr, bilid1, bilid2, "Cash", sUser, sComp, 0)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDInvoiceCreditRound($conn As Connection, bilid1 As Long, bilid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, Optional sBillDetail As String, Optional sBillTable As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim res1 As Result
  Dim yval As Float
  Dim xdiff As Float

  Dim RepoStr As String
  Dim xbilldetail As String
  Dim xbilling As String

  If sBillDetail Then
    xbilldetail = sBillDetail
  Else
    xbilldetail = "tblpatbilldetail"
  Endif
  If sBillTable Then
    xbilling = sBillTable
  Else
    xbilling = "tblpatbilling"
  Endif

  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5 and flditemamt<>&6" & RepoStr, bilid1, bilid2, "Credit", sUser, sComp, 0)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif

  res1 = $conn.Exec("select SUM((REPLACE(REPLACE(fldbilltype , 'Cash', 100), 'Credit', 0) + COALESCE(fldcashincredit, 0)) * fldditemamt / 100) as xcash from " & xbilling & " where fldbillno in(select fldbillno from " & xbilldetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5 and flditemamt<>&6)" & RepoStr, bilid1, bilid2, "Credit", sUser, sComp, 0)                                                                    ''
  If res1.Available Then
    If res1["xcash"] Then
      yval = res1["xcash"]
    Else
      yval = 0
    Endif
  Else
    yval = 0
  Endif

  xdiff = xval - yval

  Return xdiff

End

''------------------------------tbmpatbilldetail ---------------------------
''Total Receipts value (excluding deposit)
Private Function GetIDTotalReceiptItemAmtRange($conn As Connection, sType As String, recpid1 As Long, recpid2 As Long, sLocaType As String, sLocation As String, Optional sBillTemp As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xtempdetail As String

  If sBillTemp Then
    xtempdetail = sBillTemp
  Else
    xtempdetail = "tbltempbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  If sType = "Credit" Then
    res = $conn.Exec("select SUM(flditemamt+fldtaxamt-flddiscountamt-fldreceivedamt) as totamt from " & xtempdetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3" & RepoStr, recpid1, recpid2, sType)
  Else If sType = "Cash" Then
    res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xtempdetail & " where fldid>=&1 and fldid<=&2" & RepoStr, recpid1, recpid2)
  Endif
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''Deposit Amount from receipt (excluding item entry)
Private Sub GetIPDepositAmountRange($conn As Connection, recpid1 As Long, recpid2 As Long, sType As String, sLocaType As String, sLocation As String, Optional sBillTemp As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xtempdetail As String

  If sBillTemp Then
    xtempdetail = sBillTemp
  Else
    xtempdetail = "tbltempbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  If sType = "Collection" Then
    res = $conn.Exec("select SUM(fldcurdeposit) as totdepo from " & xtempdetail & " where fldid>=&1 and fldid<=&2 and fldcurdeposit>&3" & RepoStr, recpid1, recpid2, 0)
  Else If sType = "Refund" Then
    res = $conn.Exec("select SUM(fldcurdeposit) as totdepo from " & xtempdetail & " where fldid>=&1 and fldid<=&2 and fldcurdeposit<&3" & RepoStr, recpid1, recpid2, 0)
  Endif
  If res.Available Then
    If res["totdepo"] Then
      If sType = "Collection" Then
        xval = res["totdepo"]
      Else If sType = "Refund" Then
        xval = 0 - res["totdepo"]
      Endif
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Private Function GetIDReceiptDepoAdjustmentRane($conn As Connection, recpid1 As Long, recpid2 As Long, sLocaType As String, sLocation As String, Optional sBillTemp As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xtempdetail As String

  If sBillTemp Then
    xtempdetail = sBillTemp
  Else
    xtempdetail = "tbltempbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(flddepoadjust) as totamt from " & xtempdetail & " where fldid>=&1 and fldid<=&2 and flddepoadjust IS NOT NULL" & RepoStr, recpid1, recpid2)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDReceiptClearanceRange($conn As Connection, recpid1 As Long, recpid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, Optional sBillTemp As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xtempdetail As String

  If sBillTemp Then
    xtempdetail = sBillTemp
  Else
    xtempdetail = "tbltempbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xtempdetail & " where fldid>=&1 and fldid<=&2 and flditemamt=&3 and flduserid like &4 and fldcomp like &5" & RepoStr, recpid1, recpid2, 0, sUser, sComp)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

Public Function GetIDReceiptCreditCash($conn As Connection, recpid1 As Long, recpid2 As Long, sUser As String, sComp As String, sLocaType As String, sLocation As String, Optional sBillTemp As String) As Float

  Dim res As Result
  Dim xval As Float
  Dim RepoStr As String

  Dim xtempdetail As String

  If sBillTemp Then
    xtempdetail = sBillTemp
  Else
    xtempdetail = "tbltempbilldetail"
  Endif
  RepoStr = modDataRepo.GetWhereStringRepo(sLocaType, sLocation)
  res = $conn.Exec("select SUM(fldreceivedamt) as totamt from " & xtempdetail & " where fldid>=&1 and fldid<=&2 and fldbilltype=&3 and flduserid like &4 and fldcomp like &5" & RepoStr, recpid1, recpid2, "Credit", sUser, sComp)                                        ''
  If res.Available Then
    If res["totamt"] Then
      xval = res["totamt"]
    Else
      xval = 0
    Endif
  Else
    xval = 0
  Endif
  Return xval

End

''============================ REPORTS ======================================
Public Function GetIDIncomeBookingFinance($conn As Connection, bill1 As String, bill2 As String, recp1 As String, recp2 As String, sLocaType As String, sLocation As String, sYear As String, Optional sHosp As String) As String

  Dim $BillingReport As CReportHTML
  Dim asx As New String[0]

  Dim grpList As String[]
  Dim grpname As String
  Dim i As Integer

  Dim xcashsales As Float
  Dim xcreditsales As Float
  Dim xtotalsales As Float
  Dim xdiscsales As Float
  Dim xtaxsales As Float

  Dim xtotalreturn As Float
  Dim xdiscreturn As Float
  Dim xtaxreturn As Float
  Dim xgrandtotal As Float

  Dim acashsales As Float
  Dim acreditsales As Float
  Dim atotalsales As Float
  Dim adiscsales As Float
  Dim ataxsales As Float

  Dim atotalreturn As Float
  Dim adiscreturn As Float
  Dim ataxreturn As Float
  Dim agrandtotal As Float

  Dim xFinal As Variant[]
  Dim xRowVal As Collection

  Dim xnetreal As Float
  Dim xdeposale As Float
  Dim xdepoadjust As Float
  Dim xreceipt As Float

  Dim xdeporetn As Float
  Dim xdueclear As Float
  Dim xnetcashcol As Float

  Dim xlabcoll As Float
  Dim xMediocre As Float
  Dim xCashRefund As Float
  Dim xinvcrdcash As Float

  Dim xsalecreditdisc As Float
  Dim xrefundcreditdisc As Float
  ' Dim xrefundcredititem As Float
  Dim xcreditsaletax As Float
  Dim xcashround As Float

  Dim bilid1 As Long
  Dim bilid2 As Long
  Dim recpid1 As Long
  Dim recpid2 As Long

  Dim xbilling As String
  Dim xbilldetail As String
  Dim xtempdetail As String
  Dim rex As Result

  Dim mcashdisc As Float
  Dim mcashtax As Float

  If sYear = "Current" Then
    xbilling = "tblpatbilling"
    xbilldetail = "tblpatbilldetail"
    xtempdetail = "tbltempbilldetail"
  Else
    rex = modDatabase.$syConn.Exec("select fldpatbilling,fldpatbilldetail,fldtempbilldetail from tblfisclosing where fldindex=&1 and (fldstate=&2 or fldstate IS NULL)", sYear, "Active")
    If rex.Available Then
      If rex["fldpatbilling"] Then
        xbilling = rex["fldpatbilling"]
      Else
        xbilling = "tblpatbilling"
      Endif
      If rex["fldpatbilldetail"] Then
        xbilldetail = rex["fldpatbilldetail"]
      Else
        xbilldetail = "tblpatbilldetail"
      Endif
      If rex["fldtempbilldetail"] Then
        xtempdetail = rex["fldtempbilldetail"]
      Else
        xtempdetail = "tbltempbilldetail"
      Endif
    Else
      xbilling = "tblpatbilling"
      xbilldetail = "tblpatbilldetail"
      xtempdetail = "tbltempbilldetail"
    Endif
  Endif

  bilid1 = modNonMedical.GetBillIDFromBillNo(bill1, xbilldetail)
  bilid2 = modNonMedical.GetBillIDFromBillNo(bill2, xbilldetail)
  recpid1 = modNonMedical.GetBillIDFromReceipt(recp1, xtempdetail)
  recpid2 = modNonMedical.GetBillIDFromReceipt(recp2, xtempdetail)

  $BillingReport = New CReportHTML([("SN"), ("DEPARTMENT"), ("CASH TOTAL"), ("CREDIT TOTAL"), ("TOTAL"), ("DISCOUNT"), ("TAX"), ("REFUND TOTAL"), ("DISCOUNT REFUND"), ("TAX REFUND"), ("NET TOTAL")], "", "")
  If sHosp Then
    $BillingReport.UserData.Add("INCOME BOOKING : " & sHosp, "PARAM1")
  Else
    $BillingReport.UserData.Add("INCOME BOOKING", "PARAM1")
  Endif
  $BillingReport.UserData.Add("INVOICE: " & modCHTMLInvoice.GetInvoiceTwoRange($conn, xbilldetail, bilid1, bilid2) & "<br>" & "RECEIPT: " & modCHTMLInvoice.GetInvoiceTwoRange($conn, xtempdetail, recpid1, recpid2), "PARAM2")

  acashsales = 0
  acreditsales = 0
  atotalsales = 0
  adiscsales = 0
  ataxsales = 0

  atotalreturn = 0
  adiscreturn = 0
  ataxreturn = 0
  agrandtotal = 0
  grpList = modNonMedical.GetGroupNameAccount($conn)
  i = 1
  For Each grpname In grpList
    xcashsales = GetIDDepartSalesTotalRange($conn, grpname, "Cash", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
    xcreditsales = GetIDDepartSalesTotalRange($conn, grpname, "Credit", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
    xtotalsales = xcashsales + xcreditsales
    xdiscsales = GetIDDepartSalesDiscountRange($conn, grpname, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
    xtaxsales = GetIDDepartSalesTaxRange($conn, grpname, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)

    xtotalreturn = GetIDDepartRefundTotalRange($conn, grpname, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
    xdiscreturn = GetIDDepartRefundDiscountRange($conn, grpname, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
    xtaxreturn = GetIDDepartRefundTaxRange($conn, grpname, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
    xgrandtotal = xtotalsales - xdiscsales + xtaxsales - xtotalreturn + xdiscreturn - xtaxreturn

    acashsales = acashsales + xcashsales
    acreditsales = acreditsales + xcreditsales
    atotalsales = atotalsales + xtotalsales
    adiscsales = adiscsales + xdiscsales
    ataxsales = ataxsales + xtaxsales

    atotalreturn = atotalreturn + xtotalreturn
    adiscreturn = adiscreturn + xdiscreturn
    ataxreturn = ataxreturn + xtaxreturn
    agrandtotal = agrandtotal + xgrandtotal

    If xcashsales = 0 And If xcreditsales = 0 And If xdiscsales = 0 And If xtaxsales = 0 And If xtotalreturn = 0 And If xdiscreturn = 0 And If xtaxreturn = 0 Then
    Else
      With asx
        .Add(CStr(i))
        .Add(grpname)
        .Add(modReportVar.GetLocaleNumberFormat(xcashsales, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xcreditsales, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtotalsales, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xdiscsales, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtaxsales, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtotalreturn, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xdiscreturn, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xtaxreturn, gb.Currency))
        .Add(modReportVar.GetLocaleNumberFormat(xgrandtotal, gb.Currency))
      End With
      $BillingReport.Add(asx)
      asx.Clear()
      i = i + 1
    Endif
  Next
  ''ungrouped
  xcashsales = GetIDNoDepartSalesTotalRange($conn, "Cash", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xcreditsales = GetIDNoDepartSalesTotalRange($conn, "Credit", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xtotalsales = xcashsales + xcreditsales
  xdiscsales = GetIDNoDepartSalesDiscountRange($conn, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xtaxsales = GetIDNoDepartSalesTaxRange($conn, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)

  xtotalreturn = GetIDNoDepartRefundTotalRange($conn, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xdiscreturn = GetIDNoDepartRefundDiscountRange($conn, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xtaxreturn = GetIDNoDepartRefundTaxRange($conn, "%", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xgrandtotal = xtotalsales - xdiscsales + xtaxsales - xtotalreturn + xdiscreturn - xtaxreturn

  acashsales = acashsales + xcashsales
  acreditsales = acreditsales + xcreditsales
  atotalsales = atotalsales + xtotalsales
  adiscsales = adiscsales + xdiscsales
  ataxsales = ataxsales + xtaxsales

  atotalreturn = atotalreturn + xtotalreturn
  adiscreturn = adiscreturn + xdiscreturn
  ataxreturn = ataxreturn + xtaxreturn
  agrandtotal = agrandtotal + xgrandtotal

  If xcashsales = 0 And If xcreditsales = 0 And If xdiscsales = 0 And If xtaxsales = 0 And If xtotalreturn = 0 And If xdiscreturn = 0 And If xtaxreturn = 0 Then
  Else
    With asx
      .Add(CStr(i))
      .Add("Ungrouped")
      .Add(modReportVar.GetLocaleNumberFormat(xcashsales, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xcreditsales, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xtotalsales, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xdiscsales, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xtaxsales, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xtotalreturn, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xdiscreturn, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xtaxreturn, gb.Currency))
      .Add(modReportVar.GetLocaleNumberFormat(xgrandtotal, gb.Currency))
    End With
    $BillingReport.Add(asx)
    asx.Clear()
  Endif

  ''total
  With asx
    .Add(CStr(i))
    .Add("TOTAL")
    .Add(modReportVar.GetLocaleNumberFormat(acashsales, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(acreditsales, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(atotalsales, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(adiscsales, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(ataxsales, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(atotalreturn, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(adiscreturn, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(ataxreturn, gb.Currency))
    .Add(modReportVar.GetLocaleNumberFormat(agrandtotal, gb.Currency))
  End With
  $BillingReport.Add(asx)
  asx.Clear()

  xFinal = New Variant[]
  ''gross revenue
  xRowVal = New Collection
  xRowVal.Add("GROSS REVENUE", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(atotalsales, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Free and Concession
  xRowVal = New Collection
  xRowVal.Add("Free and Concession", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(adiscsales, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Free and Concession Refund
  xRowVal = New Collection
  xRowVal.Add("Free and Concession Refund", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(adiscreturn, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Total SRV Tax
  xRowVal = New Collection
  xRowVal.Add("Total Service Tax", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(ataxsales - ataxreturn, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Net Realized Revenue
  xRowVal = New Collection
  xnetreal = atotalsales - (adiscsales - adiscreturn) + (ataxsales - ataxreturn)
  xRowVal.Add("<b>Net Realized Revenue</b>", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xnetreal, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  xdeposale = GetIPDepositAmountRange($conn, recpid1, recpid2, "Collection", sLocaType, sLocation, xtempdetail)
  xdepoadjust = GetIDReceiptDepoAdjustmentRane($conn, recpid1, recpid2, sLocaType, sLocation, xtempdetail)

  ''Deposit Collection
  xRowVal = New Collection
  xRowVal.Add("Deposit Collection", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xdeposale - xdepoadjust, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Deposit Adjustment
  xRowVal = New Collection
  xRowVal.Add("Deposit Adjustment", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xdepoadjust, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Lab Receipt
  xRowVal = New Collection
  xreceipt = GetIDTotalReceiptItemAmtRange($conn, "Cash", recpid1, recpid2, sLocaType, sLocation, xtempdetail)
  If MMain.$CustomFormat = "Nobel" Then
    xRowVal.Add("Laboratory Receipts", CStr(0))
  Else
    xRowVal.Add("Receipts", CStr(0))
  Endif
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xreceipt, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Total Collection
  xRowVal = New Collection
  xRowVal.Add("<b>TOTAL COLLECTION</b>", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xnetreal + xdeposale + xreceipt, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Deposit Refund
  xRowVal = New Collection
  xdeporetn = GetIPDepositAmountRange($conn, recpid1, recpid2, "Refund", sLocaType, sLocation, xtempdetail)
  xRowVal.Add("Deposit Refund", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xdeporetn, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  xlabcoll = 0

  ''Credit & Mediocore Dues
  xsalecreditdisc = GetIDTotalSaleDiscountRange($conn, "Credit", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xrefundcreditdisc = GetIDTotalRefundDiscountRange($conn, "Credit", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  ' xrefundcredititem = GetIDTotalRefundTotalRange($conn, "Credit", bilid1, bilid2, sLocaType, sLocation,xbilling,xbilldetail)
  xcreditsaletax = GetIDTotalSaleTaxRange($conn, "Credit", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  ' xMediocre = acreditsales - xsalecreditdisc - xrefundcredititem + xrefundcreditdisc + xcreditsaletax
  xMediocre = acreditsales - xsalecreditdisc + xrefundcreditdisc + xcreditsaletax
  ' ' ''-------------to remove -----
  xRowVal = New Collection
  xRowVal.Add("Credit Discount", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xsalecreditdisc, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)
  xRowVal = New Collection
  xRowVal.Add("Credit Discount Refund", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xrefundcreditdisc, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)
  ' xRowVal = New Collection
  ' xRowVal.Add("Credit Refund", CStr(0))
  ' xRowVal.Add(xrefundcredititem, CStr(1))
  ' xFinal.Add(xRowVal)
  xRowVal = New Collection
  xRowVal.Add("Credit Tax", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xcreditsaletax, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)
  ' ' ''----------- complete -----------
  xRowVal = New Collection
  xRowVal.Add("<b>Credit and Medicare Dues</b>", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xMediocre, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Dept wise IP Refund
  xRowVal = New Collection
  xCashRefund = GetIDTotalRefundTotalRange($conn, "Cash", bilid1, bilid2, sLocaType, sLocation, xbilling, xbilldetail)
  xRowVal.Add("Cash Refunds", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xCashRefund, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Credit Payment Collection
  xRowVal = New Collection
  xdueclear = GetIDInvoiceClearanceRange($conn, bilid1, bilid2, "%", "%", sLocaType, sLocation, xbilldetail)
  xRowVal.Add("Credit Payment Collection", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xdueclear, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Cash Collection from Credit Invoice
  xRowVal = New Collection
  xinvcrdcash = GetIDInvoiceCreditCash($conn, bilid1, bilid2, "%", "%", sLocaType, sLocation, xbilldetail)
  xRowVal.Add("Cash from Credit Invoices", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xinvcrdcash, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''mismatch tax/discount
  xRowVal = New Collection
  mcashdisc = modBillingAll.GetBillDiscountDifference("Invoice", $conn, bill1, bill2, "Discount", "%", "%", "Cash", sLocaType, sLocation, xbilling, xbilldetail)
  mcashtax = modBillingAll.GetBillDiscountDifference("Invoice", $conn, bill1, bill2, "Tax", "%", "%", "Cash", sLocaType, sLocation, xbilling, xbilldetail)
  xRowVal.Add("Discount/Tax Mismatch", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(mcashtax - mcashdisc, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''extra cash from rounding
  xRowVal = New Collection
  xcashround = GetIDInvoiceCashRound($conn, bilid1, bilid2, "%", "%", sLocaType, sLocation, xbilldetail)
  xRowVal.Add("Cash Rounding", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xcashround, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  ''Net Cash Collection
  xRowVal = New Collection
  xnetcashcol = (xnetreal + xdeposale + xreceipt) - xdeporetn - xlabcoll - xMediocre + xdueclear - xCashRefund + xinvcrdcash + xcashround + (mcashtax - mcashdisc)
  xRowVal.Add("<b>Net Cash Collection</b>", CStr(0))
  xRowVal.Add(modReportVar.GetLocaleNumberFormat(xnetcashcol, gb.Currency), CStr(1))
  xFinal.Add(xRowVal)

  $BillingReport.AddSummary(modString.GetRichTableStringFromVariant(["TITLE", "AMOUNT"], xFinal))
  Return $BillingReport.NewHTMLPath()

End
