' Gambas module file

''-------------------------- Examination entry ---------------------------------
Public Function GetClinScalePopUp(sType As String, sExam As String) As String[]

  Dim opt As String[]
  Dim sVal As String[]
  Dim xval As String[]

  opt = modAllExam.GetCLinicalScaleOptions(sType, sExam)
  If opt Then
    sVal = SubChoose(opt, "Clinical Scale", sExam)
    If sVal Then
      xval = sVal
    Endif
  Endif
  Return xval

End

Public Function GetVisualDataExamVal(sExam As String) As String

  Dim sPath As String
  Dim xval As String

  sPath = modImage.DisplayVisualData("Exam", sExam, "", "Visual Input")
  If sPath Then
    xval = CVisualValue(sExam, sPath, "")
  Endif
  Return xval

End

''================================ Sys COnst: For Delivery exam, Procedure Exam, Ward exam ---------------------------
Public Function GetQualiExamOptionDirectValue(sExam As String, sValue As String, ExamType As String, OptionName As String) As Variant[]

  Dim yy As String
  Dim xdate As Date
  Dim xxx As String[]
  Dim sCol As String[]

  Dim yqualival As Variant[]
  Dim xxvar As Variant[]

  If OptionName Then
    If OptionName = "Clinical Scale" Then
      If ExamType Then
        sCol = GetClinScalePopUp(ExamType, sExam)
      Else
        sCol = GetClinScalePopUp("Exam", sExam)
      Endif
      If sCol Then
        xxvar = [sCol[1], False, sCol[0]]
      Endif

    Else If OptionName = "Single Selection" Or If OptionName = "Dichotomous" Or If OptionName = "Multiple Selection" Then
      If ExamType Then
        sCol = modAllExam.SelectExamOptionList(ExamType, sExam)
      Else
        sCol = modAllExam.SelectExamOptionList("Exam", sExam)
      Endif
      xxx = SubChoose(sCol, OptionName, sExam)
      If xxx Then
        xxvar = [xxx.Join(gb.NewLine), False]
      Endif

    Else If OptionName = "Visual Input" Then
      yy = GetVisualDataExamVal(sExam)
      If yy
        xxvar = [yy, False]
      Endif

    Else If OptionName = "Left and Right" Then
      yqualival = CLeftRight(sExam, sValue, modFixClinic.GetLeftRightMainHeader("Exam", sExam))
      If yqualival Then
        xxvar = [yqualival[0], yqualival[1]]
      Endif

    Else If OptionName = "Text Table" Then
      xxx = modString.ConverTableRichTextToGrid(sValue)
      If sValue Then
        sCol = Split(xxx[0], ";")
        yy = TableEntry(sCol, sExam, xxx[1])
      Else
        sCol = modAllExam.SelectExamOptionList("Exam", sExam)
        yy = TableEntry(sCol, sExam, "")
      Endif
      If yy Then
        xxvar = [modString.GetTableFormatFromText(yy), False]
      Endif

    Else If OptionName = "Date Time" Then
      xdate = GetDateValue(sExam, "Date Value", Val(sValue))
      If xdate Then
        xxvar = [modDate.DateStringForExam(xdate), False]
      Endif

    Else If OptionName = "BS Date" Then
      xdate = GetDateValue(sExam, "Date Value", modDate.ConvertToEnglishdate(sValue))
      If xdate Then
        xxvar = [modDate.ConvertToLocaldate(xdate), False]
      Endif

    Else If OptionName = "Qualitative" Then
      If ExamType Then
        yqualival = GetQualiString(sExam, sValue, ExamType)
      Else
        yqualival = GetQualiString(sExam, sValue, "Exam")
      Endif
      If yqualival Then
        xxvar = yqualival
      Endif

    Else If OptionName = "RichText Area" Then
      If ExamType Then
        yqualival = GetQualiRich(sExam, sValue, ExamType)
      Else
        yqualival = GetQualiRich(sExam, sValue, "Exam")
      Endif
      If yqualival Then
        xxvar = [yqualival[0], yqualival[1]]
      Endif

    Else
      If ExamType Then
        yqualival = GetQualiValues(sExam, sValue, ExamType)
      Else
        yqualival = GetQualiValues(sExam, sValue, "Exam")
      Endif
      If yqualival Then
        xxvar = [yqualival[0], yqualival[1]]
      Endif
    Endif

  Else
    If ExamType Then
      yqualival = GetQualiValues(sExam, sValue, ExamType)
    Else
      yqualival = GetQualiValues(sExam, sValue, "Exam")
    Endif
    If yqualival Then
      xxvar = [yqualival[0], yqualival[1]]
    Endif

  Endif
  Return xxvar

End

Public Sub UpdateExamSelectionLabel(sid As Long, encid As String, sExamLabel As String, sType As String, sysConst As String, sValue As String, Optional OptionType As String)

  Dim xquantival As Variant[]
  Dim yqualival As Variant[]
  Dim sName As String
  Dim xlimit As Float[]
  Dim xlefrt As Variant[]
  Dim xdate As Date

  Dim yy As String
  Dim xxx As String[]
  Dim sCol As String[]

  Dim cForm As CFindExam
  Dim examtype As String
  Dim sExam As String
  Dim sOptName As String
  Dim sDefault As String

  cForm = New CFindExam(sysConst)
  examtype = cForm.GetExamMode()
  sExam = cForm.GetExamName()
  sOptName = cForm.GetExamOption()
  sDefault = cForm.GetExamDefault()

  If sExam Then
    sName = sExam
  Else
    sName = sExamLabel
  Endif

  If sType = "Qualitative" Then

    If OptionType Then
      If OptionType = "Left and Right" Then
        xlefrt = CLeftRight(sName, sValue, modFixClinic.GetLeftRightMainHeader("Exam", sName))
        If xlefrt Then
          yqualival = [xlefrt[0], xlefrt[1]]
        Endif

      Else If OptionType = "Date Time" Then
        xdate = GetDateValue(("Select Date Time"), sName, Val(sValue))
        If xdate Then
          yqualival = [modDate.DateStringForExam(xdate), False]
        Endif

      Else If OptionType = "BS Date" Then
        xdate = GetDateValue(("Select Date Time"), sName, modDate.ConvertToEnglishdate(sValue))
        If xdate Then
          yqualival = [modDate.ConvertToLocaldate(xdate), False]
        Endif

      Else If OptionType = "Text Table" Then
        xxx = modString.ConverTableRichTextToGrid(sValue)
        If sValue Then
          sCol = Split(xxx[0], ";")
          yy = TableEntry(sCol, sExam, xxx[1])
        Endif
        If yy Then
          yqualival = [modString.GetTableFormatFromText(yy), False]
        Endif

      Else If OptionType = "Qualitative" Then
        yqualival = GetQualiString(sName, sValue, examtype)

      Else
        yqualival = GetQualiExamOptionDirectValue(sExam, sValue, examtype, sOptName)
      Endif

    Else
      yqualival = GetQualiExamOptionDirectValue(sExam, sValue, examtype, sOptName)
    Endif
    If yqualival Then
      If yqualival.Count = 3 Then
        modClinSub.UpdateQualiQuantiData(sid, yqualival[0], CFloat(yqualival[2]), yqualival[1])
      Else
        modClinSub.UpdateQualiData(sid, yqualival[0], yqualival[1])
      Endif
    Endif

  Else If sType = "Quantitative" Then
    xlimit = modClinic.GetBothQuantiExamVal(sExam, encid)
    xquantival = GetQuantiValues(examtype, encid, sName, xlimit[0], xlimit[1], modClinic.GetExamValueByID(sid))                                       '
    If xquantival Then
      modClinSub.UpdateQuantiData(sid, xquantival[0], xquantival[1])
    Endif

  Endif

End

Public Sub EnterDeptFixedComponents(encid As String, sType As String, sID As Long, examname As String, sValue As String)

  Dim yyy As String[]
  Dim res As Result
  Dim xData As Variant[]
  Dim hForm2 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim xType As String

  If modClinic.GetSubExamBool(sID, encid) = False Then
    yyy = modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldanswer as col from tbldeptexamoption where fldexamid=&1 and flddept=&2", examname, sType))
    If yyy.Count Then
      modClinSub.InsertExamSubExam(encid, sID, examname, yyy)
    Endif
  Endif

  res = modDatabase.$myConn.Exec("select fldid,fldsubtexam,fldreport,fldtanswertype,fldabnormal,fldindex from tblpatientsubexam where fldheadid=&1", sID)
  If res.Available = True Then
    xType = modAllExam.GetVariableOptionType("Exam", examname)
    xData = New Variant[]
    For Each res
      xData.Add([res["fldsubtexam"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
    Next
    xData.Add(["Final Impression", sValue, 0, "RichText Area", False, ""])
    If xType = "Left/Right Components" Then
      hFormTwo = New FmEnterMultipleTwo(sID, "Exam", examname, xData, "", "Current")
      hFormTwo.ShowModal
    Else
      hForm2 = New FmEnterMultiple(sID, "Exam", examname, xData, "", "Current")
      hForm2.ShowModal
    Endif
  Endif

End

''========================== For Examination Form(fmExamreporting) =========================================
Public Function GetQualiExamOptionValue(sExam As String, sOption As String) As Variant[]

  Dim rs As Result
  Dim opt As String[]
  Dim sVal As String[]
  Dim xval As String
  Dim xdate As Date

  Dim yqualival As Variant[]
  Dim xxx As Variant[]

  rs = modDatabase.$medConn.Exec("select fldsubexam from tblexamquali where fldexamid=&1 ORDER BY fldindex", sExam)
  If rs.Available = False Then

    If sOption = "Single Selection" Or If sOption = "Dichotomous" Or If sOption = "Multiple Selection" Then
      opt = modAllExam.SelectExamOptionList("Exam", sExam)
      If opt Then
        sVal = SubChoose(opt, sOption, sExam)
        If sVal Then
          xxx = [sVal.Join(gb.NewLine), False]
        Endif
      Endif

    Else If sOption = "Clinical Scale" Then
      sVal = GetClinScalePopUp("Exam", sExam)
      If sVal
        xxx = [sVal[1], False, sVal[0]]
      Endif

    Else If sOption = "Visual Input" Then
      xval = GetVisualDataExamVal(sExam)
      If xval Then
        xxx = [xval, False]
      Endif

    Else If sOption = "Left and Right" Then
      yqualival = CLeftRight(sExam, "", modFixClinic.GetLeftRightMainHeader("Exam", sExam))
      If yqualival Then
        xxx = [yqualival[0], yqualival[1]]
      Endif

    Else If sOption = "Text Table" Then
      opt = modAllExam.SelectExamOptionList("Exam", sExam)
      If opt Then
        xval = TableEntry(opt, sExam, "")
        If xval Then
          xxx = [modString.GetTableFormatFromText(xval), False]
        Endif
      Endif

    Else If sOption = "Date Time" Then
      xdate = GetDateValue(sExam, "Date Value", Now())
      If xdate Then
        xxx = [modDate.DateStringForExam(xdate), False]
      Endif

    Else If sOption = "BS Date" Then
      xdate = GetDateValue(sExam, "Date Value", Now())
      If xdate Then
        xxx = [modDate.ConvertToLocaldate(xdate), False]
      Endif

    Else If sOption = "Qualitative" Then
      yqualival = GetQualiString(sExam, "", "Exam")
      If yqualival Then
        xxx = yqualival
      Endif

    Else If sOption = "RichText Area" Then
      yqualival = GetQualiRich(sExam, "", "Exam")
      If yqualival Then
        xxx = [yqualival[0], yqualival[1]]
      Endif

    Else
      yqualival = GetQualiValues(sExam, "", "Exam")
      If yqualival Then
        xxx = [yqualival[0], yqualival[1]]
      Endif

    Endif ''different options for qualitative test

  Else
    yqualival = GetQualiValues(sExam, "", "Exam")
    If yqualival Then
      xxx = [yqualival[0], yqualival[1]]
    Endif

  Endif ''confirm that quali exam has no subexam

  Return xxx

End

Public Sub AddExamSelection(encid As String, sExam As String, sType As String, OptionType As String, sysConst As String, ExamParam As String)

  Dim xquantival As Variant[]
  Dim yqualival As Variant[]
  Dim xlimit As Float[]
  Dim xhash As String
  Dim sIndex As Long

  Dim yyy As String[]
  Dim hForm2 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim res As Result
  Dim xData As Variant[]

  If sType = "Quantitative" Then
    xlimit = modClinic.GetBothQuantiExamVal(sExam, encid)
    xquantival = GetQuantiValues("Exam", encid, sExam, xlimit[0], xlimit[1], 0)
    If xquantival Then
      modClinSub.AddQuantiData(encid, "", sExam, OptionType, xquantival[0], xquantival[1], ExamParam, sysConst)
    Endif
  Else
    If OptionType = "Fixed Components" Or If OptionType = "Left/Right Components" Then
      ''insert main test
      xhash = encid & ":" & sExam & ":" & modMisc.GetWebIndexStr(modString.GetDateString(Now()))
      modClinSub.AddClinicExam(encid, "", sExam, OptionType, "", 0, False, ExamParam, sysConst, "Regular", xhash)
      sIndex = modClinic.GetExamIndexFromFilePath(xhash, encid, sExam)
      If sIndex Then
        ''insert components
        If modClinic.GetSubExamBool(sIndex, encid) = False Then
          yyy = modFixClinic.GetSubExamArray(sExam)  'modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldsubexam as col from tblexamquali where fldexamid=&1", sExam))
          If yyy.Count Then
            modClinSub.InsertExamSubExam(encid, sIndex, sExam, yyy)
          Endif
        Endif
        Wait

        ''check and open form
        res = modDatabase.$myConn.Exec("select fldid,fldsubtexam,fldreport,fldtanswertype,fldabnormal,fldindex from tblpatientsubexam where fldheadid=&1", sIndex)
        If res.Available Then
          xData = New Variant[]
          For Each res
            xData.Add([res["fldsubtexam"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
          Next
          xData.Add(["Final Impression", "", 0, "RichText Area", False, ""])
          If OptionType = "Left/Right Components" Then
            hFormTwo = New FmEnterMultipleTwo(sIndex, "Exam", sExam, xData, "", "Current")
            hFormTwo.ShowModal
          Else
            hForm2 = New FmEnterMultiple(sIndex, "Exam", sExam, xData, "", "Current")
            hForm2.ShowModal
          Endif
        Endif
      Endif

    Else
      yqualival = GetQualiExamOptionValue(sExam, OptionType)
      If yqualival Then
        If yqualival.Count = 3 Then
          modClinSub.AddClinicExam(encid, "", sExam, OptionType, yqualival[0], CFloat(yqualival[2]), yqualival[1], ExamParam, sysConst, "Regular")
        Else
          modClinSub.AddClinicExam(encid, "", sExam, OptionType, yqualival[0], 0, yqualival[1], ExamParam, sysConst, "Regular")
        Endif
      Endif

    Endif  ''if components
  Endif ''quali or quanti

End

Public Sub UpdateExamSelection(sid As Long, encid As String, sType As String, sExam As String, sValue As String)

  Dim hForm2 As FmEnterMultiple
  Dim hFormTwo As FmEnterMultipleTwo
  Dim res As Result
  Dim xData As Variant[]
  Dim yyy As String[]

  Dim xquantival As Variant[]
  Dim yqualival As Variant[]
  Dim xlimit As Float[]
  Dim xdate As Date
  Dim xType As String
  Dim aOption As String

  If sType = "Qualitative" Then
    xType = modFixClinic.GetExamtOptionType(sExam)
    If modClinic.GetSubExamBool(sid, encid) = False Then
      If xType = "Fixed Components" Or If xType = "Left/Right Components" Then
        yyy = modFixClinic.GetSubExamArray(sExam)  'modControlSub.GetDirectFillresult(modDatabase.$myConn.Exec("select fldsubexam as col from tblexamquali where fldexamid=&1", sExam))
        If yyy.Count Then
          modClinSub.InsertExamSubExam(encid, sid, sExam, yyy)
        Endif
      Endif
    Endif

    res = modDatabase.$myConn.Exec("select fldid,fldsubtexam,fldreport,fldtanswertype,fldabnormal,fldindex from tblpatientsubexam where fldheadid=&1", sid)
    If res.Available = False Then
      If xType = "Clinical Scale" Then
        yqualival = modExamOption.GetClinScalePopUp("Exam", sExam)
        If yqualival Then
          modClinSub.UpdateQualiQuantiData(sid, yqualival[1], CFloat(yqualival[0]), False)
        Endif
      Else If xType = "Left and Right" Then
        yqualival = CLeftRight(sExam, sValue, modFixClinic.GetLeftRightMainHeader("Exam", sExam))
        If yqualival Then
          modClinSub.UpdateClinicQualiData(sid, yqualival[0], yqualival[1], "")
        Endif
      Else If xType = "Date Time" Then
        xdate = GetDateValue(sExam, ("Select Date Time"), Val(sValue))
        If xdate Then
          modClinSub.UpdateClinicQualiData(sid, modDate.DateStringForExam(xdate), False, "")
        Endif
      Else If xType = "BS Date" Then
        xdate = GetDateValue(sExam, ("Select Date Time"), modDate.ConvertToEnglishdate(sValue))
        If xdate Then
          modClinSub.UpdateClinicQualiData(sid, modDate.ConvertToLocaldate(xdate), False, "")
        Endif
      Else If xType = "Qualitative" Then
        yqualival = GetQualiString(sExam, sValue, "Exam")
        If yqualival Then
          modClinSub.UpdateQualiData(sid, yqualival[0], yqualival[1])
        Endif
      Else
        aOption = modAllExam.GetVariableOptionType("Exam", sExam)
        yqualival = GetQualiExamOptionDirectValue(sExam, sValue, "Exam", aOption)
        If yqualival Then
          modClinSub.UpdateQualiData(sid, yqualival[0], yqualival[1], yqualival[2])
        Endif
      Endif

    Else If res.Available = True Then
      xData = New Variant[]
      For Each res
        xData.Add([res["fldsubtexam"], res["fldreport"], res["fldid"], res["fldtanswertype"], res["fldabnormal"], res["fldindex"]])
      Next
      xData.Add(["Final Impression", sValue, 0, "RichText Area", False, ""])
      If xType = "Left/Right Components" Then
        hFormTwo = New FmEnterMultipleTwo(sid, "Exam", sExam, xData, "", "Current")
        hFormTwo.ShowModal
      Else
        hForm2 = New FmEnterMultiple(sid, "Exam", sExam, xData, "", "Current")
        hForm2.ShowModal
      Endif
    Endif

  Else If sType = "Quantitative" Then
    xlimit = modClinic.GetBothQuantiExamVal(sExam, encid)
    xquantival = GetQuantiValues("Exam", encid, sExam, xlimit[0], xlimit[1], modClinic.GetExamValueByID(sid))                                       '
    If xquantival Then
      modClinSub.UpdateQuantiData(sid, xquantival[0], xquantival[1])
    Endif

  Endif

End

''=========================== For Quali box ====================================================
Public Function OpenQualidataOption(sName As String, sTag As String) As String

  Dim res As Result
  Dim rsn As Result
  Dim opt As String[]
  Dim sPath As String
  Dim xval As String
  Dim xdate As Date
  Dim sVal As String[]
  Dim sText As String

  If sTag = "Test" Then
    rsn = modDatabase.$medConn.Exec("select fldoption as fldanswertype from tbltest where fldtestid=&1", sName)
    res = modDatabase.$medConn.Exec("select fldanswertype,fldanswer,fldscale,fldscalegroup from tbltestoption where fldtestid=&1 ORDER BY fldindex", sName)

  Else If sTag = "Radio" Then
    rsn = modDatabase.$medConn.Exec("select fldoption as fldanswertype from tblradio where fldexamid=&1", sName)
    res = modDatabase.$medConn.Exec("select fldanswertype,fldanswer,fldscale,fldscalegroup from tblradiooption where fldexamid=&1 ORDER BY fldindex", sName)

  Else If sTag = "Exam" Then
    rsn = modDatabase.$medConn.Exec("select fldoption as fldanswertype from tblexam where fldexamid=&1", sName)
    res = modDatabase.$medConn.Exec("select fldanswertype,fldanswer,fldscale,fldscalegroup from tblexamoption where fldexamid=&1 ORDER BY fldindex", sName)

  Else If sTag = "Demog" Then
    rsn = modDatabase.$medConn.Exec("select fldoption as fldanswertype from tbldemographic where flddemoid=&1", sName)
    res = modDatabase.$medConn.Exec("select fldanswertype,fldanswer from tbldemogoption where flddemoid=&1 ORDER BY fldindex", sName)
  Endif

  If rsn.Available = True Then
    opt = New String[]

    If rsn["fldanswertype"] = "Single Selection" Or If rsn["fldanswertype"] = "Dichotomous" Then
      For Each res
        opt.Add(res["fldanswer"])
      Next
      sVal = SubChoose(opt, rsn["fldanswertype"], sName)
      If sVal Then
        sText = sVal.Join(gb.NewLine)
      Endif

    Else If rsn["fldanswertype"] = "Multiple Selection" Or If rsn["fldanswertype"] = "Custom Components" Then
      For Each res
        opt.Add(res["fldanswer"])
      Next
      sVal = SubChoose(opt, "Multiple Selection", sName)
      If sVal Then
        sText = sVal.Join(gb.NewLine)
      Endif

    Else If rsn["fldanswertype"] = "Clinical Scale" Then
      For Each res
        opt.Add(res["fldanswer"] & "@" & res["fldscale"] & "@" & res["fldscalegroup"])
      Next
      sVal = SubChoose(opt, "Clinical Scale", sName)
      If sVal Then
        sText = sVal[0]
      Endif

      ' Else If rsn["fldanswertype"] = "Text Addition" Then
      '   sText = res["fldanswer"]

      ' Else If rsn["fldanswertype"] = "Text Reference" Then
      '   Message.Info("[Reference Text]" & gb.NewLine & res["fldanswer"], ("OK"))
      '   sText = ""

    Else If rsn["fldanswertype"] = "Date Time" Then
      xdate = GetDateValue(sName, "Date Value", Now())
      If xdate Then
        sText = modDate.DateStringForExam(xdate)
      Endif

    Else If rsn["fldanswertype"] = "BS Date" Then
      xdate = GetDateValue(sName, "Date Value", Now())
      If xdate Then
        sText = modDate.ConvertToLocaldate(xdate)
      Endif

    Else If rsn["fldanswertype"] = "ImageValue" Then
      sPath = modImage.DisplayVisualData(sTag, sName, "", rsn["fldanswertype"])
      sVal = CustomDraw(sPath)
      If sVal Then
        sText = sVal[0]
      Endif

    Else If rsn["fldanswertype"] = "Visual Input" Then
      sPath = modImage.DisplayVisualData(sTag, sName, "", rsn["fldanswertype"])
      If sPath Then
        xval = CVisualValue(sName, sPath, sText)
        If xval Then
          sText = xval
        Endif
      Endif

    Endif
  Endif
  Return sText

End
