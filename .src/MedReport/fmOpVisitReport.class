' Gambas class file

Private $rData As Result
Private $aMyFields As String[]
Private $SSQLFields As String[]

Private $ColCount As Integer
Private $newColumn As String[]
Private $RepoStr As String

Public Sub _new()

  Dim xhospfld As String

  If MMain.$WebReport = "Multiple" Then
    If modBasic.$HospCode Then
      ' cmblocation.Text = "Hospital"
      cmblocation.Text = modDataRepo.$RepositoryMode
      cmbvalue.Text = modBasic.$HospCode
      pnlocat.Enabled = False
    Else
      cmblocation.List = ["Hospital", "Municipality", "Category", "District", "Province"]
    Endif
    mnuhospsumm.Visible = True
    mnuhospdate.Visible = True
    If MMain.$RepoReportMode = True Then
      mnusearname.Visible = False
    Endif

  Else
    pnlocat.Visible = False
  Endif

  cmbcolumn.List = ["Surname", "Ethnic Group", "Package", "Visit Type", "Visit Mode", "Location"]
  cmbdepart.List = modGeneral.GetDepartForOPVisitOnly()
  cmbdepart.Add("%")
  cmbdepart.Text = "%"
  cmbgender.List = ["Male", "Female", "Other", "%"]
  cmbgender.Text = "%"
  cmbdistrict.List = modBasic.$DistrictList
  cmbdistrict.Add("%")
  cmbdistrict.Text = "%"

  dtfir.Value = Now()
  dtlast.Value = Now()

  xhospfld = modDataRepo.HospitalField()
  $SSQLFields = ["fldid", "fldencounterval", "fldencounterval", modDataRepo.SerialField(), "fldencounterval", "fldencounterval", "fldconsulttime", "fldconsultname", "fldoutcome", "fldnotice", "fldid"]
  If xhospfld Then
    $SSQLFields.Add(xhospfld)
  Endif
  chkgrid.Value = True

End

Public Sub WebForm_Open()

  modGeneralMain.RecordFormUse(Me)

End

Private Sub SetRepoString()

  If MMain.$WebReport = "Multiple" Then
  Else
    cmbcolumn.Text = ""
    txtoption.Text = ""
  Endif

End

Public Sub dtnepfir_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtfir.Value))
  If xx Then
    dtfir.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Public Sub dtneplast_Click()

  Dim xx As String

  xx = BSDateFormat(("Enter BS Date in yyyy/mm/dd format"), ("Date Converter"), modDate.ConvertToLocaldate(dtlast.Value))
  If xx Then
    dtlast.Value = modDate.ConvertToEnglishdate(xx)
  Endif

End

Private Function GetSQLColumns() As String[]

  Dim xFldList As String[]
  Dim i As Integer

  modCustPatient.FillNewCOlumnCollection(Me.Tag)
  $newColumn = modCustPatient.CustomNewColumnsTitle(Me.Tag)
  xFldList = $SSQLFields.Copy()
  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      xFldList.Add("fldencounterval")
    Next
  Endif
  Return xFldList

End

Private Sub SetRepoStr()

  If MMain.$WebReport = "Multiple" Then
    $RepoStr = modDataRepo.GetWhereStringRepo(cmblocation.Text, cmbvalue.Text)
  Else
    $RepoStr = ""
  Endif

End

Public Sub mnusearch_Click()

  Dim encid As String
  Dim sql As String
  Dim xFldList As String[]

  encid = GetEncid()
  SetRepoStr()
  If encid Then
    xFldList = GetSQLColumns()
    sql = "select " & xFldList.Join(",") & " from tblopvisit where fldencounterval=&1" & $RepoStr
    $rData = modDatabase.$syConn.Exec(sql, encid)
    FillPatientGrid()
  Endif

End

Public Sub mnusearname_Click()

  Dim xname As String[]
  Dim sql As String
  Dim xFldList As String[]

  xname = InputDoubleText(("Search Patient Name"), ["First Name", "SurName"], ["%", "%"], modBasic.$SurNameList)
  SetRepoStr()
  If xname Then
    xFldList = GetSQLColumns()
    sql = "select " & xFldList.Join(",") & " from tblopvisit where fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where lower(fldptnamefir) like &1 and lower(fldptnamelast) like &2))" & $RepoStr
    $rData = modDatabase.$syConn.Exec(sql, LCase(xname[0]), LCase(xname[1]))
    FillPatientGrid()
  Endif

End

Private Function ExecuteQuery(xFldList As String[]) As Result

  Dim sql As String
  Dim xstr As String
  Dim xdtstr As String
  Dim agestr As String
  Dim xfld As String
  Dim xdistenc As String
  Dim xquery As String
  Dim sResult As Result

  If chkdistenc.Value = True Then
    xdistenc = " GROUP BY fldencounterval"
  Else
    xdistenc = ""
  Endif

  SetRepoStr()
  If mnuquery.Checked = True Then
    If txtquery.Text Then
      If modMisc.CheckRestrictedKeyStrict(txtquery.Text) = 0 Then
        xquery = " and " & Trim(txtquery.Text)
      Endif
    Else
      xquery = ""
    Endif
    sql = "select " & xFldList.Join(",") & " from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2" & xquery & $RepoStr & xdistenc
    sResult = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value))

  Else
    If txtval2.Value Then
      xdtstr = modMedReports.GetAgeStringByTable("tblopvisit", modDatabase.$syConn)
      agestr = " and " & xdtstr & ">=&6 and " & xdtstr & "<&7"
    Else
      agestr = ""
    Endif
    If Not cmbcolumn.Text Then
      If cmbdistrict.Text = "%" Then
        sql = "select " & xFldList.Join(",") & " from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<> &4 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5" & agestr & "))" & $RepoStr & xdistenc                                                 ''
      Else
        sql = "select " & xFldList.Join(",") & " from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<> &4 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5" & agestr & " and fldptadddist like &8))" & $RepoStr & xdistenc                                                 ''
      Endif
      sResult = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbdepart.Text, "Cancelled", cmbgender.Text, 365 * txtval1.Value, 365 * txtval2.Value, cmbdistrict.Text)

    Else
      xfld = modMedReports.GetColumnEncounter(cmbcolumn.Text)
      Select cmbcolumn.Text
        Case "Surname"
          xstr = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where " & xfld & " like &9))"
        Case "Ethnic Group"
          xstr = " and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldethniccode like &9))"
        Case "Package", "Visit Type", "Visit Mode"
          xstr = " and fldencounterval in(select fldencounterval from tblencounter where " & xfld & " like &9)"
        Case "Location"
          xstr = " and fldcomp like &9"
        Case Else
          xstr = ""
      End Select

      If cmbdistrict.Text = "%" Then
        sql = "select " & xFldList.Join(",") & " from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<> &4 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5" & agestr & "))" & xstr & $RepoStr & xdistenc                                                ''
      Else
        sql = "select " & xFldList.Join(",") & " from tblopvisit where fldconsulttime>=&1 and fldconsulttime<=&2 and fldconsultname like &3 and fldstatus<> &4 and fldencounterval in(select fldencounterval from tblencounter where fldpatientval in(select fldpatientval from tblpatientinfo where fldptsex like &5" & agestr & " and fldptadddist like &8))" & xstr & $RepoStr & xdistenc                                                ''
      Endif
      sResult = modDatabase.$syConn.Exec(sql, modDate.StartSqlDate(dtfir.value), modDate.EndSqlDate(dtlast.value), cmbdepart.Text, "Cancelled", cmbgender.Text, 365 * txtval1.Value, 365 * txtval2.Value, cmbdistrict.Text, txtoption.Text)

    Endif
  Endif
  Return sResult

Catch
  Message.Warning(("Database Error Code: ") & db.Error & "<br>" & Error.Text, ("OK"))

End

Private Function GetGridViewValue(Column As Integer, xVariable As Variant) As Variant

  Dim xxx As Variant
  Dim i As Integer

  If Column = 2 Then
    xxx = modPatient.GetPatientNameByEnc(xVariable, modDatabase.$syConn)
  Else If Column = 3 Then
    xxx = modMedReports.GetPatientPastAgeString("tblopvisit", xVariable)
  Else If Column = 4 Then
    xxx = modPatient.GetPatientSex(xVariable, modDatabase.$syConn)
  Else If Column = 5 Then
    xxx = modPatient.GetPatientNoByEnc(xVariable)
  Else If Column = 6 Then
    xxx = modReportVar.GetDateTimeReport(xVariable, gb.GeneralDate)
  Else If Column = 11 Then
    xxx = modDataRepo.GetHospitalTextLabel(xVariable)
  Else
    xxx = xVariable
  Endif

  If $newColumn.Count Then
    For i = 0 To $newColumn.Count - 1
      If Column = $ColCount + i Then
        xxx = modCustPatient.NewColValue(Me.Tag, $newColumn[i], xVariable)
      Endif
    Next
  Endif
  Return xxx

End

Public Sub btnrefresh_Click()

  Dim xFldList As String[]

  TabStrip1.Index = 0
  xFldList = GetSQLColumns()
  $rData = ExecuteQuery(xFldList)
  If $rData.Available Then
    lblrecordcount.Text = "Count: " & $rData.Count
  Else
    lblrecordcount.Text = "Count: 0"
  Endif

  If chkgrid.Value = True Then
    FillPatientGrid()
  Endif

  If chkchart.Value = True Then
    FillChartData()
  Endif

End

Private Sub FillPatientGrid()

  Dim i As Integer

  $aMyFields = New String[]
  modGridView.ReadSmallData(GridView1, $rData, $aMyFields)
  $ColCount = $SSQLFields.Count
  With GridView1
    .Columns[0].Hidden = True
    .Columns[1].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[2].Width = CStr(175 * modBasic.$AppWidthRatio) & "px"
    .Columns[3].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[4].Width = CStr(75 * modBasic.$AppWidthRatio) & "px"
    .Columns[5].Width = CStr(125 * modBasic.$AppWidthRatio) & "px"
    .Columns[6].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
    .Columns[7].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[8].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[9].Width = CStr(100 * modBasic.$AppWidthRatio) & "px"
    .Columns[10].Hidden = True

    .Columns[1].Text = "EncID"
    .Columns[2].Text = "Name"
    .Columns[3].Text = "Age"
    .Columns[4].Text = "Gender"
    .Columns[5].Text = "PatientNo"
    .Columns[6].Text = "ConsultDate"
    .Columns[7].Text = "Department"
    .Columns[8].Text = "Outcome"
    .Columns[9].Text = "Comment"

    If $newColumn.Count Then
      For i = 0 To $newColumn.Count - 1
        .Columns[$ColCount + i].Text = $newColumn[i]
        .Columns[$ColCount + i].Width = CStr(150 * modBasic.$AppWidthRatio) & "px"
      Next
    Endif
  End With

End

Public Sub GridView1_Data(Row As Integer, Column As Integer, Data As WebTableData)

  $rData.MoveTo(Row)
  modGridView.GridViewDecoration(Data, Row)
  If Column > $SSQLFields.Count - 1 Then
    Data.Html = modString.TextToHTML(GetGridViewValue(Column, $rData[$aMyFields[Column]]))
  Else
    Data.Text = GetGridViewValue(Column, $rData[$aMyFields[Column]])
  Endif

End

''---------------------------------------------------- chart ------------------------------
Private Sub FillChartData()

  Dim xLst As String[]
  Dim sFile As String

  xLst = New String[]
  For Each $rData
    If Not modBasic.$HospCode And If MMain.$WebReport = "Multiple" Then
      xLst.Add($rData["fldhospcode"] & gb.Tab & modPatient.GetPatientSex($rData["fldencounterval"], modDatabase.$syConn))
    Else
      xLst.Add(Format(DateDiff(dtfir.Value, $rData["fldconsulttime"], modChart.GetDateIntegerFromSetting()), "0#.#") & gb.Tab & modPatient.GetPatientSex($rData["fldencounterval"], modDatabase.$syConn))
    Endif
  Next

  sFile = Temp()
  File.Save(sFile, xLst.Join(gb.NewLine))
  btnstats.Tag = sFile
  If modBasic.$ChartExecStat = "PSPP" Then
    modImage.StretchtPictureToBox(PictureBox1, modChart.ProportionChart(sFile, "Consultations" & " : Patient Count"))
  Else
    modImage.StretchtPictureToBox(PictureBox1, modChart.ProportionChart(sFile, "Consultations" & " : Patient Count"))
  Endif

End

Public Sub btnexport_Click()

  ' Me.Exec("printJS('" & PictureBox1.Tag & "', 'image')")
  Me.Exec("window.open('" & PictureBox1.Image & "'); ")

End

Public Sub btnstats_Click()

  If modBasic.$ChartExecStat = "PSPP" Then
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("crosstab", btnstats.Tag))
  Else
    modControlSub.OpenBrowser(modPSPP.CreatePSPPStatFIle("crosstab", btnstats.Tag))
  Endif

End

''------------------------------------ Grid view ----------------------
' Public Sub GridView1_Menu()
'
'   mnugrid.Popup
'
' End

Public Sub mnureport_Click()

  If GridView1.Selection.Count Then
    $rData.MoveTo(GridView1.Selection[0])
    If modPatientSub.AllowEncIDHistory($rData["fldencounterval"], modDatabase.$syConn) = True Then
      modPatReports.GetSelectedPatientValues($rData["fldencounterval"], MMain.$defUnit)
    Endif                                      ''
  Endif

End

Public Sub mnuColumns_Click()

  If Message.Question(modGridView.GetColumnsListString(GridView1), ("OK"), ("Setting")) = 2 Then
    fmChartSetting.ShowModal
  Endif

End

Public Sub mnuenchart_Click()

  Dim xx As String
  Dim xField As String
  Dim Column As Integer
  Dim res As Result
  Dim xval As Variant
  Dim hFile As CUnivariate
  Dim xFldList As String[]
  Dim sOrder As String[]

  Dim hUniv As FmAnalyzeSett

  hUniv = New FmAnalyzeSett("Univariate", modGridView.GetGridViewColumns(GridView1))
  hUniv.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CUnivariate
  Column = modCustPatient.GetUnivariateColumn(1)
  xField = xFldList[Column]
  res = ExecuteQuery([xField])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Column, res[xField])
      If xval Then
        hFile.Add(xval)
      Endif
    Next
  Endif

  If modSettings.ShowSettingFromFIle("UnivariateAnalysis/DataType") = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetEncChartGridNew(hFile.GetSPSSFile(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrosstab_Click()

  Dim xx As String
  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hFile As CBivariate
  Dim xFldList As String[]
  Dim sOrder As String[]
  Dim hBivar As FmAnalyzeSett

  hBivar = New FmAnalyzeSett("Bivariate", modGridView.GetGridViewColumns(GridView1))
  hBivar.ShowModal

  xFldList = GetSQLColumns()
  hFile = New CBivariate
  Row = modCustPatient.GetCrossVarRow(1)
  xFieRow = xFldList[Row]
  Column = modCustPatient.GetCrossVarColumn(1)
  xFieColm = xFldList[Column]
  res = ExecuteQuery([xFieRow, xFieColm])

  If res.Available Then
    For Each res
      xval = GetGridViewValue(Row, res[xFieRow])
      yval = GetGridViewValue(Column, res[xFieColm])
      If xval And If yval Then
        hFile.Add([xval, yval])
      Endif
    Next
  Endif

  If modCustPatient.$CrossOutcomeType = "Ordinal" Then
    sOrder = ListOrder("Select Order", hFile.DistinctValues())
  Endif
  xx = modPSPP.GetCrossTabStatNew(hFile.GetSPSSFile(), hFile.GetGroups(), sOrder)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnuregression_Click()

  Dim xx As String
  Dim res As Result
  Dim xFieldList As String[]

  Dim DepCol As Integer
  Dim Indep1Col As Integer
  Dim Indep2Col As Integer
  Dim Indep3Col As Integer
  Dim Indep4Col As Integer
  Dim Indep5Col As Integer

  Dim xDepField As String
  Dim xIndep1Field As String
  Dim xIndep2Field As String
  Dim xIndep3Field As String
  Dim xIndep4Field As String
  Dim xIndep5Field As String

  Dim Depvalue As Variant
  Dim Indep1Val As Variant
  Dim Indep2Val As Variant
  Dim Indep3Val As Variant
  Dim Indep4Val As Variant
  Dim Indep5Val As Variant

  Dim DepData As Variant[]
  Dim Indep1Data As Variant[]
  Dim Indep2Data As Variant[]
  Dim Indep3Data As Variant[]
  Dim Indep4Data As Variant[]
  Dim Indep5Data As Variant[]
  Dim xFldList As String[]

  xFldList = GetSQLColumns()
  Message.Info(("Generating Report ...."), ("OK"))
  xFieldList = New String[]
  DepData = New Variant[]
  Indep1Data = New Variant[]
  Indep2Data = New Variant[]
  Indep3Data = New Variant[]
  Indep4Data = New Variant[]
  Indep5Data = New Variant[]

  DepCol = modCustPatient.GetRegressionDepVal(1)
  xDepField = xFldList[DepCol]
  xFieldList.Add(xDepField)

  If modCustPatient.$RegVar1UseGridVal = "Yes" Or If modCustPatient.$RegVar1Variable Or If modCustPatient.$RegVar1SQLText Then
    Indep1Col = modCustPatient.GetRegressionVar1Val(1)
    xIndep1Field = xFldList[Indep1Col]
    xFieldList.Add(xIndep1Field)
  Endif
  If modCustPatient.$RegVar2UseGridVal = "Yes" Or If modCustPatient.$RegVar2Variable Or If modCustPatient.$RegVar2SQLText Then
    Indep2Col = modCustPatient.GetRegressionVar2Val(1)
    xIndep2Field = xFldList[Indep2Col]
    xFieldList.Add(xIndep2Field)
  Endif
  If modCustPatient.$RegVar3UseGridVal = "Yes" Or If modCustPatient.$RegVar3Variable Or If modCustPatient.$RegVar3SQLText Then
    Indep3Col = modCustPatient.GetRegressionVar3Val(1)
    xIndep3Field = xFldList[Indep3Col]
    xFieldList.Add(xIndep3Field)
  Endif
  If modCustPatient.$RegVar4UseGridVal = "Yes" Or If modCustPatient.$RegVar4Variable Or If modCustPatient.$RegVar4SQLText Then
    Indep4Col = modCustPatient.GetRegressionVar4Val(1)
    xIndep4Field = xFldList[Indep4Col]
    xFieldList.Add(xIndep4Field)
  Endif
  If modCustPatient.$RegVar5UseGridVal = "Yes" Or If modCustPatient.$RegVar5Variable Or If modCustPatient.$RegVar5SQLText Then
    Indep5Col = modCustPatient.GetRegressionVar5Val(1)
    xIndep5Field = xFldList[Indep5Col]
    xFieldList.Add(xIndep5Field)
  Endif

  res = ExecuteQuery(xFieldList)

  If res.Available Then
    For Each res
      Depvalue = GetGridViewValue(DepCol, res[xDepField])
      If xIndep1Field Then
        Indep1Val = GetGridViewValue(Indep1Col, res[xIndep1Field])
      Else
        Indep1Val = "__"
      Endif
      If xIndep2Field Then
        Indep2Val = GetGridViewValue(Indep2Col, res[xIndep2Field])
      Else
        Indep2Val = "__"
      Endif
      If xIndep3Field Then
        Indep3Val = GetGridViewValue(Indep3Col, res[xIndep3Field])
      Else
        Indep3Val = "__"
      Endif
      If xIndep4Field Then
        Indep4Val = GetGridViewValue(Indep4Col, res[xIndep4Field])
      Else
        Indep4Val = "__"
      Endif
      If xIndep5Field Then
        Indep5Val = GetGridViewValue(Indep5Col, res[xIndep5Field])
      Else
        Indep5Val = "__"
      Endif

      If Depvalue And If Indep1Val And If Indep2Val And If Indep3Val And If Indep4Val And If Indep5Val Then
        modCustPatient.AddFormatRegressionDepToList(DepData, Depvalue)
        modCustPatient.AddFormatRegressionVar1ToList(Indep1Data, Indep1Val)
        modCustPatient.AddFormatRegressionVar2ToList(Indep2Data, Indep2Val)
        modCustPatient.AddFormatRegressionVar3ToList(Indep3Data, Indep3Val)
        modCustPatient.AddFormatRegressionVar4ToList(Indep4Data, Indep4Val)
        modCustPatient.AddFormatRegressionVar5ToList(Indep5Data, Indep5Val)
      Endif
    Next
  Endif

  xx = modPSPP.RegressionChartGridNew(DepData, Indep1Data, Indep2Data, Indep3Data, Indep4Data, Indep5Data)
  If xx Then
    modControlSub.OpenBrowser(xx)
  Endif

End

Public Sub mnucrotab_Click()

  Dim Row As Integer
  Dim Column As Integer
  Dim xFieRow As String
  Dim xFieColm As String
  Dim res As Result
  Dim xval As Variant
  Dim yval As Variant

  Dim hForm As FmGridCrossTab
  Dim xForm As CCrossTab
  Dim xFldList As String[]
  Dim hGdChr As FmAnalyzeSett

  hGdChr = New FmAnalyzeSett("GridCrossTab", modGridView.GetGridViewColumns(GridView1))
  hGdChr.ShowModal

  xFldList = GetSQLColumns()
  If modCustPatient.$TabRowColumn And If modCustPatient.$TabFieldColumn Then
    xForm = New CCrossTab

    Row = CInt(modCustPatient.$TabRowColumn) - 1
    xFieRow = xFldList[Row]
    Column = CInt(modCustPatient.$TabFieldColumn) - 1
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieRow, xFieColm])

    If res.Available Then
      For Each res
        xval = GetGridViewValue(Row, res[xFieRow])
        yval = GetGridViewValue(Column, res[xFieColm])
        If xval And If yval Then
          xForm.Add([xval, yval])
        Endif
      Next
    Endif

    hForm = New FmGridCrossTab(GridView1.Columns[Row].Text, xForm.GetSPSSFile())
    hForm.ShowModal
    'modExternal.$ExecValueColl.Clear()
  Endif

End

Public Sub mnugridsummary_Click()

  Dim xx As String
  Dim ChapCol As String
  Dim GropCol As String
  Dim xChapList As String[]
  Dim xGropList As String[]

  Dim res As Result
  Dim valCol As String
  Dim xFieldList As String[]

  Dim xFinList As Variant[]
  Dim xrowVar As Variant[]
  Dim xchapval As String
  Dim xgroup As String
  Dim xPath As String
  Dim xFldList As String[]
  Dim hGdSum As FmAnalyzeSett

  hGdSum = New FmAnalyzeSett("GridSummary", modGridView.GetGridViewColumns(GridView1))
  hGdSum.ShowModal
  If Not modCustPatient.$SumGroupColumn Or If Not modCustPatient.$SumValueColumn Then Return

  xFldList = GetSQLColumns()
  xFieldList = New String[]
  If modCustPatient.$SumChapterColumn Then
    ChapCol = xFldList[modCustPatient.$SumChapterColumn - 1]
    xFieldList.Add(ChapCol)
  Endif
  GropCol = xFldList[modCustPatient.$SumGroupColumn - 1]
  valCol = xFldList[modCustPatient.$SumValueColumn - 1]
  xFieldList.Add(GropCol)
  xFieldList.Add(valCol)

  xChapList = New String[]
  xGropList = New String[]
  xFinList = New Variant[]
  res = ExecuteQuery(xFieldList)
  If res.Available Then
    For Each res
      xrowVar = New Variant[]
      If modCustPatient.$SumChapterColumn Then
        xchapval = GetGridViewValue(modCustPatient.$SumChapterColumn - 1, res[ChapCol])
        xrowVar.Add(xchapval)
        xChapList.Add(xchapval)
      Endif
      xgroup = GetGridViewValue(modCustPatient.$SumGroupColumn - 1, res[GropCol])
      xrowVar.Add(xgroup)
      xGropList.Add(xgroup)

      xrowVar.Add(GetGridViewValue(modCustPatient.$SumValueColumn - 1, res[valCol]))
      xFinList.Add(xrowVar)
    Next
  Endif

  xx = "Date: " & modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  If modCustPatient.$SumGroupColumn And If modCustPatient.$SumValueColumn Then
    If modCustPatient.$SumChapterColumn Then
      If modCustPatient.$SummaryType = "Summation(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapterTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else If modCustPatient.$SummaryType = "Count(Table)" Then
        xPath = modCHTMLReport.SummaryGridChapCountTableReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Else
        xPath = modCHTMLReport.SummaryGridChapterReport("Report Summary", xx, modString.GetDistinctStringArray(xChapList), modString.GetDistinctStringArray(xGropList), xFinList)
      Endif
    Else
      xPath = modCHTMLReport.SummaryGridReport("Report Summary", xx, modString.GetDistinctStringArray(xGropList), xFinList)
    Endif
    modControlSub.DisplayReportExport(xPath)
  Endif

End

''--------------------------------------------- Report --------------------------------
Public Sub btnfullrep_Click()

  Dim xHeader As String[]
  Dim xhide As Integer[]
  Dim Column As Integer
  Dim xCollRow As Collection
  Dim xColum As Integer

  Dim $hGridExportTable As CExportResult
  Dim xparam1 As String
  Dim xparam2 As String
  Dim encColumn As Integer

  Dim xFldList As String[]

  xHeader = New String[]
  xhide = New Integer[]
  For Column = 0 To GridView1.Columns.Count - 1
    xHeader.Add(GridView1.Columns[Column].Text)
    If GridView1.Columns[Column].Hidden = True Then
      xhide.Add(Column)
    Endif
  Next
  xparam1 = "Consultation Report"
  xparam2 = modReportVar.GetDateTimeReport(dtfir.Value, gb.MediumDate) & " To " & modReportVar.GetDateTimeReport(dtlast.Value, gb.MediumDate)
  encColumn = 1
  $hGridExportTable = New CExportResult(Me.Tag, xHeader, xhide, xparam1, xparam2, encColumn)

  xFldList = GetSQLColumns()

  For Each $rData
    xCollRow = New Collection
    For xColum = 0 To xFldList.Count - 1
      xCollRow.Add(GetGridViewValue(xColum, $rData[xFldList[xColum]]), CStr(xColum))
    Next
    $hGridExportTable.Add($rData.Index, xCollRow)
  Next

  modControlSub.DisplayReportExport($hGridExportTable.HTMLPath())

End

Public Sub btnexpoexcel_Click()

  Me.Exec("ExportToExcel('" & GridView1.Name & "', 'xlsx')")

End

Private Sub ShowSummReport(sField As String)

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "Consultation", [dtfir.Value, dtlast.Value])
  If xdate Then
    xPath = modCHTMLDate.SummaryStatReport(modDatabase.$syConn, "tblopvisit", modDataRepo.SerialField(), sField, "fldconsulttime", xdate[0], xdate[1], cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuDepart_Click()

  ShowSummReport("fldconsultname")

End

Public Sub mnubillmode_Click()

  ShowSummReport("fldbillingmode")

End

Public Sub mnucomp_Click()

  ShowSummReport("fldcomp")

End

Public Sub mnustatus_Click()

  ShowSummReport("fldstatus")

End

Public Sub mnuhospsumm_Click()

  ShowSummReport("fldhospcode")

End

Private Sub ShowSummDatewiseReport(sField As String)

  Dim xPath As String
  Dim xdate As Date[]

  SetRepoString()
  xdate = DoubleDates("Select Dates", "Consultation", [dtfir.Value, dtlast.Value], 1)
  If xdate Then
    xPath = modCHTMLDate.SummaryStatDateWiseReport(modDatabase.$syConn, "tblopvisit", modDataRepo.SerialField(), sField, "fldconsulttime", xdate[0], xdate[1], cmblocation.Text, cmbvalue.Text)
    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnudtdepart_Click()

  ShowSummDatewiseReport("fldconsultname")

End

Public Sub mnudtbillmode_Click()

  ShowSummDatewiseReport("fldbillingmode")

End

Public Sub mnudtlocat_Click()

  ShowSummDatewiseReport("fldcomp")

End

Public Sub mnudtstatus_Click()

  ShowSummDatewiseReport("fldstatus")

End

Public Sub mnuhospdate_Click()

  ShowSummDatewiseReport("fldhospcode")

End

Public Sub chkchart_Click()

  TabStrip1.Index = 1

End

Public Sub mnuaddcolm_Click()

  Dim hForm As FmAddNewColumn

  hForm = New FmAddNewColumn(Me.Tag)
  hForm.ShowModal

End

Public Sub mnucrosstable_Click()

  Dim hForm As FmHealthOPVisit

  SetRepoString()
  hForm = New FmHealthOPVisit(cmblocation.Text, cmbvalue.Text)
  hForm.ShowModal

End

Public Sub mnucountuni_Click()

  Dim Column As Integer
  Dim xFieColm As String
  Dim res As Result
  Dim yval As Variant
  Dim xList As String[]

  Dim xVar As Variant[]
  Dim xFldList As String[]
  Dim xPath As String

  Column = ListIndex("Column Index", modGridView.GetGridViewColumns(GridView1))
  If Column + 1 > 0 Then
    xFldList = GetSQLColumns()
    xFieColm = xFldList[Column]
    res = ExecuteQuery([xFieColm])
    xList = New String[]
    If res.Available Then
      For Each res
        yval = GetGridViewValue(Column, res[xFieColm])
        If yval Then
          xList.Add(yval)
        Endif
      Next
    Endif
    If xList.Count Then
      xVar = modString.GetUnivariateSummary(xList)
      xPath = modCHTMLReport.CreateHTMLReportFromArray(["Variable", "Count"], xVar, GridView1.Columns[Column].Text, modReportVar.GetDateTimeReport(Now(), gb.GeneralDate))
    Endif

    modControlSub.OpenHTMLPreview("", xPath, "ReportSize")
  Endif

End

Public Sub mnuexpocolumn_Click()

  Dim hForm As FmCustColumnSet

  hForm = New FmCustColumnSet(Me.Tag)
  hForm.ShowModal

End
